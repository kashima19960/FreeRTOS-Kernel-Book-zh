{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u76ee\u5f55","text":""},{"location":"#1","title":"1 \u524d\u8a00","text":"<ul> <li>1.1 \u5c0f\u578b\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u7684\u591a\u4efb\u52a1<ul> <li>1.1.1 \u5173\u4e8eFreeRTOS\u5185\u6838</li> <li>1.1.2 \u4ef7\u503c\u4e3b\u5f20</li> <li>1.1.3 \u5173\u4e8e\u672f\u8bed\u7684\u8bf4\u660e</li> <li>1.1.4 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528RTOS\uff1f</li> <li>1.1.5 FreeRTOS\u5185\u6838\u7279\u6027</li> <li>1.1.6 \u8bb8\u53ef\u534f\u8bae\uff0c\u4ee5\u53caFreeRTOS\u3001OpenRTOS\u548cSafeRTOS\u5bb6\u65cf</li> </ul> </li> <li>1.2 \u9644\u5e26\u7684\u6e90\u6587\u4ef6\u548c\u5de5\u7a0b<ul> <li>1.2.1 \u83b7\u53d6\u672c\u4e66\u914d\u5957\u793a\u4f8b</li> </ul> </li> </ul>"},{"location":"#2-freertos","title":"2 FreeRTOS\u5185\u6838\u5206\u53d1\u5305","text":"<ul> <li>2.1 \u7b80\u4ecb</li> <li>2.2 \u7406\u89e3FreeRTOS\u5206\u53d1\u5305<ul> <li>2.2.1 \u5b9a\u4e49\uff1aFreeRTOS\u79fb\u690d</li> <li>2.2.2 \u6784\u5efaFreeRTOS</li> <li>2.2.3 FreeRTOSConfig.h</li> <li>2.2.4 \u5b98\u65b9\u5206\u53d1\u5305</li> <li>2.2.5 \u6240\u6709\u79fb\u690d\u901a\u7528\u7684FreeRTOS\u6e90\u6587\u4ef6</li> <li>2.2.6 \u9488\u5bf9\u7279\u5b9a\u79fb\u690d\u7684FreeRTOS\u6e90\u6587\u4ef6</li> <li>2.2.7 \u5934\u6587\u4ef6\u5305\u542b\u8def\u5f84</li> <li>2.2.8 \u5934\u6587\u4ef6</li> </ul> </li> <li>2.3 \u6f14\u793a\u5e94\u7528</li> <li>2.4 \u521b\u5efaFreeRTOS\u5de5\u7a0b<ul> <li>2.4.1 \u9002\u914d\u63d0\u4f9b\u7684\u6f14\u793a\u5de5\u7a0b</li> <li>2.4.2 \u4ece\u96f6\u521b\u5efa\u65b0\u5de5\u7a0b</li> </ul> </li> <li>2.5 \u6570\u636e\u7c7b\u578b\u4e0e\u7f16\u7801\u98ce\u683c\u6307\u5357<ul> <li>2.5.1 \u6570\u636e\u7c7b\u578b</li> <li>2.5.2 \u53d8\u91cf\u547d\u540d</li> <li>2.5.3 \u51fd\u6570\u547d\u540d</li> <li>2.5.4 \u683c\u5f0f\u5316</li> <li>2.5.5 \u5b8f\u547d\u540d</li> <li>2.5.6 \u8fc7\u5ea6\u7c7b\u578b\u8f6c\u6362\u7684\u7406\u7531</li> </ul> </li> </ul>"},{"location":"#3","title":"3 \u5806\u5185\u5b58\u7ba1\u7406","text":"<ul> <li>3.1 \u7b80\u4ecb<ul> <li>3.1.1 \u524d\u7f6e\u77e5\u8bc6</li> <li>3.1.2 \u8303\u56f4</li> <li>3.1.3 \u9759\u6001\u4e0e\u52a8\u6001\u5185\u5b58\u5206\u914d\u5207\u6362</li> <li>3.1.4 \u4f7f\u7528\u52a8\u6001\u5185\u5b58\u5206\u914d</li> <li>3.1.5 \u52a8\u6001\u5185\u5b58\u5206\u914d\u65b9\u6848\u9009\u9879</li> </ul> </li> <li>3.2 \u793a\u4f8b\u5185\u5b58\u5206\u914d\u65b9\u6848<ul> <li>3.2.1 Heap_1</li> <li>3.2.2 Heap_2</li> <li>3.2.3 Heap_3</li> <li>3.2.4 Heap_4</li> <li>3.2.5 Heap_5</li> <li>3.2.6 \u521d\u59cb\u5316heap_5\uff1avPortDefineHeapRegions() API\u51fd\u6570</li> </ul> </li> <li>3.3 \u5806\u76f8\u5173\u5de5\u5177\u51fd\u6570\u4e0e\u5b8f<ul> <li>3.3.1 \u5b9a\u4e49\u5806\u8d77\u59cb\u5730\u5740</li> <li>3.3.2 xPortGetFreeHeapSize() API\u51fd\u6570</li> <li>3.3.3 xPortGetMinimumEverFreeHeapSize() API\u51fd\u6570</li> <li>3.3.4 vPortGetHeapStats() API\u51fd\u6570</li> <li>3.3.5 \u91c7\u96c6\u4efb\u52a1\u7ea7\u5806\u4f7f\u7528\u7edf\u8ba1</li> <li>3.3.6 Malloc\u5931\u8d25\u94a9\u5b50\u51fd\u6570</li> <li>3.3.7 \u5c06\u4efb\u52a1\u5806\u6808\u653e\u5165\u9ad8\u901f\u5185\u5b58</li> </ul> </li> <li>3.4 \u4f7f\u7528\u9759\u6001\u5185\u5b58\u5206\u914d<ul> <li>3.4.1 \u542f\u7528\u9759\u6001\u5185\u5b58\u5206\u914d</li> <li>3.4.2 \u5185\u6838\u5185\u90e8\u9759\u6001\u5185\u5b58</li> <li>3.4.2.1 vApplicationGetTimerTaskMemory</li> <li>3.4.2.2 vApplicationGetIdleTaskMemory</li> </ul> </li> </ul>"},{"location":"#4","title":"4 \u4efb\u52a1\u7ba1\u7406","text":"<ul> <li>4.1 \u7b80\u4ecb<ul> <li>4.1.1 \u8303\u56f4</li> </ul> </li> <li>4.2 \u4efb\u52a1\u51fd\u6570</li> <li>4.3 \u9876\u7ea7\u4efb\u52a1\u72b6\u6001</li> <li>4.4 \u4efb\u52a1\u521b\u5efa<ul> <li>4.4.1 xTaskCreate() API\u51fd\u6570</li> </ul> </li> <li>4.5 \u4efb\u52a1\u4f18\u5148\u7ea7<ul> <li>\u901a\u7528\u8c03\u5ea6\u5668</li> <li>\u67b6\u6784\u4f18\u5316\u8c03\u5ea6\u5668</li> </ul> </li> <li>4.6 \u65f6\u95f4\u6d4b\u91cf\u4e0e\u6ef4\u7b54\u4e2d\u65ad</li> <li>4.7 \u6269\u5c55\u672a\u8fd0\u884c\u72b6\u6001<ul> <li>4.7.1 \u963b\u585e\u72b6\u6001</li> <li>4.7.2 \u6302\u8d77\u72b6\u6001</li> <li>4.7.3 \u5c31\u7eea\u72b6\u6001</li> <li>4.7.4 \u5b8c\u6210\u72b6\u6001\u8f6c\u6362\u56fe</li> <li>4.7.5 vTaskDelayUntil() API\u51fd\u6570</li> </ul> </li> <li>4.8 \u7a7a\u95f2\u4efb\u52a1\u4e0e\u7a7a\u95f2\u4efb\u52a1\u94a9\u5b50<ul> <li>4.8.1 \u7a7a\u95f2\u4efb\u52a1\u94a9\u5b50\u51fd\u6570</li> <li>4.8.2 \u5b9e\u73b0\u7a7a\u95f2\u4efb\u52a1\u94a9\u5b50\u51fd\u6570\u7684\u9650\u5236</li> </ul> </li> <li>4.9 \u66f4\u6539\u4efb\u52a1\u4f18\u5148\u7ea7<ul> <li>4.9.1 vTaskPrioritySet() API\u51fd\u6570</li> <li>4.9.2 uxTaskPriorityGet() API\u51fd\u6570</li> </ul> </li> <li>4.10 \u5220\u9664\u4efb\u52a1<ul> <li>4.10.1 vTaskDelete() API\u51fd\u6570</li> </ul> </li> <li>4.11 \u7ebf\u7a0b\u5c40\u90e8\u5b58\u50a8\u4e0e\u91cd\u5165\u6027<ul> <li>4.11.1 C\u8fd0\u884c\u65f6\u7ebf\u7a0b\u5c40\u90e8\u5b58\u50a8\u5b9e\u73b0</li> <li>4.11.2 \u81ea\u5b9a\u4e49C\u8fd0\u884c\u65f6\u7ebf\u7a0b\u5c40\u90e8\u5b58\u50a8</li> <li>4.11.3 \u5e94\u7528\u7a0b\u5e8f\u7ebf\u7a0b\u5c40\u90e8\u5b58\u50a8</li> </ul> </li> <li>4.12 \u8c03\u5ea6\u7b97\u6cd5<ul> <li>4.12.1 \u4efb\u52a1\u72b6\u6001\u548c\u4e8b\u4ef6\u56de\u987e</li> <li>4.12.2 \u9009\u62e9\u8c03\u5ea6\u7b97\u6cd5</li> <li>4.12.3 \u5e26\u65f6\u95f4\u7247\u7684\u4f18\u5148\u7ea7\u62a2\u5360\u8c03\u5ea6</li> <li>4.12.4 \u4e0d\u5e26\u65f6\u95f4\u7247\u7684\u4f18\u5148\u7ea7\u62a2\u5360\u8c03\u5ea6</li> <li>4.12.5 \u534f\u4f5c\u8c03\u5ea6</li> </ul> </li> </ul>"},{"location":"#5","title":"5 \u961f\u5217\u7ba1\u7406","text":"<ul> <li>5.1 \u7b80\u4ecb<ul> <li>5.1.1 \u8303\u56f4</li> </ul> </li> <li>5.2 \u961f\u5217\u7279\u6027<ul> <li>5.2.1 \u6570\u636e\u5b58\u50a8</li> <li>5.2.2 \u591a\u4efb\u52a1\u8bbf\u95ee</li> <li>5.2.3 \u961f\u5217\u8bfb\u53d6\u65f6\u963b\u585e</li> <li>5.2.4 \u961f\u5217\u5199\u5165\u65f6\u963b\u585e</li> <li>5.2.5 \u591a\u4e2a\u961f\u5217\u4e0a\u7684\u963b\u585e</li> <li>5.2.6 \u521b\u5efa\u961f\u5217\uff1a\u9759\u6001\u5206\u914d\u548c\u52a8\u6001\u5206\u914d\u961f\u5217</li> </ul> </li> <li>5.3 \u4f7f\u7528\u961f\u5217<ul> <li>5.3.1 xQueueCreate() API\u51fd\u6570</li> <li>5.3.2 xQueueSendToBack()\u548cxQueueSendToFront() API\u51fd\u6570</li> <li>5.3.3 xQueueReceive() API\u51fd\u6570</li> <li>5.3.4 uxQueueMessagesWaiting() API\u51fd\u6570</li> </ul> </li> <li>5.4 \u4ece\u591a\u4e2a\u6e90\u63a5\u6536\u6570\u636e</li> <li>5.5 \u5904\u7406\u5927\u5757\u6216\u53ef\u53d8\u5927\u5c0f\u6570\u636e<ul> <li>5.5.1 \u6392\u961f\u6307\u9488</li> <li>5.5.2 \u4f7f\u7528\u961f\u5217\u53d1\u9001\u4e0d\u540c\u7c7b\u578b\u548c\u957f\u5ea6\u7684\u6570\u636e[^9]</li> </ul> </li> <li>5.6 \u4ece\u591a\u4e2a\u961f\u5217\u63a5\u6536<ul> <li>5.6.1 \u961f\u5217\u96c6\u5408</li> <li>5.6.2 xQueueCreateSet() API\u51fd\u6570</li> <li>5.6.3 xQueueAddToSet() API\u51fd\u6570</li> <li>5.6.4 xQueueSelectFromSet() API\u51fd\u6570</li> <li>5.6.5 \u66f4\u73b0\u5b9e\u7684\u961f\u5217\u96c6\u5408\u4f7f\u7528\u6848\u4f8b</li> </ul> </li> <li>5.7 \u4f7f\u7528\u961f\u5217\u521b\u5efa\u90ae\u7bb1<ul> <li>5.7.1 xQueueOverwrite() API\u51fd\u6570</li> <li>5.7.2 xQueuePeek() API\u51fd\u6570</li> </ul> </li> </ul>"},{"location":"#6","title":"6 \u8f6f\u4ef6\u5b9a\u65f6\u5668\u7ba1\u7406","text":"<ul> <li>6.1 \u7ae0\u8282\u7b80\u4ecb\u4e0e\u8303\u56f4<ul> <li>6.1.1 \u8303\u56f4</li> </ul> </li> <li>6.2 \u8f6f\u4ef6\u5b9a\u65f6\u5668\u56de\u8c03\u51fd\u6570</li> <li>6.3 \u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u5c5e\u6027\u548c\u72b6\u6001<ul> <li>6.3.1 \u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u5468\u671f</li> <li>6.3.2 \u5355\u6b21\u4e0e\u81ea\u52a8\u91cd\u8f7d\u5b9a\u65f6\u5668</li> <li>6.3.3 \u8f6f\u4ef6\u5b9a\u65f6\u5668\u72b6\u6001</li> </ul> </li> <li>6.4 \u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u4e0a\u4e0b\u6587<ul> <li>6.4.1 RTOS\u5b88\u62a4\u8fdb\u7a0b\uff08\u5b9a\u65f6\u5668\u670d\u52a1\uff09\u4efb\u52a1</li> <li>6.4.2 \u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217</li> <li>6.4.3 \u5b88\u62a4\u4efb\u52a1\u8c03\u5ea6</li> </ul> </li> <li>6.5 \u521b\u5efa\u4e0e\u542f\u52a8\u8f6f\u4ef6\u5b9a\u65f6\u5668<ul> <li>6.5.1 xTimerCreate() API\u51fd\u6570</li> <li>6.5.2 xTimerStart() API\u51fd\u6570</li> </ul> </li> <li>6.6 \u5b9a\u65f6\u5668ID<ul> <li>6.6.1 vTimerSetTimerID() API\u51fd\u6570</li> <li>6.6.2 pvTimerGetTimerID() API\u51fd\u6570</li> </ul> </li> <li>6.7 \u66f4\u6539\u5b9a\u65f6\u5668\u5468\u671f<ul> <li>6.7.1 xTimerChangePeriod() API\u51fd\u6570</li> </ul> </li> <li>6.8 \u91cd\u7f6e\u8f6f\u4ef6\u5b9a\u65f6\u5668<ul> <li>6.8.1 xTimerReset() API\u51fd\u6570</li> </ul> </li> </ul>"},{"location":"#7","title":"7 \u4e2d\u65ad\u7ba1\u7406","text":"<ul> <li>7.1 \u7b80\u4ecb<ul> <li>7.1.1 \u4e8b\u4ef6</li> <li>7.1.2 \u8303\u56f4</li> </ul> </li> <li>7.2 \u4eceISR\u4f7f\u7528FreeRTOS API<ul> <li>7.2.1 \u4e2d\u65ad\u5b89\u5168API</li> <li>7.2.2 \u4f7f\u7528\u5355\u72ec\u4e2d\u65ad\u5b89\u5168API\u7684\u597d\u5904</li> <li>7.2.3 \u4f7f\u7528\u5355\u72ec\u4e2d\u65ad\u5b89\u5168API\u7684\u7f3a\u70b9</li> <li>7.2.4 xHigherPriorityTaskWoken\u53c2\u6570</li> <li>7.2.5 portYIELD_FROM_ISR()\u548cportEND_SWITCHING_ISR()\u5b8f</li> </ul> </li> <li>7.3 \u5ef6\u8fdf\u4e2d\u65ad\u5904\u7406</li> <li>7.4 \u7528\u4e8e\u540c\u6b65\u7684\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf<ul> <li>7.4.1 xSemaphoreCreateBinary() API\u51fd\u6570</li> <li>7.4.2 xSemaphoreTake() API\u51fd\u6570</li> <li>7.4.3 xSemaphoreGiveFromISR() API\u51fd\u6570</li> <li>7.4.4 \u6539\u8fdb\u793a\u4f8b7.1\u4e2d\u4efb\u52a1\u7684\u5b9e\u73b0</li> </ul> </li> <li>7.5 \u8ba1\u6570\u4fe1\u53f7\u91cf<ul> <li>7.5.1 xSemaphoreCreateCounting() API\u51fd\u6570</li> </ul> </li> <li>7.6 \u5c06\u5de5\u4f5c\u63a8\u8fdf\u5230RTOS\u5b88\u62a4\u4efb\u52a1<ul> <li>7.6.1 xTimerPendFunctionCallFromISR() API\u51fd\u6570</li> </ul> </li> <li>7.7 \u5728\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u4f7f\u7528\u961f\u5217<ul> <li>7.7.1 xQueueSendToFrontFromISR()\u548cxQueueSendToBackFromISR() API\u51fd\u6570</li> <li>7.7.2 \u4eceISR\u4f7f\u7528\u961f\u5217\u65f6\u7684\u6ce8\u610f\u4e8b\u9879</li> </ul> </li> <li>7.8 \u4e2d\u65ad\u5d4c\u5957<ul> <li>7.8.1 \u9488\u5bf9ARM Cortex-M[^22]\u548cARM GIC\u7528\u6237\u7684\u8bf4\u660e</li> </ul> </li> </ul>"},{"location":"#8","title":"8 \u8d44\u6e90\u7ba1\u7406","text":"<ul> <li>8.1 \u7ae0\u8282\u7b80\u4ecb\u4e0e\u8303\u56f4<ul> <li>8.1.1 \u4e92\u65a5</li> <li>8.1.2 \u8303\u56f4</li> </ul> </li> <li>8.2 \u4e34\u754c\u533a\u4e0e\u6302\u8d77\u8c03\u5ea6\u7a0b\u5e8f<ul> <li>8.2.1 \u57fa\u672c\u4e34\u754c\u533a</li> <li>8.2.2 \u6302\u8d77\uff08\u6216\u9501\u5b9a\uff09\u8c03\u5ea6\u7a0b\u5e8f</li> <li>8.2.3 vTaskSuspendAll() API\u51fd\u6570</li> <li>8.2.4 xTaskResumeAll() API\u51fd\u6570</li> </ul> </li> <li>8.3 \u4e92\u65a5\u91cf\uff08\u548c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\uff09<ul> <li>8.3.1 xSemaphoreCreateMutex() API\u51fd\u6570</li> <li>8.3.2 \u4f18\u5148\u7ea7\u53cd\u8f6c</li> <li>8.3.3 \u4f18\u5148\u7ea7\u7ee7\u627f</li> <li>8.3.4 \u6b7b\u9501\uff08\u6216\u81f4\u547d\u62e5\u585e\uff09</li> <li>8.3.5 \u9012\u5f52\u4e92\u65a5\u91cf</li> <li>8.3.6 \u4e92\u65a5\u91cf\u4e0e\u4efb\u52a1\u8c03\u5ea6</li> </ul> </li> <li>8.4 \u95e8\u63a7\u4efb\u52a1<ul> <li>8.4.1 \u91cd\u5199vPrintString()\u4ee5\u4f7f\u7528\u95e8\u63a7\u4efb\u52a1</li> </ul> </li> </ul>"},{"location":"#9","title":"9 \u4e8b\u4ef6\u7ec4","text":"<ul> <li>9.1 \u7ae0\u8282\u7b80\u4ecb\u4e0e\u8303\u56f4<ul> <li>9.1.1 \u8303\u56f4</li> </ul> </li> <li>9.2 \u4e8b\u4ef6\u7ec4\u7279\u6027<ul> <li>9.2.1 \u4e8b\u4ef6\u7ec4\u3001\u4e8b\u4ef6\u6807\u5fd7\u548c\u4e8b\u4ef6\u4f4d</li> <li>9.2.2 \u5173\u4e8eEventBits_t\u6570\u636e\u7c7b\u578b\u7684\u66f4\u591a\u4fe1\u606f</li> <li>9.2.3 \u591a\u4efb\u52a1\u8bbf\u95ee</li> <li>9.2.4 \u4f7f\u7528\u4e8b\u4ef6\u7ec4\u7684\u5b9e\u9645\u793a\u4f8b</li> </ul> </li> <li>9.3 \u4f7f\u7528\u4e8b\u4ef6\u7ec4\u8fdb\u884c\u4e8b\u4ef6\u7ba1\u7406<ul> <li>9.3.1 xEventGroupCreate() API\u51fd\u6570</li> <li>9.3.2 xEventGroupSetBits() API\u51fd\u6570</li> <li>9.3.3 xEventGroupSetBitsFromISR() API\u51fd\u6570</li> <li>9.3.4 xEventGroupWaitBits() API\u51fd\u6570</li> <li>9.3.5 xEventGroupGetStaticBuffer() API\u51fd\u6570</li> </ul> </li> <li>9.4 \u4f7f\u7528\u4e8b\u4ef6\u7ec4\u8fdb\u884c\u4efb\u52a1\u540c\u6b65<ul> <li>9.4.1 xEventGroupSync() API\u51fd\u6570</li> </ul> </li> </ul>"},{"location":"#10","title":"10 \u4efb\u52a1\u901a\u77e5","text":"<ul> <li>10.1 \u7b80\u4ecb<ul> <li>10.1.1 \u901a\u8fc7\u4e2d\u4ecb\u5bf9\u8c61\u8fdb\u884c\u901a\u4fe1</li> <li>10.1.2 \u4efb\u52a1\u901a\u77e5\u2014\u2014\u76f4\u63a5\u4e0e\u4efb\u52a1\u901a\u4fe1</li> <li>10.1.3 \u8303\u56f4</li> </ul> </li> <li>10.2 \u4efb\u52a1\u901a\u77e5\u7684\u4f18\u7f3a\u70b9<ul> <li>10.2.1 \u4efb\u52a1\u901a\u77e5\u7684\u6027\u80fd\u4f18\u52bf</li> <li>10.2.2 RAM\u5360\u7528\u4f18\u52bf</li> <li>10.2.3 \u4efb\u52a1\u901a\u77e5\u7684\u5c40\u9650\u6027</li> </ul> </li> <li>10.3 \u4f7f\u7528\u4efb\u52a1\u901a\u77e5<ul> <li>10.3.1 \u4efb\u52a1\u901a\u77e5API\u9009\u9879</li> <li>10.3.1.1 API\u51fd\u6570\u5b8c\u6574\u5217\u8868<sup>27</sup></li> <li>10.3.2 xTaskNotifyGive() API\u51fd\u6570</li> <li>10.3.3 vTaskNotifyGiveFromISR() API\u51fd\u6570</li> <li>10.3.4 ulTaskNotifyTake() API\u51fd\u6570</li> <li>10.3.5 xTaskNotify()\u548cxTaskNotifyFromISR() API\u51fd\u6570</li> <li>10.3.6 xTaskNotifyWait() API\u51fd\u6570</li> <li>10.3.7 \u4efb\u52a1\u901a\u77e5\u5728\u5916\u8bbe\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u7684\u5e94\u7528\uff1aUART\u793a\u4f8b</li> <li>10.3.8 \u4efb\u52a1\u901a\u77e5\u5728\u5916\u8bbe\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u7684\u5e94\u7528\uff1aADC\u793a\u4f8b</li> <li>10.3.9 \u4efb\u52a1\u901a\u77e5\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u76f4\u63a5\u4f7f\u7528</li> </ul> </li> </ul>"},{"location":"#11","title":"11 \u4f4e\u529f\u8017\u652f\u6301","text":"<ul> <li>11.1 \u8282\u80fd\u7b80\u4ecb</li> <li>11.2 FreeRTOS\u7761\u7720\u6a21\u5f0f</li> <li>11.3 \u51fd\u6570\u4e0e\u542f\u7528\u5185\u7f6e\u65e0\u6ef4\u7b54\u7a7a\u95f2\u529f\u80fd<ul> <li>11.3.1 portSUPPRESS_TICKS_AND_SLEEP()\u5b8f</li> <li>11.3.2 vPortSuppressTicksAndSleep\u51fd\u6570</li> <li>11.3.3 eTaskConfirmSleepModeStatus\u51fd\u6570</li> <li>11.3.4 configPRE_SLEEP_PROCESSING\u914d\u7f6e</li> <li>11.3.5 configPOST_SLEEP_PROCESSING\u914d\u7f6e</li> </ul> </li> <li>11.4 \u5b9e\u73b0portSUPPRESS_TICKS_AND_SLEEP()\u5b8f</li> <li>11.5 \u7a7a\u95f2\u4efb\u52a1\u94a9\u5b50\u51fd\u6570</li> </ul>"},{"location":"#12","title":"12 \u5f00\u53d1\u8005\u652f\u6301","text":"<ul> <li>12.1 \u7b80\u4ecb </li> <li>12.2 configASSERT()<ul> <li>12.2.1 configASSERT()\u793a\u4f8b\u5b9a\u4e49</li> </ul> </li> <li>12.3 FreeRTOS\u7684Tracealyzer</li> <li>12.4 \u4e0e\u8c03\u8bd5\u76f8\u5173\u7684\u94a9\u5b50\uff08\u56de\u8c03\uff09\u51fd\u6570<ul> <li>12.4.1 Malloc\u5931\u8d25\u94a9\u5b50</li> </ul> </li> <li>12.5 \u67e5\u770b\u8fd0\u884c\u65f6\u548c\u4efb\u52a1\u72b6\u6001\u4fe1\u606f<ul> <li>12.5.1 \u4efb\u52a1\u8fd0\u884c\u65f6\u7edf\u8ba1</li> <li>12.5.2 \u8fd0\u884c\u65f6\u7edf\u8ba1\u65f6\u949f</li> <li>12.5.3 \u914d\u7f6e\u5e94\u7528\u7a0b\u5e8f\u4ee5\u6536\u96c6\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f</li> <li>12.5.4 uxTaskGetSystemState() API\u51fd\u6570</li> <li>12.5.5 vTaskListTasks()\u8f85\u52a9\u51fd\u6570</li> <li>12.5.6 vTaskGetRunTimeStatistics()\u8f85\u52a9\u51fd\u6570</li> <li>12.5.7 \u751f\u6210\u4e0e\u663e\u793a\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\uff0c\u5b9e\u4f8b\u8bb2\u89e3</li> </ul> </li> <li>12.6 Trace\u94a9\u5b50\u5b8f<ul> <li>12.6.1 \u53ef\u7528\u7684Trace\u94a9\u5b50\u5b8f</li> <li>12.6.2 \u5b9a\u4e49Trace\u94a9\u5b50\u5b8f</li> <li>12.6.3 FreeRTOS\u611f\u77e5\u7684\u8c03\u8bd5\u5668\u63d2\u4ef6</li> </ul> </li> </ul>"},{"location":"#13","title":"13 \u6545\u969c\u6392\u9664","text":"<ul> <li>13.1 \u7ae0\u8282\u7b80\u4ecb\u4e0e\u8303\u56f4</li> <li>13.2 \u4e2d\u65ad\u4f18\u5148\u7ea7</li> <li>13.3 \u5806\u6808\u6ea2\u51fa<ul> <li>13.3.1 uxTaskGetStackHighWaterMark() API\u51fd\u6570</li> <li>13.3.2 \u8fd0\u884c\u65f6\u5806\u6808\u68c0\u67e5\u2014\u2014\u6982\u8ff0</li> <li>13.3.3 \u8fd0\u884c\u65f6\u5806\u6808\u68c0\u67e5\u2014\u2014\u65b9\u6cd51</li> <li>13.3.4 \u8fd0\u884c\u65f6\u5806\u6808\u68c0\u67e5\u2014\u2014\u65b9\u6cd52</li> <li>13.3.4 \u8fd0\u884c\u65f6\u5806\u6808\u68c0\u67e5\u2014\u2014\u65b9\u6cd53</li> </ul> </li> <li>13.4 printf()\u548csprintf()\u7684\u4f7f\u7528<ul> <li>13.4.1 Printf-stdarg.c</li> </ul> </li> <li>13.5 \u5176\u4ed6\u5e38\u89c1\u9519\u8bef\u6765\u6e90<ul> <li>13.5.1 \u75c7\u72b6\uff1a\u5411\u6f14\u793a\u4e2d\u6dfb\u52a0\u7b80\u5355\u4efb\u52a1\u5bfc\u81f4\u6f14\u793a\u5d29\u6e83</li> <li>13.5.2 \u75c7\u72b6\uff1a\u5728\u4e2d\u65ad\u4e2d\u4f7f\u7528API\u51fd\u6570\u5bfc\u81f4\u5e94\u7528\u5d29\u6e83</li> <li>13.5.3 \u75c7\u72b6\uff1a\u6709\u65f6\u5e94\u7528\u5728\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u5d29\u6e83</li> <li>13.5.4 \u75c7\u72b6\uff1a\u8c03\u5ea6\u5668\u5c1d\u8bd5\u542f\u52a8\u7b2c\u4e00\u4e2a\u4efb\u52a1\u65f6\u5d29\u6e83</li> <li>13.5.5 \u75c7\u72b6\uff1a\u4e2d\u65ad\u610f\u5916\u5730\u4fdd\u6301\u7981\u7528\u72b6\u6001\uff0c\u6216\u4e34\u754c\u533a\u672a\u6b63\u786e\u5d4c\u5957</li> <li>13.5.6 \u75c7\u72b6\uff1a\u5e94\u7528\u5728\u8c03\u5ea6\u5668\u542f\u52a8\u4e4b\u524d\u5c31\u5d29\u6e83</li> <li>13.5.7 \u75c7\u72b6\uff1a\u5728\u8c03\u5ea6\u5668\u6302\u8d77\u65f6\u8c03\u7528API\u51fd\u6570\uff0c\u6216\u5728\u4e34\u754c\u533a\u5185\u8c03\u7528API\u51fd\u6570\uff0c\u5bfc\u81f4\u5e94\u7528\u5d29\u6e83</li> </ul> </li> <li>13.6 \u5176\u4ed6\u8c03\u8bd5\u6b65\u9aa4</li> </ul>"},{"location":"#_2","title":"\u793a\u4f8b\uff1a","text":"<ul> <li>\u793a\u4f8b 4.1 \u521b\u5efa\u4efb\u52a1</li> <li>\u793a\u4f8b 4.2 \u4f7f\u7528\u4efb\u52a1\u53c2\u6570</li> <li>\u793a\u4f8b 4.3 \u4f18\u5148\u7ea7\u5b9e\u9a8c</li> <li>\u793a\u4f8b 4.4 \u4f7f\u7528\u963b\u585e\u72b6\u6001\u521b\u5efa\u5ef6\u8fdf</li> <li>\u793a\u4f8b 4.5 \u5c06\u793a\u4f8b\u4efb\u52a1\u8f6c\u6362\u4e3a\u4f7f\u7528vTaskDelayUntil()</li> <li>\u793a\u4f8b 4.6 \u7ed3\u5408\u963b\u585e\u4e0e\u975e\u963b\u585e\u4efb\u52a1</li> <li>\u793a\u4f8b 4.7 \u5b9a\u4e49\u7a7a\u95f2\u4efb\u52a1\u94a9\u5b50\u51fd\u6570</li> <li>\u793a\u4f8b 4.8 \u5220\u9664\u4efb\u52a1</li> <li>\u793a\u4f8b 5.1 \u4ece\u961f\u5217\u63a5\u6536\u65f6\u963b\u585e</li> <li>\u793a\u4f8b 5.2 \u5411\u961f\u5217\u53d1\u9001\u65f6\u963b\u585e\uff0c\u4ee5\u53ca\u5728\u961f\u5217\u4e2d\u53d1\u9001\u7ed3\u6784\u4f53</li> <li>\u793a\u4f8b 5.3 \u4f7f\u7528\u961f\u5217\u96c6\u5408</li> <li>\u793a\u4f8b 6.1 \u521b\u5efa\u5355\u6b21\u4e0e\u81ea\u52a8\u91cd\u8f7d\u5b9a\u65f6\u5668</li> <li>\u793a\u4f8b 6.2 \u4f7f\u7528\u56de\u8c03\u51fd\u6570\u53c2\u6570\u548c\u8f6f\u4ef6\u5b9a\u65f6\u5668ID</li> <li>\u793a\u4f8b 6.3 \u91cd\u7f6e\u8f6f\u4ef6\u5b9a\u65f6\u5668</li> <li>\u793a\u4f8b 7.1 \u4f7f\u7528\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u5c06\u4efb\u52a1\u4e0e\u4e2d\u65ad\u540c\u6b65</li> <li>\u793a\u4f8b 7.2 \u4f7f\u7528\u8ba1\u6570\u4fe1\u53f7\u91cf\u5c06\u4efb\u52a1\u4e0e\u4e2d\u65ad\u540c\u6b65</li> <li>\u793a\u4f8b 7.3 \u96c6\u4e2d\u5f0f\u5ef6\u8fdf\u4e2d\u65ad\u5904\u7406</li> <li>\u793a\u4f8b 7.4 \u5728\u4e2d\u65ad\u4e2d\u53d1\u9001\u548c\u63a5\u6536\u961f\u5217</li> <li>\u793a\u4f8b 8.1 \u91cd\u5199vPrintString()\u4ee5\u4f7f\u7528\u4fe1\u53f7\u91cf</li> <li>\u793a\u4f8b 8.2 print\u4efb\u52a1\u7684\u66ff\u4ee3\u5b9e\u73b0</li> <li>\u793a\u4f8b 9.1 \u4e8b\u4ef6\u7ec4\u5b9e\u9a8c</li> <li>\u793a\u4f8b 9.2 \u4efb\u52a1\u540c\u6b65</li> <li>\u793a\u4f8b 10.1 \u4f7f\u7528\u4efb\u52a1\u901a\u77e5\u66ff\u4ee3\u4fe1\u53f7\u91cf\uff0c\u65b9\u6cd5 1</li> <li>\u793a\u4f8b 10.2 \u4f7f\u7528\u4efb\u52a1\u901a\u77e5\u66ff\u4ee3\u4fe1\u53f7\u91cf\uff0c\u65b9\u6cd5 2</li> </ul>"},{"location":"#_3","title":"\u56fe\u8868:","text":"<ul> <li>\u56fe 2.1 FreeRTOS\u5206\u53d1\u5305\u5185\u7684\u9876\u7ea7\u76ee\u5f55</li> <li>\u56fe 2.2 FreeRTOS\u76ee\u5f55\u6811\u4e2d\u7684\u6838\u5fc3FreeRTOS\u6e90\u6587\u4ef6</li> <li>\u56fe 2.3 FreeRTOS\u76ee\u5f55\u6811\u4e2d\u7684\u7aef\u53e3\u7279\u5b9a\u6e90\u6587\u4ef6</li> <li>\u56fe 2.4 \u6f14\u793a\u76ee\u5f55\u5c42\u6b21\u7ed3\u6784</li> <li>\u56fe 3.1 \u6bcf\u6b21\u521b\u5efa\u4efb\u52a1\u65f6\u4eceheap_1\u6570\u7ec4\u5206\u914d\u7684RAM</li> <li>\u56fe 3.2 \u521b\u5efa\u548c\u5220\u9664\u4efb\u52a1\u65f6\u4eceheap_2\u6570\u7ec4\u5206\u914d\u548c\u91ca\u653e\u7684RAM</li> <li>\u56fe 3.3 \u4eceheap_4\u6570\u7ec4\u5206\u914d\u548c\u91ca\u653e\u7684RAM</li> <li>\u56fe 3.4 \u5185\u5b58\u6620\u5c04</li> <li>\u56fe 4.1 \u9876\u7ea7\u4efb\u52a1\u72b6\u6001\u548c\u8f6c\u6362</li> <li>\u56fe 4.2 \u6267\u884c\u793a\u4f8b 4.1 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa</li> <li>\u56fe 4.3 \u4e24\u4e2a\u793a\u4f8b 4.1 \u4efb\u52a1\u7684\u5b9e\u9645\u6267\u884c\u6a21\u5f0f</li> <li>\u56fe 4.4 \u6267\u884c\u5e8f\u5217\uff0c\u5c55\u5f00\u4ee5\u663e\u793a\u6ef4\u7b54\u4e2d\u65ad\u7684\u6267\u884c</li> <li>\u56fe 4.5 \u4ee5\u4e0d\u540c\u4f18\u5148\u7ea7\u8fd0\u884c\u4e24\u4e2a\u4efb\u52a1</li> <li>\u56fe 4.6 \u5f53\u4e00\u4e2a\u4efb\u52a1\u5177\u6709\u6bd4\u53e6\u4e00\u4e2a\u4efb\u52a1\u66f4\u9ad8\u7684\u4f18\u5148\u7ea7\u65f6\u7684\u6267\u884c\u6a21\u5f0f</li> <li>\u56fe 4.7 \u5b8c\u6574\u7684\u4efb\u52a1\u72b6\u6001\u673a</li> <li>\u56fe 4.8 \u6267\u884c\u793a\u4f8b 4.4 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa</li> <li>\u56fe 4.9 \u5f53\u4efb\u52a1\u4f7f\u7528vTaskDelay()\u66ff\u4ee3\u7a7a\u5faa\u73af\u65f6\u7684\u6267\u884c\u5e8f\u5217</li> <li>\u56fe 4.10 \u7c97\u4f53\u7ebf\u6761\u8868\u793a\u4efb\u52a1\u6267\u884c\u7684\u72b6\u6001\u8f6c\u6362</li> <li>\u56fe 4.11 \u6267\u884c\u793a\u4f8b 4.6 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa</li> <li>\u56fe 4.12 \u793a\u4f8b 4.6 \u7684\u6267\u884c\u6a21\u5f0f</li> <li>\u56fe 4.13 \u6267\u884c\u793a\u4f8b 4.7 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa</li> <li>\u56fe 4.14 \u6267\u884c\u793a\u4f8b 4.8 \u65f6\u4efb\u52a1\u6267\u884c\u7684\u987a\u5e8f</li> <li>\u56fe 4.15 \u6267\u884c\u793a\u4f8b 4.8 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa</li> <li>\u56fe 4.16 \u6267\u884c\u793a\u4f8b 4.9 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa</li> <li>\u56fe 4.17 \u793a\u4f8b 4.9 \u7684\u6267\u884c\u5e8f\u5217</li> <li>\u56fe 4.18 \u6267\u884c\u6a21\u5f0f\uff0c\u7a81\u51fa\u663e\u793a\u4efb\u52a1\u4f18\u5148\u7ea7\u548c\u62a2\u5360</li> <li>\u56fe 4.19 \u6267\u884c\u6a21\u5f0f\uff0c\u7a81\u51fa\u663e\u793a\u4efb\u52a1\u4f18\u5148\u7ea7\u548c\u65f6\u95f4\u7247\u8f6e\u8f6c</li> <li>\u56fe 4.20 \u4e0e\u56fe 4.19 \u4e2d\u663e\u793a\u7684\u573a\u666f\u76f8\u540c\u7684\u6267\u884c\u6a21\u5f0f</li> <li>\u56fe 4.21 \u5c55\u793a\u76f8\u540c\u4f18\u5148\u7ea7\u4efb\u52a1\u5982\u4f55\u4ea4\u66ff\u8fd0\u884c\u7684\u6267\u884c\u6a21\u5f0f</li> <li>\u56fe 4.22 \u5c55\u793a\u534f\u4f5c\u8c03\u5ea6\u5668\u884c\u4e3a\u7684\u6267\u884c\u6a21\u5f0f</li> <li>\u56fe 5.1 \u5bf9\u961f\u5217\u7684\u8bfb\u5199\u793a\u4f8b\u5e8f\u5217</li> <li>\u56fe 5.2 \u6267\u884c\u793a\u4f8b 5.1 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa</li> <li>\u56fe 5.3 \u793a\u4f8b 5.1 \u4ea7\u751f\u7684\u6267\u884c\u5e8f\u5217</li> <li>\u56fe 5.4 \u7ed3\u6784\u4f53\u901a\u8fc7\u961f\u5217\u53d1\u9001\u7684\u793a\u4f8b\u573a\u666f</li> <li>\u56fe 5.5 \u793a\u4f8b 5.2 \u4ea7\u751f\u7684\u8f93\u51fa</li> <li>\u56fe 5.6 \u793a\u4f8b 5.2 \u4ea7\u751f\u7684\u6267\u884c\u5e8f\u5217</li> <li>\u56fe 5.7 \u6267\u884c\u793a\u4f8b 5.3 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa</li> <li>\u56fe 6.1 \u5355\u6b21\u4e0e\u81ea\u52a8\u91cd\u8f7d\u8f6f\u4ef6\u5b9a\u65f6\u5668\u884c\u4e3a\u7684\u5dee\u5f02</li> <li>\u56fe 6.2 \u81ea\u52a8\u91cd\u8f7d\u8f6f\u4ef6\u5b9a\u65f6\u5668\u72b6\u6001\u548c\u8f6c\u6362</li> <li>\u56fe 6.3 \u5355\u6b21\u8f6f\u4ef6\u5b9a\u65f6\u5668\u72b6\u6001\u548c\u8f6c\u6362</li> <li>\u56fe 6.4 \u8f6f\u4ef6\u5b9a\u65f6\u5668API\u51fd\u6570\u901a\u8fc7\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4e0eRTOS\u5b88\u62a4\u4efb\u52a1\u901a\u4fe1</li> <li>\u56fe 6.5 \u5f53\u8c03\u7528xTimerStart()\u7684\u4efb\u52a1\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5b88\u62a4\u4efb\u52a1\u4f18\u5148\u7ea7\u65f6\u7684\u6267\u884c\u6a21\u5f0f</li> <li>\u56fe 6.6 \u5f53\u8c03\u7528xTimerStart()\u7684\u4efb\u52a1\u4f18\u5148\u7ea7\u4f4e\u4e8e\u5b88\u62a4\u4efb\u52a1\u4f18\u5148\u7ea7\u65f6\u7684\u6267\u884c\u6a21\u5f0f</li> <li>\u56fe 6.7 \u6267\u884c\u793a\u4f8b 6.1 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa</li> <li>\u56fe 6.8 \u6267\u884c\u793a\u4f8b 6.2 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa</li> <li>\u56fe 6.9 \u542f\u52a8\u548c\u91cd\u7f6e\u5468\u671f\u4e3a6\u4e2a\u6ef4\u7b54\u7684\u5b9a\u65f6\u5668</li> <li>\u56fe 6.10 \u6267\u884c\u793a\u4f8b 6.3 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa</li> <li>\u56fe 7.1 \u5728\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u4e2d\u5b8c\u6210\u4e2d\u65ad\u5904\u7406</li> <li>\u56fe 7.2 \u4f7f\u7528\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u5b9e\u73b0\u5ef6\u8fdf\u4e2d\u65ad\u5904\u7406</li> <li>\u56fe 7.3 \u4f7f\u7528\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u5c06\u4efb\u52a1\u4e0e\u4e2d\u65ad\u540c\u6b65</li> <li>\u56fe 7.4 \u6267\u884c\u793a\u4f8b 7.1 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa</li> <li>\u56fe 7.5 \u6267\u884c\u793a\u4f8b 7.1 \u65f6\u7684\u6267\u884c\u5e8f\u5217</li> <li>\u56fe 7.6 \u5f53\u4e00\u4e2a\u4e2d\u65ad\u53d1\u751f\u5728\u4efb\u52a1\u5b8c\u6210\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u5904\u7406\u4e4b\u524d\u7684\u573a\u666f</li> <li>\u56fe 7.7 \u5f53\u4e24\u4e2a\u4e2d\u65ad\u53d1\u751f\u5728\u4efb\u52a1\u5b8c\u6210\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u5904\u7406\u4e4b\u524d\u7684\u573a\u666f</li> <li>\u56fe 7.8 \u4f7f\u7528\u8ba1\u6570\u4fe1\u53f7\u91cf\u7684\u573a\u666f</li> <li>\u56fe 7.9 \u6267\u884c\u793a\u4f8b 7.2 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa</li> <li>\u56fe 7.10 \u6267\u884c\u793a\u4f8b 7.3 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa</li> <li>\u56fe 7.11 \u6267\u884c\u793a\u4f8b 7.3 \u65f6\u7684\u6267\u884c\u5e8f\u5217</li> <li>\u56fe 7.12 \u6267\u884c\u793a\u4f8b 7.4 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa</li> <li>\u56fe 7.13 \u6267\u884c\u793a\u4f8b 7.4 \u4ea7\u751f\u7684\u6267\u884c\u5e8f\u5217</li> <li>\u56fe 7.14 \u5f71\u54cd\u4e2d\u65ad\u5d4c\u5957\u884c\u4e3a\u7684\u5e38\u91cf</li> <li>\u56fe 7.15 Cortex-M\u5fae\u63a7\u5236\u5668\u5982\u4f55\u5b58\u50a8\u4e8c\u8fdb\u5236101\u7684\u4f18\u5148\u7ea7</li> <li>\u56fe 8.1 \u4f7f\u7528\u4e92\u65a5\u91cf\u5b9e\u73b0\u4e92\u65a5</li> <li>\u56fe 8.2 \u6267\u884c\u793a\u4f8b 8.1 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa</li> <li>\u56fe 8.3 \u793a\u4f8b 8.1 \u7684\u53ef\u80fd\u6267\u884c\u5e8f\u5217</li> <li>\u56fe 8.4 \u6700\u574f\u60c5\u51b5\u4f18\u5148\u7ea7\u53cd\u8f6c\u573a\u666f</li> <li>\u56fe 8.5 \u4f18\u5148\u7ea7\u7ee7\u627f\u6700\u5c0f\u5316\u4f18\u5148\u7ea7\u53cd\u8f6c\u5f71\u54cd</li> <li>\u56fe 8.6 \u5f53\u76f8\u540c\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\u4f7f\u7528\u76f8\u540c\u4e92\u65a5\u91cf\u65f6\u7684\u53ef\u80fd\u6267\u884c\u5e8f\u5217</li> <li>\u56fe 8.7 \u5982\u679c\u5728\u76f8\u540c\u4f18\u5148\u7ea7\u4e0b\u521b\u5efa\u4efb\u52a1\u7684\u4e24\u4e2a\u5b9e\u4f8b\uff0c\u53ef\u80fd\u53d1\u751f\u7684\u6267\u884c\u5e8f\u5217</li> <li>\u56fe 8.8 \u6267\u884c\u793a\u4f8b 8.2 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa</li> <li>\u56fe 9.1 \u4e8b\u4ef6\u6807\u5fd7\u5230\u4f4d\u53f7\u7684\u6620\u5c04\uff0c\u7c7b\u578b\u4e3aEventBits_t\u7684\u53d8\u91cf\u4e2d</li> <li>\u56fe 9.2 \u4e8b\u4ef6\u7ec4\uff0c\u5176\u4e2d\u4ec5\u8bbe\u7f6e\u4e86\u4f4d1\u30014\u548c7\uff0c\u6240\u6709\u5176\u4ed6\u4e8b\u4ef6\u6807\u5fd7\u5747\u672a\u8bbe\u7f6e\uff0c\u4f7f\u4e8b\u4ef6\u7ec4</li> <li>\u56fe 9.3 \u5f53xWaitForAllBits\u8bbe\u7f6e\u4e3apdFALSE\u65f6\uff0c\u6267\u884c\u793a\u4f8b 9.1 \u4ea7\u751f\u7684\u8f93\u51fa</li> <li>\u56fe 9.4 \u5f53xWaitForAllBits\u8bbe\u7f6e\u4e3apdTRUE\u65f6\uff0c\u6267\u884c\u793a\u4f8b 9.1 \u4ea7\u751f\u7684\u8f93\u51fa</li> <li>\u56fe 9.5 \u6267\u884c\u793a\u4f8b 9.2 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa</li> <li>\u56fe 10.1 \u4e00\u4e2a\u901a\u4fe1\u5bf9\u8c61\u7528\u4e8e\u4ece\u4e00\u4e2a\u4efb\u52a1\u5411\u53e6\u4e00\u4e2a\u4efb\u52a1\u53d1\u9001\u4e8b\u4ef6</li> <li>\u56fe 10.2 \u4efb\u52a1\u901a\u77e5\u7528\u4e8e\u76f4\u63a5\u4ece\u4e00\u4e2a\u4efb\u52a1\u5411\u53e6\u4e00\u4e2a\u4efb\u52a1\u53d1\u9001\u4e8b\u4ef6</li> <li>\u56fe 10.3 \u6267\u884c\u793a\u4f8b 7.1 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa</li> <li>\u56fe 10.4 \u6267\u884c\u793a\u4f8b 10.1 \u65f6\u7684\u6267\u884c\u5e8f\u5217</li> <li>\u56fe 10.5 \u6267\u884c\u793a\u4f8b 10.2 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa</li> <li>\u56fe 10.6 \u5e94\u7528\u4efb\u52a1\u5230\u4e91\u670d\u52a1\u5668\u7684\u901a\u4fe1\u8def\u5f84\uff0c\u4ee5\u53ca\u53cd\u5411\u8def\u5f84</li> <li>\u56fe 12.1 FreeRTOS+Trace\u5305\u542b20\u591a\u4e2a\u76f8\u4e92\u5173\u8054\u7684\u89c6\u56fe</li> <li>\u56fe 12.2 FreeRTOS+Trace\u4e3b\u8ddf\u8e2a\u89c6\u56fe - 20\u591a\u4e2a\u76f8\u4e92\u5173\u8054\u7684\u8ddf\u8e2a\u89c6\u56fe\u4e4b\u4e00</li> <li>\u56fe 12.3 FreeRTOS+Trace CPU\u8d1f\u8f7d\u89c6\u56fe - 20\u591a\u4e2a\u76f8\u4e92\u5173\u8054\u7684\u8ddf\u8e2a\u89c6\u56fe\u4e4b\u4e00</li> <li>\u56fe 12.4 FreeRTOS+Trace \u54cd\u5e94\u65f6\u95f4\u89c6\u56fe - 20\u591a\u4e2a\u76f8\u4e92\u5173\u8054\u7684\u8ddf\u8e2a\u89c6\u56fe\u4e4b\u4e00</li> <li>\u56fe 12.5 FreeRTOS+Trace \u7528\u6237\u4e8b\u4ef6\u7ed8\u56fe\u89c6\u56fe - 20\u591a\u4e2a\u76f8\u4e92\u5173\u8054\u7684\u8ddf\u8e2a\u89c6\u56fe\u4e4b\u4e00</li> <li>\u56fe 12.6 FreeRTOS+Trace \u5185\u6838\u5bf9\u8c61\u5386\u53f2\u89c6\u56fe - 20\u591a\u4e2a\u76f8\u4e92\u5173\u8054\u7684\u8ddf\u8e2a\u89c6\u56fe\u4e4b\u4e00</li> <li>\u56fe 12.7 vTaskListTasks()\u751f\u6210\u7684\u793a\u4f8b\u8f93\u51fa</li> <li>\u56fe 12.8 vTaskGetRunTimeStatistics()\u751f\u6210\u7684\u793a\u4f8b\u8f93\u51fa</li> </ul>"},{"location":"#_4","title":"\u6e05\u5355:","text":"<ul> <li>\u6e05\u5355 2.1 \u65b0\u5efamain()\u51fd\u6570\u7684\u6a21\u677f</li> <li>\u6e05\u5355 3.1 vPortDefineHeapRegions() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 3.2 HeapRegion_t\u7ed3\u6784</li> <li>\u6e05\u5355 3.3 \u63cf\u8ff0RAM\u6240\u6709\u533a\u57df\u7684HeapRegion_t\u7ed3\u6784\u6570\u7ec4</li> <li>\u6e05\u5355 3.4 \u63cf\u8ff0RAM2\u5168\u90e8\u3001RAM3\u5168\u90e8\u4f46\u4ec5\u90e8\u5206RAM1\u7684HeapRegion_t\u7ed3\u6784\u6570\u7ec4</li> <li>\u6e05\u5355 3.5 \u4f7f\u7528GCC\u8bed\u6cd5\u58f0\u660e\u5c06\u88abheap_4\u4f7f\u7528\u7684\u6570\u7ec4\uff0c\u5e76\u5c06\u8be5\u6570\u7ec4\u653e\u7f6e\u5728\u540d\u4e3a.my_heap\u7684\u5185\u5b58\u8282\u4e2d</li> <li>\u6e05\u5355 3.6 \u4f7f\u7528IAR\u8bed\u6cd5\u58f0\u660e\u5c06\u88abheap_4\u4f7f\u7528\u7684\u6570\u7ec4\uff0c\u5e76\u5c06\u8be5\u6570\u7ec4\u653e\u7f6e\u5728\u7edd\u5bf9\u5730\u57400x20000000</li> <li>\u6e05\u5355 3.7 xPortGetFreeHeapSize() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 3.8 xPortGetMinimumEverFreeHeapSize() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 3.9 vPortGetHeapStatus() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 3.10 HeapStatus_t()\u7ed3\u6784</li> <li>\u6e05\u5355 3.11 \u91c7\u96c6\u4efb\u52a1\u7ea7\u5806\u4f7f\u7528\u7edf\u8ba1</li> <li>\u6e05\u5355 3.12 Malloc\u5931\u8d25\u94a9\u5b50\u51fd\u6570\u540d\u79f0\u548c\u539f\u578b</li> <li>\u6e05\u5355 3.13 \u5c06pvPortMallocStack()\u548cvPortFreeStack()\u5b8f\u6620\u5c04\u5230\u5e94\u7528\u7a0b\u5e8f\u5b9a\u4e49\u7684\u5185\u5b58\u5206\u914d\u5668</li> <li>\u6e05\u5355 3.14 Typical implementation of vApplicationGetTimerTaskMemory</li> <li>\u6e05\u5355 3.15 Typical implementation of vApplicationGetIdleTaskMemory</li> <li>\u6e05\u5355 4.1 \u4efb\u52a1\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 4.2 \u5178\u578b\u4efb\u52a1\u51fd\u6570\u7684\u7ed3\u6784</li> <li>\u6e05\u5355 4.3 xTaskCreate() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 4.4 \u793a\u4f8b 4.1 \u4e2d\u7b2c\u4e00\u4e2a\u4efb\u52a1\u7684\u5b9e\u73b0</li> <li>\u6e05\u5355 4.5 \u793a\u4f8b 4.1 \u4e2d\u7b2c\u4e8c\u4e2a\u4efb\u52a1\u7684\u5b9e\u73b0</li> <li>\u6e05\u5355 4.6 \u542f\u52a8\u793a\u4f8b 4.1 \u4efb\u52a1</li> <li>\u6e05\u5355 4.7 \u5728\u8c03\u5ea6\u5668\u542f\u52a8\u540e\u4ece\u53e6\u4e00\u4e2a\u4efb\u52a1\u4e2d\u521b\u5efa\u4efb\u52a1</li> <li>\u6e05\u5355 4.8 \u793a\u4f8b 4.2 \u4e2d\u521b\u5efa\u4e24\u4e2a\u4efb\u52a1\u7684\u5355\u4e00\u4efb\u52a1\u51fd\u6570</li> <li>\u6e05\u5355 4.9 \u793a\u4f8b 2 \u7684main()\u51fd\u6570</li> <li>\u6e05\u5355 4.10 \u4f7f\u7528pdMS_TO_TICKS()\u5b8f\u5c06200\u6beb\u79d2\u8f6c\u6362\u4e3a\u6ef4\u7b54\u6570</li> <li>\u6e05\u5355 4.11 \u521b\u5efa\u4e24\u4e2a\u4e0d\u540c\u4f18\u5148\u7ea7\u7684\u4efb\u52a1</li> <li>\u6e05\u5355 4.12 vTaskDelay() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 4.13 \u66ff\u6362\u7a7a\u5faa\u73af\u5ef6\u8fdf\u4e3avTaskDelay()\u8c03\u7528\u540e\u7684\u793a\u4f8b\u4efb\u52a1\u6e90\u4ee3\u7801</li> <li>\u6e05\u5355 4.14 vTaskDelayUntil() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 4.15 \u4f7f\u7528vTaskDelayUntil()\u7684\u793a\u4f8b\u4efb\u52a1\u5b9e\u73b0</li> <li>\u6e05\u5355 4.16 \u793a\u4f8b 4.6 \u4e2d\u4f7f\u7528\u7684\u8fde\u7eed\u5904\u7406\u4efb\u52a1</li> <li>\u6e05\u5355 4.17 \u793a\u4f8b 4.6 \u4e2d\u4f7f\u7528\u7684\u5468\u671f\u6027\u4efb\u52a1</li> <li>\u6e05\u5355 4.18 \u7a7a\u95f2\u4efb\u52a1\u94a9\u5b50\u51fd\u6570\u540d\u79f0\u548c\u539f\u578b</li> <li>\u6e05\u5355 4.19 \u975e\u5e38\u7b80\u5355\u7684\u7a7a\u95f2\u94a9\u5b50\u51fd\u6570</li> <li>\u6e05\u5355 4.20 \u793a\u4f8b\u4efb\u52a1\u6e90\u4ee3\u7801\uff0c\u73b0\u5728\u6253\u5370ulIdleCycleCount\u503c</li> <li>\u6e05\u5355 4.21 vTaskPrioritySet() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 4.22 uxTaskPriorityGet() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 4.23 \u793a\u4f8b 4.8 \u4e2d\u4efb\u52a1 1 \u7684\u5b9e\u73b0</li> <li>\u6e05\u5355 4.24 \u793a\u4f8b 4.8 \u4e2d\u4efb\u52a1 2 \u7684\u5b9e\u73b0</li> <li>\u6e05\u5355 4.25 \u793a\u4f8b 4.8 \u7684main()\u51fd\u6570\u5b9e\u73b0</li> <li>\u6e05\u5355 4.26 vTaskDelete() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 4.27 \u793a\u4f8b 4.9 \u7684main()\u51fd\u6570\u5b9e\u73b0</li> <li>\u6e05\u5355 4.28 \u793a\u4f8b 4.9 \u4e2d\u4efb\u52a1 1 \u7684\u5b9e\u73b0</li> <li>\u6e05\u5355 4.29 \u793a\u4f8b 4.9 \u4e2d\u4efb\u52a1 2 \u7684\u5b9e\u73b0</li> <li>\u6e05\u5355 4.30 \u7ebf\u7a0b\u5c40\u90e8\u5b58\u50a8\u6307\u9488API\u51fd\u6570\u7684\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 5.1 xQueueCreate() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 5.2 xQueueSendToFront() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 5.3 xQueueSendToBack() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 5.4 xQueueReceive() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 5.5 uxQueueMessagesWaiting() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 5.6 \u793a\u4f8b 5.1 \u4e2d\u53d1\u9001\u4efb\u52a1\u7684\u5b9e\u73b0</li> <li>\u6e05\u5355 5.7 \u793a\u4f8b 5.1 \u4e2d\u63a5\u6536\u4efb\u52a1\u7684\u5b9e\u73b0</li> <li>\u6e05\u5355 5.8 \u793a\u4f8b 5.1 \u4e2dmain()\u7684\u5b9e\u73b0</li> <li>\u6e05\u5355 5.9 \u8981\u901a\u8fc7\u961f\u5217\u4f20\u9012\u7684\u7ed3\u6784\u4f53\u5b9a\u4e49\uff0c\u4ee5\u53ca\u793a\u4f8b\u4e2d\u4f7f\u7528\u7684\u4e24\u4e2a\u53d8\u91cf\u7684\u58f0\u660e</li> <li>\u6e05\u5355 5.10 \u793a\u4f8b 5.2 \u4e2d\u53d1\u9001\u4efb\u52a1\u7684\u5b9e\u73b0</li> <li>\u6e05\u5355 5.11 \u793a\u4f8b 5.2 \u4e2d\u63a5\u6536\u4efb\u52a1\u7684\u5b9a\u4e49</li> <li>\u6e05\u5355 5.12 \u793a\u4f8b 5.2 \u4e2dmain()\u7684\u5b9e\u73b0</li> <li>\u6e05\u5355 5.13 \u521b\u5efa\u4e00\u4e2a\u4fdd\u5b58\u6307\u9488\u7684\u961f\u5217</li> <li>\u6e05\u5355 5.14 \u4f7f\u7528\u961f\u5217\u53d1\u9001\u6307\u5411\u7f13\u51b2\u533a\u7684\u6307\u9488</li> <li>\u6e05\u5355 5.15 \u4f7f\u7528\u961f\u5217\u63a5\u6536\u6307\u5411\u7f13\u51b2\u533a\u7684\u6307\u9488</li> <li>\u6e05\u5355 5.16 \u7528\u4e8e\u5411TCP/IP\u5806\u6808\u4efb\u52a1\u53d1\u9001\u4e8b\u4ef6\u7684\u7ed3\u6784\u4f53</li> <li>\u6e05\u5355 5.17 \u663e\u793a\u5982\u4f55\u4f7f\u7528IPStackEvent_t\u7ed3\u6784\u5c06\u4ece\u7f51\u7edc\u63a5\u6536\u5230\u7684\u6570\u636e\u53d1\u9001\u5230TCP/IP\u4efb\u52a1\u7684\u4f2a\u4ee3\u7801</li> <li>\u6e05\u5355 5.18 \u663e\u793a\u5982\u4f55\u4f7f\u7528IPStackEvent_t\u7ed3\u6784\u5c06\u63a5\u53d7\u8fde\u63a5\u7684\u5957\u63a5\u5b57\u53e5\u67c4\u53d1\u9001\u5230TCP/IP\u4efb\u52a1\u7684\u4f2a\u4ee3\u7801</li> <li>\u6e05\u5355 5.19 \u663e\u793a\u5982\u4f55\u4f7f\u7528IPStackEvent_t\u7ed3\u6784\u5c06\u7f51\u7edc\u65ad\u5f00\u4e8b\u4ef6\u53d1\u9001\u5230TCP/IP\u4efb\u52a1\u7684\u4f2a\u4ee3\u7801</li> <li>\u6e05\u5355 5.20 \u663e\u793a\u5982\u4f55\u63a5\u6536\u548c\u5904\u7406IPStackEvent_t\u7ed3\u6784\u7684\u4f2a\u4ee3\u7801</li> <li>\u6e05\u5355 5.21 xQueueCreateSet() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 5.22 xQueueAddToSet() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 5.23 xQueueSelectFromSet() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 5.24 \u793a\u4f8b 5.3 \u7684main()\u5b9e\u73b0</li> <li>\u6e05\u5355 5.25 \u793a\u4f8b 5.3 \u4e2d\u53d1\u9001\u4efb\u52a1\u7684\u5b9e\u73b0</li> <li>\u6e05\u5355 5.26 \u793a\u4f8b 5.3 \u4e2d\u63a5\u6536\u4efb\u52a1\u7684\u5b9e\u73b0</li> <li>\u6e05\u5355 5.27 \u4f7f\u7528\u5305\u542b\u961f\u5217\u548c\u4fe1\u53f7\u91cf\u7684\u961f\u5217\u96c6\u5408</li> <li>\u6e05\u5355 5.28 \u7528\u4f5c\u90ae\u7bb1\u7684\u961f\u5217\u521b\u5efa</li> <li>\u6e05\u5355 5.29 xQueueOverwrite() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 5.30 \u4f7f\u7528xQueueOverwrite() API\u51fd\u6570</li> <li>\u6e05\u5355 5.31 xQueuePeek() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 5.32 \u4f7f\u7528xQueuePeek() API\u51fd\u6570</li> <li>\u6e05\u5355 6.1 \u8f6f\u4ef6\u5b9a\u65f6\u5668\u56de\u8c03\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 6.2 xTimerDelete() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 6.3 xTimerCreate() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 6.4 xTimerStart() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 6.5 \u521b\u5efa\u548c\u542f\u52a8\u793a\u4f8b 6.1 \u4e2d\u4f7f\u7528\u7684\u5b9a\u65f6\u5668</li> <li>\u6e05\u5355 6.6 \u793a\u4f8b 6.1 \u4e2d\u5355\u6b21\u5b9a\u65f6\u5668\u4f7f\u7528\u7684\u56de\u8c03\u51fd\u6570</li> <li>\u6e05\u5355 6.7 \u793a\u4f8b 6.1 \u4e2d\u81ea\u52a8\u91cd\u8f7d\u5b9a\u65f6\u5668\u4f7f\u7528\u7684\u56de\u8c03\u51fd\u6570</li> <li>\u6e05\u5355 6.8 vTimerSetTimerID() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 6.9 pvTimerGetTimerID() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 6.10 \u521b\u5efa\u793a\u4f8b 6.2 \u4e2d\u4f7f\u7528\u7684\u5b9a\u65f6\u5668</li> <li>\u6e05\u5355 6.11 \u793a\u4f8b 6.2 \u4e2d\u5b9a\u65f6\u5668\u56de\u8c03\u51fd\u6570\u7684\u5b9e\u73b0</li> <li>\u6e05\u5355 6.12 xTimerChangePeriod() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 6.13 \u4f7f\u7528xTimerChangePeriod()</li> <li>\u6e05\u5355 6.14 xTimerReset() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 6.15 \u793a\u4f8b 6.3 \u4e2d\u5355\u6b21\u5b9a\u65f6\u5668\u7684\u56de\u8c03\u51fd\u6570\u5b9e\u73b0</li> <li>\u6e05\u5355 6.16 \u793a\u4f8b 6.3 \u4e2d\u91cd\u7f6e\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u4efb\u52a1\u5b9e\u73b0</li> <li>\u6e05\u5355 7.1 portEND_SWITCHING_ISR()\u5b8f</li> <li>\u6e05\u5355 7.2 portYIELD_FROM_ISR()\u5b8f</li> <li>\u6e05\u5355 7.3 xSemaphoreCreateBinary() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 7.4 xSemaphoreTake() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 7.5 xSemaphoreGiveFromISR() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 7.6 \u793a\u4f8b 7.1 \u4e2d\u5b9a\u671f\u751f\u6210\u8f6f\u4ef6\u4e2d\u65ad\u7684\u4efb\u52a1\u5b9e\u73b0</li> <li>\u6e05\u5355 7.7 \u5ef6\u8fdf\u4e2d\u65ad\u5904\u7406\u4efb\u52a1\u7684\u5b9e\u73b0\uff08\u4e2d\u65ad\u5904\u7406\u88ab\u63a8\u8fdf\u5230\u7684\u4efb\u52a1\uff09</li> <li>\u6e05\u5355 7.8 \u793a\u4f8b 7.1 \u4e2d\u8f6f\u4ef6\u4e2d\u65ad\u7684ISR\u5b9e\u73b0</li> <li>\u6e05\u5355 7.9 \u793a\u4f8b 7.1 \u7684main()\u5b9e\u73b0</li> <li>\u6e05\u5355 7.10 \u63a8\u8350\u7684\u5ef6\u8fdf\u4e2d\u65ad\u5904\u7406\u4efb\u52a1\u7ed3\u6784\uff0c\u4f7f\u7528UART\u63a5\u6536\u4e2d\u65ad</li> <li>\u6e05\u5355 7.11 xSemaphoreCreateCounting() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 7.12 \u793a\u4f8b 7.2 \u4e2d\u8ba1\u6570\u4fe1\u53f7\u91cf\u7684\u521b\u5efa\u8c03\u7528</li> <li>\u6e05\u5355 7.13 \u793a\u4f8b 7.2 \u4e2d\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u7684\u5b9e\u73b0</li> <li>\u6e05\u5355 7.14 xTimerPendFunctionCallFromISR() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 7.15 \u4f20\u9012\u7ed9xTimerPendFunctionCallFromISR()\u4e2dxFunctionToPend\u53c2\u6570\u7684\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 7.16 \u793a\u4f8b 7.3 \u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f</li> <li>\u6e05\u5355 7.17 \u793a\u4f8b 7.3 \u4e2d\u65ad\u5f15\u53d1\u7684\u5904\u7406\u51fd\u6570</li> <li>\u6e05\u5355 7.18 \u793a\u4f8b 7.3 \u7684main()\u5b9e\u73b0</li> <li>\u6e05\u5355 7.19 xQueueSendToFrontFromISR() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 7.20 xQueueSendToBackFromISR() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 7.21 \u793a\u4f8b 7.4 \u4e2d\u5411\u961f\u5217\u5199\u5165\u7684\u4efb\u52a1\u5b9e\u73b0</li> <li>\u6e05\u5355 7.22 \u793a\u4f8b 7.4 \u4e2d\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u7684\u5b9e\u73b0</li> <li>\u6e05\u5355 7.23 \u793a\u4f8b 7.4 \u4e2d\u6253\u5370\u63a5\u6536\u5230\u7684\u5b57\u7b26\u4e32\u7684\u4efb\u52a1\u5b9e\u73b0</li> <li>\u6e05\u5355 7.24 \u793a\u4f8b 7.4 \u7684main()\u5b9e\u73b0</li> <li>\u6e05\u5355 8.1 \u8bfb-\u4fee\u6539-\u5199\u5e8f\u5217\u793a\u4f8b</li> <li>\u6e05\u5355 8.2 \u53ef\u91cd\u5165\u51fd\u6570\u793a\u4f8b</li> <li>\u6e05\u5355 8.3 \u975e\u53ef\u91cd\u5165\u51fd\u6570\u793a\u4f8b</li> <li>\u6e05\u5355 8.4 \u4f7f\u7528\u4e34\u754c\u533a\u4fdd\u62a4\u5bf9\u5bc4\u5b58\u5668\u7684\u8bbf\u95ee</li> <li>\u6e05\u5355 8.5 vPrintString()\u7684\u53ef\u80fd\u5b9e\u73b0</li> <li>\u6e05\u5355 8.6 \u5728\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u4f7f\u7528\u4e34\u754c\u533a</li> <li>\u6e05\u5355 8.7 vTaskSuspendAll() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 8.8 xTaskResumeAll() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 8.9 vPrintString()\u7684\u5b9e\u73b0</li> <li>\u6e05\u5355 8.10 xSemaphoreCreateMutex() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 8.11 prvNewPrintString()\u7684\u5b9e\u73b0</li> <li>\u6e05\u5355 8.12 \u793a\u4f8b 8.1 \u4e2dprvPrintTask()\u7684\u5b9e\u73b0</li> <li>\u6e05\u5355 8.13 \u793a\u4f8b 8.1 \u7684main()\u5b9e\u73b0</li> <li>\u6e05\u5355 8.14 \u521b\u5efa\u548c\u4f7f\u7528\u9012\u5f52\u4e92\u65a5\u91cf</li> <li>\u6e05\u5355 8.15 \u5728\u7d27\u51d1\u5faa\u73af\u4e2d\u4f7f\u7528\u4e92\u65a5\u91cf\u7684\u4efb\u52a1\u793a\u4f8b</li> <li>\u6e05\u5355 8.16 \u786e\u4fdd\u5728\u5faa\u73af\u4e2d\u4f7f\u7528\u4e92\u65a5\u91cf\u7684\u4efb\u52a1\u83b7\u5f97\u66f4\u5747\u7b49\u7684\u5904\u7406\u65f6\u95f4\u7684\u63aa\u65bd</li> <li>\u6e05\u5355 8.17 \u65f6\u949f\u94a9\u5b50\u51fd\u6570\u7684\u540d\u79f0\u548c\u539f\u578b</li> <li>\u6e05\u5355 8.18 \u95e8\u63a7\u4efb\u52a1</li> <li>\u6e05\u5355 8.19 \u793a\u4f8b 8.2 \u4e2d\u6253\u5370\u4efb\u52a1\u7684\u5b9e\u73b0</li> <li>\u6e05\u5355 8.20 \u65f6\u949f\u94a9\u5b50\u7684\u5b9e\u73b0</li> <li>\u6e05\u5355 8.21 \u793a\u4f8b 8.2 \u7684main()\u5b9e\u73b0</li> <li>\u6e05\u5355 9.1 xEventGroupCreate() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 9.2. xEventGroupSetBits() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 9.3 xEventGroupSetBitsFromISR() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 9.4 xEventGroupWaitBits() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 9.5 xEventGroupGetStaticBuffer() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 9.6 \u4e8b\u4ef6\u4f4d\u5b9a\u4e49\uff0c\u7528\u4e8e\u793a\u4f8b 9.1</li> <li>\u6e05\u5355 9.7 \u793a\u4f8b 9.1 \u4e2d\u8bbe\u7f6e\u4e8b\u4ef6\u7ec4\u4e2d\u4e24\u4e2a\u4e8b\u4ef6\u4f4d\u7684\u4efb\u52a1</li> <li>\u6e05\u5355 9.8 \u793a\u4f8b 9.1 \u4e2d\u8bbe\u7f6e\u4e8b\u4ef6\u7ec4\u4e2d\u4e8b\u4ef6\u4f4d\u7684ISR</li> <li>\u6e05\u5355 9.9 \u793a\u4f8b 9.1 \u4e2d\u963b\u585e\u7b49\u5f85\u4e8b\u4ef6\u4f4d\u88ab\u8bbe\u7f6e\u7684\u4efb\u52a1</li> <li>\u6e05\u5355 9.10 \u521b\u5efa\u793a\u4f8b 9.1 \u4e2d\u7684\u4e8b\u4ef6\u7ec4\u548c\u4efb\u52a1</li> <li>\u6e05\u5355 9.11 \u4e24\u4e2a\u4efb\u52a1\u76f8\u4e92\u540c\u6b65\u4ee5\u786e\u4fdd\u5171\u4eabTCP\u5957\u63a5\u5b57\u7684\u4f2a\u4ee3\u7801</li> <li>\u6e05\u5355 9.12 xEventGroupSync() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 9.13 \u793a\u4f8b 9.2 \u4e2d\u4efb\u52a1\u7684\u5b9e\u73b0</li> <li>\u6e05\u5355 9.14 \u793a\u4f8b 9.2 \u4e2d\u7684main()\u51fd\u6570\u5b9e\u73b0</li> <li>\u6e05\u5355 10.1 xTaskNotifyGive() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 10.2 vTaskNotifyGiveFromISR() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 10.3 ulTaskNotifyTake() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 10.4 \u5ef6\u8fdf\u4e2d\u65ad\u5904\u7406\u4efb\u52a1\u7684\u5b9e\u73b0\uff08\u4e2d\u65ad\u5904\u7406\u88ab\u63a8\u8fdf\u5230\u7684\u4efb\u52a1\uff09</li> <li>\u6e05\u5355 10.5 \u793a\u4f8b 10.1 \u4e2d\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u7684\u5b9e\u73b0</li> <li>\u6e05\u5355 10.6 \u5ef6\u8fdf\u4e2d\u65ad\u5904\u7406\u4efb\u52a1\u7684\u5b9e\u73b0\uff08\u4e2d\u65ad\u5904\u7406\u88ab\u63a8\u8fdf\u5230\u7684\u4efb\u52a1\uff09</li> <li>\u6e05\u5355 10.7 \u793a\u4f8b 10.2 \u4e2d\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u7684\u5b9e\u73b0</li> <li>\u6e05\u5355 10.8 xTaskNotify()\u548cxTaskNotifyFromISR() API\u51fd\u6570\u7684\u539f\u578b</li> <li>\u6e05\u5355 10.9 xTaskNotifyWait() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 10.10 \u663e\u793a\u5982\u4f55\u5728\u9a71\u52a8\u7a0b\u5e8f\u5e93\u53d1\u9001\u4e2d\u65ad\u4e2d\u4f7f\u7528\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u7684\u4f2a\u4ee3\u7801</li> <li>\u6e05\u5355 10.11 \u663e\u793a\u5982\u4f55\u5728\u9a71\u52a8\u7a0b\u5e8f\u5e93\u53d1\u9001\u4e2d\u65ad\u4e2d\u4f7f\u7528\u4efb\u52a1\u901a\u77e5\u7684\u4f2a\u4ee3\u7801</li> <li>\u6e05\u5355 10.12 \u663e\u793a\u5982\u4f55\u5728\u9a71\u52a8\u7a0b\u5e8f\u5e93\u63a5\u6536\u4e2d\u65ad\u4e2d\u4f7f\u7528\u4efb\u52a1\u901a\u77e5\u7684\u4f2a\u4ee3\u7801</li> <li>\u6e05\u5355 10.13 \u663e\u793a\u5982\u4f55\u4f7f\u7528\u4efb\u52a1\u901a\u77e5\u5c06\u503c\u4f20\u9012\u7ed9\u4efb\u52a1\u7684\u4f2a\u4ee3\u7801</li> <li>\u6e05\u5355 10.14 \u901a\u8fc7\u961f\u5217\u53d1\u9001\u5230\u670d\u52a1\u5668\u4efb\u52a1\u7684\u7ed3\u6784\u548c\u6570\u636e\u7c7b\u578b</li> <li> <p>\u6e05\u5355 10.15 \u4e91\u8bfb\u53d6API\u51fd\u6570\u7684\u5b9e\u73b0</p> </li> <li> <p>\u6e05\u5355 10.16 \u670d\u52a1\u5668\u4efb\u52a1\u5904\u7406\u8bfb\u53d6\u8bf7\u6c42</p> </li> <li>\u6e05\u5355 10.17 \u4e91\u5199\u5165API\u51fd\u6570\u7684\u5b9e\u73b0</li> <li>\u6e05\u5355 10.18 \u670d\u52a1\u5668\u4efb\u52a1\u5904\u7406\u53d1\u9001\u8bf7\u6c42</li> <li>\u6e05\u5355 11.1 portSUPPRESS_TICKS_AND_SLEEP\u5b8f\u7684\u539f\u578b</li> <li>\u6e05\u5355 11.2 vPortSuppressTicksAndSleep API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 11.3 eTaskConfirmSleepModeStatus API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 11.4 configPRE_SLEEP_PROCESSING\u5b8f\u7684\u539f\u578b</li> <li>\u6e05\u5355 11.5 configPOST_SLEEP_PROCESSING\u5b8f\u7684\u539f\u578b</li> <li>\u6e05\u5355 11.6 \u7528\u6237\u81ea\u5b9a\u4e49\u5b9e\u73b0portSUPPRESS_TICKS_AND_SLEEP()\u5b8f\u7684\u793a\u4f8b</li> <li>\u6e05\u5355 11.7 vApplicationIdleHook API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 12.1 \u4f7f\u7528\u6807\u51c6C\u7684assert()\u5b8f\u68c0\u67e5pxMyPointer\u4e0d\u4e3aNULL</li> <li>\u6e05\u5355 12.2 \u5728\u8c03\u8bd5\u5668\u63a7\u5236\u4e0b\u6267\u884c\u65f6\uff0cconfigASSERT()\u7684\u7b80\u5355\u5b9a\u4e49</li> <li>\u6e05\u5355 12.3 \u8bb0\u5f55\u6e90\u4ee3\u7801\u884c\u7684configASSERT()\u5b9a\u4e49\uff0c\u5f53\u65ad\u8a00\u5931\u8d25\u65f6</li> <li>\u6e05\u5355 12.4 uxTaskGetSystemState() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 12.5 TaskStatus_t\u7ed3\u6784</li> <li>\u6e05\u5355 12.6 vTaskListTasks() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 12.7 vTaskList() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 12.8 vTaskGetRunTimeStatistics() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 12.9 vTaskGetRunTimeStats() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 12.10 16\u4f4d\u5b9a\u65f6\u5668\u6ea2\u51fa\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff0c\u7528\u4e8e\u8ba1\u6570\u5b9a\u65f6\u5668\u6ea2\u51fa</li> <li>\u6e05\u5355 12.11 \u6dfb\u52a0\u5230FreeRTOSConfig.h\u7684\u5b8f\uff0c\u4ee5\u542f\u7528\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u7684\u6536\u96c6</li> <li>\u6e05\u5355 12.12 \u6253\u5370\u6536\u96c6\u5230\u7684\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u7684\u4efb\u52a1</li> <li>\u6e05\u5355 13.1 uxTaskGetStackHighWaterMark() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 13.2 uxTaskGetStackHighWaterMark2() API\u51fd\u6570\u539f\u578b</li> <li>\u6e05\u5355 13.3 \u5806\u6808\u6ea2\u51fa\u94a9\u5b50\u51fd\u6570\u539f\u578b</li> </ul>"},{"location":"#_5","title":"\u8868\u683c:","text":"<ul> <li>\u8868 1 FreeRTOS\u6e90\u6587\u4ef6\u5728\u9879\u76ee\u4e2d\u7684\u5305\u542b</li> <li>\u8868 2 TickType_t\u6570\u636e\u7c7b\u578b\u4e0econfigTICK_TYPE_WIDTH_IN_BITS\u914d\u7f6e</li> <li>\u8868 3 \u5b8f\u524d\u7f00</li> <li>\u8868 4 \u5e38\u89c1\u5b8f\u5b9a\u4e49</li> <li>\u8868 5 FreeRTOSConfig.h\u8bbe\u7f6e\u4ee5\u914d\u7f6e\u5185\u6838\u8c03\u5ea6\u7b97\u6cd5</li> <li>\u8868 6 uxBitsToWaitFor\u548cxWaitForAllBits\u53c2\u6570\u7684\u5f71\u54cd</li> </ul>"},{"location":"ch01-%E5%89%8D%E8%A8%80/","title":"1 \u524d\u8a00","text":""},{"location":"ch01-%E5%89%8D%E8%A8%80/#11","title":"1.1 \u5c0f\u578b\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u7684\u591a\u4efb\u52a1","text":""},{"location":"ch01-%E5%89%8D%E8%A8%80/#111-freertos","title":"1.1.1 \u5173\u4e8e FreeRTOS \u5185\u6838","text":"<p>FreeRTOS \u662f\u4e00\u7ec4 C \u8bed\u8a00\u5e93\uff0c\u5305\u62ec\u4e00\u4e2a\u5b9e\u65f6\u5185\u6838\u548c\u4e00\u7ec4\u5b9e\u73b0\u8865\u5145\u529f\u80fd\u7684\u6a21\u5757\u5316\u5e93\u3002</p> <p>Richard Barry \u4e8e 2003 \u5e74\u5de6\u53f3\u6700\u521d\u5f00\u53d1\u4e86 FreeRTOS\u3002Richard \u7684\u516c\u53f8 Real-Time Engineers Ltd \u4e0e\u5168\u7403\u9886\u5148\u7684\u82af\u7247\u516c\u53f8\u5bc6\u5207\u5408\u4f5c\uff0c\u6301\u7eed\u5f00\u53d1 FreeRTOS\uff0c\u76f4\u5230 2016 \u5e74 Amazon Web Services (AWS) \u63a5\u7ba1\u4e86 FreeRTOS \u7684\u7ba1\u7406\u3002\u73b0\u5728 Richard \u4f5c\u4e3a AWS IoT \u56e2\u961f\u7684\u9ad8\u7ea7\u9996\u5e2d\u5de5\u7a0b\u5e08\u7ee7\u7eed\u4ece\u4e8b FreeRTOS \u7684\u76f8\u5173\u5de5\u4f5c\u3002FreeRTOS \u91c7\u7528 MIT \u5f00\u6e90\u8bb8\u53ef\u8bc1\uff0c\u4efb\u4f55\u7528\u9014\u5747\u53ef\u514d\u8d39\u4f7f\u7528\u3002\u4f60\u65e0\u9700\u6210\u4e3a AWS \u5ba2\u6237\u4e5f\u80fd\u53d7\u76ca\u4e8e AWS \u7684\u7ba1\u7406\uff01</p> <p>FreeRTOS \u5185\u6838\u975e\u5e38\u9002\u5408\u8fd0\u884c\u5728\u5fae\u63a7\u5236\u5668\u6216\u5c0f\u578b\u5fae\u5904\u7406\u5668\u4e0a\u7684\u6df1\u5ea6\u5d4c\u5165\u5f0f\u5b9e\u65f6\u5e94\u7528\u3002\u8fd9\u7c7b\u5e94\u7528\u901a\u5e38\u5305\u542b\u786c\u5b9e\u65f6\u548c\u8f6f\u5b9e\u65f6\u9700\u6c42\u7684\u6df7\u5408\u3002</p> <p>\u8f6f\u5b9e\u65f6\u9700\u6c42\u8981\u6c42\u5728\u67d0\u4e2a\u65f6\u95f4\u70b9\u524d\u5b8c\u6210\u4efb\u52a1\uff0c\u4f46\u8d85\u65f6\u4e0d\u4f1a\u5bfc\u81f4\u7cfb\u7edf\u5931\u6548\u3002\u4f8b\u5982\uff0c\u54cd\u5e94\u6309\u952e\u8fc7\u6162\u53ef\u80fd\u8ba9\u7cfb\u7edf\u663e\u5f97\u53cd\u5e94\u8fdf\u7f13\uff0c\u4f46\u5e76\u4e0d\u4f1a\u8ba9\u7cfb\u7edf\u65e0\u6cd5\u4f7f\u7528\u3002</p> <p>\u786c\u5b9e\u65f6\u9700\u6c42\u8981\u6c42\u5728\u67d0\u4e2a\u65f6\u95f4\u70b9\u524d\u5b8c\u6210\u4efb\u52a1\uff0c\u8d85\u65f6\u5c06\u5bfc\u81f4\u7cfb\u7edf\u5f7b\u5e95\u5931\u6548\u3002\u4f8b\u5982\uff0c\u5b89\u5168\u6c14\u56ca\u5982\u679c\u5bf9\u78b0\u649e\u4f20\u611f\u5668\u8f93\u5165\u54cd\u5e94\u8fc7\u6162\uff0c\u53ef\u80fd\u4f1a\u9020\u6210\u66f4\u5927\u7684\u4f24\u5bb3\u3002</p> <p>FreeRTOS \u5185\u6838\u662f\u4e00\u4e2a\u5b9e\u65f6\u5185\u6838\uff08\u6216\u5b9e\u65f6\u8c03\u5ea6\u5668\uff09\uff0c\u4f7f\u57fa\u4e8e FreeRTOS \u7684\u5e94\u7528\u80fd\u591f\u6ee1\u8db3\u5176\u786c\u5b9e\u65f6\u9700\u6c42\u3002\u5b83\u5141\u8bb8\u5e94\u7528\u88ab\u7ec4\u7ec7\u4e3a\u4e00\u7ec4\u72ec\u7acb\u7684\u6267\u884c\u7ebf\u7a0b\u3002\u4f8b\u5982\uff0c\u5728\u53ea\u6709\u4e00\u4e2a\u5185\u6838\u7684\u5904\u7406\u5668\u4e0a\uff0c\u540c\u4e00\u65f6\u523b\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5728\u6267\u884c\u3002\u5185\u6838\u901a\u8fc7\u68c0\u67e5\u5e94\u7528\u8bbe\u8ba1\u8005\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u5206\u914d\u7684\u4f18\u5148\u7ea7\u6765\u51b3\u5b9a\u6267\u884c\u54ea\u4e2a\u7ebf\u7a0b\u3002\u6700\u7b80\u5355\u7684\u60c5\u51b5\u4e0b\uff0c\u8bbe\u8ba1\u8005\u53ef\u4ee5\u4e3a\u5b9e\u73b0\u786c\u5b9e\u65f6\u9700\u6c42\u7684\u7ebf\u7a0b\u5206\u914d\u66f4\u9ad8\u4f18\u5148\u7ea7\uff0c\u4e3a\u5b9e\u73b0\u8f6f\u5b9e\u65f6\u9700\u6c42\u7684\u7ebf\u7a0b\u5206\u914d\u8f83\u4f4e\u4f18\u5148\u7ea7\u3002\u8fd9\u79cd\u5206\u914d\u53ef\u4ee5\u786e\u4fdd\u786c\u5b9e\u65f6\u7ebf\u7a0b\u603b\u662f\u4f18\u5148\u4e8e\u8f6f\u5b9e\u65f6\u7ebf\u7a0b\u6267\u884c\uff0c\u4f46\u5b9e\u9645\u4f18\u5148\u7ea7\u5206\u914d\u5e76\u4e0d\u603b\u662f\u5982\u6b64\u7b80\u5355\u3002</p> <p>\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u5b8c\u5168\u7406\u89e3\u4e0a\u9762\u6bb5\u843d\u4e2d\u7684\u6982\u5ff5\uff0c\u4e0d\u5fc5\u62c5\u5fc3\u3002\u540e\u7eed\u7ae0\u8282\u4f1a\u901a\u8fc7\u8be6\u7ec6\u89e3\u91ca\u548c\u5927\u91cf\u793a\u4f8b\uff0c\u5e2e\u52a9\u4f60\u7406\u89e3\u5982\u4f55\u4f7f\u7528\u5b9e\u65f6\u5185\u6838\uff0c\u5c24\u5176\u662f FreeRTOS\u3002</p>"},{"location":"ch01-%E5%89%8D%E8%A8%80/#112","title":"1.1.2 \u4ef7\u503c\u4e3b\u5f20","text":"<p>FreeRTOS \u5185\u6838\u53d6\u5f97\u5168\u7403\u6027\u6210\u529f\uff0c\u6e90\u4e8e\u5176\u6781\u5177\u5438\u5f15\u529b\u7684\u4ef7\u503c\u4e3b\u5f20\uff1aFreeRTOS \u7531\u4e13\u4e1a\u56e2\u961f\u5f00\u53d1\uff0c\u4e25\u683c\u8d28\u91cf\u63a7\u5236\uff0c\u5065\u58ee\u53ef\u9760\uff0c\u652f\u6301\u5b8c\u5584\uff0c\u65e0\u77e5\u8bc6\u4ea7\u6743\u5f52\u5c5e\u6b67\u4e49\uff0c\u5e76\u4e14\u5728\u5546\u4e1a\u5e94\u7528\u4e2d\u771f\u6b63\u514d\u8d39\uff0c\u65e0\u9700\u516c\u5f00\u4f60\u7684\u4e13\u6709\u6e90\u4ee3\u7801\u3002\u6b64\u5916\uff0cAWS \u7684\u7ba1\u7406\u5e26\u6765\u4e86\u5168\u7403\u5f71\u54cd\u529b\u3001\u4e13\u4e1a\u7684\u5b89\u5168\u4e8b\u4ef6\u54cd\u5e94\u6d41\u7a0b\u3001\u5e9e\u5927\u4e14\u591a\u5143\u5316\u7684\u5f00\u53d1\u56e2\u961f\u3001\u5f62\u5f0f\u5316\u9a8c\u8bc1\u3001\u6e17\u900f\u6d4b\u8bd5\u3001\u5185\u5b58\u5b89\u5168\u8bc1\u660e\u548c\u957f\u671f\u652f\u6301\u2014\u2014\u540c\u65f6\u4fdd\u6301 FreeRTOS \u4f5c\u4e3a\u786c\u4ef6\u3001\u5f00\u53d1\u5de5\u5177\u548c\u4e91\u670d\u52a1\u4e2d\u7acb\u7684\u5f00\u6e90\u9879\u76ee\u3002FreeRTOS \u7684\u5f00\u53d1\u5728 GitHub \u4e0a\u900f\u660e\u4e14\u7531\u793e\u533a\u9a71\u52a8\uff0c\u65e0\u9700\u7279\u6b8a\u5de5\u5177\u6216\u5f00\u53d1\u6d41\u7a0b\u3002</p> <p>\u4f60\u53ef\u4ee5\u76f4\u63a5\u7528 FreeRTOS \u63a8\u51fa\u4ea7\u54c1\uff0c\u65e0\u9700\u544a\u77e5\u6211\u4eec\uff0c\u66f4\u65e0\u9700\u652f\u4ed8\u4efb\u4f55\u8d39\u7528\uff0c\u6210\u5343\u4e0a\u4e07\u5bb6\u516c\u53f8\u6b63\u662f\u8fd9\u6837\u505a\u7684\u3002\u5982\u679c\u4f60\u5e0c\u671b\u83b7\u5f97\u989d\u5916\u652f\u6301\uff0c\u6216\u4f60\u7684\u6cd5\u52a1\u56e2\u961f\u9700\u8981\u989d\u5916\u7684\u4e66\u9762\u62c5\u4fdd\u6216\u8d54\u507f\uff0c\u6211\u4eec\u7684\u6218\u7565\u5408\u4f5c\u4f19\u4f34\u4e5f\u63d0\u4f9b\u7b80\u5355\u4f4e\u4ef7\u7684\u5546\u4e1a\u6388\u6743\u9009\u9879\u3002\u4f60\u53ef\u4ee5\u968f\u65f6\u9009\u62e9\u5546\u4e1a\u6388\u6743\uff0c\u83b7\u5f97\u66f4\u9ad8\u7684\u4fdd\u969c\u3002</p>"},{"location":"ch01-%E5%89%8D%E8%A8%80/#113","title":"1.1.3 \u5173\u4e8e\u672f\u8bed\u7684\u8bf4\u660e","text":"<p>\u5728 FreeRTOS \u4e2d\uff0c\u6bcf\u4e2a\u6267\u884c\u7ebf\u7a0b\u88ab\u79f0\u4e3a\u201c\u4efb\u52a1\u201d\uff08task\uff09\u3002\u5d4c\u5165\u5f0f\u9886\u57df\u5bf9\u672f\u8bed\u5e76\u65e0\u7edf\u4e00\u6807\u51c6\uff0c\u4f46\u6211\u66f4\u559c\u6b22\u201c\u4efb\u52a1\u201d\u800c\u4e0d\u662f\u201c\u7ebf\u7a0b\u201d\uff0c\u56e0\u4e3a\u201c\u7ebf\u7a0b\u201d\u5728\u67d0\u4e9b\u9886\u57df\u6709\u66f4\u5177\u4f53\u7684\u542b\u4e49\u3002</p>"},{"location":"ch01-%E5%89%8D%E8%A8%80/#114-rtos","title":"1.1.4 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528 RTOS\uff1f","text":"<p>\u6709\u8bb8\u591a\u6210\u719f\u7684\u65b9\u6cd5\u53ef\u4ee5\u5728\u4e0d\u4f7f\u7528\u591a\u7ebf\u7a0b\u5185\u6838\u7684\u60c5\u51b5\u4e0b\u7f16\u5199\u4f18\u79c0\u7684\u5d4c\u5165\u5f0f\u8f6f\u4ef6\u3002\u5982\u679c\u5f00\u53d1\u7684\u7cfb\u7edf\u5f88\u7b80\u5355\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u80fd\u662f\u6700\u5408\u9002\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5bf9\u4e8e\u66f4\u590d\u6742\u7684\u7cfb\u7edf\uff0c\u4f7f\u7528\u5185\u6838\u901a\u5e38\u66f4\u6709\u4f18\u52bf\uff0c\u4f46\u4e24\u8005\u7684\u5206\u754c\u70b9\u603b\u662f\u4e3b\u89c2\u7684\u3002</p> <p>\u5982\u524d\u6240\u8ff0\uff0c\u4efb\u52a1\u4f18\u5148\u7ea7\u6709\u52a9\u4e8e\u786e\u4fdd\u5e94\u7528\u6ee1\u8db3\u5904\u7406\u65f6\u9650\uff0c\u4f46\u5185\u6838\u8fd8\u80fd\u5e26\u6765\u5176\u4ed6\u4e0d\u90a3\u4e48\u660e\u663e\u7684\u597d\u5904\uff0c\u90e8\u5206\u5982\u4e0b\uff1a</p> <ul> <li>\u5c4f\u853d\u65f6\u5e8f\u4fe1\u606f   RTOS \u8d1f\u8d23\u6267\u884c\u65f6\u5e8f\uff0c\u5e76\u4e3a\u5e94\u7528\u63d0\u4f9b\u4e0e\u65f6\u95f4\u76f8\u5173\u7684 API\uff0c\u4f7f\u5e94\u7528\u4ee3\u7801\u7ed3\u6784\u66f4\u6e05\u6670\uff0c\u6574\u4f53\u4ee3\u7801\u91cf\u66f4\u5c0f\u3002</li> <li>\u53ef\u7ef4\u62a4\u6027/\u53ef\u6269\u5c55\u6027   \u5c4f\u853d\u65f6\u5e8f\u7ec6\u8282\u51cf\u5c11\u4e86\u6a21\u5757\u95f4\u7684\u4f9d\u8d56\uff0c\u4f7f\u8f6f\u4ef6\u80fd\u591f\u4ee5\u53ef\u63a7\u3001\u53ef\u9884\u6d4b\u7684\u65b9\u5f0f\u6f14\u8fdb\u3002\u5185\u6838\u8d1f\u8d23\u65f6\u5e8f\uff0c\u56e0\u6b64\u5e94\u7528\u6027\u80fd\u5bf9\u5e95\u5c42\u786c\u4ef6\u53d8\u5316\u4e0d\u654f\u611f\u3002</li> <li>\u6a21\u5757\u5316   \u4efb\u52a1\u662f\u72ec\u7acb\u7684\u6a21\u5757\uff0c\u6bcf\u4e2a\u4efb\u52a1\u5e94\u6709\u660e\u786e\u7684\u529f\u80fd\u3002</li> <li>\u56e2\u961f\u5f00\u53d1   \u4efb\u52a1\u5e94\u6709\u660e\u786e\u7684\u63a5\u53e3\uff0c\u4fbf\u4e8e\u56e2\u961f\u534f\u4f5c\u5f00\u53d1\u3002</li> <li>\u66f4\u6613\u6d4b\u8bd5   \u7ed3\u6784\u6e05\u6670\u3001\u63a5\u53e3\u5e72\u51c0\u7684\u72ec\u7acb\u4efb\u52a1\u66f4\u6613\u4e8e\u5355\u72ec\u6d4b\u8bd5\u3002</li> <li>\u4ee3\u7801\u590d\u7528   \u6a21\u5757\u5316\u548c\u4f4e\u8026\u5408\u7684\u4ee3\u7801\u66f4\u6613\u4e8e\u590d\u7528\u3002</li> <li>\u63d0\u9ad8\u6548\u7387   \u4f7f\u7528 RTOS \u7684\u5e94\u7528\u53ef\u4ee5\u5b8c\u5168\u4e8b\u4ef6\u9a71\u52a8\uff0c\u65e0\u9700\u4e3a\u672a\u53d1\u751f\u7684\u4e8b\u4ef6\u8f6e\u8be2\u6d6a\u8d39\u5904\u7406\u65f6\u95f4\u3002   \u5f53\u7136\uff0c\u4e8b\u4ef6\u9a71\u52a8\u5e26\u6765\u7684\u6548\u7387\u63d0\u5347\u9700\u8981\u5904\u7406 RTOS \u7684\u65f6\u949f\u4e2d\u65ad\u548c\u4efb\u52a1\u5207\u6362\uff0c\u4f46\u4e0d\u4f7f\u7528 RTOS \u7684\u5e94\u7528\u901a\u5e38\u4e5f\u4f1a\u6709\u67d0\u79cd\u65f6\u949f\u4e2d\u65ad\u3002</li> <li>\u7a7a\u95f2\u65f6\u95f4   \u5f53\u6ca1\u6709\u5e94\u7528\u4efb\u52a1\u9700\u8981\u5904\u7406\u65f6\uff0c\u81ea\u52a8\u521b\u5efa\u7684\u7a7a\u95f2\u4efb\u52a1\u4f1a\u6267\u884c\u3002\u7a7a\u95f2\u4efb\u52a1\u53ef\u7528\u4e8e\u6d4b\u91cf\u5269\u4f59\u5904\u7406\u80fd\u529b\u3001\u6267\u884c\u540e\u53f0\u68c0\u67e5\u6216\u5c06\u5904\u7406\u5668\u7f6e\u4e8e\u4f4e\u529f\u8017\u6a21\u5f0f\u3002</li> <li>\u7535\u6e90\u7ba1\u7406   \u4f7f\u7528 RTOS \u63d0\u9ad8\u7684\u6548\u7387\u4f7f\u5904\u7406\u5668\u80fd\u6709\u66f4\u591a\u65f6\u95f4\u5904\u4e8e\u4f4e\u529f\u8017\u6a21\u5f0f\u3002\u6bcf\u6b21\u7a7a\u95f2\u4efb\u52a1\u8fd0\u884c\u65f6\u5c06\u5904\u7406\u5668\u7f6e\u4e8e\u4f4e\u529f\u8017\u72b6\u6001\uff0c\u53ef\u663e\u8457\u964d\u4f4e\u529f\u8017\u3002FreeRTOS \u8fd8\u652f\u6301\u7279\u6b8a\u7684\u65e0\u65f6\u949f\uff08tick-less\uff09\u6a21\u5f0f\uff0c\u4f7f\u5904\u7406\u5668\u80fd\u8fdb\u5165\u66f4\u6df1\u7684\u4f4e\u529f\u8017\u72b6\u6001\u5e76\u4fdd\u6301\u66f4\u957f\u65f6\u95f4\u3002</li> <li>\u7075\u6d3b\u7684\u4e2d\u65ad\u5904\u7406   \u53ef\u901a\u8fc7\u5c06\u5904\u7406\u5ef6\u8fdf\u5230\u5e94\u7528\u521b\u5efa\u7684\u4efb\u52a1\u6216\u81ea\u52a8\u521b\u5efa\u7684 RTOS \u5b88\u62a4\u4efb\u52a1\uff08\u5b9a\u65f6\u5668\u4efb\u52a1\uff09\u6765\u7f29\u77ed\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u3002</li> <li>\u6df7\u5408\u5904\u7406\u9700\u6c42   \u7b80\u5355\u7684\u8bbe\u8ba1\u6a21\u5f0f\u5373\u53ef\u5b9e\u73b0\u5468\u671f\u6027\u3001\u6301\u7eed\u6027\u548c\u4e8b\u4ef6\u9a71\u52a8\u7684\u5904\u7406\u3002\u901a\u8fc7\u5408\u7406\u9009\u62e9\u4efb\u52a1\u548c\u4e2d\u65ad\u4f18\u5148\u7ea7\uff0c\u8fd8\u80fd\u540c\u65f6\u6ee1\u8db3\u786c\u5b9e\u65f6\u548c\u8f6f\u5b9e\u65f6\u9700\u6c42\u3002</li> </ul>"},{"location":"ch01-%E5%89%8D%E8%A8%80/#115-freertos","title":"1.1.5 FreeRTOS \u5185\u6838\u7279\u6027","text":"<p>FreeRTOS \u5185\u6838\u5177\u5907\u4ee5\u4e0b\u6807\u51c6\u7279\u6027\uff1a</p> <ul> <li>\u62a2\u5360\u5f0f\u6216\u534f\u4f5c\u5f0f\u8fd0\u884c</li> <li>\u53ef\u9009\u65f6\u95f4\u7247\u8f6e\u8f6c</li> <li>\u975e\u5e38\u7075\u6d3b\u7684\u4efb\u52a1\u4f18\u5148\u7ea7\u5206\u914d</li> <li>\u7075\u6d3b\u3001\u5feb\u901f\u4e14\u8f7b\u91cf\u7684\u4efb\u52a1\u901a\u77e5\u673a\u5236</li> <li>\u961f\u5217</li> <li>\u4e8c\u503c\u4fe1\u53f7\u91cf</li> <li>\u8ba1\u6570\u4fe1\u53f7\u91cf</li> <li>\u4e92\u65a5\u91cf</li> <li>\u9012\u5f52\u4e92\u65a5\u91cf</li> <li>\u8f6f\u4ef6\u5b9a\u65f6\u5668</li> <li>\u4e8b\u4ef6\u7ec4</li> <li>\u6d41\u7f13\u51b2\u533a</li> <li>\u6d88\u606f\u7f13\u51b2\u533a</li> <li>\u534f\u7a0b\uff08\u5df2\u5f03\u7528\uff09</li> <li>\u65f6\u949f\u94a9\u5b50\u51fd\u6570</li> <li>\u7a7a\u95f2\u94a9\u5b50\u51fd\u6570</li> <li>\u5806\u6808\u6ea2\u51fa\u68c0\u67e5</li> <li>\u8ddf\u8e2a\u5b8f</li> <li>\u4efb\u52a1\u8fd0\u884c\u65f6\u7edf\u8ba1</li> <li>\u53ef\u9009\u5546\u4e1a\u6388\u6743\u4e0e\u652f\u6301</li> <li>\u5b8c\u6574\u7684\u4e2d\u65ad\u5d4c\u5957\u6a21\u578b\uff08\u90e8\u5206\u67b6\u6784\u652f\u6301\uff09</li> <li>\u9488\u5bf9\u6781\u4f4e\u529f\u8017\u5e94\u7528\u7684\u65e0\u65f6\u949f\u80fd\u529b\uff08\u90e8\u5206\u67b6\u6784\u652f\u6301\uff09</li> <li>\u652f\u6301\u5185\u5b58\u4fdd\u62a4\u5355\u5143\u4ee5\u9694\u79bb\u4efb\u52a1\u5e76\u63d0\u5347\u5e94\u7528\u5b89\u5168\u6027\uff08\u90e8\u5206\u67b6\u6784\u652f\u6301\uff09</li> <li>\u9002\u5f53\u65f6\u53ef\u7531\u8f6f\u4ef6\u7ba1\u7406\u7684\u4e2d\u65ad\u5806\u6808\uff08\u6709\u52a9\u4e8e\u8282\u7701 RAM\uff09</li> <li>\u652f\u6301\u9759\u6001\u6216\u52a8\u6001\u5206\u914d RTOS \u5bf9\u8c61</li> </ul>"},{"location":"ch01-%E5%89%8D%E8%A8%80/#116-freertosopenrtos-safertos","title":"1.1.6 \u8bb8\u53ef\u534f\u8bae\u53ca FreeRTOS\u3001OpenRTOS \u548c SafeRTOS \u5bb6\u65cf","text":"<p>FreeRTOS \u91c7\u7528 MIT \u5f00\u6e90\u8bb8\u53ef\u8bc1\uff0c\u65e8\u5728\u786e\u4fdd\uff1a</p> <ul> <li>FreeRTOS \u53ef\u7528\u4e8e\u5546\u4e1a\u5e94\u7528\u3002</li> <li>FreeRTOS \u672c\u8eab\u5bf9\u6240\u6709\u4eba\u514d\u8d39\u5f00\u653e\u3002</li> <li>FreeRTOS \u7528\u6237\u4fdd\u7559\u5176\u77e5\u8bc6\u4ea7\u6743\u6240\u6709\u6743\u3002</li> </ul> <p>\u6700\u65b0\u5f00\u6e90\u8bb8\u53ef\u4fe1\u606f\u89c1 https://www.FreeRTOS.org/license\u3002</p> <p>OpenRTOS \u662f\u7531\u7b2c\u4e09\u65b9\u5728 AWS \u6388\u6743\u4e0b\u63d0\u4f9b\u7684 FreeRTOS \u5546\u4e1a\u6388\u6743\u7248\u672c\u3002</p> <p>SafeRTOS \u4e0e FreeRTOS \u4f7f\u7528\u6a21\u5f0f\u76f8\u540c\uff0c\u4f46\u5176\u5f00\u53d1\u8fc7\u7a0b\u7b26\u5408\u591a\u9879\u56fd\u9645\u5b89\u5168\u6807\u51c6\u7684\u5408\u89c4\u8981\u6c42\u3002</p>"},{"location":"ch01-%E5%89%8D%E8%A8%80/#12","title":"1.2 \u9644\u5e26\u7684\u6e90\u6587\u4ef6\u548c\u5de5\u7a0b","text":""},{"location":"ch01-%E5%89%8D%E8%A8%80/#121","title":"1.2.1 \u83b7\u53d6\u672c\u4e66\u914d\u5957\u793a\u4f8b","text":"<p>\u53ef\u901a\u8fc7 https://www.FreeRTOS.org/Documentation/code \u4e0b\u8f7d\u7684 zip \u6587\u4ef6\u5305\u542b\u672c\u4e66\u793a\u4f8b\u6240\u9700\u7684\u5168\u90e8\u6e90\u4ee3\u7801\u3001\u9884\u914d\u7f6e\u5de5\u7a0b\u6587\u4ef6\u548c\u6784\u5efa\u8fd0\u884c\u8bf4\u660e\u3002\u6ce8\u610f\u8be5 zip \u6587\u4ef6\u672a\u5fc5\u5305\u542b FreeRTOS \u7684\u6700\u65b0\u7248\u672c\u3002</p> <p>\u672c\u4e66\u4e2d\u7684\u622a\u56fe\u5c55\u793a\u4e86\u5728 Microsoft Windows \u73af\u5883\u4e0b\u8fd0\u884c\u7684\u793a\u4f8b\uff0c\u4f7f\u7528\u7684\u662f FreeRTOS Windows \u79fb\u690d\u7248\u3002\u8be5\u5de5\u7a0b\u5df2\u9884\u914d\u7f6e\u4e3a\u4f7f\u7528\u514d\u8d39\u7248 Visual Studio Community \u8fdb\u884c\u6784\u5efa\uff0c\u4e0b\u8f7d\u5730\u5740\u4e3a https://www.visualstudio.com/\u3002\u9700\u8981\u6ce8\u610f\uff0cFreeRTOS Windows \u79fb\u690d\u7248\u4ec5\u7528\u4e8e\u8bc4\u4f30\u3001\u6d4b\u8bd5\u548c\u5f00\u53d1\uff0c\u5e76\u4e0d\u5177\u5907\u771f\u6b63\u7684\u5b9e\u65f6\u884c\u4e3a\u3002</p>"},{"location":"ch02-FreeRTOS%20%E5%86%85%E6%A0%B8%E5%88%86%E5%8F%91%E5%8C%85/","title":"2 FreeRTOS \u5185\u6838\u5206\u53d1\u5305","text":""},{"location":"ch02-FreeRTOS%20%E5%86%85%E6%A0%B8%E5%88%86%E5%8F%91%E5%8C%85/#21","title":"2.1 \u7b80\u4ecb","text":"<p>\u4e3a\u5e2e\u52a9\u7528\u6237\u4e86\u89e3 FreeRTOS \u5185\u6838\u7684\u6587\u4ef6\u548c\u76ee\u5f55\u7ed3\u6784\uff0c\u672c\u7ae0\u5c06\uff1a</p> <ul> <li>\u63d0\u4f9b FreeRTOS \u76ee\u5f55\u7ed3\u6784\u7684\u9876\u5c42\u89c6\u56fe\u3002</li> <li>\u8bf4\u660e\u4efb\u4f55 FreeRTOS \u5de5\u7a0b\u6240\u9700\u7684\u6e90\u6587\u4ef6\u3002</li> <li>\u4ecb\u7ecd\u6f14\u793a\u5e94\u7528\u3002</li> <li>\u63d0\u4f9b\u521b\u5efa\u65b0 FreeRTOS \u5de5\u7a0b\u7684\u4fe1\u606f\u3002</li> </ul> <p>\u672c\u7ae0\u63cf\u8ff0\u4ec5\u9488\u5bf9\u5b98\u65b9 FreeRTOS \u5206\u53d1\u5305\u3002\u672c\u4e66\u9644\u5e26\u7684\u793a\u4f8b\u91c7\u7528\u7565\u6709\u4e0d\u540c\u7684\u7ec4\u7ec7\u65b9\u5f0f\u3002</p>"},{"location":"ch02-FreeRTOS%20%E5%86%85%E6%A0%B8%E5%88%86%E5%8F%91%E5%8C%85/#22-freertos","title":"2.2 \u7406\u89e3 FreeRTOS \u5206\u53d1\u5305","text":""},{"location":"ch02-FreeRTOS%20%E5%86%85%E6%A0%B8%E5%88%86%E5%8F%91%E5%8C%85/#221-freertos","title":"2.2.1 \u5b9a\u4e49\uff1aFreeRTOS \u79fb\u690d","text":"<p>FreeRTOS \u53ef\u7528\u5927\u7ea6\u4e8c\u5341\u79cd\u4e0d\u540c\u7684\u7f16\u8bd1\u5668\u6784\u5efa\uff0c\u5e76\u53ef\u8fd0\u884c\u5728\u56db\u5341\u591a\u79cd\u5904\u7406\u5668\u67b6\u6784\u4e0a\u3002\u6bcf\u79cd\u7f16\u8bd1\u5668\u548c\u5904\u7406\u5668\u7684\u7ec4\u5408\u79f0\u4e3a\u4e00\u4e2a FreeRTOS \u79fb\u690d\uff08port\uff09\u3002</p>"},{"location":"ch02-FreeRTOS%20%E5%86%85%E6%A0%B8%E5%88%86%E5%8F%91%E5%8C%85/#222-freertos","title":"2.2.2 \u6784\u5efa FreeRTOS","text":"<p>FreeRTOS \u662f\u4e00\u4e2a\u4e3a\u539f\u672c\u5355\u7ebf\u7a0b\u88f8\u673a\u5e94\u7528\u63d0\u4f9b\u591a\u4efb\u52a1\u80fd\u529b\u7684\u5e93\u3002</p> <p>FreeRTOS \u4ee5\u4e00\u7ec4 C \u6e90\u6587\u4ef6\u7684\u5f62\u5f0f\u63d0\u4f9b\u3002\u4e00\u4e9b\u6e90\u6587\u4ef6\u9002\u7528\u4e8e\u6240\u6709\u79fb\u690d\uff0c\u53e6\u4e00\u4e9b\u5219\u7279\u5b9a\u4e8e\u67d0\u4e2a\u79fb\u690d\u3002\u5c06\u8fd9\u4e9b\u6e90\u6587\u4ef6\u4f5c\u4e3a\u5de5\u7a0b\u7684\u4e00\u90e8\u5206\u8fdb\u884c\u6784\u5efa\uff0c\u5373\u53ef\u8ba9\u5e94\u7528\u4f7f\u7528 FreeRTOS API\u3002\u6bcf\u4e2a\u5b98\u65b9 FreeRTOS \u79fb\u690d\u90fd\u914d\u6709\u4e00\u4e2a\u53ef\u7528\u4f5c\u53c2\u8003\u7684\u6f14\u793a\u5e94\u7528\u3002\u6f14\u793a\u5e94\u7528\u5df2\u9884\u914d\u7f6e\u597d\u6240\u9700\u7684\u6e90\u6587\u4ef6\u548c\u5934\u6587\u4ef6\u3002</p> <p>\u6bcf\u4e2a\u6f14\u793a\u5e94\u7528\u5728\u521b\u5efa\u65f6\u90fd\u80fd\u201c\u5f00\u7bb1\u5373\u7528\u201d\u5730\u65e0\u7f16\u8bd1\u9519\u8bef\u6216\u8b66\u544a\u3002\u82e5\u540e\u7eed\u5de5\u5177\u94fe\u53d8\u66f4\u5bfc\u81f4\u65e0\u6cd5\u7f16\u8bd1\uff0c\u8bf7\u901a\u8fc7 FreeRTOS \u652f\u6301\u8bba\u575b\uff08https://forums.FreeRTOS.org\uff09\u544a\u77e5\u6211\u4eec\u3002\u7b2c 2.3 \u8282\u4ecb\u7ecd\u4e86\u6f14\u793a\u5e94\u7528\u3002</p>"},{"location":"ch02-FreeRTOS%20%E5%86%85%E6%A0%B8%E5%88%86%E5%8F%91%E5%8C%85/#223-freertosconfigh","title":"2.2.3 FreeRTOSConfig.h","text":"<p>FreeRTOSConfig.h \u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u5e38\u91cf\u7528\u4e8e\u914d\u7f6e\u5185\u6838\u3002\u4e0d\u8981\u5728\u6e90\u6587\u4ef6\u4e2d\u76f4\u63a5\u5305\u542b FreeRTOSConfig.h\uff01\u5e94\u5305\u542b FreeRTOS.h\uff0c\u7531\u5176\u5728\u9002\u5f53\u65f6\u673a\u81ea\u52a8\u5305\u542b FreeRTOSConfig.h\u3002</p> <p>FreeRTOSConfig.h \u7528\u4e8e\u9488\u5bf9\u7279\u5b9a\u5e94\u7528\u5b9a\u5236 FreeRTOS \u5185\u6838\u3002\u4f8b\u5982\uff0cFreeRTOSConfig.h \u5305\u542b <code>configUSE_PREEMPTION</code> \u7b49\u5e38\u91cf\uff0c\u7528\u4e8e\u5b9a\u4e49 FreeRTOS \u91c7\u7528\u534f\u4f5c\u5f0f\u8fd8\u662f\u62a2\u5360\u5f0f\u8c03\u5ea6[^1]\u3002</p> <p>[^1]: \u7b2c 4.13 \u8282\u4ecb\u7ecd\u8c03\u5ea6\u7b97\u6cd5\u3002</p> <p>FreeRTOSConfig.h \u5e94\u653e\u5728\u5e94\u7528\u76ee\u5f55\u4e0b\uff0c\u800c\u4e0d\u662f FreeRTOS \u6e90\u7801\u76ee\u5f55\u4e0b\u3002</p> <p>\u4e3b\u5206\u53d1\u5305\u4e2d\u7684\u6bcf\u4e2a\u6f14\u793a\u5e94\u7528\u90fd\u6709\u81ea\u5df1\u7684 FreeRTOSConfig.h \u6587\u4ef6\u3002\u5efa\u8bae\u4ee5\u6240\u7528\u79fb\u690d\u7684\u6f14\u793a\u5e94\u7528\u4e2d\u7684 FreeRTOSConfig.h \u4e3a\u8d77\u70b9\u8fdb\u884c\u4fee\u6539\uff0c\u800c\u4e0d\u662f\u4ece\u96f6\u521b\u5efa\u3002</p> <p>FreeRTOS \u53c2\u8003\u624b\u518c\u548c https://www.freertos.org/a00110.html \u4ecb\u7ecd\u4e86 FreeRTOSConfig.h \u4e2d\u51fa\u73b0\u7684\u5e38\u91cf\u3002\u5e76\u975e\u6240\u6709\u5e38\u91cf\u90fd\u5fc5\u987b\u5305\u542b\uff0c\u8bb8\u591a\u5e38\u91cf\u7701\u7565\u65f6\u4f1a\u91c7\u7528\u9ed8\u8ba4\u503c\u3002</p>"},{"location":"ch02-FreeRTOS%20%E5%86%85%E6%A0%B8%E5%88%86%E5%8F%91%E5%8C%85/#224","title":"2.2.4 \u5b98\u65b9\u5206\u53d1\u5305","text":"<p>FreeRTOS \u5404\u4e2a\u5e93\uff08\u5305\u62ec\u5185\u6838\uff09\u53ef\u5355\u72ec\u4ece\u5404\u81ea\u7684 Github \u4ed3\u5e93\u6216 zip \u5305\u4e0b\u8f7d\u3002\u751f\u4ea7\u73af\u5883\u5efa\u8bae\u5355\u72ec\u83b7\u53d6\u5e93\uff0c\u4f46\u521d\u5b66\u5efa\u8bae\u4e0b\u8f7d\u4e3b\u5206\u53d1\u5305\uff0c\u56e0\u5176\u5305\u542b\u6240\u6709\u5e93\u548c\u793a\u4f8b\u5de5\u7a0b\u3002</p> <p>\u4e3b\u5206\u53d1\u5305\u5305\u542b\u6240\u6709 FreeRTOS \u5e93\u6e90\u7801\u3001\u5168\u90e8\u5185\u6838\u79fb\u690d\u548c\u6240\u6709\u6f14\u793a\u5e94\u7528\u7684\u5de5\u7a0b\u6587\u4ef6\u3002\u6587\u4ef6\u867d\u591a\uff0c\u4f46\u5b9e\u9645\u5e94\u7528\u53ea\u9700\u6781\u5c11\u4e00\u90e8\u5206\u3002</p> <p>\u53ef\u901a\u8fc7 https://github.com/FreeRTOS/FreeRTOS/releases/latest \u4e0b\u8f7d\u6700\u65b0\u5206\u53d1\u5305 zip \u6587\u4ef6\uff0c\u6216\u7528\u5982\u4e0b Git \u547d\u4ee4\u514b\u9686\u4e3b\u5206\u53d1\u5305\uff08\u542b\u5404\u5e93\u5b50\u6a21\u5757\uff09\uff1a</p> <pre><code>git clone https://github.com/FreeRTOS/FreeRTOS.git --recurse-submodules\ngit clone git@github.com:FreeRTOS/FreeRTOS.git --recurse-submodules\n</code></pre> <p>\u56fe 2.1 \u663e\u793a\u4e86 FreeRTOS \u5206\u53d1\u5305\u7684\u7b2c\u4e00\u5c42\u548c\u7b2c\u4e8c\u5c42\u76ee\u5f55\uff1a</p> <p></p> <pre><code>FreeRTOS\n\u2502 \u2502\n\u2502 \u251c\u2500Source  \u5305\u542b FreeRTOS \u5185\u6838\u6e90\u6587\u4ef6\n\u2502 \u2502\n\u2502 \u2514\u2500Demo    \u5305\u542b\u9884\u914d\u7f6e\u548c\u7279\u5b9a\u4e8e\u79fb\u690d\u7684 FreeRTOS \u5185\u6838\u6f14\u793a\u9879\u76ee\n\u2502\nFreeRTOS-Plus\n\u2502\n\u251c\u2500Source    \u5305\u542b\u5176\u4ed6 FreeRTOS \u548c\u751f\u6001\u7cfb\u7edf\u5e93\u7684\u6e90\u4ee3\u7801\n\u2502\n\u2514\u2500Demo      \u5305\u542b\u5176\u4ed6 FreeRTOS \u548c\u751f\u6001\u7cfb\u7edf\u5e93\u7684\u6f14\u793a\u9879\u76ee\n</code></pre> <p>Figure 2.1 Top level directories within the FreeRTOS distribution</p> <p>\u5206\u53d1\u5305\u4e2d\u4ec5\u5305\u542b\u4e00\u4efd FreeRTOS \u5185\u6838\u6e90\u6587\u4ef6\uff1b\u6240\u6709\u6f14\u793a\u9879\u76ee\u5747\u671f\u671b\u5728 FreeRTOS/Source \u76ee\u5f55\u4e2d\u627e\u5230\u5185\u6838\u6e90\u6587\u4ef6\uff0c\u82e5\u66f4\u6539\u6b64\u76ee\u5f55\u7ed3\u6784\uff0c\u53ef\u80fd\u5bfc\u81f4\u65e0\u6cd5\u7f16\u8bd1\u3002</p>"},{"location":"ch02-FreeRTOS%20%E5%86%85%E6%A0%B8%E5%88%86%E5%8F%91%E5%8C%85/#225-freertos","title":"2.2.5 \u6240\u6709\u79fb\u690d\u901a\u7528\u7684 FreeRTOS \u6e90\u6587\u4ef6","text":"<p>tasks.c \u548c list.c \u5b9e\u73b0\u4e86 FreeRTOS \u5185\u6838\u7684\u6838\u5fc3\u529f\u80fd\uff0c\u59cb\u7ec8\u5fc5\u9700\uff0c\u4f4d\u4e8e FreeRTOS/Source \u76ee\u5f55\u4e0b\uff08\u89c1\u56fe 2.2\uff09\u3002\u540c\u76ee\u5f55\u8fd8\u5305\u542b\u4ee5\u4e0b\u53ef\u9009\u6e90\u6587\u4ef6\uff1a</p> <ul> <li>queue.c</li> </ul> <p>queue.c \u63d0\u4f9b\u961f\u5217\u548c\u4fe1\u53f7\u91cf\u670d\u52a1\uff08\u672c\u4e66\u540e\u7eed\u4ecb\u7ecd\uff09\uff0c\u51e0\u4e4e\u603b\u662f\u5fc5\u9700\u3002</p> <ul> <li>timers.c</li> </ul> <p>timers.c \u63d0\u4f9b\u8f6f\u4ef6\u5b9a\u65f6\u5668\u529f\u80fd\uff0c\u4ec5\u5f53\u5e94\u7528\u4f7f\u7528\u8f6f\u4ef6\u5b9a\u65f6\u5668\u65f6\u624d\u9700\u6784\u5efa\u3002</p> <ul> <li>event_groups.c</li> </ul> <p>event_groups.c \u63d0\u4f9b\u4e8b\u4ef6\u7ec4\u529f\u80fd\uff0c\u4ec5\u5f53\u5e94\u7528\u4f7f\u7528\u4e8b\u4ef6\u7ec4\u65f6\u624d\u9700\u6784\u5efa\u3002</p> <ul> <li>stream_buffer.c</li> </ul> <p>stream_buffer.c \u63d0\u4f9b\u6d41\u7f13\u51b2\u533a\u548c\u6d88\u606f\u7f13\u51b2\u533a\u529f\u80fd\uff0c\u4ec5\u5f53\u5e94\u7528\u4f7f\u7528\u6d41\u7f13\u51b2\u533a\u6216\u6d88\u606f\u7f13\u51b2\u533a\u65f6\u624d\u9700\u6784\u5efa\u3002</p> <ul> <li>croutine.c</li> </ul> <p>croutine.c \u5b9e\u73b0 FreeRTOS \u534f\u7a0b\u529f\u80fd\uff0c\u4ec5\u5f53\u5e94\u7528\u4f7f\u7528\u534f\u7a0b\u65f6\u624d\u9700\u6784\u5efa\u3002\u534f\u7a0b\u4e3b\u8981\u7528\u4e8e\u6781\u5c0f\u578b\u5fae\u63a7\u5236\u5668\uff0c\u73b0\u5728\u5f88\u5c11\u4f7f\u7528\uff0c\u56e0\u6b64\u5df2\u4e0d\u518d\u7ef4\u62a4\uff0c\u4e0d\u5efa\u8bae\u65b0\u8bbe\u8ba1\u91c7\u7528\u3002\u672c\u4e66\u4e0d\u518d\u4ecb\u7ecd\u534f\u7a0b\u3002</p> <p></p> <pre><code>FreeRTOS\n\u2502\n\u2514\u2500Source\n    \u2502\n    \u251c\u2500tasks.c         FreeRTOS \u6e90\u6587\u4ef6 - \u59cb\u7ec8\u5fc5\u9700\n    \u251c\u2500list.c          FreeRTOS \u6e90\u6587\u4ef6 - \u59cb\u7ec8\u5fc5\u9700\n    \u251c\u2500queue.c         FreeRTOS \u6e90\u6587\u4ef6 - \u51e0\u4e4e\u603b\u662f\u5fc5\u9700\n    \u251c\u2500timers.c        FreeRTOS \u6e90\u6587\u4ef6 - \u53ef\u9009\n    \u251c\u2500event_groups.c  FreeRTOS \u6e90\u6587\u4ef6 - \u53ef\u9009\n    \u251c\u2500stream_buffer.c FreeRTOS \u6e90\u6587\u4ef6 - \u53ef\u9009\n    \u2514\u2500croutine.c      FreeRTOS \u6e90\u6587\u4ef6 - \u53ef\u9009\u4e14\u4e0d\u518d\u7ef4\u62a4\n</code></pre> <p>Figure 2.2 Core FreeRTOS source files within the FreeRTOS directory tree</p> <p>\u6211\u4eec\u8ba4\u8bc6\u5230\uff0czip \u6587\u4ef6\u5206\u53d1\u4e2d\u7684\u6587\u4ef6\u540d\u53ef\u80fd\u4f1a\u5bfc\u81f4\u547d\u540d\u7a7a\u95f4\u51b2\u7a81\uff0c\u56e0\u4e3a\u8bb8\u591a\u9879\u76ee\u53ef\u80fd\u5df2\u7ecf\u4f7f\u7528\u4e86\u76f8\u540c\u540d\u79f0\u7684\u6587\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u6839\u636e\u9700\u8981\u66f4\u6539\u6587\u4ef6\u540d\uff0c\u4f46\u5206\u53d1\u4e2d\u7684\u540d\u79f0\u4e0d\u80fd\u66f4\u6539\uff0c\u56e0\u4e3a\u8fd9\u6837\u505a\u4f1a\u7834\u574f\u4e0e\u73b0\u6709\u7528\u6237\u9879\u76ee\u4ee5\u53ca FreeRTOS \u611f\u77e5\u7684\u5f00\u53d1\u5de5\u5177\u7684\u517c\u5bb9\u6027\u3002</p>"},{"location":"ch02-FreeRTOS%20%E5%86%85%E6%A0%B8%E5%88%86%E5%8F%91%E5%8C%85/#226-freertos","title":"2.2.6 \u9488\u5bf9\u7279\u5b9a\u79fb\u690d\u7684 FreeRTOS \u6e90\u6587\u4ef6","text":"<p>FreeRTOS/Source/portable \u76ee\u5f55\u5305\u542b\u7279\u5b9a\u4e8e FreeRTOS \u79fb\u690d\u7684\u6e90\u6587\u4ef6\u3002\u8be5\u76ee\u5f55\u6309\u7f16\u8bd1\u5668\u3001\u5904\u7406\u5668\u67b6\u6784\u5206\u5c42\u7ec4\u7ec7\uff0c\u5982\u56fe 2.3 \u6240\u793a\u3002</p> <p>\u8981\u5728\u67d0\u67b6\u6784\uff08architecture\uff09\u548c\u7f16\u8bd1\u5668\uff08compiler\uff09\u4e0a\u8fd0\u884c FreeRTOS\uff0c\u9664\u6838\u5fc3\u6e90\u6587\u4ef6\u5916\uff0c\u8fd8\u9700\u6784\u5efa FreeRTOS/Source/portable/[compiler]/[architecture] \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u3002</p> <p>\u5982\u7b2c 3 \u7ae0\u201c\u5806\u5185\u5b58\u7ba1\u7406\u201d\u6240\u8ff0\uff0cFreeRTOS \u4e5f\u5c06\u5806\u5185\u5b58\u5206\u914d\u89c6\u4e3a\u53ef\u79fb\u690d\u5c42\u7684\u4e00\u90e8\u5206\u3002\u5982\u679c <code>configSUPPORT_DYNAMIC_ALLOCATION</code> \u8bbe\u4e3a 0\uff0c\u5219\u65e0\u9700\u5728\u5de5\u7a0b\u4e2d\u5305\u542b\u5806\u5185\u5b58\u5206\u914d\u65b9\u6848\u3002</p> <p>FreeRTOS \u5728 FreeRTOS/Source/portable/MemMang \u76ee\u5f55\u4e0b\u63d0\u4f9b\u4e86\u793a\u4f8b\u5806\u5206\u914d\u65b9\u6848\u3002\u5982\u679c\u914d\u7f6e\u4e3a\u4f7f\u7528\u52a8\u6001\u5185\u5b58\u5206\u914d\uff0c\u9700\u5728\u5de5\u7a0b\u4e2d\u5305\u542b\u8be5\u76ee\u5f55\u4e0b\u7684\u4e00\u4e2a\u5806\u5b9e\u73b0\u6e90\u6587\u4ef6\uff0c\u6216\u81ea\u884c\u5b9e\u73b0\u3002</p> <p>\u6ce8\u610f\uff1a\u5de5\u7a0b\u4e2d\u53ea\u80fd\u5305\u542b\u4e00\u4e2a\u793a\u4f8b\u5806\u5206\u914d\u5b9e\u73b0\u3002</p> <p></p> <pre><code>FreeRTOS\n\u2502\n\u2514\u2500Source\n    \u2502\n    \u2514\u2500portable  \u5305\u542b\u6240\u6709\u7279\u5b9a\u4e8e\u79fb\u690d\u7684\u6e90\u6587\u4ef6\u7684\u76ee\u5f55\n        \u2502\n        \u251c\u2500MemMang  \u5305\u542b\u66ff\u4ee3\u5806\u5206\u914d\u6e90\u6587\u4ef6\u7684\u76ee\u5f55\n        \u2502\n        \u251c\u2500[compiler 1]  \u5305\u542b\u7279\u5b9a\u4e8e\u7f16\u8bd1\u5668 1 \u7684\u79fb\u690d\u6587\u4ef6\u7684\u76ee\u5f55\n        \u2502   \u2502\n        \u2502   \u251c\u2500[architecture 1]  \u5305\u542b\u7f16\u8bd1\u5668 1 \u67b6\u6784 1 \u79fb\u690d\u7684\u6587\u4ef6\n        \u2502   \u251c\u2500[architecture 2]  \u5305\u542b\u7f16\u8bd1\u5668 1 \u67b6\u6784 2 \u79fb\u690d\u7684\u6587\u4ef6\n        \u2502   \u2514\u2500[architecture 3]  \u5305\u542b\u7f16\u8bd1\u5668 1 \u67b6\u6784 3 \u79fb\u690d\u7684\u6587\u4ef6\n        \u2502\n        \u2514\u2500[compiler 2]  \u5305\u542b\u7279\u5b9a\u4e8e\u7f16\u8bd1\u5668 2 \u7684\u79fb\u690d\u6587\u4ef6\u7684\u76ee\u5f55\n            \u2502\n            \u251c\u2500[architecture 1]  \u5305\u542b\u7f16\u8bd1\u5668 2 \u67b6\u6784 1 \u79fb\u690d\u7684\u6587\u4ef6\n            \u251c\u2500[architecture 2]  \u5305\u542b\u7f16\u8bd1\u5668 2 \u67b6\u6784 2 \u79fb\u690d\u7684\u6587\u4ef6\n            \u2514\u2500[etc.]\n</code></pre> <p>Figure 2.3 Port specific source files within the FreeRTOS directory tree</p>"},{"location":"ch02-FreeRTOS%20%E5%86%85%E6%A0%B8%E5%88%86%E5%8F%91%E5%8C%85/#227","title":"2.2.7 \u5934\u6587\u4ef6\u5305\u542b\u8def\u5f84","text":"<p>FreeRTOS \u9700\u8981\u5728\u7f16\u8bd1\u5668\u7684\u5305\u542b\u8def\u5f84\u4e2d\u6dfb\u52a0\u4e09\u4e2a\u76ee\u5f55\uff1a</p> <ol> <li>FreeRTOS \u5185\u6838\u5934\u6587\u4ef6\u8def\u5f84\uff1aFreeRTOS/Source/include</li> <li>\u6240\u7528\u79fb\u690d\u7684\u7279\u5b9a\u6e90\u6587\u4ef6\u8def\u5f84\uff1aFreeRTOS/Source/portable/[compiler]/[architecture]</li> <li>\u6b63\u786e\u7684 FreeRTOSConfig.h \u5934\u6587\u4ef6\u6240\u5728\u8def\u5f84</li> </ol>"},{"location":"ch02-FreeRTOS%20%E5%86%85%E6%A0%B8%E5%88%86%E5%8F%91%E5%8C%85/#228","title":"2.2.8 \u5934\u6587\u4ef6","text":"<p>\u4f7f\u7528 FreeRTOS API \u7684\u6e90\u6587\u4ef6\u5fc5\u987b\u5148\u5305\u542b FreeRTOS.h\uff0c\u518d\u5305\u542b\u5bf9\u5e94 API \u7684\u5934\u6587\u4ef6\uff0c\u5982 task.h\u3001queue.h\u3001semphr.h\u3001timers.h\u3001event_groups.h\u3001stream_buffer.h\u3001message_buffer.h \u6216 croutine.h\u3002\u4e0d\u8981\u663e\u5f0f\u5305\u542b\u5176\u4ed6 FreeRTOS \u5934\u6587\u4ef6\u2014\u2014FreeRTOS.h \u4f1a\u81ea\u52a8\u5305\u542b FreeRTOSConfig.h\u3002</p>"},{"location":"ch02-FreeRTOS%20%E5%86%85%E6%A0%B8%E5%88%86%E5%8F%91%E5%8C%85/#23","title":"2.3 \u6f14\u793a\u5e94\u7528","text":"<p>\u6bcf\u4e2a FreeRTOS \u79fb\u690d\u90fd\u81f3\u5c11\u914d\u6709\u4e00\u4e2a\u6f14\u793a\u5e94\u7528\uff0c\u5728\u521b\u5efa\u65f6\u53ef\u201c\u5f00\u7bb1\u5373\u7528\u201d\u65e0\u7f16\u8bd1\u9519\u8bef\u6216\u8b66\u544a\u3002\u82e5\u540e\u7eed\u5de5\u5177\u94fe\u53d8\u66f4\u5bfc\u81f4\u65e0\u6cd5\u7f16\u8bd1\uff0c\u8bf7\u901a\u8fc7 FreeRTOS \u652f\u6301\u8bba\u575b\uff08https://forums.FreeRTOS.org\uff09\u544a\u77e5\u6211\u4eec\u3002</p> <p>\u8de8\u5e73\u53f0\u652f\u6301\uff1aFreeRTOS \u5728 Windows\u3001Linux \u548c MacOS \u53ca\u591a\u79cd\u5de5\u5177\u94fe\uff08\u5d4c\u5165\u5f0f\u548c\u4f20\u7edf\uff09\u4e0b\u5f00\u53d1\u548c\u6d4b\u8bd5\u3002\u4f46\u7531\u4e8e\u7248\u672c\u5dee\u5f02\u6216\u9057\u6f0f\u6d4b\u8bd5\uff0c\u5076\u5c14\u4f1a\u51fa\u73b0\u6784\u5efa\u9519\u8bef\u3002\u8bf7\u901a\u8fc7 FreeRTOS \u652f\u6301\u8bba\u575b\u53cd\u9988\u3002</p> <p>\u6f14\u793a\u5e94\u7528\u7684\u4e3b\u8981\u76ee\u7684\uff1a</p> <ul> <li>\u63d0\u4f9b\u5305\u542b\u6b63\u786e\u6587\u4ef6\u548c\u7f16\u8bd1\u9009\u9879\u7684\u5de5\u4f5c\u793a\u4f8b\u5de5\u7a0b\u3002</li> <li>\u4fbf\u4e8e\u201c\u5f00\u7bb1\u5373\u7528\u201d\u5b9e\u9a8c\uff0c\u65e0\u9700\u590d\u6742\u914d\u7f6e\u6216\u5148\u9a8c\u77e5\u8bc6\u3002</li> <li>\u6f14\u793a FreeRTOS API \u7684\u7528\u6cd5\u3002</li> <li>\u53ef\u4f5c\u4e3a\u5b9e\u9645\u5e94\u7528\u7684\u57fa\u7840\u3002</li> <li>\u7528\u4e8e\u538b\u529b\u6d4b\u8bd5\u5185\u6838\u5b9e\u73b0\u3002</li> </ul> <p>\u6bcf\u4e2a\u6f14\u793a\u5de5\u7a0b\u4f4d\u4e8e FreeRTOS/Demo \u76ee\u5f55\u4e0b\u552f\u4e00\u7684\u5b50\u76ee\u5f55\u4e2d\uff0c\u5b50\u76ee\u5f55\u540d\u8868\u660e\u5176\u5bf9\u5e94\u7684\u79fb\u690d\u3002</p> <p>FreeRTOS.org \u7f51\u7ad9\u4e3a\u6bcf\u4e2a\u6f14\u793a\u5e94\u7528\u63d0\u4f9b\u9875\u9762\uff0c\u5185\u5bb9\u5305\u62ec\uff1a - \u5982\u4f55\u5728 FreeRTOS \u76ee\u5f55\u7ed3\u6784\u4e2d\u5b9a\u4f4d\u5de5\u7a0b\u6587\u4ef6 - \u5de5\u7a0b\u914d\u7f6e\u4f7f\u7528\u7684\u786c\u4ef6\u6216\u4eff\u771f\u5668 - \u5982\u4f55\u642d\u5efa\u786c\u4ef6\u8fd0\u884c\u6f14\u793a - \u5982\u4f55\u6784\u5efa\u6f14\u793a - \u9884\u671f\u884c\u4e3a</p> <p>\u6240\u6709\u6f14\u793a\u5de5\u7a0b\u90fd\u4f1a\u521b\u5efa\u4e00\u90e8\u5206\u201c\u901a\u7528\u6f14\u793a\u4efb\u52a1\u201d\uff0c\u5176\u5b9e\u73b0\u4f4d\u4e8e FreeRTOS/Demo/Common/Minimal \u76ee\u5f55\u3002\u901a\u7528\u6f14\u793a\u4efb\u52a1\u7528\u4e8e\u6f14\u793a API \u7528\u6cd5\u548c\u6d4b\u8bd5\u5185\u6838\u79fb\u690d\uff0c\u4e0d\u5177\u5907\u5b9e\u9645\u529f\u80fd\u3002</p> <p>\u8bb8\u591a\u6f14\u793a\u5de5\u7a0b\u8fd8\u53ef\u914d\u7f6e\u4e3a\u521b\u5efa\u7b80\u5355\u7684\u201cblinky\u201d\u5165\u95e8\u9879\u76ee\uff0c\u901a\u5e38\u5305\u542b\u4e24\u4e2a RTOS \u4efb\u52a1\u548c\u4e00\u4e2a\u961f\u5217\u3002</p> <p>\u6bcf\u4e2a\u6f14\u793a\u5de5\u7a0b\u90fd\u5305\u542b main.c \u6587\u4ef6\uff0c\u5185\u542b main() \u51fd\u6570\uff0c\u7528\u4e8e\u521b\u5efa\u6f14\u793a\u4efb\u52a1\u5e76\u542f\u52a8\u5185\u6838\u3002\u5177\u4f53\u4fe1\u606f\u89c1\u5404 main.c \u6587\u4ef6\u6ce8\u91ca\u3002</p> <p></p> <pre><code>FreeRTOS\n    \u2502\n    \u2514\u2500Demo          \u5305\u542b\u6240\u6709\u6f14\u793a\u9879\u76ee\u7684\u76ee\u5f55\n        \u2502\n        \u251c\u2500[Demo x]  \u5305\u542b\u6784\u5efa\u6f14\u793a 'x' \u7684\u9879\u76ee\u6587\u4ef6\n        \u251c\u2500[Demo y]  \u5305\u542b\u6784\u5efa\u6f14\u793a 'y' \u7684\u9879\u76ee\u6587\u4ef6\n        \u251c\u2500[Demo z]  \u5305\u542b\u6784\u5efa\u6f14\u793a 'z' \u7684\u9879\u76ee\u6587\u4ef6\n        \u2514\u2500Common    \u5305\u542b\u6240\u6709\u6f14\u793a\u5e94\u7528\u5171\u7528\u7684\u6587\u4ef6\n</code></pre> <p>Figure 2.4 The demo directory hierarchy</p>"},{"location":"ch02-FreeRTOS%20%E5%86%85%E6%A0%B8%E5%88%86%E5%8F%91%E5%8C%85/#24-freertos","title":"2.4 \u521b\u5efa FreeRTOS \u5de5\u7a0b","text":""},{"location":"ch02-FreeRTOS%20%E5%86%85%E6%A0%B8%E5%88%86%E5%8F%91%E5%8C%85/#241","title":"2.4.1 \u9002\u914d\u63d0\u4f9b\u7684\u6f14\u793a\u5de5\u7a0b","text":"<p>\u6bcf\u4e2a FreeRTOS \u79fb\u690d\u90fd\u81f3\u5c11\u914d\u6709\u4e00\u4e2a\u9884\u914d\u7f6e\u7684\u6f14\u793a\u5e94\u7528\u3002\u5efa\u8bae\u901a\u8fc7\u9002\u914d\u8fd9\u4e9b\u73b0\u6709\u5de5\u7a0b\u6765\u521b\u5efa\u65b0\u9879\u76ee\uff0c\u4ee5\u786e\u4fdd\u5305\u542b\u6b63\u786e\u7684\u6587\u4ef6\u3001\u5b89\u88c5\u6b63\u786e\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u5e76\u8bbe\u7f6e\u6b63\u786e\u7684\u7f16\u8bd1\u9009\u9879\u3002</p> <p>\u65b0\u5efa\u5e94\u7528\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li>\u6253\u5f00\u63d0\u4f9b\u7684\u6f14\u793a\u5de5\u7a0b\uff0c\u786e\u4fdd\u5176\u80fd\u6b63\u5e38\u6784\u5efa\u548c\u8fd0\u884c\u3002</li> <li>\u5220\u9664\u5b9e\u73b0\u6f14\u793a\u4efb\u52a1\u7684\u6e90\u6587\u4ef6\uff08\u4f4d\u4e8e Demo/Common \u76ee\u5f55\uff09\u3002</li> <li>\u5220\u9664 main() \u4e2d\u9664 <code>prvSetupHardware()</code> \u548c <code>vTaskStartScheduler()</code> \u5916\u7684\u6240\u6709\u51fd\u6570\u8c03\u7528\uff0c\u53c2\u8003\u4ee3\u7801\u89c1\u4e0b\u3002</li> <li>\u786e\u8ba4\u5de5\u7a0b\u4ecd\u80fd\u6b63\u5e38\u6784\u5efa\u3002</li> </ol> <p>\u8fd9\u6837\u5373\u53ef\u5f97\u5230\u4e00\u4e2a\u5305\u542b\u6b63\u786e FreeRTOS \u6e90\u6587\u4ef6\u4f46\u65e0\u5177\u4f53\u529f\u80fd\u7684\u5de5\u7a0b\u3002</p> <pre><code>int main( void )\n{\n    /* \u6267\u884c\u5fc5\u8981\u7684\u786c\u4ef6\u521d\u59cb\u5316\u3002 */\n    prvSetupHardware();\n\n    /* --- \u53ef\u5728\u6b64\u521b\u5efa\u5e94\u7528\u4efb\u52a1 --- */\n\n    /* \u542f\u52a8\u5df2\u521b\u5efa\u7684\u4efb\u52a1\u3002 */\n    vTaskStartScheduler();\n\n    /* \u4ec5\u5f53\u5806\u7a7a\u95f4\u4e0d\u8db3\u65e0\u6cd5\u542f\u52a8\u8c03\u5ea6\u5668\u65f6\u624d\u4f1a\u6267\u884c\u5230\u6b64\u3002 */\n    for( ;; );\n    return 0;\n}\n</code></pre> <p>\u4ee3\u7801\u6e05\u5355 2.1 \u65b0 main() \u51fd\u6570\u6a21\u677f</p>"},{"location":"ch02-FreeRTOS%20%E5%86%85%E6%A0%B8%E5%88%86%E5%8F%91%E5%8C%85/#242","title":"2.4.2 \u4ece\u96f6\u521b\u5efa\u65b0\u5de5\u7a0b","text":"<p>\u5982\u524d\u6240\u8ff0\uff0c\u5efa\u8bae\u57fa\u4e8e\u73b0\u6709\u6f14\u793a\u5de5\u7a0b\u521b\u5efa\u65b0\u9879\u76ee\u3002\u5982\u679c\u786e\u9700\u4ece\u96f6\u5f00\u59cb\uff0c\u53ef\u6309\u5982\u4e0b\u6d41\u7a0b\uff1a</p> <ol> <li>\u7528\u6240\u9009\u5de5\u5177\u94fe\u65b0\u5efa\u4e00\u4e2a\u5c1a\u672a\u5305\u542b\u4efb\u4f55 FreeRTOS \u6e90\u6587\u4ef6\u7684\u5de5\u7a0b\u3002</li> <li>\u786e\u4fdd\u65b0\u5de5\u7a0b\u80fd\u6b63\u5e38\u6784\u5efa\u3001\u4e0b\u8f7d\u5230\u76ee\u6807\u786c\u4ef6\u5e76\u8fd0\u884c\u3002</li> <li>\u786e\u8ba4\u5df2\u6709\u53ef\u7528\u5de5\u7a0b\u540e\uff0c\u518d\u6dfb\u52a0\u8868 1 \u6240\u5217\u7684 FreeRTOS \u6e90\u6587\u4ef6\u3002</li> <li>\u590d\u5236\u6240\u7528\u79fb\u690d\u6f14\u793a\u5de5\u7a0b\u4e2d\u7684 <code>FreeRTOSConfig.h</code> \u6587\u4ef6\u5230\u65b0\u5de5\u7a0b\u76ee\u5f55\u3002</li> <li>\u5c06\u4ee5\u4e0b\u76ee\u5f55\u6dfb\u52a0\u5230\u5934\u6587\u4ef6\u641c\u7d22\u8def\u5f84\uff1a</li> <li>FreeRTOS/Source/include</li> <li>FreeRTOS/Source/portable/[compiler]/[architecture]</li> <li><code>FreeRTOSConfig.h</code> \u6240\u5728\u76ee\u5f55</li> <li>\u590d\u5236\u76f8\u5173\u6f14\u793a\u5de5\u7a0b\u7684\u7f16\u8bd1\u5668\u8bbe\u7f6e\u3002</li> <li>\u5b89\u88c5\u6240\u9700\u7684 FreeRTOS \u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u3002\u53ef\u53c2\u8003\u6240\u7528\u79fb\u690d\u548c\u6f14\u793a\u5de5\u7a0b\u7684\u7f51\u9875\u8bf4\u660e\u3002</li> </ol> \u6587\u4ef6 \u4f4d\u7f6e tasks.c FreeRTOS/Source queue.c FreeRTOS/Source list.c FreeRTOS/Source timers.c FreeRTOS/Source event_groups.c FreeRTOS/Source stream_buffer.c FreeRTOS/Source \u6240\u6709 C/\u6c47\u7f16\u6587\u4ef6 FreeRTOS/Source/portable/[compiler]/[architecture] heap_n.c FreeRTOS/Source/portable/MemMang\uff0cn\u4e3a1~5\u4e4b\u4e00 <p>\u8868 1 \u5de5\u7a0b\u9700\u5305\u542b\u7684 FreeRTOS \u6e90\u6587\u4ef6</p> <p>\u5173\u4e8e\u5806\u5185\u5b58\u7684\u8bf4\u660e\uff1a \u5982\u679c <code>configSUPPORT_DYNAMIC_ALLOCATION</code> \u4e3a 0\uff0c\u5219\u65e0\u9700\u5305\u542b\u5806\u5185\u5b58\u5206\u914d\u65b9\u6848\u3002\u5426\u5219\u9700\u5305\u542b\u4e00\u4e2a\u5806\u5206\u914d\u5b9e\u73b0\uff08heap_n.c \u6216\u81ea\u5b9a\u4e49\uff09\u3002\u8be6\u89c1\u7b2c 3 \u7ae0\u3002</p>"},{"location":"ch02-FreeRTOS%20%E5%86%85%E6%A0%B8%E5%88%86%E5%8F%91%E5%8C%85/#25","title":"2.5 \u6570\u636e\u7c7b\u578b\u548c\u7f16\u7801\u98ce\u683c\u6307\u5357","text":""},{"location":"ch02-FreeRTOS%20%E5%86%85%E6%A0%B8%E5%88%86%E5%8F%91%E5%8C%85/#251","title":"2.5.1 \u6570\u636e\u7c7b\u578b","text":"<p>\u6bcf\u4e2a FreeRTOS \u79fb\u690d\u90fd\u6709\u72ec\u7279\u7684 portmacro.h \u5934\u6587\u4ef6\uff0c\u5b9a\u4e49\u4e86\u4e24\u4e2a\u4e0e\u79fb\u690d\u76f8\u5173\u7684\u6570\u636e\u7c7b\u578b\uff1a<code>TickType_t</code> \u548c <code>BaseType_t</code>\u3002\u8bf4\u660e\u5982\u4e0b\uff1a</p> <ul> <li><code>TickType_t</code></li> </ul> <p>FreeRTOS \u914d\u7f6e\u4e86\u4e00\u4e2a\u5468\u671f\u6027\u4e2d\u65ad\uff0c\u79f0\u4e3a tick \u4e2d\u65ad\u3002</p> <p>\u81ea\u5e94\u7528\u542f\u52a8\u4ee5\u6765\u53d1\u751f\u7684 tick \u4e2d\u65ad\u6b21\u6570\u79f0\u4e3a tick \u8ba1\u6570\uff0c\u7528\u4e8e\u8861\u91cf\u65f6\u95f4\u3002</p> <p>\u4e24\u6b21 tick \u4e2d\u65ad\u4e4b\u95f4\u7684\u65f6\u95f4\u79f0\u4e3a tick \u5468\u671f\u3002\u65f6\u95f4\u4ee5 tick \u5468\u671f\u7684\u500d\u6570\u6307\u5b9a\u3002</p> <p><code>TickType_t</code> \u7528\u4e8e\u4fdd\u5b58 tick \u8ba1\u6570\u503c\u548c\u6307\u5b9a\u65f6\u95f4\u3002</p> <p><code>TickType_t</code> \u53ef\u4e3a\u65e0\u7b26\u53f7 16/32/64 \u4f4d\u7c7b\u578b\uff0c\u53d6\u51b3\u4e8e FreeRTOSConfig.h \u4e2d <code>configTICK_TYPE_WIDTH_IN_BITS</code> \u7684\u8bbe\u7f6e\u3002\u8be5\u8bbe\u7f6e\u4e0e\u67b6\u6784\u76f8\u5173\uff0cFreeRTOS \u79fb\u690d\u4f1a\u68c0\u67e5\u5176\u6709\u6548\u6027\u3002</p> <p>8/16 \u4f4d\u67b6\u6784\u7528 16 \u4f4d\u7c7b\u578b\u53ef\u63d0\u5347\u6548\u7387\uff0c\u4f46\u4f1a\u4e25\u91cd\u9650\u5236\u6700\u5927\u53ef\u6307\u5b9a\u7684\u963b\u585e\u65f6\u95f4\u300232/64 \u4f4d\u67b6\u6784\u65e0\u987b\u7528 16 \u4f4d\u7c7b\u578b\u3002</p> <p>\u4ee5\u5f80\u7684 <code>configUSE_16_BIT_TICKS</code> \u5df2\u88ab <code>configTICK_TYPE_WIDTH_IN_BITS</code> \u66ff\u4ee3\u3002\u65b0\u8bbe\u8ba1\u5e94\u4f7f\u7528\u540e\u8005\u3002</p> configTICK_TYPE_WIDTH_IN_BITS 8\u4f4d\u67b6\u6784 16\u4f4d\u67b6\u6784 32\u4f4d\u67b6\u6784 64\u4f4d\u67b6\u6784 TICK_TYPE_WIDTH_16_BITS uint16_t uint16_t uint16_t N/A TICK_TYPE_WIDTH_32_BITS uint32_t uint32_t uint32_t N/A TICK_TYPE_WIDTH_64_BITS N/A N/A uint64_t uint64_t <p>\u8868 2 TickType_t \u6570\u636e\u7c7b\u578b\u4e0e configTICK_TYPE_WIDTH_IN_BITS \u914d\u7f6e</p> <ul> <li><code>BaseType_t</code></li> </ul> <p>\u59cb\u7ec8\u5b9a\u4e49\u4e3a\u8be5\u67b6\u6784\u6700\u9ad8\u6548\u7684\u6570\u636e\u7c7b\u578b\u300264 \u4f4d\u67b6\u6784\u7528 64 \u4f4d\u7c7b\u578b\uff0c32 \u4f4d\u67b6\u6784\u7528 32 \u4f4d\u7c7b\u578b\uff0c16 \u4f4d\u67b6\u6784\u7528 16 \u4f4d\u7c7b\u578b\uff0c8 \u4f4d\u67b6\u6784\u7528 8 \u4f4d\u7c7b\u578b\u3002</p> <p><code>BaseType_t</code> \u901a\u5e38\u7528\u4e8e\u53ea\u53d6\u6709\u9650\u503c\u7684\u8fd4\u56de\u7c7b\u578b\uff0c\u4ee5\u53ca <code>pdTRUE</code>/<code>pdFALSE</code> \u7c7b\u578b\u7684\u5e03\u5c14\u503c\u3002</p>"},{"location":"ch02-FreeRTOS%20%E5%86%85%E6%A0%B8%E5%88%86%E5%8F%91%E5%8C%85/#252","title":"2.5.2 \u53d8\u91cf\u547d\u540d","text":"<p>\u53d8\u91cf\u540d\u524d\u7f00\u8868\u793a\u7c7b\u578b\uff1a<code>c</code> \u8868\u793a char\uff0c<code>s</code> \u8868\u793a int16_t\uff08short\uff09\uff0c<code>l</code> \u8868\u793a int32_t\uff08long\uff09\uff0c<code>x</code> \u8868\u793a BaseType_t \u53ca\u5176\u4ed6\u975e\u6807\u51c6\u7c7b\u578b\uff08\u7ed3\u6784\u4f53\u3001\u4efb\u52a1\u53e5\u67c4\u3001\u961f\u5217\u53e5\u67c4\u7b49\uff09\u3002</p> <p>\u65e0\u7b26\u53f7\u53d8\u91cf\u52a0\u524d\u7f00 <code>u</code>\uff0c\u6307\u9488\u53d8\u91cf\u52a0\u524d\u7f00 <code>p</code>\u3002\u5982 uint8_t \u7c7b\u578b\u53d8\u91cf\u524d\u7f00\u4e3a <code>uc</code>\uff0cchar* \u7c7b\u578b\u53d8\u91cf\u524d\u7f00\u4e3a <code>pc</code>\u3002</p>"},{"location":"ch02-FreeRTOS%20%E5%86%85%E6%A0%B8%E5%88%86%E5%8F%91%E5%8C%85/#253","title":"2.5.3 \u51fd\u6570\u547d\u540d","text":"<p>\u51fd\u6570\u540d\u524d\u7f00\u5305\u542b\u8fd4\u56de\u7c7b\u578b\u548c\u5b9a\u4e49\u6240\u5728\u6587\u4ef6\u3002\u4f8b\u5982\uff1a - vTaskPrioritySet() \u8fd4\u56de void\uff0c\u5b9a\u4e49\u4e8e tasks.c\u3002 - xQueueReceive() \u8fd4\u56de BaseType_t\uff0c\u5b9a\u4e49\u4e8e queue.c\u3002 - pvTimerGetTimerID() \u8fd4\u56de void*\uff0c\u5b9a\u4e49\u4e8e timers.c\u3002</p> <p>\u6587\u4ef6\u4f5c\u7528\u57df\uff08\u79c1\u6709\uff09\u51fd\u6570\u524d\u7f00\u4e3a <code>prv</code>\u3002</p>"},{"location":"ch02-FreeRTOS%20%E5%86%85%E6%A0%B8%E5%88%86%E5%8F%91%E5%8C%85/#254","title":"2.5.4 \u683c\u5f0f\u5316","text":"<p>\u90e8\u5206\u6f14\u793a\u5e94\u7528\u4f7f\u7528\u5236\u8868\u7b26\uff08tab\uff09\uff0c\u6bcf\u4e2a tab \u7b49\u4e8e\u56db\u4e2a\u7a7a\u683c\u3002\u5185\u6838\u6e90\u7801\u73b0\u5df2\u4e0d\u518d\u4f7f\u7528 tab\u3002</p>"},{"location":"ch02-FreeRTOS%20%E5%86%85%E6%A0%B8%E5%88%86%E5%8F%91%E5%8C%85/#255","title":"2.5.5 \u5b8f\u547d\u540d","text":"<p>\u5927\u591a\u6570\u5b8f\u7528\u5927\u5199\u5b57\u6bcd\uff0c\u524d\u7f00\u8868\u793a\u5b9a\u4e49\u4f4d\u7f6e\u3002\u89c1\u4e0b\u8868\uff1a</p> \u524d\u7f00 \u5b8f\u5b9a\u4e49\u4f4d\u7f6e port\uff08\u5982 portMAX_DELAY\uff09 portable.h \u6216 portmacro.h task\uff08\u5982 taskENTER_CRITICAL()\uff09 task.h pd\uff08\u5982 pdTRUE\uff09 projdefs.h config\uff08\u5982 configUSE_PREEMPTION\uff09 FreeRTOSConfig.h err\uff08\u5982 errQUEUE_FULL\uff09 projdefs.h <p>\u8868 3 \u5b8f\u540d\u524d\u7f00</p> <p>\u6ce8\u610f\uff0c\u4fe1\u53f7\u91cf API \u4e3b\u8981\u7528\u5b8f\u5b9e\u73b0\uff0c\u4f46\u547d\u540d\u98ce\u683c\u4e0e\u51fd\u6570\u4e00\u81f4\u3002</p> <p>\u4e0b\u8868\u4e3a FreeRTOS \u6e90\u7801\u5e38\u7528\u5b8f\uff1a</p> \u5b8f \u503c pdTRUE 1 pdFALSE 0 pdPASS 1 pdFAIL 0 <p>\u8868 4 \u5e38\u7528\u5b8f\u5b9a\u4e49</p>"},{"location":"ch02-FreeRTOS%20%E5%86%85%E6%A0%B8%E5%88%86%E5%8F%91%E5%8C%85/#256","title":"2.5.6 \u5173\u4e8e\u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u7684\u8bf4\u660e","text":"<p>FreeRTOS \u6e90\u7801\u9700\u517c\u5bb9\u591a\u79cd\u7f16\u8bd1\u5668\uff0c\u4e0d\u540c\u7f16\u8bd1\u5668\u5bf9\u7c7b\u578b\u8f6c\u6362\u7684\u8b66\u544a\u5904\u7406\u65b9\u5f0f\u4e0d\u540c\u3002\u56e0\u6b64\u6e90\u7801\u4e2d\u7c7b\u578b\u8f6c\u6362\u8f83\u591a\u3002</p>"},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/","title":"3 \u5806\u5185\u5b58\u7ba1\u7406","text":""},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#31","title":"3.1 \u7b80\u4ecb","text":""},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#311","title":"3.1.1 \u524d\u63d0\u6761\u4ef6","text":"<p>\u6210\u4e3a\u4e00\u540d\u719f\u7ec3\u7684 C \u7a0b\u5e8f\u5458\u662f\u4f7f\u7528 FreeRTOS \u7684\u524d\u63d0\u6761\u4ef6\uff0c\u56e0\u6b64\u672c\u7ae0\u5047\u8bbe\u8bfb\u8005\u719f\u6089\u4ee5\u4e0b\u6982\u5ff5\uff1a</p> <ul> <li>\u6784\u5efa C \u9879\u76ee\u7684\u4e0d\u540c\u7f16\u8bd1\u548c\u94fe\u63a5\u9636\u6bb5\u3002</li> <li>\u5806\u6808\u548c\u5806\u7684\u6982\u5ff5\u3002</li> <li>\u6807\u51c6 C \u5e93\u7684 <code>malloc()</code> \u548c <code>free()</code> \u51fd\u6570\u3002</li> </ul>"},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#312","title":"3.1.2 \u8303\u56f4","text":"<p>\u672c\u7ae0\u6db5\u76d6\uff1a</p> <ul> <li>FreeRTOS \u4f55\u65f6\u5206\u914d RAM\u3002</li> <li>FreeRTOS \u63d0\u4f9b\u7684\u4e94\u79cd\u793a\u4f8b\u5185\u5b58\u5206\u914d\u65b9\u6848\u3002</li> <li>\u5982\u4f55\u9009\u62e9\u5185\u5b58\u5206\u914d\u65b9\u6848\u3002</li> </ul>"},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#313","title":"3.1.3 \u5728\u9759\u6001\u548c\u52a8\u6001\u5185\u5b58\u5206\u914d\u4e4b\u95f4\u5207\u6362","text":"<p>\u4ee5\u4e0b\u7ae0\u8282\u5c06\u4ecb\u7ecd\u5185\u6838\u5bf9\u8c61\uff0c\u4f8b\u5982\u4efb\u52a1\u3001\u961f\u5217\u3001\u4fe1\u53f7\u91cf\u548c\u4e8b\u4ef6\u7ec4\u3002\u7528\u4e8e\u4fdd\u5b58\u8fd9\u4e9b\u5bf9\u8c61\u7684 RAM \u53ef\u4ee5\u5728\u7f16\u8bd1\u65f6\u9759\u6001\u5206\u914d\uff0c\u4e5f\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u5206\u914d\u3002\u52a8\u6001\u5206\u914d\u51cf\u5c11\u4e86\u8bbe\u8ba1\u548c\u89c4\u5212\u5de5\u4f5c\u91cf\uff0c\u7b80\u5316\u4e86 API\uff0c\u5e76\u6700\u5c0f\u5316\u4e86 RAM \u5360\u7528\u3002\u9759\u6001\u5206\u914d\u66f4\u5177\u786e\u5b9a\u6027\uff0c\u6d88\u9664\u4e86\u5904\u7406\u5185\u5b58\u5206\u914d\u5931\u8d25\u7684\u9700\u8981\uff0c\u5e76\u6d88\u9664\u4e86\u5806\u788e\u7247\u7684\u98ce\u9669\uff08\u5373\u5806\u4e2d\u6709\u8db3\u591f\u7684\u7a7a\u95f2\u5185\u5b58\u4f46\u4e0d\u662f\u4e00\u4e2a\u53ef\u7528\u7684\u8fde\u7eed\u5757\uff09\u3002</p> <p>\u63d0\u4f9b\u9759\u6001\u5206\u914d\u5185\u5b58\u7684\u5185\u6838\u5bf9\u8c61\u521b\u5efa FreeRTOS API \u51fd\u6570\u4ec5\u5728 FreeRTOSConfig.h \u4e2d\u5c06 <code>configSUPPORT_STATIC_ALLOCATION</code> \u8bbe\u7f6e\u4e3a 1 \u65f6\u53ef\u7528\u3002\u4f7f\u7528\u52a8\u6001\u5206\u914d\u5185\u5b58\u521b\u5efa\u5185\u6838\u5bf9\u8c61\u7684 FreeRTOS API \u51fd\u6570\u4ec5\u5728 FreeRTOSConfig.h \u4e2d\u5c06 <code>configSUPPORT_DYNAMIC_ALLOCATION</code> \u8bbe\u7f6e\u4e3a 1 \u6216\u4fdd\u6301\u672a\u5b9a\u4e49\u65f6\u53ef\u7528\u3002\u5c06\u4e24\u4e2a\u5e38\u91cf\u540c\u65f6\u8bbe\u7f6e\u4e3a 1 \u662f\u6709\u6548\u7684\u3002</p> <p>\u6709\u5173 <code>configSUPPORT_STATIC_ALLOCATION</code> \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 3.4 \u8282\u300a\u4f7f\u7528\u9759\u6001\u5185\u5b58\u5206\u914d\u300b\u3002</p>"},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#314","title":"3.1.4 \u4f7f\u7528\u52a8\u6001\u5185\u5b58\u5206\u914d","text":"<p>\u52a8\u6001\u5185\u5b58\u5206\u914d\u662f C \u7a0b\u5e8f\u8bbe\u8ba1\u7684\u4e00\u79cd\u6982\u5ff5\uff0c\u800c\u4e0d\u662f FreeRTOS \u6216\u591a\u4efb\u52a1\u5904\u7406\u7279\u6709\u7684\u6982\u5ff5\u3002\u5b83\u4e0e FreeRTOS \u76f8\u5173\uff0c\u56e0\u4e3a\u5185\u6838\u5bf9\u8c61\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u521b\u5efa\uff0c\u5e76\u4e14\u901a\u7528 C \u5e93 <code>malloc()</code> \u548c <code>free()</code> \u51fd\u6570\u53ef\u80fd\u4e0d\u9002\u5408\u4ee5\u4e0b\u4e00\u4e2a\u6216\u591a\u4e2a\u539f\u56e0\uff1a</p> <ul> <li>\u5b83\u4eec\u5e76\u4e0d\u603b\u662f\u5728\u5c0f\u578b\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e0a\u53ef\u7528\u3002</li> <li>\u5b83\u4eec\u7684\u5b9e\u73b0\u76f8\u5bf9\u8f83\u5927\uff0c\u5360\u7528\u5b9d\u8d35\u7684\u4ee3\u7801\u7a7a\u95f4\u3002</li> <li>\u5b83\u4eec\u5f88\u5c11\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002</li> <li>\u5b83\u4eec\u4e0d\u662f\u786e\u5b9a\u6027\u7684\uff1b\u6267\u884c\u51fd\u6570\u6240\u9700\u7684\u65f6\u95f4\u56e0\u8c03\u7528\u800c\u5f02\u3002</li> <li>\u5b83\u4eec\u53ef\u80fd\u4f1a\u51fa\u73b0\u788e\u7247\u5316\uff08\u5373\u5806\u4e2d\u6709\u8db3\u591f\u7684\u7a7a\u95f2\u5185\u5b58\u4f46\u4e0d\u662f\u4e00\u4e2a\u53ef\u7528\u7684\u8fde\u7eed\u5757\uff09\u3002</li> <li>\u5b83\u4eec\u53ef\u80fd\u4f1a\u4f7f\u94fe\u63a5\u5668\u914d\u7f6e\u53d8\u5f97\u590d\u6742\u3002</li> <li>\u5982\u679c\u5806\u7a7a\u95f4\u88ab\u5141\u8bb8\u589e\u957f\u5230\u5176\u4ed6\u53d8\u91cf\u4f7f\u7528\u7684\u5185\u5b58\u4e2d\uff0c\u5b83\u4eec\u53ef\u80fd\u662f\u96be\u4ee5\u8c03\u8bd5\u9519\u8bef\u7684\u6e90\u5934\u3002</li> </ul>"},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#315","title":"3.1.5 \u52a8\u6001\u5185\u5b58\u5206\u914d\u7684\u9009\u9879","text":"<p>\u65e9\u671f\u7248\u672c\u7684 FreeRTOS \u4f7f\u7528\u5185\u5b58\u6c60\u5206\u914d\u65b9\u6848\uff0c\u5176\u4e2d\u5728\u7f16\u8bd1\u65f6\u9884\u5206\u914d\u4e0d\u540c\u5927\u5c0f\u5185\u5b58\u5757\u7684\u6c60\uff0c\u7136\u540e\u7531\u5185\u5b58\u5206\u914d\u51fd\u6570\u8fd4\u56de\u3002\u5c3d\u7ba1\u5757\u5206\u914d\u5728\u5b9e\u65f6\u7cfb\u7edf\u4e2d\u5f88\u5e38\u89c1\uff0c\u4f46\u7531\u4e8e\u5176\u5728\u975e\u5e38\u5c0f\u7684\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u5bf9 RAM \u7684\u4f4e\u6548\u4f7f\u7528\u800c\u5bfc\u81f4\u8bb8\u591a\u652f\u6301\u8bf7\u6c42\uff0c\u56e0\u6b64\u5b83\u5df2\u4ece FreeRTOS \u4e2d\u5220\u9664\u3002</p> <p>FreeRTOS \u73b0\u5728\u5c06\u5185\u5b58\u5206\u914d\u89c6\u4e3a\u53ef\u79fb\u690d\u5c42\u7684\u4e00\u90e8\u5206\uff08\u800c\u4e0d\u662f\u6838\u5fc3\u4ee3\u7801\u5e93\u7684\u4e00\u90e8\u5206\uff09\u3002\u8fd9\u662f\u56e0\u4e3a\u4e0d\u540c\u7684\u5d4c\u5165\u5f0f\u7cfb\u7edf\u5177\u6709\u4e0d\u540c\u7684\u52a8\u6001\u5185\u5b58\u5206\u914d\u548c\u65f6\u95f4\u8981\u6c42\uff0c\u56e0\u6b64\u5355\u4e00\u7684\u52a8\u6001\u5185\u5b58\u5206\u914d\u7b97\u6cd5\u4ec5\u9002\u7528\u4e8e\u4e00\u90e8\u5206\u5e94\u7528\u7a0b\u5e8f\u3002\u6b64\u5916\uff0c\u4ece\u6838\u5fc3\u4ee3\u7801\u5e93\u4e2d\u5220\u9664\u52a8\u6001\u5185\u5b58\u5206\u914d\u4f7f\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u8005\u80fd\u591f\u5728\u9002\u5f53\u65f6\u63d0\u4f9b\u81ea\u5df1\u7279\u5b9a\u7684\u5b9e\u73b0\u3002</p> <p>\u5f53 FreeRTOS \u9700\u8981 RAM \u65f6\uff0c\u5b83\u4f1a\u8c03\u7528 <code>pvPortMalloc()</code> \u800c\u4e0d\u662f <code>malloc()</code>\u3002\u540c\u6837\uff0c\u5f53 FreeRTOS \u91ca\u653e\u5148\u524d\u5206\u914d\u7684 RAM \u65f6\uff0c\u5b83\u4f1a\u8c03\u7528 <code>vPortFree()</code> \u800c\u4e0d\u662f <code>free()</code>\u3002<code>pvPortMalloc()</code> \u7684\u539f\u578b\u4e0e\u6807\u51c6 C \u5e93 <code>malloc()</code> \u51fd\u6570\u76f8\u540c\uff0c<code>vPortFree()</code> \u7684\u539f\u578b\u4e0e\u6807\u51c6 C \u5e93 <code>free()</code> \u51fd\u6570\u76f8\u540c\u3002</p> <p><code>pvPortMalloc()</code> \u548c <code>vPortFree()</code> \u662f\u516c\u5171\u51fd\u6570\uff0c\u56e0\u6b64\u5b83\u4eec\u4e5f\u53ef\u4ee5\u4ece\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u4e2d\u8c03\u7528\u3002</p> <p>FreeRTOS \u9644\u5e26\u4e86\u4e94\u4e2a <code>pvPortMalloc()</code> \u548c <code>vPortFree()</code> \u7684\u793a\u4f8b\u5b9e\u73b0\uff0c\u5b83\u4eec\u90fd\u5728\u672c\u7ae0\u4e2d\u6709\u6587\u6863\u8bf4\u660e\u3002FreeRTOS \u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528\u5176\u4e2d\u4e00\u4e2a\u793a\u4f8b\u5b9e\u73b0\u6216\u63d0\u4f9b\u81ea\u5df1\u7684\u5b9e\u73b0\u3002</p> <p>\u8fd9\u4e94\u4e2a\u793a\u4f8b\u5206\u522b\u5728 heap_1.c\u3001heap_2.c\u3001heap_3.c\u3001heap_4.c \u548c heap_5.c \u6e90\u6587\u4ef6\u4e2d\u5b9a\u4e49\uff0c\u6240\u6709\u8fd9\u4e9b\u6587\u4ef6\u90fd\u4f4d\u4e8e FreeRTOS/Source/portable/MemMang \u76ee\u5f55\u4e2d\u3002</p>"},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#32","title":"3.2 \u793a\u4f8b\u5185\u5b58\u5206\u914d\u65b9\u6848","text":""},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#321-heap_1","title":"3.2.1 Heap_1","text":"<p>\u5bf9\u4e8e\u4ec5\u5728\u542f\u52a8 FreeRTOS \u8c03\u5ea6\u7a0b\u5e8f\u4e4b\u524d\u521b\u5efa\u4efb\u52a1\u548c\u5176\u4ed6\u5185\u6838\u5bf9\u8c61\u7684\u5c0f\u578b\u4e13\u7528\u5d4c\u5165\u5f0f\u7cfb\u7edf\u6765\u8bf4\uff0c\u60c5\u51b5\u662f\u5f88\u5e38\u89c1\u7684\u3002\u5f53\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u65f6\uff0c\u5185\u6838\u4ec5\u5728\u5e94\u7528\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\u4efb\u4f55\u5b9e\u65f6\u529f\u80fd\u4e4b\u524d\u52a8\u6001\u5206\u914d\u5185\u5b58\uff0c\u5e76\u4e14\u5185\u5b58\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u5185\u4fdd\u6301\u5206\u914d\u72b6\u6001\u3002\u8fd9\u610f\u5473\u7740\u6240\u9009\u62e9\u7684\u5206\u914d\u65b9\u6848\u4e0d\u5fc5\u8003\u8651\u66f4\u590d\u6742\u7684\u5185\u5b58\u5206\u914d\u95ee\u9898\uff0c\u4f8b\u5982\u786e\u5b9a\u6027\u548c\u788e\u7247\u5316\uff0c\u800c\u53ef\u4ee5\u4f18\u5148\u8003\u8651\u4ee3\u7801\u5927\u5c0f\u548c\u7b80\u5355\u6027\u7b49\u5c5e\u6027\u3002</p> <p>Heap_1.c \u5b9e\u73b0\u4e86 <code>pvPortMalloc()</code> \u7684\u4e00\u4e2a\u975e\u5e38\u57fa\u672c\u7684\u7248\u672c\uff0c\u5e76\u4e14\u4e0d\u5b9e\u73b0 <code>vPortFree()</code>\u3002\u4ece\u4e0d\u5220\u9664\u4efb\u52a1\u6216\u5176\u4ed6\u5185\u6838\u5bf9\u8c61\u7684\u5e94\u7528\u7a0b\u5e8f\u6709\u53ef\u80fd\u4f7f\u7528 heap_1\u3002\u67d0\u4e9b\u5546\u4e1a\u5173\u952e\u548c\u5b89\u5168\u5173\u952e\u7cfb\u7edf\u5982\u679c\u4e0d\u4f7f\u7528\u52a8\u6001\u5185\u5b58\u5206\u914d\u4e5f\u6709\u53ef\u80fd\u4f7f\u7528 heap_1\u3002\u5173\u952e\u7cfb\u7edf\u901a\u5e38\u7981\u6b62\u52a8\u6001\u5185\u5b58\u5206\u914d\uff0c\u56e0\u4e3a\u5b83\u5e26\u6765\u7684\u4e0d\u786e\u5b9a\u6027\u3001\u5185\u5b58\u788e\u7247\u548c\u5206\u914d\u5931\u8d25\u7684\u98ce\u9669\u3002Heap_1 \u59cb\u7ec8\u662f\u786e\u5b9a\u6027\u7684\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5bfc\u81f4\u5185\u5b58\u788e\u7247\u3002</p> <p>Heap_1 \u5bf9 <code>pvPortMalloc()</code> \u7684\u5b9e\u73b0\u53ea\u662f\u6bcf\u6b21\u8c03\u7528\u65f6\u5c06\u4e00\u4e2a\u7b80\u5355\u7684 <code>uint8_t</code> \u6570\u7ec4\uff08\u79f0\u4e3a FreeRTOS \u5806\uff09\u7ec6\u5206\u4e3a\u8f83\u5c0f\u7684\u5757\u3002FreeRTOSConfig.h \u5e38\u91cf <code>configTOTAL_HEAP_SIZE</code> \u8bbe\u7f6e\u6570\u7ec4\u7684\u5927\u5c0f\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\u3002\u5c06\u5806\u5b9e\u73b0\u4e3a\u9759\u6001\u5206\u914d\u7684\u6570\u7ec4\u4f7f FreeRTOS \u770b\u8d77\u6765\u6d88\u8017\u4e86\u5927\u91cf RAM\uff0c\u56e0\u4e3a\u5806\u6210\u4e3a FreeRTOS \u6570\u636e\u7684\u4e00\u90e8\u5206\u3002</p> <p>\u6bcf\u4e2a\u52a8\u6001\u5206\u914d\u7684\u4efb\u52a1\u90fd\u4f1a\u5bfc\u81f4\u5bf9 <code>pvPortMalloc()</code> \u7684\u4e24\u6b21\u8c03\u7528\u3002\u7b2c\u4e00\u6b21\u5206\u914d\u4efb\u52a1\u63a7\u5236\u5757\uff08TCB\uff09\uff0c\u7b2c\u4e8c\u6b21\u5206\u914d\u4efb\u52a1\u7684\u5806\u6808\u3002\u56fe 3.1 \u6f14\u793a\u4e86\u5f53\u521b\u5efa\u4efb\u52a1\u65f6 heap_1 \u5982\u4f55\u7ec6\u5206\u7b80\u5355\u6570\u7ec4\u3002</p> <p>\u53c2\u89c1\u56fe 3.1\uff1a</p> <ul> <li> <p>A \u663e\u793a\u4e86\u5728\u521b\u5efa\u4efb\u4f55\u4efb\u52a1\u4e4b\u524d\u7684\u6570\u7ec4\u2014\u2014\u6574\u4e2a\u6570\u7ec4\u90fd\u662f\u7a7a\u95f2\u7684\u3002</p> </li> <li> <p>B \u663e\u793a\u4e86\u521b\u5efa\u4e00\u4e2a\u4efb\u52a1\u540e\u7684\u6570\u7ec4\u3002</p> </li> <li> <p>C \u663e\u793a\u4e86\u521b\u5efa\u4e09\u4e2a\u4efb\u52a1\u540e\u7684\u6570\u7ec4\u3002</p> </li> </ul> <p></p> <p> \u56fe 3.1 \u4ece heap_1 \u6570\u7ec4\u4e2d\u5206\u914d RAM \u7684\u8fc7\u7a0b</p>"},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#322-heap_2","title":"3.2.2 Heap_2","text":"<p>Heap_2 \u5df2\u88ab heap_4 \u53d6\u4ee3\uff0c\u540e\u8005\u5177\u6709\u589e\u5f3a\u7684\u529f\u80fd\u3002 Heap_2 \u4fdd\u7559\u5728 FreeRTOS \u53d1\u884c\u7248\u4e2d\u662f\u4e3a\u4e86\u5411\u540e\u517c\u5bb9\uff0c\u4e0d\u5efa\u8bae\u7528\u4e8e\u65b0\u8bbe\u8ba1\u3002</p> <p>Heap_2.c \u901a\u8fc7\u7ec6\u5206\u7531 <code>configTOTAL_HEAP_SIZE</code> \u5e38\u91cf\u5b9a\u4e49\u7684\u6570\u7ec4\u6765\u5de5\u4f5c\u3002\u5b83\u4f7f\u7528\u6700\u4f73\u9002\u5e94\u7b97\u6cd5\u6765\u5206\u914d\u5185\u5b58\uff0c\u5e76\u4e14\u4e0e heap_1 \u4e0d\u540c\uff0c\u5b83\u5b9e\u73b0\u4e86 <code>vPortFree()</code>\u3002\u540c\u6837\uff0c\u5c06\u5806\u5b9e\u73b0\u4e3a\u9759\u6001\u5206\u914d\u7684\u6570\u7ec4\u4f7f FreeRTOS \u770b\u8d77\u6765\u6d88\u8017\u4e86\u5927\u91cf RAM\uff0c\u56e0\u4e3a\u5806\u6210\u4e3a FreeRTOS \u6570\u636e\u7684\u4e00\u90e8\u5206\u3002</p> <p>\u6700\u4f73\u9002\u5e94\u7b97\u6cd5\u786e\u4fdd <code>pvPortMalloc()</code> \u4f7f\u7528\u4e0e\u8bf7\u6c42\u7684\u5b57\u8282\u6570\u6700\u63a5\u8fd1\u7684\u7a7a\u95f2\u5185\u5b58\u5757\u3002\u4f8b\u5982\uff0c\u8003\u8651\u4ee5\u4e0b\u573a\u666f\uff1a</p> <ul> <li>\u5806\u4e2d\u5305\u542b\u4e09\u4e2a\u7a7a\u95f2\u5185\u5b58\u5757\uff0c\u5206\u522b\u4e3a 5 \u5b57\u8282\u300125 \u5b57\u8282\u548c 100 \u5b57\u8282\u3002</li> <li><code>pvPortMalloc()</code> \u8bf7\u6c42 20 \u5b57\u8282\u7684 RAM\u3002</li> </ul> <p>\u9002\u5408\u8bf7\u6c42\u7684\u5b57\u8282\u6570\u7684\u6700\u5c0f\u7a7a\u95f2 RAM \u5757\u662f 25 \u5b57\u8282\u5757\uff0c\u56e0\u6b64 <code>pvPortMalloc()</code> \u5c06 25 \u5b57\u8282\u5757\u7ec6\u5206\u4e3a\u4e00\u4e2a 20 \u5b57\u8282\u5757\u548c\u4e00\u4e2a 5 \u5b57\u8282\u5757\uff0c\u7136\u540e\u8fd4\u56de\u6307\u5411 20 \u5b57\u8282\u5757\u7684\u6307\u9488[^2]\u3002\u65b0\u7684 5 \u5b57\u8282\u5757\u4ecd\u7136\u53ef\u4ee5\u7528\u4e8e\u5c06\u6765\u7684 <code>pvPortMalloc()</code> \u8c03\u7528\u3002</p> <p>[^2]: \u8fd9\u662f\u4e00\u79cd\u8fc7\u4e8e\u7b80\u5316\u7684\u8bf4\u6cd5\uff0c\u56e0\u4e3a heap_2 \u5728\u5806\u533a\u57df\u5185\u5b58\u50a8\u5757\u5927\u5c0f\u7684\u4fe1\u606f\uff0c\u56e0\u6b64\u8fd9\u4e24\u4e2a\u62c6\u5206\u5757\u7684\u603b\u548c\u5b9e\u9645\u4e0a\u5c06\u5c0f\u4e8e 25\u3002</p> <p>\u4e0e heap_4 \u4e0d\u540c\uff0cheap_2 \u4e0d\u4f1a\u5c06\u76f8\u90bb\u7684\u7a7a\u95f2\u5757\u5408\u5e76\u4e3a\u4e00\u4e2a\u8f83\u5927\u7684\u5757\uff0c\u56e0\u6b64\u5b83\u6bd4 heap_4 \u66f4\u5bb9\u6613\u51fa\u73b0\u788e\u7247\u5316\u3002\u7136\u800c\uff0c\u5982\u679c\u5206\u914d\u548c\u968f\u540e\u91ca\u653e\u7684\u5757\u59cb\u7ec8\u662f\u76f8\u540c\u5927\u5c0f\u7684\uff0c\u5219\u788e\u7247\u5316\u5c31\u4e0d\u662f\u95ee\u9898\u3002</p> <p></p> <p> \u56fe 3.2 RAM \u7684\u5206\u914d\u548c\u91ca\u653e\u8fc7\u7a0b</p> <p>\u56fe 3.2 \u6f14\u793a\u4e86\u5f53\u4efb\u52a1\u88ab\u521b\u5efa\u3001\u5220\u9664\u548c\u91cd\u65b0\u521b\u5efa\u65f6\uff0c\u6700\u4f73\u9002\u5e94\u7b97\u6cd5\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u53c2\u89c1\u56fe 3.2\uff1a</p> <ul> <li> <p>A \u663e\u793a\u4e86\u5206\u914d\u4e09\u4e2a\u4efb\u52a1\u540e\u7684\u6570\u7ec4\u3002\u6570\u7ec4\u9876\u90e8\u4ecd\u7136\u6709\u4e00\u4e2a\u5927\u7a7a\u95f2\u5757\u3002</p> </li> <li> <p>B \u663e\u793a\u4e86\u5220\u9664\u4e00\u4e2a\u4efb\u52a1\u540e\u7684\u6570\u7ec4\u3002\u6570\u7ec4\u9876\u90e8\u7684\u5927\u7a7a\u95f2\u5757\u4fdd\u6301\u4e0d\u53d8\u3002\u73b0\u5728\u8fd8\u6709\u4e24\u4e2a\u8f83\u5c0f\u7684\u7a7a\u95f2\u5757\uff0c\u5206\u522b\u662f\u4e4b\u524d\u7528\u4e8e\u88ab\u5220\u9664\u4efb\u52a1\u7684 TCB \u548c\u5806\u6808\u3002</p> </li> <li> <p>C \u663e\u793a\u4e86\u521b\u5efa\u53e6\u4e00\u4e2a\u4efb\u52a1\u540e\u7684\u60c5\u51b5\u3002\u521b\u5efa\u4efb\u52a1\u5bfc\u81f4\u5728 <code>xTaskCreate()</code> API \u51fd\u6570\u5185\u90e8\u4ece <code>pvPortMalloc()</code> \u53d1\u51fa\u4e24\u4e2a\u8c03\u7528\uff0c\u4e00\u4e2a\u7528\u4e8e\u5206\u914d\u65b0\u7684 TCB\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u5206\u914d\u4efb\u52a1\u5806\u6808\u3002\u7b2c 3.4 \u8282\u63cf\u8ff0\u4e86 <code>xTaskCreate()</code>\u3002</p> </li> </ul> <p>\u6bcf\u4e2a TCB \u7684\u5927\u5c0f\u662f\u76f8\u540c\u7684\uff0c\u56e0\u6b64\u6700\u4f73\u9002\u5e94\u7b97\u6cd5\u5c06\u91cd\u65b0\u4f7f\u7528\u4e4b\u524d\u88ab\u5220\u9664\u4efb\u52a1\u7684 TCB \u6240\u5728\u7684 RAM \u5757\uff0c\u4ee5\u5bb9\u7eb3\u65b0\u521b\u5efa\u4efb\u52a1\u7684 TCB\u3002</p> <p>\u5982\u679c\u5206\u914d\u7ed9\u65b0\u521b\u5efa\u4efb\u52a1\u7684\u5806\u6808\u7684\u5927\u5c0f\u4e0e\u4e4b\u524d\u5220\u9664\u4efb\u52a1\u7684\u5806\u6808\u76f8\u540c\uff0c\u5219\u6700\u4f73\u9002\u5e94\u7b97\u6cd5\u5c06\u91cd\u65b0\u4f7f\u7528\u4e4b\u524d\u88ab\u5220\u9664\u4efb\u52a1\u7684\u5806\u6808\u6240\u5728\u7684 RAM \u5757\uff0c\u4ee5\u5bb9\u7eb3\u65b0\u521b\u5efa\u4efb\u52a1\u7684\u5806\u6808\u3002</p> <p>\u9876\u90e8\u8f83\u5927\u7684\u672a\u5206\u914d\u5757\u4fdd\u6301\u4e0d\u53d8\u3002</p> <p>Heap_2 \u4e0d\u662f\u786e\u5b9a\u6027\u7684\uff0c\u4f46\u6bd4\u5927\u591a\u6570\u6807\u51c6\u5e93\u5b9e\u73b0\u7684 <code>malloc()</code> \u548c <code>free()</code> \u5feb\u3002</p>"},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#323-heap_3","title":"3.2.3 Heap_3","text":"<p>Heap_3.c \u4f7f\u7528\u6807\u51c6\u5e93\u7684 <code>malloc()</code> \u548c <code>free()</code> \u51fd\u6570\uff0c\u56e0\u6b64\u94fe\u63a5\u5668\u914d\u7f6e\u5b9a\u4e49\u4e86\u5806\u7684\u5927\u5c0f\uff0c\u5e76\u4e14\u4e0d\u4f7f\u7528 <code>configTOTAL_HEAP_SIZE</code> \u5e38\u91cf\u3002</p> <p>Heap_3 \u901a\u8fc7\u5728\u6267\u884c\u671f\u95f4\u6682\u65f6\u6302\u8d77 FreeRTOS \u8c03\u5ea6\u7a0b\u5e8f\u6765\u4f7f <code>malloc()</code> \u548c <code>free()</code> \u7ebf\u7a0b\u5b89\u5168\u3002\u7b2c 8 \u7ae0\u300a\u8d44\u6e90\u7ba1\u7406\u300b\u6db5\u76d6\u4e86\u7ebf\u7a0b\u5b89\u5168\u548c\u8c03\u5ea6\u7a0b\u5e8f\u6302\u8d77\u3002</p>"},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#324-heap_4","title":"3.2.4 Heap_4","text":"<p>\u4e0e heap_1 \u548c heap_2 \u4e00\u6837\uff0cheap_4 \u901a\u8fc7\u5c06\u6570\u7ec4\u7ec6\u5206\u4e3a\u8f83\u5c0f\u7684\u5757\u6765\u5de5\u4f5c\u3002\u4e0e\u4e4b\u524d\u4e00\u6837\uff0c\u6570\u7ec4\u662f\u9759\u6001\u5206\u914d\u7684\uff0c\u5e76\u7531 <code>configTOTAL_HEAP_SIZE</code> \u5b9a\u4e49\uff0c\u8fd9\u4f7f\u5f97 FreeRTOS \u770b\u8d77\u6765\u6d88\u8017\u4e86\u5927\u91cf RAM\uff0c\u56e0\u4e3a\u5806\u6210\u4e3a FreeRTOS \u6570\u636e\u7684\u4e00\u90e8\u5206\u3002</p> <p>Heap_4 \u4f7f\u7528\u9996\u6b21\u9002\u5e94\u7b97\u6cd5\u6765\u5206\u914d\u5185\u5b58\u3002\u4e0e heap_2 \u4e0d\u540c\uff0cheap_4 \u5c06\u76f8\u90bb\u7684\u81ea\u7531\u5185\u5b58\u5757\u5408\u5e76\uff08\u5408\u5e76\uff09\u4e3a\u4e00\u4e2a\u8f83\u5927\u7684\u5757\uff0c\u4ece\u800c\u6700\u5c0f\u5316\u5185\u5b58\u788e\u7247\u7684\u98ce\u9669\u3002</p> <p>\u9996\u6b21\u9002\u5e94\u7b97\u6cd5\u786e\u4fdd <code>pvPortMalloc()</code> \u4f7f\u7528\u7b2c\u4e00\u4e2a\u8db3\u591f\u5927\u7684\u7a7a\u95f2\u5185\u5b58\u5757\u6765\u5bb9\u7eb3\u8bf7\u6c42\u7684\u5b57\u8282\u6570\u3002\u4f8b\u5982\uff0c\u8003\u8651\u4ee5\u4e0b\u573a\u666f\uff1a</p> <ul> <li>\u5806\u4e2d\u5305\u542b\u4e09\u4e2a\u7a7a\u95f2\u5185\u5b58\u5757\uff0c\u6309\u5b83\u4eec\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0\u7684\u987a\u5e8f\u5206\u522b\u4e3a 5 \u5b57\u8282\u3001200 \u5b57\u8282\u548c 100 \u5b57\u8282\u3002</li> <li><code>pvPortMalloc()</code> \u8bf7\u6c42 20 \u5b57\u8282\u7684 RAM\u3002</li> </ul> <p>\u8bf7\u6c42\u7684\u5b57\u8282\u6570\u9002\u5408\u7684\u7b2c\u4e00\u4e2a\u7a7a\u95f2 RAM \u5757\u662f 200 \u5b57\u8282\u5757\uff0c\u56e0\u6b64 <code>pvPortMalloc()</code> \u5c06 200 \u5b57\u8282\u5757\u7ec6\u5206\u4e3a\u4e00\u4e2a 20 \u5b57\u8282\u5757\u548c\u4e00\u4e2a 180 \u5b57\u8282\u5757[^3]\uff0c\u7136\u540e\u8fd4\u56de\u6307\u5411 20 \u5b57\u8282\u5757\u7684\u6307\u9488\u3002\u65b0\u7684 180 \u5b57\u8282\u5757\u4ecd\u7136\u53ef\u4ee5\u7528\u4e8e\u5c06\u6765\u7684 <code>pvPortMalloc()</code> \u8c03\u7528\u3002</p> <p>[^3]: \u8fd9\u662f\u4e00\u79cd\u8fc7\u4e8e\u7b80\u5316\u7684\u8bf4\u6cd5\uff0c\u56e0\u4e3a heap_4 \u5728\u5806\u533a\u57df\u5185\u5b58\u50a8\u5757\u5927\u5c0f\u7684\u4fe1\u606f\uff0c\u56e0\u6b64\u8fd9\u4e24\u4e2a\u62c6\u5206\u5757\u7684\u603b\u548c\u5b9e\u9645\u4e0a\u5c06\u5c0f\u4e8e 200 \u5b57\u8282\u3002</p> <p>Heap_4 \u5c06\u76f8\u90bb\u7684\u7a7a\u95f2\u5757\u5408\u5e76\u4e3a\u4e00\u4e2a\u8f83\u5927\u7684\u5757\uff0c\u6700\u5c0f\u5316\u788e\u7247\u5316\u7684\u98ce\u9669\uff0c\u4f7f\u5176\u9002\u7528\u4e8e\u53cd\u590d\u5206\u914d\u548c\u91ca\u653e\u4e0d\u540c\u5927\u5c0f\u7684 RAM \u5757\u7684\u5e94\u7528\u7a0b\u5e8f\u3002</p> <p></p> <p> \u56fe 3.3 RAM \u7684\u5206\u914d\u548c\u91ca\u653e\u8fc7\u7a0b</p> <p>\u56fe 3.3 \u6f14\u793a\u4e86\u5e26\u6709\u5185\u5b58\u5408\u5e76\u7684 heap_4 \u9996\u6b21\u9002\u5e94\u7b97\u6cd5\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u53c2\u89c1\u56fe 3.3\uff1a</p> <ul> <li> <p>A \u663e\u793a\u4e86\u521b\u5efa\u4e09\u4e2a\u4efb\u52a1\u540e\u7684\u6570\u7ec4\u3002\u6570\u7ec4\u9876\u90e8\u4ecd\u7136\u6709\u4e00\u4e2a\u5927\u7a7a\u95f2\u5757\u3002</p> </li> <li> <p>B \u663e\u793a\u4e86\u5220\u9664\u4e00\u4e2a\u4efb\u52a1\u540e\u7684\u6570\u7ec4\u3002\u6570\u7ec4\u9876\u90e8\u7684\u5927\u7a7a\u95f2\u5757\u4fdd\u6301\u4e0d\u53d8\u3002\u73b0\u5728\u8fd8\u6709\u4e00\u4e2a\u7a7a\u95f2\u5757\uff0c\u539f\u6765\u7528\u4e8e\u88ab\u5220\u9664\u4efb\u52a1\u7684 TCB \u548c\u5806\u6808\u3002\u4e0e heap_2 \u793a\u4f8b\u4e0d\u540c\uff0cheap_4 \u5c06\u4e4b\u524d\u5206\u522b\u7528\u4e8e\u88ab\u5220\u9664\u4efb\u52a1\u7684 TCB \u548c\u5806\u6808\u7684\u4e24\u4e2a\u5185\u5b58\u5757\u5408\u5e76\u4e3a\u4e00\u4e2a\u8f83\u5927\u7684\u7a7a\u95f2\u5757\u3002</p> </li> <li> <p>C \u663e\u793a\u4e86\u5728\u521b\u5efa FreeRTOS \u961f\u5217\u4e4b\u540e\u7684\u60c5\u51b5\u3002\u672c\u4e66\u7b2c 5.3 \u8282\u63cf\u8ff0\u4e86\u7528\u4e8e\u52a8\u6001\u5206\u914d\u961f\u5217\u7684 <code>xQueueCreate()</code> API \u51fd\u6570\u3002<code>xQueueCreate()</code> \u8c03\u7528 <code>pvPortMalloc()</code> \u6765\u5206\u914d\u961f\u5217\u4f7f\u7528\u7684 RAM\u3002\u5982\u56fe 3.3 \u6240\u793a\uff0cheap_4 \u4f7f\u7528\u9996\u6b21\u9002\u5e94\u7b97\u6cd5\uff0c<code>pvPortMalloc()</code> \u4ece\u7b2c\u4e00\u4e2a\u8db3\u591f\u5927\u7684\u7a7a\u95f2 RAM \u5757\u4e2d\u5206\u914d RAM\uff0c\u8be5\u5757\u6b63\u662f\u901a\u8fc7\u5220\u9664\u4efb\u52a1\u800c\u91ca\u653e\u7684 RAM\u3002\u961f\u5217\u5e76\u6ca1\u6709\u6d88\u8017\u6389\u81ea\u7531\u5757\u4e2d\u7684\u6240\u6709 RAM\uff0c\u56e0\u6b64\u8be5\u5757\u88ab\u7ec6\u5206\u4e3a\u4e24\u4e2a\uff0c\u672a\u4f7f\u7528\u7684\u90e8\u5206\u4ecd\u7136\u53ef\u4ee5\u7528\u4e8e\u5c06\u6765\u7684 <code>pvPortMalloc()</code> \u8c03\u7528\u3002</p> </li> <li> <p>D \u663e\u793a\u4e86\u4ece\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u76f4\u63a5\u8c03\u7528 <code>pvPortMalloc()</code> \u4e4b\u540e\u7684\u60c5\u51b5\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u8c03\u7528 FreeRTOS API \u51fd\u6570\u3002\u7528\u6237\u5206\u914d\u7684\u5185\u5b58\u5757\u8db3\u591f\u5c0f\uff0c\u53ef\u4ee5\u9002\u5e94\u7b2c\u4e00\u4e2a\u7a7a\u95f2\u5757\uff0c\u5373\u5728\u961f\u5217\u5206\u914d\u7684\u5185\u5b58\u4e0e\u540e\u7eed\u5206\u914d\u7684 TCB \u4e4b\u95f4\u7684\u5757\u3002</p> </li> </ul> <p>\u88ab\u5220\u9664\u4efb\u52a1\u91ca\u653e\u7684\u5185\u5b58\u73b0\u5728\u5206\u6210\u4e86\u4e09\u4e2a\u72ec\u7acb\u7684\u5757\uff1b\u7b2c\u4e00\u4e2a\u5757\u7528\u4e8e\u961f\u5217\uff0c\u7b2c\u4e8c\u4e2a\u5757\u7528\u4e8e\u7528\u6237\u5206\u914d\u7684\u5185\u5b58\uff0c\u7b2c\u4e09\u4e2a\u5757\u4fdd\u6301\u7a7a\u95f2\u3002</p> <ul> <li> <p>E \u663e\u793a\u4e86\u5220\u9664\u961f\u5217\u4e4b\u540e\u7684\u60c5\u51b5\uff0c\u5220\u9664\u961f\u5217\u4f1a\u81ea\u52a8\u91ca\u653e\u5206\u914d\u7ed9\u5df2\u5220\u9664\u961f\u5217\u7684\u5185\u5b58\u3002\u7528\u6237\u5206\u914d\u7684\u5185\u5b58\u4e24\u4fa7\u73b0\u5728\u90fd\u6709\u7a7a\u95f2\u5185\u5b58\u3002</p> </li> <li> <p>F \u663e\u793a\u4e86\u89e3\u91ca\u7528\u6237\u5206\u914d\u7684\u5185\u5b58\u4e4b\u540e\u7684\u60c5\u51b5\u3002\u4e4b\u524d\u7528\u4e8e\u7528\u6237\u5206\u914d\u5757\u7684\u5185\u5b58\u5df2\u4e0e\u4e24\u4fa7\u7684\u7a7a\u95f2\u5185\u5b58\u5408\u5e76\uff0c\u5f62\u6210\u4e00\u4e2a\u8f83\u5927\u7684\u5355\u4e00\u7a7a\u95f2\u5757\u3002</p> </li> </ul> <p>Heap_4 \u4e0d\u662f\u786e\u5b9a\u6027\u7684\uff0c\u4f46\u6bd4\u5927\u591a\u6570\u6807\u51c6\u5e93\u5b9e\u73b0\u7684 <code>malloc()</code> \u548c <code>free()</code> \u5feb\u3002</p>"},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#325-heap_5","title":"3.2.5 Heap_5","text":"<p>Heap_5 \u4f7f\u7528\u4e0e heap_4 \u76f8\u540c\u7684\u5206\u914d\u7b97\u6cd5\u3002\u4e0e heap_4 \u4e0d\u540c\uff0cheap_5 \u53ef\u4ee5\u4ece\u591a\u4e2a\u5206\u79bb\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d\u7ec4\u5408\u5185\u5b58\uff0c\u5f62\u6210\u4e00\u4e2a\u5355\u4e00\u7684\u5806\u3002Heap_5 \u5728 FreeRTOS \u8fd0\u884c\u7684\u7cfb\u7edf\u7684\u5185\u5b58\u6620\u5c04\u4e2d\uff0cRAM \u5e76\u4e0d\u603b\u662f\u4f5c\u4e3a\u4e00\u4e2a\u8fde\u7eed\u7684\uff08\u6ca1\u6709\u7a7a\u9699\uff09\u5757\u51fa\u73b0\u65f6\u975e\u5e38\u6709\u7528\u3002</p>"},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#326-heap_5vportdefineheapregions-api","title":"3.2.6 \u521d\u59cb\u5316 heap_5\uff1avPortDefineHeapRegions() API \u51fd\u6570","text":"<p><code>vPortDefineHeapRegions()</code> \u901a\u8fc7\u6307\u5b9a\u6784\u6210\u5806\u7684\u6bcf\u4e2a\u5355\u72ec\u5185\u5b58\u533a\u57df\u7684\u8d77\u59cb\u5730\u5740\u548c\u5927\u5c0f\u6765\u521d\u59cb\u5316 heap_5\u3002Heap_5 \u662f\u552f\u4e00\u9700\u8981\u663e\u5f0f\u521d\u59cb\u5316\u7684\u5806\u5206\u914d\u65b9\u6848\uff0c\u5728\u8c03\u7528 <code>vPortDefineHeapRegions()</code> \u4e4b\u524d\u65e0\u6cd5\u4f7f\u7528\u3002\u8fd9\u610f\u5473\u7740\u5185\u6838\u5bf9\u8c61\uff08\u4f8b\u5982\u4efb\u52a1\u3001\u961f\u5217\u548c\u4fe1\u53f7\u91cf\uff09\u65e0\u6cd5\u5728\u8c03\u7528 <code>vPortDefineHeapRegions()</code> \u4e4b\u524d\u52a8\u6001\u521b\u5efa\u3002</p> <p></p> <pre><code>void vPortDefineHeapRegions( const HeapRegion_t * const pxHeapRegions );\n</code></pre> <p>\u6e05\u5355 3.1 vPortDefineHeapRegions() API \u51fd\u6570\u539f\u578b</p> <p><code>vPortDefineHeapRegions()</code> \u4ec5\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\uff0c\u5373 <code>HeapRegion_t</code> \u7ed3\u6784\u7684\u6570\u7ec4\u3002\u6bcf\u4e2a\u7ed3\u6784\u5b9a\u4e49\u4e86\u5c06\u6210\u4e3a\u5806\u7684\u4e00\u90e8\u5206\u7684\u5185\u5b58\u5757\u7684\u8d77\u59cb\u5730\u5740\u548c\u5927\u5c0f\u2014\u2014\u6574\u4e2a\u7ed3\u6784\u6570\u7ec4\u5b9a\u4e49\u4e86\u6574\u4e2a\u5806\u7a7a\u95f4\u3002</p> <p></p> <pre><code>typedef struct HeapRegion\n{\n    /* The start address of a block of memory that will be part of the heap.*/\n    uint8_t *pucStartAddress;\n\n    /* The size of the block of memory in bytes. */\n    size_t xSizeInBytes;\n\n} HeapRegion_t;\n</code></pre> <p>\u6e05\u5355 3.2 HeapRegion_t \u7ed3\u6784\u4f53</p> <p>\u53c2\u6570\uff1a</p> <ul> <li><code>pxHeapRegions</code></li> </ul> <p>\u6307\u5411 <code>HeapRegion_t</code> \u7ed3\u6784\u6570\u7ec4\u5f00\u5934\u7684\u6307\u9488\u3002\u6bcf\u4e2a\u7ed3\u6784\u5b9a\u4e49\u4e86\u5c06\u6210\u4e3a\u5806\u7684\u4e00\u90e8\u5206\u7684\u5185\u5b58\u5757\u7684\u8d77\u59cb\u5730\u5740\u548c\u5927\u5c0f\u3002</p> <p>\u6570\u7ec4\u4e2d\u7684 <code>HeapRegion_t</code> \u7ed3\u6784\u5fc5\u987b\u6309\u8d77\u59cb\u5730\u5740\u6392\u5e8f\uff1b\u63cf\u8ff0\u5177\u6709\u6700\u4f4e\u8d77\u59cb\u5730\u5740\u7684\u5185\u5b58\u533a\u57df\u7684 <code>HeapRegion_t</code> \u7ed3\u6784\u5fc5\u987b\u662f\u6570\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u7ed3\u6784\uff0c\u63cf\u8ff0\u5177\u6709\u6700\u9ad8\u8d77\u59cb\u5730\u5740\u7684\u5185\u5b58\u533a\u57df\u7684 <code>HeapRegion_t</code> \u7ed3\u6784\u5fc5\u987b\u662f\u6570\u7ec4\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u7ed3\u6784\u3002</p> <p>\u7528 <code>pucStartAddress</code> \u6210\u5458\u8bbe\u7f6e\u4e3a <code>NULL</code> \u7684 <code>HeapRegion_t</code> \u7ed3\u6784\u6807\u8bb0\u6570\u7ec4\u7684\u7ed3\u675f\u3002</p> <p>\u901a\u8fc7\u793a\u4f8b\uff0c\u8003\u8651\u56fe 3.4 A \u4e2d\u7684\u5047\u8bbe\u5185\u5b58\u6620\u5c04\uff0c\u5176\u4e2d\u5305\u542b\u4e09\u4e2a\u5355\u72ec\u7684 RAM \u5757\uff1aRAM1\u3001RAM2 \u548c RAM3\u3002\u5047\u8bbe\u53ef\u6267\u884c\u4ee3\u7801\u88ab\u653e\u7f6e\u5728\u53ea\u8bfb\u5b58\u50a8\u5668\u4e2d\uff0c\u800c\u53ea\u8bfb\u5b58\u50a8\u5668\u672a\u5728\u56fe\u4e2d\u663e\u793a\u3002</p> <p></p> <p> \u56fe 3.4 \u5185\u5b58\u6620\u5c04</p> <p>\u6e05\u5355 3.3 \u663e\u793a\u4e86\u4e00\u4e2a <code>HeapRegion_t</code> \u7ed3\u6784\u7684\u6570\u7ec4\uff0c\u8be5\u6570\u7ec4\u5b8c\u6574\u5730\u63cf\u8ff0\u4e86\u4e09\u4e2a RAM \u5757\u3002</p> <p></p> <pre><code>/* Define the start address and size of the three RAM regions. */\n#define RAM1_START_ADDRESS ( ( uint8_t * ) 0x00010000 )\n#define RAM1_SIZE ( 64 * 1024 )\n\n#define RAM2_START_ADDRESS ( ( uint8_t * ) 0x00020000 )\n#define RAM2_SIZE ( 32 * 1024 )\n\n#define RAM3_START_ADDRESS ( ( uint8_t * ) 0x00030000 )\n#define RAM3_SIZE ( 32 * 1024 )\n\n/* Create an array of HeapRegion_t definitions, with an index for each\n   of the three RAM regions, and terminate the array with a HeapRegion_t\n   structure containing a NULL address. The HeapRegion_t structures must\n   appear in start address order, with the structure that contains the\n   lowest start address appearing first. */\nconst HeapRegion_t xHeapRegions[] =\n{\n    { RAM1_START_ADDRESS, RAM1_SIZE },\n    { RAM2_START_ADDRESS, RAM2_SIZE },\n    { RAM3_START_ADDRESS, RAM3_SIZE },\n    { NULL,               0         } /* Marks the end of the array. */\n};\n\nint main( void )\n{\n    /* Initialize heap_5. */\n    vPortDefineHeapRegions( xHeapRegions );\n\n    /* Add application code here. */\n}\n</code></pre> <p>\u6e05\u5355 3.3 \u63cf\u8ff0\u4e09\u4e2a RAM \u533a\u57df\u7684 HeapRegion_t \u7ed3\u6784\u7684\u6570\u7ec4</p> <p>\u5c3d\u7ba1\u6e05\u5355 3.3 \u6b63\u786e\u5730\u63cf\u8ff0\u4e86 RAM\uff0c\u4f46\u7531\u4e8e\u5b83\u5c06\u6240\u6709 RAM \u90fd\u5206\u914d\u7ed9\u5806\uff0c\u56e0\u6b64\u5b83\u5e76\u6ca1\u6709\u6f14\u793a\u4e00\u4e2a\u53ef\u7528\u7684\u793a\u4f8b\uff0c\u5176\u4ed6\u53d8\u91cf\u5c06\u6ca1\u6709 RAM \u53ef\u7528\u3002</p> <p>\u6784\u5efa\u8fc7\u7a0b\u7684\u94fe\u63a5\u9636\u6bb5\u4e3a\u6bcf\u4e2a\u53d8\u91cf\u5206\u914d\u4e86\u4e00\u4e2a RAM \u5730\u5740\u3002\u53ef\u4f9b\u94fe\u63a5\u5668\u4f7f\u7528\u7684 RAM \u901a\u5e38\u7531\u94fe\u63a5\u5668\u914d\u7f6e\u6587\u4ef6\uff08\u4f8b\u5982\u94fe\u63a5\u5668\u811a\u672c\uff09\u63cf\u8ff0\u3002\u5728\u56fe 3.4 B \u4e2d\uff0c\u5047\u8bbe\u94fe\u63a5\u5668\u811a\u672c\u5305\u542b\u6709\u5173 RAM1 \u7684\u4fe1\u606f\uff0c\u4f46\u4e0d\u5305\u542b\u6709\u5173 RAM2 \u6216 RAM3 \u7684\u4fe1\u606f\u3002\u56e0\u6b64\uff0c\u94fe\u63a5\u5668\u5c06\u53d8\u91cf\u653e\u7f6e\u5728 RAM1 \u4e2d\uff0c\u4ec5\u5728\u5730\u5740 0x0001nnnn \u4ee5\u4e0a\u7559\u4e0b\u53ef\u4f9b heap_5 \u4f7f\u7528\u7684 RAM\u30020x0001nnnn \u7684\u5b9e\u9645\u503c\u53d6\u51b3\u4e8e\u5305\u542b\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u6240\u6709\u53d8\u91cf\u7684\u603b\u5927\u5c0f\u3002\u94fe\u63a5\u5668\u5df2\u5c06 RAM2 \u548c RAM3 \u7684\u6240\u6709\u5185\u5bb9\u7559\u7a7a\uff0c\u56e0\u6b64 heap_5 \u53ef\u4ee5\u4f7f\u7528 RAM2 \u548c RAM3 \u7684\u6574\u4e2a\u5185\u5bb9\u3002</p> <p>\u6e05\u5355 3.3 \u4e2d\u663e\u793a\u7684\u4ee3\u7801\u4f1a\u5bfc\u81f4\u5206\u914d\u7ed9 heap_5 \u7684 RAM \u4e0e\u94fe\u63a5\u5668\u4f7f\u7528\u7684 RAM \u91cd\u53e0\uff0c\u5c24\u5176\u662f\u4f4e\u4e8e\u5730\u5740 0x0001nnnn \u7684\u5730\u5740\u3002\u5982\u679c\u5c06 <code>xHeapRegions[]</code> \u6570\u7ec4\u4e2d\u7b2c\u4e00\u4e2a <code>HeapRegion_t</code> \u7ed3\u6784\u7684\u8d77\u59cb\u5730\u5740\u8bbe\u7f6e\u4e3a 0x0001nnnn\uff0c\u800c\u4e0d\u662f 0x00010000\uff0c\u5219\u5806\u5c06\u4e0d\u4f1a\u4e0e\u94fe\u63a5\u5668\u4f7f\u7528\u7684 RAM \u91cd\u53e0\u3002\u7136\u800c\uff0c\u8fd9\u4e0d\u662f\u4e00\u4e2a\u63a8\u8350\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u4e3a\uff1a</p> <ul> <li>\u8d77\u59cb\u5730\u5740\u53ef\u80fd\u4e0d\u5bb9\u6613\u786e\u5b9a\u3002</li> <li>\u5c06\u6765\u6784\u5efa\u4e2d\u94fe\u63a5\u5668\u4f7f\u7528\u7684 RAM \u5927\u5c0f\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u8fd9\u5c06\u9700\u8981\u66f4\u65b0 <code>HeapRegion_t</code> \u7ed3\u6784\u4e2d\u4f7f\u7528\u7684\u8d77\u59cb\u5730\u5740\u3002</li> <li>\u5982\u679c\u94fe\u63a5\u5668\u4f7f\u7528\u7684 RAM \u548c heap_5 \u4f7f\u7528\u7684 RAM \u91cd\u53e0\uff0c\u6784\u5efa\u5de5\u5177\u5c06\u65e0\u6cd5\u77e5\u9053\uff0c\u56e0\u6b64\u65e0\u6cd5\u8b66\u544a\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u8005\u3002</li> </ul> <p>\u6e05\u5355 3.4 \u6f14\u793a\u4e86\u4e00\u79cd\u66f4\u65b9\u4fbf\u548c\u53ef\u7ef4\u62a4\u7684\u793a\u4f8b\u3002\u5b83\u58f0\u660e\u4e86\u4e00\u4e2a\u540d\u4e3a <code>ucHeap</code> \u7684\u6570\u7ec4\u3002<code>ucHeap</code> \u662f\u4e00\u4e2a\u666e\u901a\u53d8\u91cf\uff0c\u56e0\u6b64\u5b83\u6210\u4e3a\u5206\u914d\u7ed9 RAM1 \u7684\u6570\u636e\u7684\u4e00\u90e8\u5206\u3002<code>xHeapRegions</code> \u6570\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a <code>HeapRegion_t</code> \u7ed3\u6784\u63cf\u8ff0\u4e86 <code>ucHeap</code> \u7684\u8d77\u59cb\u5730\u5740\u548c\u5927\u5c0f\uff0c\u56e0\u6b64 <code>ucHeap</code> \u6210\u4e3a heap_5 \u7ba1\u7406\u7684\u5185\u5b58\u7684\u4e00\u90e8\u5206\u3002\u53ef\u4ee5\u589e\u52a0 <code>ucHeap</code> \u7684\u5927\u5c0f\uff0c\u76f4\u5230\u94fe\u63a5\u5668\u5360\u7528 RAM1 \u7684\u6240\u6709 RAM\uff0c\u5982\u56fe 3.4 C \u6240\u793a\u3002</p> <p></p> <pre><code>/* Define the start address and size of the two RAM regions not used by\n   the linker. */\n#define RAM2_START_ADDRESS ( ( uint8_t * ) 0x00020000 )\n#define RAM2_SIZE ( 32 * 1024 )\n\n#define RAM3_START_ADDRESS ( ( uint8_t * ) 0x00030000 )\n#define RAM3_SIZE ( 32 * 1024 )\n\n/* Declare an array that will be part of the heap used by heap_5. The\n   array will be placed in RAM1 by the linker. */\n#define RAM1_HEAP_SIZE ( 30 * 1024 )\nstatic uint8_t ucHeap[ RAM1_HEAP_SIZE ];\n\n/* Create an array of HeapRegion_t definitions. Whereas in Listing 3.3 the\n   first entry described all of RAM1, so heap_5 will have used all of\n   RAM1, this time the first entry only describes the ucHeap array, so\n   heap_5 will only use the part of RAM1 that contains the ucHeap array.\n   The HeapRegion_t structures must still appear in start address order,\n   with the structure that contains the lowest start address appearing first. */\n\nconst HeapRegion_t xHeapRegions[] =\n{\n    { ucHeap,             RAM1_HEAP_SIZE },\n    { RAM2_START_ADDRESS, RAM2_SIZE },\n    { RAM3_START_ADDRESS, RAM3_SIZE },\n    { NULL,               0 }           /* Marks the end of the array. */\n};\n</code></pre> <p>\u6e05\u5355 3.4 \u63cf\u8ff0 RAM2\u3001RAM3 \u4ee5\u53ca RAM1 \u90e8\u5206\u7684 HeapRegion_t \u7ed3\u6784\u7684\u6570\u7ec4</p> <p>\u6e05\u5355 3.4 \u4e2d\u6f14\u793a\u7684\u6280\u672f\u7684\u4f18\u70b9\u5305\u62ec\uff1a</p> <ul> <li>\u4e0d\u5fc5\u4f7f\u7528\u786c\u7f16\u7801\u7684\u8d77\u59cb\u5730\u5740\u3002</li> <li><code>HeapRegion_t</code> \u7ed3\u6784\u4e2d\u4f7f\u7528\u7684\u5730\u5740\u5c06\u7531\u94fe\u63a5\u5668\u81ea\u52a8\u8bbe\u7f6e\uff0c\u56e0\u6b64\u5373\u4f7f\u5c06\u6765\u6784\u5efa\u4e2d\u94fe\u63a5\u5668\u4f7f\u7528\u7684 RAM \u5927\u5c0f\u53d1\u751f\u53d8\u5316\uff0c\u5b83\u4e5f\u59cb\u7ec8\u662f\u6b63\u786e\u7684\u3002</li> <li>heap_5 \u5206\u914d\u7684 RAM \u4e0d\u4f1a\u4e0e\u94fe\u63a5\u5668\u653e\u7f6e\u5230 RAM1 \u4e2d\u7684\u6570\u636e\u91cd\u53e0\u3002</li> <li>\u5982\u679c <code>ucHeap</code> \u592a\u5927\uff0c\u5e94\u7528\u7a0b\u5e8f\u5c06\u65e0\u6cd5\u94fe\u63a5\u3002</li> </ul>"},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#33","title":"3.3 \u5806\u76f8\u5173\u7684\u5b9e\u7528\u7a0b\u5e8f\u51fd\u6570\u548c\u5b8f","text":""},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#331","title":"3.3.1 \u5b9a\u4e49\u5806\u8d77\u59cb\u5730\u5740","text":"<p>Heap_1\u3001heap_2 \u548c heap_4 \u4ece\u7531 <code>configTOTAL_HEAP_SIZE</code> \u5b9a\u4e49\u7684\u9759\u6001\u5206\u914d\u6570\u7ec4\u4e2d\u5206\u914d\u5185\u5b58\u3002\u672c\u8282\u5c06\u8fd9\u4e9b\u5206\u914d\u65b9\u6848\u7edf\u79f0\u4e3a heap_n\u3002</p> <p>\u6709\u65f6\u9700\u8981\u5c06\u5806\u653e\u7f6e\u5728\u7279\u5b9a\u7684\u5185\u5b58\u5730\u5740\u3002\u4f8b\u5982\uff0c\u5206\u914d\u7ed9\u52a8\u6001\u521b\u5efa\u7684\u4efb\u52a1\u7684\u5806\u6808\u6765\u81ea\u5806\uff0c\u56e0\u6b64\u53ef\u80fd\u9700\u8981\u5c06\u5806\u653e\u5728\u5feb\u901f\u5185\u90e8\u5185\u5b58\u4e2d\uff0c\u800c\u4e0d\u662f\u6162\u901f\u5916\u90e8\u5185\u5b58\u4e2d\u3002\uff08\u8bf7\u53c2\u89c1\u4e0b\u9762\u7684\u5b50\u7ae0\u8282\u300a\u5c06\u4efb\u52a1\u5806\u6808\u653e\u7f6e\u5728\u5feb\u901f\u5185\u5b58\u4e2d\u300b\uff0c\u4e86\u89e3\u5206\u914d\u5728\u5feb\u901f\u5185\u5b58\u4e2d\u4efb\u52a1\u5806\u6808\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u3002\uff09<code>configAPPLICATION_ALLOCATED_HEAP</code> \u7f16\u8bd1\u65f6\u914d\u7f6e\u5e38\u91cf\u4f7f\u5e94\u7528\u7a0b\u5e8f\u80fd\u591f\u58f0\u660e\u8be5\u6570\u7ec4\uff0c\u4ee5\u53d6\u4ee3\u539f\u672c\u5728 heap_n.c \u6e90\u6587\u4ef6\u4e2d\u7684\u58f0\u660e\u3002\u5728\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u4e2d\u58f0\u660e\u8be5\u6570\u7ec4\u4f7f\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u8005\u80fd\u591f\u6307\u5b9a\u5176\u8d77\u59cb\u5730\u5740\u3002</p> <p>\u5982\u679c\u5728 FreeRTOSConfig.h \u4e2d\u5c06 <code>configAPPLICATION_ALLOCATED_HEAP</code> \u8bbe\u7f6e\u4e3a 1\uff0c\u5219\u4f7f\u7528 FreeRTOS \u7684\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u5206\u914d\u4e00\u4e2a\u540d\u4e3a <code>ucHeap</code> \u7684 <code>uint8_t</code> \u6570\u7ec4\uff0c\u5e76\u7531 <code>configTOTAL_HEAP_SIZE</code> \u5e38\u91cf\u5b9a\u4e49\u5176\u5927\u5c0f\u3002</p> <p>\u5c06\u53d8\u91cf\u653e\u7f6e\u5728\u7279\u5b9a\u5185\u5b58\u5730\u5740\u7684\u8bed\u6cd5\u53d6\u51b3\u4e8e\u6240\u4f7f\u7528\u7684\u7f16\u8bd1\u5668\uff0c\u56e0\u6b64\u8bf7\u53c2\u8003\u60a8\u7684\u7f16\u8bd1\u5668\u6587\u6863\u3002\u4ee5\u4e0b\u662f\u4e24\u4e2a\u7f16\u8bd1\u5668\u7684\u793a\u4f8b\uff1a</p> <ul> <li>\u6e05\u5355 3.5 \u663e\u793a\u4e86 GCC \u7f16\u8bd1\u5668\u6240\u9700\u7684\u8bed\u6cd5\uff0c\u4ee5\u58f0\u660e\u6570\u7ec4\u5e76\u5c06\u5176\u653e\u7f6e\u5728\u540d\u4e3a <code>.my_heap</code> \u7684\u5185\u5b58\u533a\u6bb5\u4e2d\u3002</li> <li>\u6e05\u5355 3.6 \u663e\u793a\u4e86 IAR \u7f16\u8bd1\u5668\u6240\u9700\u7684\u8bed\u6cd5\uff0c\u4ee5\u58f0\u660e\u6570\u7ec4\u5e76\u5c06\u5176\u653e\u7f6e\u5728\u7edd\u5bf9\u5185\u5b58\u5730\u5740 0x20000000 \u4e2d\u3002</li> </ul> <p></p> <pre><code>uint8_t ucHeap[ configTOTAL_HEAP_SIZE ] __attribute__ ( ( section( \".my_heap\" ) ) );\n</code></pre> <p>\u6e05\u5355 3.5 \u4f7f\u7528 GCC \u8bed\u6cd5\u58f0\u660e\u5c06\u88ab heap_4 \u4f7f\u7528\u7684\u6570\u7ec4\uff0c\u5e76\u5c06\u8be5\u6570\u7ec4\u653e\u7f6e\u5728\u540d\u4e3a .my_heap \u7684\u5185\u5b58\u533a\u6bb5\u4e2d</p> <p></p> <pre><code>uint8_t ucHeap[ configTOTAL_HEAP_SIZE ] @ 0x20000000;\n</code></pre> <p>\u6e05\u5355 3.6 \u4f7f\u7528 IAR \u8bed\u6cd5\u58f0\u660e\u5c06\u88ab heap_4 \u4f7f\u7528\u7684\u6570\u7ec4\uff0c\u5e76\u5c06\u8be5\u6570\u7ec4\u653e\u7f6e\u5728\u7edd\u5bf9\u5730\u5740 0x20000000 \u4e2d</p>"},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#332-xportgetfreeheapsize-api","title":"3.3.2 xPortGetFreeHeapSize() API \u51fd\u6570","text":"<p><code>xPortGetFreeHeapSize()</code> API \u51fd\u6570\u8fd4\u56de\u8c03\u7528\u65f6\u5806\u4e2d\u7a7a\u95f2\u5b57\u8282\u7684\u6570\u91cf\u3002\u5b83\u4e0d\u63d0\u4f9b\u6709\u5173\u5806\u788e\u7247\u7684\u4fe1\u606f\u3002</p> <p>heap_3 \u4e2d\u672a\u5b9e\u73b0 <code>xPortGetFreeHeapSize()</code>\u3002</p> <p></p> <pre><code>size_t xPortGetFreeHeapSize( void );\n</code></pre> <p>\u6e05\u5355 3.7 xPortGetFreeHeapSize() API \u51fd\u6570\u539f\u578b</p> <p>\u8fd4\u56de\u503c\uff1a</p> <ul> <li><code>xPortGetFreeHeapSize()</code> \u8fd4\u56de\u8c03\u7528\u65f6\u5806\u4e2d\u672a\u5206\u914d\u5b57\u8282\u7684\u6570\u91cf\u3002</li> </ul>"},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#333-xportgetminimumeverfreeheapsize-api","title":"3.3.3 xPortGetMinimumEverFreeHeapSize() API \u51fd\u6570","text":"<p><code>xPortGetMinimumEverFreeHeapSize()</code> API \u51fd\u6570\u8fd4\u56de\u81ea FreeRTOS \u5e94\u7528\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\u4ee5\u6765\uff0c\u5806\u4e2d\u66fe\u7ecf\u5b58\u5728\u7684\u6700\u5c0f\u672a\u5206\u914d\u5b57\u8282\u6570\u3002</p> <p><code>xPortGetMinimumEverFreeHeapSize()</code> \u8fd4\u56de\u7684\u503c\u6307\u793a\u5e94\u7528\u7a0b\u5e8f\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u63a5\u8fd1\u4e8e\u8017\u5c3d\u5806\u7a7a\u95f4\u3002\u4f8b\u5982\uff0c\u5982\u679c <code>xPortGetMinimumEverFreeHeapSize()</code> \u8fd4\u56de 200\uff0c\u5219\u5728\u5e94\u7528\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\u4ee5\u6765\u7684\u67d0\u4e2a\u65f6\u523b\uff0c\u5b83\u8ddd\u79bb\u8017\u5c3d\u5806\u7a7a\u95f4\u4ec5\u5269 200 \u5b57\u8282\u3002</p> <p><code>xPortGetMinimumEverFreeHeapSize()</code> \u4e5f\u53ef\u7528\u4e8e\u4f18\u5316\u5806\u5927\u5c0f\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5728\u60a8\u77e5\u9053\u7684\u5177\u6709\u6700\u9ad8\u5806\u4f7f\u7528\u7387\u7684\u4ee3\u7801\u6267\u884c\u540e\uff0c<code>xPortGetMinimumEverFreeHeapSize()</code> \u8fd4\u56de 2000\uff0c\u5219\u53ef\u4ee5\u5c06 <code>configTOTAL_HEAP_SIZE</code> \u51cf\u5c0f\u6700\u591a 2000 \u5b57\u8282\u3002</p> <p><code>xPortGetMinimumEverFreeHeapSize()</code> \u4ec5\u5728 heap_4 \u548c heap_5 \u4e2d\u5b9e\u73b0\u3002</p> <p></p> <pre><code>size_t xPortGetMinimumEverFreeHeapSize( void );\n</code></pre> <p>\u6e05\u5355 3.8 xPortGetMinimumEverFreeHeapSize() API \u51fd\u6570\u539f\u578b</p> <p>\u8fd4\u56de\u503c\uff1a</p> <ul> <li><code>xPortGetMinimumEverFreeHeapSize()</code> \u8fd4\u56de\u81ea FreeRTOS \u5e94\u7528\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\u4ee5\u6765\uff0c\u5806\u4e2d\u66fe\u7ecf\u5b58\u5728\u7684\u6700\u5c0f\u672a\u5206\u914d\u5b57\u8282\u6570\u3002</li> </ul>"},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#334-vportgetheapstats-api","title":"3.3.4 vPortGetHeapStats() API \u51fd\u6570","text":"<p>Heap_4 \u548c heap_5 \u5b9e\u73b0\u4e86 <code>vPortGetHeapStats()</code>\uff0c\u8be5\u51fd\u6570\u901a\u8fc7\u5f15\u7528\u5c06 <code>HeapStats_t</code> \u7ed3\u6784\u4f5c\u4e3a\u552f\u4e00\u53c2\u6570\u4f20\u9012\u3002</p> <p>\u6e05\u5355 3.9 \u663e\u793a\u4e86 <code>vPortGetHeapStats()</code> \u51fd\u6570\u539f\u578b\u3002\u6e05\u5355 3.10 \u663e\u793a\u4e86 <code>HeapStats_t</code> \u7ed3\u6784\u6210\u5458\u3002</p> <p></p> <pre><code>void vPortGetHeapStats( HeapStats_t *xHeapStats );\n</code></pre> <p>\u6e05\u5355 3.9 vPortGetHeapStatus() API \u51fd\u6570\u539f\u578b</p> <p></p> <pre><code>/* Prototype of the vPortGetHeapStats() function. */\nvoid vPortGetHeapStats( HeapStats_t *xHeapStats );\n\n/* Definition of the HeapStats_t structure. All sizes specified in bytes. */\ntypedef struct xHeapStats\n{\n    /* The total heap size currently available - this is the sum of all the\n       free blocks, not the largest available block. */\n    size_t xAvailableHeapSpaceInBytes;\n\n    /* The size of the largest free block within the heap at the time\n       vPortGetHeapStats() is called. */\n    size_t xSizeOfLargestFreeBlockInBytes;\n\n    /* The size of the smallest free block within the heap at the time\n       vPortGetHeapStats() is called. */\n    size_t xSizeOfSmallestFreeBlockInBytes;\n\n    /* The number of free memory blocks within the heap at the time\n       vPortGetHeapStats() is called. */\n    size_t xNumberOfFreeBlocks;\n\n    /* The minimum amount of total free memory (sum of all free blocks)\n       there has been in the heap since the system booted. */\n    size_t xMinimumEverFreeBytesRemaining;\n\n    /* The number of calls to pvPortMalloc() that have returned a valid\n       memory block. */\n    size_t xNumberOfSuccessfulAllocations;\n\n    /* The number of calls to vPortFree() that has successfully freed a\n       block of memory. */\n    size_t xNumberOfSuccessfulFrees;\n} HeapStats_t;\n</code></pre> <p>\u6e05\u5355 3.10 HeapStatus_t() \u7ed3\u6784\u4f53</p>"},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#335","title":"3.3.5 \u6536\u96c6\u6bcf\u4e2a\u4efb\u52a1\u7684\u5806\u4f7f\u7528\u7edf\u8ba1\u4fe1\u606f","text":"<p>\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u8005\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u8ddf\u8e2a\u5b8f\u6536\u96c6\u6bcf\u4e2a\u4efb\u52a1\u7684\u5806\u4f7f\u7528\u7edf\u8ba1\u4fe1\u606f\uff1a - <code>traceMALLOC</code> - <code>traceFREE</code></p> <p>\u6e05\u5355 3.11 \u663e\u793a\u4e86\u8fd9\u4e9b\u8ddf\u8e2a\u5b8f\u7684\u4e00\u4e2a\u793a\u4f8b\u5b9e\u73b0\uff0c\u7528\u4e8e\u6536\u96c6\u6bcf\u4e2a\u4efb\u52a1\u7684\u5806\u4f7f\u7528\u7edf\u8ba1\u4fe1\u606f\u3002</p> <p></p> <pre><code>#define mainNUM_ALLOCATION_ENTRIES          512\n#define mainNUM_PER_TASK_ALLOCATION_ENTRIES 32\n\n/*-----------------------------------------------------------*/\n\n/*\n * +-----------------+--------------+----------------+-------------------+\n * | Allocating Task | Entry in use | Allocated Size | Allocated Pointer |\n * +-----------------+--------------+----------------+-------------------+\n * |                 |              |                |                   |\n * +-----------------+--------------+----------------+-------------------+\n * |                 |              |                |                   |\n * +-----------------+--------------+----------------+-------------------+\n */\ntypedef struct AllocationEntry\n{\n    BaseType_t xInUse;\n    TaskHandle_t xAllocatingTaskHandle;\n    size_t uxAllocatedSize;\n    void * pvAllocatedPointer;\n} AllocationEntry_t;\n\nAllocationEntry_t xAllocationEntries[ mainNUM_ALLOCATION_ENTRIES ];\n\n/*\n * +------+-----------------------+----------------------+\n * | Task | Memory Currently Held | Max Memory Ever Held |\n * +------+-----------------------+----------------------+\n * |      |                       |                      |\n * +------+-----------------------+----------------------+\n * |      |                       |                      |\n * +------+-----------------------+----------------------+\n */\ntypedef struct PerTaskAllocationEntry\n{\n    TaskHandle_t xTask;\n    size_t uxMemoryCurrentlyHeld;\n    size_t uxMaxMemoryEverHeld;\n} PerTaskAllocationEntry_t;\n\nPerTaskAllocationEntry_t xPerTaskAllocationEntries[ mainNUM_PER_TASK_ALLOCATION_ENTRIES ];\n\n/*-----------------------------------------------------------*/\n\nvoid TracepvPortMalloc( size_t uxAllocatedSize, void * pv )\n{\n    size_t i;\n    TaskHandle_t xAllocatingTaskHandle;\n    AllocationEntry_t * pxAllocationEntry = NULL;\n    PerTaskAllocationEntry_t * pxPerTaskAllocationEntry = NULL;\n\n    if( xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED )\n    {\n        xAllocatingTaskHandle = xTaskGetCurrentTaskHandle();\n\n        for( i = 0; i &lt; mainNUM_ALLOCATION_ENTRIES; i++ )\n        {\n            if( xAllocationEntries[ i ].xInUse == pdFALSE )\n            {\n                pxAllocationEntry = &amp;( xAllocationEntries[ i ] );\n                break;\n            }\n        }\n\n        /* Do we already have an entry in the per task table? */\n        for( i = 0; i &lt; mainNUM_PER_TASK_ALLOCATION_ENTRIES; i++ )\n        {\n            if( xPerTaskAllocationEntries[ i ].xTask == xAllocatingTaskHandle )\n            {\n                pxPerTaskAllocationEntry = &amp;( xPerTaskAllocationEntries[ i ] );\n                break;\n            }\n        }\n\n        /* We do not have an entry in the per task table. Find an empty slot. */\n        if( pxPerTaskAllocationEntry == NULL )\n        {\n            for( i = 0; i &lt; mainNUM_PER_TASK_ALLOCATION_ENTRIES; i++ )\n            {\n                if( xPerTaskAllocationEntries[ i ].xTask == NULL )\n                {\n                    pxPerTaskAllocationEntry = &amp;( xPerTaskAllocationEntries[ i ] );\n                    break;\n                }\n            }\n        }\n\n        /* Ensure that we have space in both the tables. */\n        configASSERT( pxAllocationEntry != NULL );\n        configASSERT( pxPerTaskAllocationEntry != NULL );\n\n        pxAllocationEntry-&gt;xAllocatingTaskHandle = xAllocatingTaskHandle;\n        pxAllocationEntry-&gt;xInUse = pdTRUE;\n        pxAllocationEntry-&gt;uxAllocatedSize = uxAllocatedSize;\n        pxAllocationEntry-&gt;pvAllocatedPointer = pv;\n\n        pxPerTaskAllocationEntry-&gt;xTask = xAllocatingTaskHandle;\n        pxPerTaskAllocationEntry-&gt;uxMemoryCurrentlyHeld += uxAllocatedSize;\n        if( pxPerTaskAllocationEntry-&gt;uxMaxMemoryEverHeld &lt; pxPerTaskAllocationEntry-&gt;uxMemoryCurrentlyHeld )\n        {\n            pxPerTaskAllocationEntry-&gt;uxMaxMemoryEverHeld = pxPerTaskAllocationEntry-&gt;uxMemoryCurrentlyHeld;\n        }\n    }\n}\n/*-----------------------------------------------------------*/\n\nvoid TracevPortFree( void * pv )\n{\n    size_t i;\n    AllocationEntry_t * pxAllocationEntry = NULL;\n    PerTaskAllocationEntry_t * pxPerTaskAllocationEntry = NULL;\n\n    for( i = 0; i &lt; mainNUM_ALLOCATION_ENTRIES; i++ )\n    {\n        if( ( xAllocationEntries[ i ].xInUse == pdTRUE ) &amp;&amp;\n            ( xAllocationEntries[ i ].pvAllocatedPointer == pv ) )\n        {\n            pxAllocationEntry = &amp;( xAllocationEntries [ i ] );\n            break;\n        }\n    }\n\n    /* Attempt to free a block that was never allocated. */\n    configASSERT( pxAllocationEntry != NULL );\n\n    for( i = 0; i &lt; mainNUM_PER_TASK_ALLOCATION_ENTRIES; i++ )\n    {\n        if( xPerTaskAllocationEntries[ i ].xTask == pxAllocationEntry-&gt;xAllocatingTaskHandle )\n        {\n            pxPerTaskAllocationEntry = &amp;( xPerTaskAllocationEntries[ i ] );\n            break;\n        }\n    }\n\n    /* An entry must exist in the per task table. */\n    configASSERT( pxPerTaskAllocationEntry != NULL );\n\n    pxPerTaskAllocationEntry-&gt;uxMemoryCurrentlyHeld -= pxAllocationEntry-&gt;uxAllocatedSize;\n\n    pxAllocationEntry-&gt;xInUse = pdFALSE;\n    pxAllocationEntry-&gt;xAllocatingTaskHandle = NULL;\n    pxAllocationEntry-&gt;uxAllocatedSize = 0;\n    pxAllocationEntry-&gt;pvAllocatedPointer = NULL;\n}\n/*-----------------------------------------------------------*/\n\n/* The following goes in FreeRTOSConfig.h: */\nextern void TracepvPortMalloc( size_t uxAllocatedSize, void * pv );\nextern void TracevPortFree( void * pv );\n\n#define traceMALLOC( pvReturn, xAllocatedBlockSize ) \\\nTracepvPortMalloc( xAllocatedBlockSize, pvReturn )\n\n#define traceFREE( pv, xAllocatedBlockSize ) \\\nTracevPortFree( pv )\n</code></pre> <p>\u6e05\u5355 3.11 \u6536\u96c6\u6bcf\u4e2a\u4efb\u52a1\u7684\u5806\u4f7f\u7528\u7edf\u8ba1\u4fe1\u606f</p>"},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#336","title":"3.3.6 \u5185\u5b58\u5206\u914d\u5931\u8d25\u94a9\u5b50\u51fd\u6570","text":"<p>\u50cf\u6807\u51c6\u5e93\u7684 <code>malloc()</code> \u51fd\u6570\u4e00\u6837\uff0c\u5982\u679c <code>pvPortMalloc()</code> \u65e0\u6cd5\u5206\u914d\u8bf7\u6c42\u7684 RAM\uff0c\u5219\u8fd4\u56de NULL\u3002\u5982\u679c malloc\u5931\u8d25\u94a9\u5b50\uff08\u6216\u56de\u8c03\uff09\u662f\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u7684\u51fd\u6570\uff0c\u5982\u679c <code>pvPortMalloc()</code> \u8fd4\u56de NULL\uff0c\u5219\u8c03\u7528\u8be5\u51fd\u6570\u3002\u5fc5\u987b\u5728 FreeRTOSConfig.h \u4e2d\u5c06 <code>configUSE_MALLOC_FAILED_HOOK</code> \u8bbe\u7f6e\u4e3a 1\uff0c\u4ee5\u4fbf\u53d1\u751f\u56de\u8c03\u3002\u5982\u679c malloc \u5931\u8d25\u94a9\u5b50\u5728\u4f7f\u7528\u52a8\u6001\u5185\u5b58\u5206\u914d\u521b\u5efa\u5185\u6838\u5bf9\u8c61\u7684 FreeRTOS API \u51fd\u6570\u5185\u90e8\u88ab\u8c03\u7528\uff0c\u5219\u8be5\u5bf9\u8c61\u5c06\u65e0\u6cd5\u88ab\u521b\u5efa\u3002</p> <p>\u5982\u679c\u5728 FreeRTOSConfig.h \u4e2d\u5c06 <code>configUSE_MALLOC_FAILED_HOOK</code> \u8bbe\u7f6e\u4e3a 1\uff0c\u5219\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u63d0\u4f9b\u4e00\u4e2a malloc\u5931\u8d25\u94a9\u5b50\u51fd\u6570\uff0c\u5176\u540d\u79f0\u548c\u539f\u578b\u5982\u6e05\u5355 3.12 \u6240\u793a\u3002\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4ee5\u9002\u5408\u5176\u5e94\u7528\u7a0b\u5e8f\u7684\u4efb\u4f55\u65b9\u5f0f\u5b9e\u73b0\u8be5\u51fd\u6570\u3002\u8bb8\u591a\u63d0\u4f9b\u7684 FreeRTOS \u6f14\u793a\u5e94\u7528\u7a0b\u5e8f\u5c06\u5206\u914d\u5931\u8d25\u89c6\u4e3a\u81f4\u547d\u9519\u8bef\uff0c\u4f46\u8fd9\u5bf9\u4e8e\u751f\u4ea7\u7cfb\u7edf\u6765\u8bf4\u5e76\u4e0d\u662f\u6700\u4f73\u5b9e\u8df5\uff0c\u751f\u4ea7\u7cfb\u7edf\u5e94\u8be5\u80fd\u591f\u4ece\u5206\u914d\u5931\u8d25\u4e2d\u5e73\u7a33\u6062\u590d\u3002</p> <p></p> <pre><code>void vApplicationMallocFailedHook( void );\n</code></pre> <p>\u6e05\u5355 3.12 malloc \u5931\u8d25\u94a9\u5b50\u51fd\u6570\u7684\u540d\u79f0\u548c\u539f\u578b</p>"},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#337","title":"3.3.7 \u5c06\u4efb\u52a1\u5806\u6808\u653e\u7f6e\u5728\u5feb\u901f\u5185\u5b58\u4e2d","text":"<p>\u7531\u4e8e\u5806\u6808\u4ee5\u8f83\u9ad8\u7684\u901f\u5ea6\u88ab\u5199\u5165\u548c\u8bfb\u53d6\uff0c\u56e0\u6b64\u5b83\u4eec\u5e94\u8be5\u653e\u7f6e\u5728\u5feb\u901f\u5185\u5b58\u4e2d\uff0c\u4f46\u8fd9\u53ef\u80fd\u4e0d\u662f\u60a8\u5e0c\u671b\u5806\u6240\u5728\u7684\u4f4d\u7f6e\u3002FreeRTOS \u4f7f\u7528 <code>pvPortMallocStack()</code> \u548c <code>vPortFreeStack()</code> \u5b8f\u6765\u53ef\u9009\u5730\u4f7f\u5728 FreeRTOS API \u4ee3\u7801\u4e2d\u5206\u914d\u7684\u5806\u6808\u5177\u6709\u81ea\u5df1\u7684\u5185\u5b58\u5206\u914d\u5668\u3002\u5982\u679c\u60a8\u5e0c\u671b\u5806\u6808\u6765\u81ea\u7531\u5806\uff08\u5373\u7531 <code>pvPortMalloc()</code> \u7ba1\u7406\u7684\u5806\uff09\uff0c\u5219\u53ef\u4ee5\u5c06 <code>pvPortMallocStack()</code> \u548c <code>vPortFreeStack()</code> \u4fdd\u6301\u672a\u5b9a\u4e49\u72b6\u6001\uff0c\u56e0\u4e3a\u5b83\u4eec\u9ed8\u8ba4\u8c03\u7528 <code>pvPortMalloc()</code> \u548c <code>vPortFree()</code>\u3002\u5426\u5219\uff0c\u8bf7\u6309\u6e05\u5355 3.13 \u6240\u793a\u5c06\u5b8f\u5b9a\u4e49\u4e3a\u8c03\u7528\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u7684\u51fd\u6570\u3002</p> <p></p> <pre><code>/* Functions provided by the application writer than allocate and free\n   memory from a fast area of RAM. */\n\nvoid *pvMallocFastMemory( size_t xWantedSize );\n\nvoid vPortFreeFastMemory( void *pvBlockToFree );\n\n/* Add the following to FreeRTOSConfig.h to map the pvPortMallocStack()\n   and vPortFreeStack() macros to the functions that use fast memory. */\n\n#define pvPortMallocStack( x ) pvMallocFastMemory( x )\n\n#define vPortFreeStack( x ) vPortFreeFastMemory( x )\n</code></pre> <p>\u6e05\u5355 3.13 \u5c06 pvPortMallocStack() \u548c vPortFreeStack() \u5b8f\u6620\u5c04\u5230\u5e94\u7528\u7a0b\u5e8f\u5b9a\u4e49\u7684\u5185\u5b58\u5206\u914d\u5668</p>"},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#34","title":"3.4 \u4f7f\u7528\u9759\u6001\u5185\u5b58\u5206\u914d","text":"<p>\u7b2c 3.1.4 \u8282\u5217\u51fa\u4e86\u52a8\u6001\u5185\u5b58\u5206\u914d\u5e26\u6765\u7684\u67d0\u4e9b\u7f3a\u70b9\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u4e9b\u95ee\u9898\uff0c\u9759\u6001\u5185\u5b58\u5206\u914d\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u663e\u5f0f\u521b\u5efa\u5e94\u7528\u7a0b\u5e8f\u6240\u9700\u7684\u6bcf\u4e2a\u5185\u5b58\u5757\u3002\u8fd9\u5177\u6709\u4ee5\u4e0b\u4f18\u70b9\uff1a</p> <ul> <li>\u6240\u6709\u5fc5\u9700\u7684\u5185\u5b58\u5728\u7f16\u8bd1\u65f6\u5df2\u77e5\u3002</li> <li>\u6240\u6709\u5185\u5b58\u90fd\u662f\u786e\u5b9a\u6027\u7684\u3002</li> </ul> <p>\u8fd8\u6709\u5176\u4ed6\u4f18\u70b9\uff0c\u4f46\u968f\u7740\u8fd9\u4e9b\u4f18\u70b9\u7684\u51fa\u73b0\uff0c\u8fd8\u5e26\u6765\u4e86\u4e00\u4e9b\u590d\u6742\u6027\u3002\u4e3b\u8981\u7684\u590d\u6742\u6027\u662f\u589e\u52a0\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u7528\u6237\u51fd\u6570\u6765\u7ba1\u7406\u4e00\u4e9b\u5185\u6838\u5185\u5b58\uff0c\u7b2c\u4e8c\u4e2a\u590d\u6742\u6027\u662f\u9700\u8981\u786e\u4fdd\u6240\u6709\u9759\u6001\u5185\u5b58\u5728\u5408\u9002\u7684\u4f5c\u7528\u57df\u4e2d\u58f0\u660e\u3002</p>"},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#341","title":"3.4.1 \u542f\u7528\u9759\u6001\u5185\u5b58\u5206\u914d","text":"<p>\u901a\u8fc7\u5728 FreeRTOSConfig.h \u4e2d\u5c06 <code>configSUPPORT_STATIC_ALLOCATION</code> \u8bbe\u7f6e\u4e3a 1 \u6765\u542f\u7528\u9759\u6001\u5185\u5b58\u5206\u914d\u3002\u5f53\u542f\u7528\u6b64\u914d\u7f6e\u65f6\uff0c\u5185\u6838\u4f1a\u542f\u7528\u6240\u6709\u5185\u6838\u51fd\u6570\u7684 <code>static</code> \u7248\u672c\u3002\u8fd9\u4e9b\u51fd\u6570\u5305\u62ec\uff1a</p> <ul> <li><code>xTaskCreateStatic</code></li> <li><code>xEventGroupCreateStatic</code></li> <li><code>xEventGroupGetStaticBuffer</code></li> <li><code>xQueueGenericCreateStatic</code></li> <li><code>xQueueGenericGetStaticBuffers</code></li> <li><code>xQueueCreateMutexStatic</code></li> <li>\u5982\u679c <code>configUSE_MUTEXES</code> \u4e3a 1</li> <li><code>xQueueCreateCountingSemaphoreStatic</code></li> <li>\u5982\u679c <code>configUSE_COUNTING_SEMAPHORES</code> \u4e3a 1</li> <li><code>xStreamBufferGenericCreateStatic</code></li> <li><code>xStreamBufferGetStaticBuffers</code></li> <li><code>xTimerCreateStatic</code></li> <li>\u5982\u679c <code>configUSE_TIMERS</code> \u4e3a 1</li> <li><code>xTimerGetStaticBuffer</code></li> <li>\u5982\u679c <code>configUSE_TIMERS</code> \u4e3a 1</li> </ul> <p>\u8fd9\u4e9b\u51fd\u6570\u5c06\u5728\u672c\u4e66\u7684\u76f8\u5173\u7ae0\u8282\u4e2d\u8fdb\u884c\u89e3\u91ca\u3002</p>"},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#342","title":"3.4.2 \u9759\u6001\u5185\u90e8\u5185\u6838\u5185\u5b58","text":"<p>\u542f\u7528\u9759\u6001\u5185\u5b58\u5206\u914d\u65f6\uff0c\u7a7a\u95f2\u4efb\u52a1\u548c\u5b9a\u65f6\u5668\u4efb\u52a1\uff08\u5982\u679c\u542f\u7528\uff09\u5c06\u4f7f\u7528\u7528\u6237\u51fd\u6570\u63d0\u4f9b\u7684\u9759\u6001\u5185\u5b58\u3002\u8fd9\u4e9b\u7528\u6237\u51fd\u6570\u662f\uff1a</p> <ul> <li><code>vApplicationGetTimerTaskMemory</code></li> <li>\u5982\u679c <code>configUSE_TIMERS</code> \u4e3a 1</li> <li><code>vApplicationGetIdleTaskMemory</code></li> </ul>"},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#3421-vapplicationgettimertaskmemory","title":"3.4.2.1 vApplicationGetTimerTaskMemory","text":"<p>\u5982\u679c\u540c\u65f6\u542f\u7528\u4e86 <code>configSUPPORT_STATIC_ALLOCATION</code> \u548c <code>configUSE_TIMERS</code>\uff0c\u5185\u6838\u5c06\u8c03\u7528 <code>vApplicationGetTimerTaskMemory()</code>\uff0c\u4ee5\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u521b\u5efa\u5e76\u8fd4\u56de\u7528\u4e8e\u5b9a\u65f6\u5668\u4efb\u52a1 TCB \u548c\u5b9a\u65f6\u5668\u4efb\u52a1\u5806\u6808\u7684\u5185\u5b58\u7f13\u51b2\u533a\u3002\u8be5\u51fd\u6570\u8fd8\u5c06\u8fd4\u56de\u5b9a\u65f6\u5668\u4efb\u52a1\u5806\u6808\u7684\u5927\u5c0f\u3002\u5b9a\u65f6\u5668\u4efb\u52a1\u5185\u5b58\u51fd\u6570\u7684\u5efa\u8bae\u5b9e\u73b0\u5982\u6e05\u5355 3.14 \u6240\u793a\u3002</p> <p></p> <pre><code>void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer,\n                                     StackType_t **ppxTimerTaskStackBuffer,\n                                     uint32_t *pulTimerTaskStackSize )\n{\n  /* If the buffers to be provided to the Timer task are declared inside this\n  function then they must be declared static - otherwise they will be allocated on\n  the stack and hence would not exists after this function exits. */\n  static StaticTask_t xTimerTaskTCB;\n  static StackType_t uxTimerTaskStack[ configMINIMAL_STACK_SIZE ];\n\n  /* Pass out a pointer to the StaticTask_t structure in which the Timer task's\n  state will be stored. */\n  *ppxTimerTaskTCBBuffer = &amp;xTimerTaskTCB;\n\n  /* Pass out the array that will be used as the Timer task's stack. */\n  *ppxTimerTaskStackBuffer = uxTimerTaskStack;\n\n  /* Pass out the stack size of the array pointed to by *ppxTimerTaskStackBuffer.\n  Note the stack size is a count of StackType_t */\n  *pulTimerTaskStackSize = sizeof(uxTimerTaskStack) / sizeof(*uxTimerTaskStack);\n}\n</code></pre> <p>\u6e05\u5355 3.14 vApplicationGetTimerTaskMemory \u7684\u5178\u578b\u5b9e\u73b0</p> <p>\u7531\u4e8e\u4efb\u4f55\u7cfb\u7edf\u4e2d\u53ea\u6709\u4e00\u4e2a\u5b9a\u65f6\u5668\u4efb\u52a1\uff08\u5305\u62ec SMP\uff09\uff0c\u56e0\u6b64\u5b9a\u65f6\u5668\u4efb\u52a1\u5185\u5b58\u95ee\u9898\u7684\u6709\u6548\u89e3\u51b3\u65b9\u6848\u662f\u5728 <code>vApplicationGetTimeTaskMemory()</code> \u51fd\u6570\u4e2d\u5206\u914d\u9759\u6001\u7f13\u51b2\u533a\uff0c\u5e76\u5c06\u7f13\u51b2\u533a\u6307\u9488\u8fd4\u56de\u7ed9\u5185\u6838\u3002</p>"},{"location":"ch03-%E5%A0%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/#3422-vapplicationgetidletaskmemory","title":"3.4.2.2 vApplicationGetIdleTaskMemory","text":"<p>\u7a7a\u95f2\u4efb\u52a1\u5728\u6838\u5fc3\u8017\u5c3d\u8c03\u5ea6\u7684\u5de5\u4f5c\u65f6\u8fd0\u884c\u3002\u7a7a\u95f2\u4efb\u52a1\u6267\u884c\u4e00\u4e9b\u7ef4\u62a4\u5de5\u4f5c\uff0c\u5982\u679c\u542f\u7528\uff0c\u8fd8\u53ef\u4ee5\u89e6\u53d1\u7528\u6237\u7684 <code>vTaskIdleHook()</code>\u3002\u5728\u5bf9\u79f0\u591a\u5904\u7406\u7cfb\u7edf\uff08SMP\uff09\u4e2d\uff0c\u8fd8\u6709\u5269\u4f59\u6838\u5fc3\u7684\u975e\u7ef4\u62a4\u7a7a\u95f2\u4efb\u52a1\uff0c\u4f46\u8fd9\u4e9b\u4efb\u52a1\u7684\u5806\u6808\u5927\u5c0f\u5728\u5185\u90e8\u9759\u6001\u5206\u914d\u4e3a <code>configMINIMAL_STACK_SIZE</code> \u5b57\u8282\u3002</p> <p>\u8c03\u7528 <code>vApplicationGetIdleTaskMemory</code> \u51fd\u6570\u662f\u4e3a\u4e86\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u521b\u5efa \"\u4e3b\" \u7a7a\u95f2\u4efb\u52a1\u6240\u9700\u7684\u7f13\u51b2\u533a\u3002\u6e05\u5355 3.15 \u663e\u793a\u4e86\u4f7f\u7528\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u521b\u5efa\u6240\u9700\u7f13\u51b2\u533a\u7684 <code>vApplicationIdleTaskMemory()</code> \u51fd\u6570\u7684\u5178\u578b\u5b9e\u73b0\u3002</p> <p></p> <pre><code>void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer,\n                                    StackType_t **ppxIdleTaskStackBuffer,\n                                    uint32_t *pulIdleTaskStackSize )\n{\n  static StaticTask_t xIdleTaskTCB;\n  static StackType_t uxIdleTaskStack[ configMINIMAL_STACK_SIZE ];\n\n  *ppxIdleTaskTCBBuffer = &amp;xIdleTaskTCB;\n  *ppxIdleTaskStackBuffer = uxIdleTaskStack;\n  *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;\n}\n</code></pre> <p>\u6e05\u5355 3.15 vApplicationGetIdleTaskMemory \u7684\u5178\u578b\u5b9e\u73b0</p>"},{"location":"ch04-%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/","title":"4 \u4efb\u52a1\u7ba1\u7406","text":""},{"location":"ch04-%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/#41","title":"4.1 \u7b80\u4ecb","text":""},{"location":"ch04-%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/#411","title":"4.1.1 \u8303\u56f4","text":"<p>\u672c\u7ae0\u6db5\u76d6\uff1a</p> <ul> <li>FreeRTOS \u5982\u4f55\u4e3a\u5e94\u7528\u4e2d\u7684\u6bcf\u4e2a\u4efb\u52a1\u5206\u914d\u5904\u7406\u65f6\u95f4\u3002</li> <li>FreeRTOS \u5982\u4f55\u9009\u62e9\u5728\u4efb\u610f\u65f6\u95f4\u70b9\u6267\u884c\u54ea\u4e2a\u4efb\u52a1\u3002</li> <li>\u6bcf\u4e2a\u4efb\u52a1\u7684\u76f8\u5bf9\u4f18\u5148\u7ea7\u5982\u4f55\u5f71\u54cd\u7cfb\u7edf\u884c\u4e3a\u3002</li> <li>\u4efb\u52a1\u53ef\u4ee5\u5b58\u5728\u7684\u72b6\u6001\u3002</li> </ul> <p>\u672c\u7ae0\u8fd8\u8ba8\u8bba\uff1a</p> <ul> <li>\u5982\u4f55\u5b9e\u73b0\u4efb\u52a1\u3002</li> <li>\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u6216\u591a\u4e2a\u4efb\u52a1\u5b9e\u4f8b\u3002</li> <li>\u5982\u4f55\u4f7f\u7528\u4efb\u52a1\u53c2\u6570\u3002</li> <li>\u5982\u4f55\u66f4\u6539\u5df2\u521b\u5efa\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002</li> <li>\u5982\u4f55\u5220\u9664\u4efb\u52a1\u3002</li> <li>\u5982\u4f55\u4f7f\u7528\u4efb\u52a1\u5b9e\u73b0\u5468\u671f\u6027\u5904\u7406\u3002\uff08\u540e\u7eed\u7ae0\u8282\u5c06\u63cf\u8ff0\u5982\u4f55\u4f7f\u7528\u8f6f\u4ef6\u5b9a\u65f6\u5668\u5b9e\u73b0\u76f8\u540c\u529f\u80fd\u3002\uff09</li> <li>\u7a7a\u95f2\u4efb\u52a1\u4f55\u65f6\u6267\u884c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u5b83\u3002</li> </ul> <p>\u672c\u7ae0\u4ecb\u7ecd\u7684\u6982\u5ff5\u662f\u7406\u89e3\u5982\u4f55\u4f7f\u7528 FreeRTOS \u4ee5\u53ca FreeRTOS \u5e94\u7528\u7a0b\u5e8f\u884c\u4e3a\u7684\u57fa\u7840\u3002\u56e0\u6b64\uff0c\u8fd9\u662f\u672c\u4e66\u4e2d\u6700\u8be6\u7ec6\u7684\u7ae0\u8282\u3002</p>"},{"location":"ch04-%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/#42","title":"4.2 \u4efb\u52a1\u51fd\u6570","text":"<p>\u4efb\u52a1\u4ee5 C \u51fd\u6570\u7684\u5f62\u5f0f\u5b9e\u73b0\u3002\u4efb\u52a1\u5fc5\u987b\u5b9e\u73b0\u9884\u671f\u7684\u51fd\u6570\u539f\u578b\uff0c\u5982\u6e05\u5355 4.1 \u6240\u793a\uff0c\u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a void \u6307\u9488\u53c2\u6570\u5e76\u8fd4\u56de void\u3002</p> <pre><code>void vATaskFunction( void * pvParameters );\n</code></pre> <p>\u6e05\u5355 4.1 \u4efb\u52a1\u51fd\u6570\u539f\u578b</p> <p>\u6bcf\u4e2a\u4efb\u52a1\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u5c0f\u7a0b\u5e8f\u3002\u5b83\u6709\u4e00\u4e2a\u5165\u53e3\u70b9\uff0c\u901a\u5e38\u4f1a\u5728\u65e0\u9650\u5faa\u73af\u4e2d\u8fd0\u884c\uff0c\u5e76\u4e14\u4e0d\u4f1a\u9000\u51fa\u3002\u6e05\u5355 4.2 \u663e\u793a\u4e86\u4e00\u4e2a\u5178\u578b\u4efb\u52a1\u7684\u7ed3\u6784\u3002</p> <p>FreeRTOS \u4efb\u52a1\u4e0d\u5f97\u4ee5\u4efb\u4f55\u65b9\u5f0f\u4ece\u5b9e\u73b0\u5b83\u7684\u51fd\u6570\u8fd4\u56de\u3002\u5b83\u4e0d\u5f97\u5305\u542b 'return' \u8bed\u53e5\uff0c\u4e5f\u4e0d\u5f97\u5141\u8bb8\u6267\u884c\u8d85\u51fa\u5176\u5b9e\u73b0\u51fd\u6570\u7684\u672b\u5c3e\u3002\u5982\u679c\u4e0d\u518d\u9700\u8981\u4efb\u52a1\uff0c\u5e94\u663e\u5f0f\u5220\u9664\u5b83\uff0c\u5982\u6e05\u5355 4.2 \u6240\u793a\u3002</p> <p>\u5355\u4e2a\u4efb\u52a1\u51fd\u6570\u5b9a\u4e49\u53ef\u7528\u4e8e\u521b\u5efa\u4efb\u610f\u6570\u91cf\u7684\u4efb\u52a1\uff0c\u5176\u4e2d\u6bcf\u4e2a\u521b\u5efa\u7684\u4efb\u52a1\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u6267\u884c\u5b9e\u4f8b\u3002\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u6709\u81ea\u5df1\u7684\u5806\u6808\uff0c\u56e0\u6b64\u4e5f\u6709\u4efb\u52a1\u672c\u8eab\u5b9a\u4e49\u7684\u4efb\u4f55\u81ea\u52a8\uff08\u5806\u6808\uff09\u53d8\u91cf\u7684\u526f\u672c\u3002</p> <pre><code>void vATaskFunction( void * pvParameters )\n{\n    /*\n     * Stack-allocated variables can be declared normally when inside a function.\n     * Each instance of a task created using this example function will have its\n     * own separate instance of lStackVariable allocated on the task's stack.\n     */\n    long lStackVariable = 0;\n\n    /*\n     * In contrast to stack allocated variables, variables declared with the `static`\n     * keyword are allocated to a specific location in memory by the linker.\n     * This means that all tasks calling vATaskFunction will share the same\n     * instance of lStaticVariable.\n     */\n    static long lStaticVariable = 0;\n\n    for( ;; )\n    {\n        /* The code to implement the task functionality will go here. */\n    }\n\n    /*\n     * If the task implementation ever exits the above loop, then the task\n     * must be deleted before reaching the end of its implementing function.\n     * When NULL is passed as a parameter to the vTaskDelete() API function,\n     * this indicates that the task to be deleted is the calling (this) task.\n     */\n    vTaskDelete( NULL );\n}\n</code></pre> <p>\u6e05\u5355 4.2 \u5178\u578b\u4efb\u52a1\u51fd\u6570\u7684\u7ed3\u6784</p>"},{"location":"ch04-%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/#43","title":"4.3 \u9876\u7ea7\u4efb\u52a1\u72b6\u6001","text":"<p>\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u7531\u8bb8\u591a\u4efb\u52a1\u7ec4\u6210\u3002\u5982\u679c\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u7684\u5904\u7406\u5668\u53ea\u6709\u4e00\u4e2a\u6838\u5fc3\uff0c\u90a3\u4e48\u5728\u4efb\u4f55\u7ed9\u5b9a\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u4efb\u52a1\u53ef\u4ee5\u6267\u884c\u3002\u8fd9\u610f\u5473\u7740\u4e00\u4e2a\u4efb\u52a1\u53ef\u80fd\u5904\u4e8e\u4e24\u79cd\u72b6\u6001\u4e4b\u4e00\uff1a\u8fd0\u884c\u4e2d\u548c\u672a\u8fd0\u884c\u3002\u9996\u5148\u8003\u8651\u8fd9\u79cd\u7b80\u5355\u7684\u6a21\u578b\u3002\u7a0d\u540e\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u63cf\u8ff0\u672a\u8fd0\u884c\u72b6\u6001\u7684\u51e0\u79cd\u5b50\u72b6\u6001\u3002</p> <p>\u5f53\u5904\u7406\u5668\u6b63\u5728\u6267\u884c\u67d0\u4e2a\u4efb\u52a1\u7684\u4ee3\u7801\u65f6\uff0c\u8be5\u4efb\u52a1\u5904\u4e8e\u8fd0\u884c\u4e2d\u72b6\u6001\u3002\u5f53\u4efb\u52a1\u5904\u4e8e\u672a\u8fd0\u884c\u72b6\u6001\u65f6\uff0c\u4efb\u52a1\u88ab\u6682\u505c\uff0c\u5176\u72b6\u6001\u5df2\u88ab\u4fdd\u5b58\uff0c\u4ee5\u4fbf\u5728\u8c03\u5ea6\u7a0b\u5e8f\u51b3\u5b9a\u5b83\u5e94\u8be5\u518d\u6b21\u8fdb\u5165\u8fd0\u884c\u4e2d\u72b6\u6001\u65f6\u6062\u590d\u6267\u884c\u3002\u5f53\u4efb\u52a1\u6062\u590d\u6267\u884c\u65f6\uff0c\u5b83\u5c06\u4ece\u5b83\u5728\u79bb\u5f00\u8fd0\u884c\u4e2d\u72b6\u6001\u4e4b\u524d\u8981\u6267\u884c\u7684\u6307\u4ee4\u5904\u7ee7\u7eed\u6267\u884c\u3002</p> <p></p> <p> \u56fe 4.1 \u9876\u7ea7\u4efb\u52a1\u72b6\u6001\u548c\u8f6c\u6362</p> <p>\u4ece\u672a\u8fd0\u884c\u72b6\u6001\u8f6c\u6362\u5230\u8fd0\u884c\u4e2d\u72b6\u6001\u7684\u4efb\u52a1\u88ab\u79f0\u4e3a\u201c\u5207\u6362\u5230\u201d\u6216\u201c\u8c03\u5165\u201d\u3002\u76f8\u53cd\uff0c\u4ece\u8fd0\u884c\u4e2d\u72b6\u6001\u8f6c\u6362\u5230\u672a\u8fd0\u884c\u72b6\u6001\u7684\u4efb\u52a1\u88ab\u79f0\u4e3a\u201c\u5207\u6362\u51fa\u201d\u6216\u201c\u8c03\u51fa\u201d\u3002\u53ea\u6709\u8c03\u5ea6\u7a0b\u5e8f\u53ef\u4ee5\u5c06\u4efb\u52a1\u5207\u6362\u8fdb\u51fa\u8fd0\u884c\u4e2d\u72b6\u6001\u3002</p>"},{"location":"ch04-%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/#44","title":"4.4 \u4efb\u52a1\u521b\u5efa","text":"<p>\u53ef\u4ee5\u4f7f\u7528\u516d\u4e2a API \u51fd\u6570\u6765\u521b\u5efa\u4efb\u52a1\uff1a <code>xTaskCreate()</code>, <code>xTaskCreateStatic()</code>, <code>xTaskCreateRestricted()</code>, <code>xTaskCreateRestrictedStatic()</code>, <code>xTaskCreateAffinitySet()</code>\uff0c\u548c <code>xTaskCreateStaticAffinitySet()</code></p> <p>\u6bcf\u4e2a\u4efb\u52a1\u9700\u8981\u4e24\u4e2a RAM \u5757\uff1a\u4e00\u4e2a\u7528\u4e8e\u4fdd\u5b58\u5176\u4efb\u52a1\u63a7\u5236\u5757\uff08TCB\uff09\uff0c\u4e00\u4e2a\u7528\u4e8e\u5b58\u50a8\u5176\u5806\u6808\u3002FreeRTOS API \u51fd\u6570\u540d\u79f0\u4e2d\u5e26\u6709\u201cStatic\u201d\u7684\u51fd\u6570\u4f7f\u7528\u5728\u8fd0\u884c\u65f6\u4ece\u7cfb\u7edf\u5806\u4e2d\u52a8\u6001\u5206\u914d\u6240\u9700 RAM\u3002</p> <p>\u67d0\u4e9b FreeRTOS \u79fb\u690d\u7248\u652f\u6301\u4ee5\u201c\u53d7\u9650\u201d\u6216\u201c\u7279\u6743\u201d\u6a21\u5f0f\u8fd0\u884c\u7684\u4efb\u52a1\u3002API \u51fd\u6570\u540d\u79f0\u4e2d\u5e26\u6709\u201cRestricted\u201d\u7684 FreeRTOS \u51fd\u6570\u521b\u5efa\u7684\u4efb\u52a1\u5728\u8bbf\u95ee\u7cfb\u7edf\u5185\u5b58\u65f6\u53d7\u5230\u9650\u5236\u3002\u6ca1\u6709\u201cRestricted\u201d\u7684 API \u51fd\u6570\u521b\u5efa\u7684\u4efb\u52a1\u5728\u201c\u7279\u6743\u6a21\u5f0f\u201d\u4e0b\u6267\u884c\uff0c\u53ef\u4ee5\u8bbf\u95ee\u7cfb\u7edf\u7684\u6574\u4e2a\u5185\u5b58\u6620\u5c04\u3002</p> <p>\u652f\u6301\u5bf9\u79f0\u591a\u5904\u7406\uff08SMP\uff09\u7684 FreeRTOS \u79fb\u690d\u7248\u5141\u8bb8\u4e0d\u540c\u7684\u4efb\u52a1\u5728\u540c\u4e00 CPU \u7684\u591a\u4e2a\u6838\u5fc3\u4e0a\u540c\u65f6\u8fd0\u884c\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u79fb\u690d\u7248\uff0c\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u540d\u79f0\u4e2d\u5e26\u6709\u201cAffinity\u201d\u7684\u51fd\u6570\u6765\u6307\u5b9a\u4efb\u52a1\u5c06\u5728\u5176\u4e0a\u8fd0\u884c\u7684\u6838\u5fc3\u3002</p> <p>FreeRTOS \u4efb\u52a1\u521b\u5efa API \u51fd\u6570\u76f8\u5f53\u590d\u6742\u3002\u672c\u6587\u6863\u4e2d\u7684\u5927\u591a\u6570\u793a\u4f8b\u4f7f\u7528 <code>xTaskCreate()</code>\uff0c\u56e0\u4e3a\u5b83\u662f\u6700\u7b80\u5355\u7684\u51fd\u6570\u3002</p>"},{"location":"ch04-%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/#441-xtaskcreate-api","title":"4.4.1 xTaskCreate() API \u51fd\u6570","text":"<p>\u6e05\u5355 4.3 \u663e\u793a\u4e86 <code>xTaskCreate()</code> API \u51fd\u6570\u539f\u578b\u3002 <code>xTaskCreateStatic()</code> \u6709\u4e24\u4e2a\u989d\u5916\u7684\u53c2\u6570\uff0c\u6307\u5411\u9884\u5206\u914d\u7684\u5185\u5b58\uff0c\u4ee5\u4fdd\u5b58\u4efb\u52a1\u7684\u6570\u636e\u7ed3\u6784\u548c\u5806\u6808\uff0c\u5206\u522b\u3002\u7b2c 2.5 \u8282\uff1a\u6570\u636e\u7c7b\u578b\u548c\u7f16\u7801\u98ce\u683c\u6307\u5357 \u63cf\u8ff0\u4e86\u4f7f\u7528\u7684\u6570\u636e\u7c7b\u578b\u548c\u547d\u540d\u7ea6\u5b9a\u3002</p> <p></p> <pre><code>BaseType_t xTaskCreate( TaskFunction_t pvTaskCode,\n                        const char * const pcName,\n                        configSTACK_DEPTH_TYPE usStackDepth,\n                        void * pvParameters,\n                        UBaseType_t uxPriority,\n                        TaskHandle_t * pxCreatedTask );\n</code></pre> <p>\u6e05\u5355 4.3 xTaskCreate() API \u51fd\u6570\u539f\u578b</p> <p>xTaskCreate() \u53c2\u6570\u548c\u8fd4\u56de\u503c\uff1a</p> <ul> <li><code>pvTaskCode</code></li> </ul> <p>\u4efb\u52a1\u53ea\u662f\u6c38\u4e0d\u9000\u51fa\u7684 C \u51fd\u6570\uff0c\u901a\u5e38\u5728\u65e0\u9650\u5faa\u73af\u4e2d\u5b9e\u73b0\u3002<code>pvTaskCode</code> \u53c2\u6570\u53ea\u662f\u6307\u5411\u5b9e\u73b0\u4efb\u52a1\u7684\u51fd\u6570\u7684\u6307\u9488\uff08\u5b9e\u9645\u4e0a\uff0c\u53ea\u662f\u51fd\u6570\u7684\u540d\u79f0\uff09\u3002</p> <ul> <li><code>pcName</code></li> </ul> <p>\u4efb\u52a1\u7684\u63cf\u8ff0\u6027\u540d\u79f0\u3002FreeRTOS \u4e0d\u4ee5\u4efb\u4f55\u65b9\u5f0f\u4f7f\u7528\u5b83\uff0c\u5b83\u4ec5\u4f5c\u4e3a\u8c03\u8bd5\u5de5\u5177\u3002\u901a\u8fc7\u53ef\u8bfb\u6027\u5f3a\u7684\u540d\u79f0\u8bc6\u522b\u4efb\u52a1\uff0c\u6bd4\u901a\u8fc7\u53e5\u67c4\u8bc6\u522b\u4efb\u52a1\u8981\u7b80\u5355\u5f97\u591a\u3002</p> <p>\u5e94\u7528\u7a0b\u5e8f\u5b9a\u4e49\u7684\u5e38\u91cf <code>configMAX_TASK_NAME_LEN</code> \u5b9a\u4e49\u4e86\u4efb\u52a1\u540d\u79f0\u7684\u6700\u5927\u957f\u5ea6\uff0c\u5305\u62ec NULL \u7ec8\u6b62\u7b26\u3002\u63d0\u4f9b\u66f4\u957f\u5b57\u7b26\u4e32\u4f1a\u5bfc\u81f4\u5b57\u7b26\u4e32\u88ab\u622a\u65ad\u3002</p> <ul> <li><code>usStackDepth</code></li> </ul> <p>\u6307\u5b9a\u5206\u914d\u7ed9\u4efb\u52a1\u4f7f\u7528\u7684\u5806\u6808\u7684\u5927\u5c0f\u3002\u6539\u7528 <code>xTaskCreateStatic()</code> \u800c\u4e0d\u662f <code>xTaskCreate()</code>\uff0c\u4ee5\u4f7f\u7528\u9884\u5206\u914d\u7684\u5185\u5b58\uff0c\u800c\u4e0d\u662f\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u5206\u914d\u5185\u5b58\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u8be5\u503c\u6307\u5b9a\u5806\u6808\u53ef\u4ee5\u5bb9\u7eb3\u7684\u5b57\u6570\uff0c\u800c\u4e0d\u662f\u5b57\u8282\u6570\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5806\u6808\u5bbd\u5ea6\u4e3a 32 \u4f4d\uff0c<code>usStackDepth</code> \u4e3a 128\uff0c\u5219 <code>xTaskCreate()</code> \u5206\u914d 512 \u5b57\u8282\u7684\u5806\u6808\u7a7a\u95f4\uff08128 * 4 \u5b57\u8282\uff09\u3002</p> <p><code>configSTACK_DEPTH_TYPE</code> \u662f\u4e00\u4e2a\u5b8f\uff0c\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u8005\u6307\u5b9a\u7528\u4e8e\u4fdd\u5b58\u5806\u6808\u5927\u5c0f\u7684\u6570\u636e\u7c7b\u578b\u3002\u5982\u679c\u5c06 <code>configSTACK_DEPTH_TYPE</code> \u4fdd\u7559\u672a\u5b9a\u4e49\uff0c\u5219\u9ed8\u8ba4\u4e3a <code>uint16_t</code>\uff0c\u56e0\u6b64\u5982\u679c\u5806\u6808\u6df1\u5ea6\u4e58\u4ee5\u5806\u6808\u5bbd\u5ea6\u5927\u4e8e 65535\uff08\u6700\u5927\u53ef\u80fd\u7684 16 \u4f4d\u6570\u5b57\uff09\uff0c\u8bf7\u5728 <code>FreeRTOSConfig.h</code> \u4e2d\u5c06 <code>configSTACK_DEPTH_TYPE</code> \u5b9a\u4e49\u4e3a <code>unsigned long</code> \u6216 <code>size_t</code>\u3002</p> <p>\u7b2c 13.3 \u8282 \u5806\u6808\u6ea2\u51fa \u63cf\u8ff0\u4e86\u9009\u62e9\u6700\u4f73\u5806\u6808\u5927\u5c0f\u7684\u5b9e\u7528\u65b9\u6cd5\u3002</p> <ul> <li><code>pvParameters</code></li> </ul> <p>\u5b9e\u73b0\u4efb\u52a1\u7684\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u5355\u4e00\u7684 void \u6307\u9488\uff08<code>void *</code>\uff09\u53c2\u6570\u3002<code>pvParameters</code> \u662f\u4f20\u9012\u7ed9\u4efb\u52a1\u7684\u4f7f\u7528\u8be5\u53c2\u6570\u7684\u503c\u3002</p> <ul> <li><code>uxPriority</code></li> </ul> <p>\u5b9a\u4e49\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u30020 \u662f\u6700\u4f4e\u4f18\u5148\u7ea7\uff0c<code>(configMAX_PRIORITIES \u2013 1)</code> \u662f\u6700\u9ad8\u4f18\u5148\u7ea7\u3002\u7b2c 4.5 \u8282   \u63cf\u8ff0\u4e86\u7528\u6237\u5b9a\u4e49\u7684 <code>configMAX_PRIORITIES</code> \u5e38\u91cf\u3002</p> <p>\u5982\u679c\u5b9a\u4e49\u7684 <code>uxPriority</code> \u5927\u4e8e <code>(configMAX_PRIORITIES \u2013 1)</code>\uff0c\u5219\u5c06\u5176\u9650\u5236\u4e3a <code>(configMAX_PRIORITIES \u2013 1)</code>\u3002</p> <ul> <li><code>pxCreatedTask</code></li> </ul> <p>\u6307\u5411\u5b58\u50a8\u521b\u5efa\u7684\u4efb\u52a1\u53e5\u67c4\u4f4d\u7f6e\u7684\u6307\u9488\u3002\u6b64\u53e5\u67c4\u53ef\u7528\u4e8e\u5c06\u6765\u7684 API \u8c03\u7528\uff0c\u4f8b\u5982\uff0c\u6539\u53d8\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u6216\u5220\u9664\u4efb\u52a1\u3002</p> <p><code>pxCreatedTask</code> \u662f\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u5982\u679c\u4e0d\u9700\u8981\u4efb\u52a1\u53e5\u67c4\uff0c\u5219\u53ef\u4ee5\u5c06\u5176\u8bbe\u7f6e\u4e3a NULL\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u6709\u4e24\u4e2a\u53ef\u80fd\u7684\u8fd4\u56de\u503c\uff1a</p> <ul> <li> <p><code>pdPASS</code></p> <p>\u8868\u793a\u4efb\u52a1\u521b\u5efa\u6210\u529f\u3002</p> </li> <li> <p><code>pdFAIL</code></p> <p>\u8868\u793a\u6ca1\u6709\u8db3\u591f\u7684\u5806\u5185\u5b58\u53ef\u7528\u4e8e\u521b\u5efa\u4efb\u52a1\u3002\u7b2c 3 \u7ae0 \u63d0\u4f9b\u6709\u5173\u5806\u5185\u5b58\u7ba1\u7406\u7684\u66f4\u591a\u4fe1\u606f\u3002</p> </li> </ul>"},{"location":"ch04-%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/#_1","title":"4 \u4efb\u52a1\u7ba1\u7406","text":"<p>\u793a\u4f8b 4.1 \u521b\u5efa\u4efb\u52a1</p> <p>\u4ee5\u4e0b\u793a\u4f8b\u6f14\u793a\u4e86\u521b\u5efa\u4e24\u4e2a\u7b80\u5355\u4efb\u52a1\u7684\u6b65\u9aa4\uff0c\u7136\u540e\u542f\u52a8\u65b0\u521b\u5efa\u7684\u4efb\u52a1\u3002\u4efb\u52a1\u901a\u8fc7\u4f7f\u7528\u7c97\u7565\u7684\u5fd9\u7b49\u5f85\u5faa\u73af\u6765\u5b9a\u671f\u6253\u5370\u5b57\u7b26\u4e32\u3002\u4e24\u4e2a\u4efb\u52a1\u4ee5\u76f8\u540c\u7684\u4f18\u5148\u7ea7\u521b\u5efa\uff0c\u9664\u4e86\u8981\u6253\u5370\u7684\u5b57\u7b26\u4e32\u4e0d\u540c\u5916\uff0c\u5b83\u4eec\u662f\u76f8\u540c\u7684\u2014\u2014\u8bf7\u53c2\u89c1\u6e05\u5355 4.4 \u548c\u6e05\u5355 4.5 \u4ee5\u83b7\u53d6\u5404\u81ea\u7684\u5b9e\u73b0\u3002\u6709\u5173\u5728\u4efb\u52a1\u4e2d\u4f7f\u7528 <code>printf()</code> \u7684\u8b66\u544a\uff0c\u8bf7\u53c2\u89c1\u7b2c 8 \u7ae0\u3002</p> <p></p> <pre><code>void vTask1( void * pvParameters )\n{\n    /* ulCount is declared volatile to ensure it is not optimized out. */\n    volatile unsigned long ulCount;\n\n    for( ;; )\n    {\n        /* Print out the name of the current task task. */\n        vPrintLine( \"Task 1 is running\" );\n\n        /* Delay for a period. */\n        for( ulCount = 0; ulCount &lt; mainDELAY_LOOP_COUNT; ulCount++ )\n        {\n            /*\n             * This loop is just a very crude delay implementation. There is\n             * nothing to do in here. Later examples will replace this crude\n             * loop with a proper delay/sleep function.\n             */\n        }\n    }\n}\n</code></pre> <p>\u6e05\u5355 4.4 \u793a\u4f8b 4.1 \u4e2d\u7b2c\u4e00\u4e2a\u4efb\u52a1\u7684\u5b9e\u73b0</p> <p></p> <pre><code>void vTask2( void * pvParameters )\n{\n    /* ulCount is declared volatile to ensure it is not optimized out. */\n    volatile unsigned long ulCount;\n\n    /* As per most tasks, this task is implemented in an infinite loop. */\n    for( ;; )\n    {\n        /* Print out the name of this task. */\n        vPrintLine( \"Task 2 is running\" );\n\n        /* Delay for a period. */\n        for( ulCount = 0; ulCount &lt; mainDELAY_LOOP_COUNT; ulCount++ )\n        {\n            /*\n             * This loop is just a very crude delay implementation. There is\n             * nothing to do in here. Later examples will replace this crude\n             * loop with a proper delay/sleep function.\n             */\n        }\n    }\n}\n</code></pre> <p>\u6e05\u5355 4.5 \u793a\u4f8b 4.1 \u4e2d\u7b2c\u4e8c\u4e2a\u4efb\u52a1\u7684\u5b9e\u73b0</p> <p><code>main()</code> \u51fd\u6570\u5728\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u4e4b\u524d\u521b\u5efa\u4efb\u52a1\u2014\u2014\u8bf7\u53c2\u89c1\u6e05\u5355 4.6 \u4ee5\u83b7\u53d6\u5176\u5b9e\u73b0\u3002</p> <p></p> <pre><code>int main( void )\n{\n    /*\n     * Variables declared here may no longer exist after starting the FreeRTOS\n     * scheduler. Do not attempt to access variables declared on the stack used\n     * by main() from tasks.\n     */\n\n    /*\n     * Create one of the two tasks. Note that a real application should check\n     * the return value of the xTaskCreate() call to ensure the task was\n     * created successfully.\n     */\n    xTaskCreate( vTask1,  /* Pointer to the function that implements the task.*/\n                 \"Task 1\",/* Text name for the task. */\n                 1000,    /* Stack depth in words. */\n                 NULL,    /* This example does not use the task parameter. */\n                 1,       /* This task will run at priority 1. */\n                 NULL );  /* This example does not use the task handle. */\n\n    /* Create the other task in exactly the same way and at the same priority.*/\n    xTaskCreate( vTask2, \"Task 2\", 1000, NULL, 1, NULL );\n\n    /* Start the scheduler so the tasks start executing. */\n    vTaskStartScheduler();\n\n    /*\n     * If all is well main() will not reach here because the scheduler will now\n     * be running the created tasks. If main() does reach here then there was\n     * not enough heap memory to create either the idle or timer tasks\n     * (described later in this book). Chapter 3 provides more information on\n     * heap memory management.\n     */\n    for( ;; );\n}\n</code></pre> <p>\u6e05\u5355 4.6 \u542f\u52a8\u793a\u4f8b 4.1 \u4efb\u52a1</p> <p>\u6267\u884c\u793a\u4f8b\u4f1a\u4ea7\u751f\u56fe 4.2 \u4e2d\u6240\u793a\u7684\u8f93\u51fa\u3002</p> <p></p> <pre><code>C:\\Temp&gt;rtosdemo\nTask 1 is running\nTask 2 is running\nTask 1 is running\nTask 2 is running\nTask 1 is running\nTask 2 is running\nTask 1 is running\nTask 2 is running\nTask 1 is running\nTask 2 is running\nTask 1 is running\nTask 2 is running\nTask 1 is running\nTask 2 is running\n</code></pre> <p>\u56fe 4.2 \u6267\u884c\u793a\u4f8b 4.1 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa[^4]</p> <p>[^4]: \u5c4f\u5e55\u622a\u56fe\u663e\u793a\u6bcf\u4e2a\u4efb\u52a1\u4ec5\u6253\u5370\u4e00\u6b21\u6d88\u606f\u3002 \u8fd9\u662f\u4e00\u4e2a\u4eba \u901a\u8fc7\u4f7f\u7528 FreeRTOS Windows \u6a21\u62df\u5668\u800c\u4ea7\u751f\u7684\u4eba\u5de5\u573a\u666f\u3002 Windows \u6a21\u62df\u5668\u5e76\u975e\u771f\u6b63\u7684\u5b9e\u65f6\u3002 \u6b64\u5916\uff0c\u5199\u5165 Windows \u63a7\u5236\u53f0\u9700\u8981\u76f8\u5bf9\u8f83\u957f\u7684\u65f6\u95f4\uff0c\u5e76\u5bfc\u81f4\u4e00\u7cfb\u5217 Windows \u7cfb\u7edf\u8c03\u7528\u3002 \u5728\u5177\u6709\u5feb\u901f\u4e14\u975e\u963b\u585e\u6253\u5370\u529f\u80fd\u7684\u771f\u5b9e\u5d4c\u5165\u5f0f\u76ee\u6807\u4e0a\u6267\u884c\u76f8\u540c\u4ee3\u7801\u53ef\u80fd\u4f1a\u5bfc\u81f4 \u6bcf\u4e2a\u4efb\u52a1\u6253\u5370\u5176\u5b57\u7b26\u4e32\u591a\u6b21\uff0c\u7136\u540e\u624d\u88ab\u5207\u6362\u51fa\u53bb \u5141\u8bb8\u5176\u4ed6\u4efb\u52a1\u8fd0\u884c\u3002</p> <p>\u56fe 4.2 \u663e\u793a\u4e86\u4e24\u4e2a\u4efb\u52a1\u4f3c\u4e4e\u540c\u65f6\u6267\u884c\uff1b\u4f46\u662f\uff0c\u4e24\u4e2a\u4efb\u52a1\u5728\u540c\u4e00\u5904\u7406\u5668\u6838\u5fc3\u4e0a\u6267\u884c\uff0c\u56e0\u6b64\u4e0d\u53ef\u80fd\u662f\u8fd9\u6837\u3002 \u5b9e\u9645\u4e0a\uff0c\u4e24\u4e2a\u4efb\u52a1\u6b63\u5728\u5feb\u901f\u8fdb\u51fa \u8fd0\u884c\u4e2d\u72b6\u6001\u3002 \u4e24\u4e2a\u4efb\u52a1\u4ee5\u76f8\u540c\u7684\u4f18\u5148\u7ea7\u8fd0\u884c\uff0c\u56e0\u6b64\u5171\u4eab \u540c\u4e00\u5904\u7406\u5668\u6838\u5fc3\u7684\u65f6\u95f4\u3002 \u56fe 4.3 \u663e\u793a\u4e86\u5b83\u4eec\u7684\u5b9e\u9645\u6267\u884c \u6a21\u5f0f\u3002</p> <p>\u5e95\u90e8\u7684\u7bad\u5934\u8868\u793a\u4ece\u65f6\u95f4 t1 \u5f00\u59cb\u7684\u65f6\u95f4\u6d41\u901d\u3002 \u5f69\u8272\u7ebf\u6761\u663e\u793a\u4e86\u6bcf\u4e2a\u65f6\u523b\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1\u2014\u2014\u4f8b\u5982\uff0c\u4efb\u52a1 1 \u5728 t1 \u548c t2 \u4e4b\u95f4\u6267\u884c\u3002</p> <p>\u5728\u4efb\u4f55\u4e00\u4e2a\u65f6\u523b\uff0c\u53ea\u6709\u4e00\u4e2a\u4efb\u52a1\u53ef\u4ee5\u5904\u4e8e\u8fd0\u884c\u4e2d\u72b6\u6001\u3002 \u56e0\u6b64\uff0c\u5f53\u4e00\u4e2a \u4efb\u52a1\u8fdb\u5165\u8fd0\u884c\u4e2d\u72b6\u6001\uff08\u4efb\u52a1\u88ab\u8c03\u5165\uff09\u65f6\uff0c\u53e6\u4e00\u4e2a\u4efb\u52a1 \u8fdb\u5165\u672a\u8fd0\u884c\u72b6\u6001\uff08\u4efb\u52a1\u88ab\u8c03\u51fa\uff09\u3002</p>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/","title":"5 \u961f\u5217\u7ba1\u7406","text":""},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#51","title":"5.1 \u7b80\u4ecb","text":"<p>\u201c\u961f\u5217\u201d\u63d0\u4f9b\u4e86\u4e00\u79cd\u4efb\u52a1\u5230\u4efb\u52a1\u3001\u4efb\u52a1\u5230\u4e2d\u65ad\u4ee5\u53ca\u4e2d\u65ad\u5230\u4efb\u52a1\u7684\u901a\u4fe1\u673a\u5236\u3002</p>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#511","title":"5.1.1 \u8303\u56f4","text":"<p>\u672c\u7ae0\u6db5\u76d6\uff1a</p> <ul> <li>\u5982\u4f55\u521b\u5efa\u961f\u5217\u3002</li> <li>\u961f\u5217\u5982\u4f55\u7ba1\u7406\u5176\u5305\u542b\u7684\u6570\u636e\u3002</li> <li>\u5982\u4f55\u5411\u961f\u5217\u53d1\u9001\u6570\u636e\u3002</li> <li>\u5982\u4f55\u4ece\u961f\u5217\u63a5\u6536\u6570\u636e\u3002</li> <li>\u963b\u585e\u5728\u961f\u5217\u4e0a\u7684\u542b\u4e49\u3002</li> <li>\u5982\u4f55\u963b\u585e\u5728\u591a\u4e2a\u961f\u5217\u4e0a\u3002</li> <li>\u5982\u4f55\u8986\u76d6\u961f\u5217\u4e2d\u7684\u6570\u636e\u3002</li> <li>\u5982\u4f55\u6e05\u7a7a\u961f\u5217\u3002</li> <li>\u4efb\u52a1\u4f18\u5148\u7ea7\u5728\u5199\u5165\u548c\u8bfb\u53d6\u961f\u5217\u65f6\u7684\u5f71\u54cd\u3002</li> </ul> <p>\u672c\u7ae0\u4ec5\u6db5\u76d6\u4efb\u52a1\u5230\u4efb\u52a1\u7684\u901a\u4fe1\u3002\u7b2c 7 \u7ae0\u5c06\u6db5\u76d6\u4efb\u52a1\u5230\u4e2d\u65ad\u548c\u4e2d\u65ad\u5230\u4efb\u52a1\u7684\u901a\u4fe1\u3002</p>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#52","title":"5.2 \u961f\u5217\u7684\u7279\u6027","text":""},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#521","title":"5.2.1 \u6570\u636e\u5b58\u50a8","text":"<p>\u961f\u5217\u53ef\u4ee5\u5bb9\u7eb3\u6709\u9650\u6570\u91cf\u7684\u56fa\u5b9a\u5927\u5c0f\u6570\u636e\u9879[^8]\u3002\u961f\u5217\u53ef\u4ee5\u5bb9\u7eb3\u7684\u6700\u5927\u6570\u636e\u9879\u6570\u79f0\u4e3a\u5176\u201c\u957f\u5ea6\u201d\u3002\u961f\u5217\u7684\u957f\u5ea6\u548c\u6bcf\u4e2a\u6570\u636e\u9879\u7684\u5927\u5c0f\u5728\u521b\u5efa\u961f\u5217\u65f6\u8bbe\u7f6e\u3002</p> <p>[^8]: FreeRTOS \u6d88\u606f\u7f13\u51b2\u533a\uff08\u5c06\u5728\u540e\u7eed\u7ae0\u8282\u4e2d\u63cf\u8ff0\uff09\u63d0\u4f9b\u4e86\u4e00\u79cd\u66f4\u8f7b\u91cf\u7ea7\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u7528\u4e8e\u5b58\u50a8\u53ef\u53d8\u957f\u5ea6\u6d88\u606f\u7684\u961f\u5217\u3002</p> <p>\u961f\u5217\u901a\u5e38\u7528\u4f5c\u5148\u8fdb\u5148\u51fa\uff08FIFO\uff09\u7f13\u51b2\u533a\uff0c\u5176\u4e2d\u6570\u636e\u5199\u5165\u961f\u5217\u7684\u672b\u5c3e\uff08\u5c3e\u90e8\uff09\u5e76\u4ece\u961f\u5217\u7684\u524d\u7aef\uff08\u5934\u90e8\uff09\u79fb\u9664\u3002\u56fe 5.1 \u6f14\u793a\u4e86\u6570\u636e\u5199\u5165\u548c\u8bfb\u53d6\u961f\u5217\u7684\u8fc7\u7a0b\uff0c\u8be5\u961f\u5217\u7528\u4f5c FIFO\u3002\u4e5f\u53ef\u4ee5\u5c06\u6570\u636e\u5199\u5165\u961f\u5217\u7684\u524d\u7aef\uff0c\u5e76\u8986\u76d6\u961f\u5217\u524d\u7aef\u5df2\u5b58\u5728\u7684\u6570\u636e\u3002</p> <p></p> <p> \u56fe 5.1 \u5199\u5165\u548c\u8bfb\u53d6\u961f\u5217\u7684\u793a\u4f8b\u5e8f\u5217</p> <p>\u961f\u5217\u884c\u4e3a\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u5b9e\u73b0\uff1a</p> <ol> <li> <p>\u901a\u8fc7\u590d\u5236\u961f\u5217</p> <p>\u6570\u636e\u9879\u7684\u526f\u672c\u88ab\u590d\u5236\u5230\u961f\u5217\u4e2d\u3002</p> </li> <li> <p>\u901a\u8fc7\u5f15\u7528\u961f\u5217</p> <p>\u6570\u636e\u9879\u7684\u6307\u9488\u88ab\u53d1\u9001\u5230\u961f\u5217\uff0c\u800c\u4e0d\u662f\u6570\u636e\u672c\u8eab\u3002</p> </li> </ol> <p>FreeRTOS \u4f7f\u7528\u901a\u8fc7\u590d\u5236\u961f\u5217\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u6bd4\u901a\u8fc7\u5f15\u7528\u961f\u5217\u66f4\u5f3a\u5927\u4e14\u66f4\u6613\u4e8e\u4f7f\u7528\uff1a</p> <ul> <li> <p>\u901a\u8fc7\u590d\u5236\u961f\u5217\u4e0d\u4f1a\u963b\u6b62\u961f\u5217\u4e5f\u88ab\u7528\u4f5c\u901a\u8fc7\u5f15\u7528\u961f\u5217\u3002\u4f8b\u5982\uff0c\u5f53\u88ab\u6392\u961f\u7684\u6570\u636e\u7684\u5927\u5c0f\u4f7f\u5f97\u5c06\u6570\u636e\u590d\u5236\u5230\u961f\u5217\u4e2d\u4e0d\u5207\u5b9e\u9645\u65f6\uff0c\u53ef\u4ee5\u5c06\u6307\u5411\u6570\u636e\u7684\u6307\u9488\u590d\u5236\u5230\u961f\u5217\u4e2d\u3002</p> </li> <li> <p>\u5806\u6808\u53d8\u91cf\u53ef\u4ee5\u76f4\u63a5\u53d1\u9001\u5230\u961f\u5217\uff0c\u5373\u4f7f\u5728\u58f0\u660e\u5b83\u7684\u51fd\u6570\u9000\u51fa\u540e\u53d8\u91cf\u5c06\u4e0d\u518d\u5b58\u5728\u3002</p> </li> <li> <p>\u53ef\u4ee5\u5c06\u6570\u636e\u53d1\u9001\u5230\u961f\u5217\uff0c\u800c\u65e0\u9700\u9996\u5148\u5206\u914d\u7f13\u51b2\u533a\u6765\u4fdd\u5b58\u6570\u636e\u2014\u2014\u7136\u540e\u5c06\u6570\u636e\u590d\u5236\u5230\u5206\u914d\u7684\u7f13\u51b2\u533a\u4e2d\uff0c\u5e76\u6392\u961f\u5bf9\u7f13\u51b2\u533a\u7684\u5f15\u7528\u3002</p> </li> <li> <p>\u53d1\u9001\u4efb\u52a1\u53ef\u4ee5\u7acb\u5373\u91cd\u65b0\u4f7f\u7528\u53d1\u9001\u5230\u961f\u5217\u7684\u53d8\u91cf\u6216\u7f13\u51b2\u533a\u3002</p> </li> <li> <p>\u53d1\u9001\u4efb\u52a1\u548c\u63a5\u6536\u4efb\u52a1\u662f\u5b8c\u5168\u89e3\u8026\u7684\uff1b\u5e94\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u4eba\u5458\u4e0d\u9700\u8981\u5173\u5fc3\u54ea\u4e2a\u4efb\u52a1\u201c\u62e5\u6709\u201d\u6570\u636e\uff0c\u6216\u8005\u54ea\u4e2a\u4efb\u52a1\u8d1f\u8d23\u91ca\u653e\u6570\u636e\u3002</p> </li> <li> <p>RTOS \u5bf9\u7528\u4e8e\u5b58\u50a8\u6570\u636e\u7684\u5185\u5b58\u5206\u914d\u627f\u62c5\u5168\u90e8\u8d23\u4efb\u3002</p> </li> <li> <p>\u5185\u5b58\u53d7\u4fdd\u62a4\u7684\u7cfb\u7edf\u9650\u5236\u5bf9 RAM \u7684\u8bbf\u95ee\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u5728\u53d1\u9001\u4efb\u52a1\u548c\u63a5\u6536\u4efb\u52a1\u90fd\u53ef\u4ee5\u8bbf\u95ee\u88ab\u5f15\u7528\u7684\u6570\u636e\u65f6\uff0c\u624d\u80fd\u901a\u8fc7\u5f15\u7528\u6392\u961f\u3002\u901a\u8fc7\u590d\u5236\u961f\u5217\u5141\u8bb8\u6570\u636e\u8de8\u8d8a\u5185\u5b58\u4fdd\u62a4\u8fb9\u754c\u4f20\u9012\u3002</p> </li> </ul>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#522","title":"5.2.2 \u591a\u4efb\u52a1\u8bbf\u95ee","text":"<p>\u961f\u5217\u672c\u8eab\u5c31\u662f\u5bf9\u8c61\uff0c\u53ef\u4ee5\u88ab\u4efb\u4f55\u77e5\u9053\u5176\u5b58\u5728\u7684\u4efb\u52a1\u6216 ISR \u8bbf\u95ee\u3002\u4efb\u4f55\u6570\u91cf\u7684\u4efb\u52a1\u53ef\u4ee5\u5199\u5165\u540c\u4e00\u4e2a\u961f\u5217\uff0c\u4efb\u4f55\u6570\u91cf\u7684\u4efb\u52a1\u53ef\u4ee5\u4ece\u540c\u4e00\u4e2a\u961f\u5217\u8bfb\u53d6\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u961f\u5217\u901a\u5e38\u6709\u591a\u4e2a\u5199\u5165\u8005\uff0c\u4f46\u5f88\u5c11\u6709\u591a\u4e2a\u8bfb\u53d6\u8005\u3002</p>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#523","title":"5.2.3 \u963b\u585e\u5728\u961f\u5217\u8bfb\u53d6\u4e0a","text":"<p>\u5f53\u4e00\u4e2a\u4efb\u52a1\u5c1d\u8bd5\u4ece\u961f\u5217\u4e2d\u8bfb\u53d6\u6570\u636e\u65f6\uff0c\u5b83\u53ef\u4ee5\u9009\u62e9\u6027\u5730\u6307\u5b9a\u4e00\u4e2a\u201c\u963b\u585e\u201d\u65f6\u95f4\u3002\u8fd9\u662f\u4efb\u52a1\u5728\u961f\u5217\u4e3a\u7a7a\u65f6\u88ab\u4fdd\u6301\u5728\u963b\u585e\u72b6\u6001\u4ee5\u7b49\u5f85\u6570\u636e\u53d8\u4e3a\u53ef\u7528\u7684\u65f6\u95f4\u3002\u5982\u679c\u961f\u5217\u5df2\u7ecf\u4e3a\u7a7a\uff0c\u5219\u5904\u4e8e\u963b\u585e\u72b6\u6001\u7684\u4efb\u52a1\u4f1a\u81ea\u52a8\u5728\u53e6\u4e00\u4e2a\u4efb\u52a1\u6216\u4e2d\u65ad\u5c06\u6570\u636e\u653e\u5165\u961f\u5217\u65f6\u8f6c\u5230\u5c31\u7eea\u72b6\u6001\u3002\u5982\u679c\u5728\u6570\u636e\u53ef\u7528\u4e4b\u524d\u6307\u5b9a\u7684\u963b\u585e\u65f6\u95f4\u5230\u671f\uff0c\u4efb\u52a1\u4e5f\u4f1a\u81ea\u52a8\u4ece\u963b\u585e\u72b6\u6001\u8f6c\u5230\u5c31\u7eea\u72b6\u6001\u3002</p> <p>\u961f\u5217\u53ef\u4ee5\u6709\u591a\u4e2a\u8bfb\u53d6\u8005\uff0c\u56e0\u6b64\u5355\u4e2a\u961f\u5217\u53ef\u80fd\u6709\u591a\u4e2a\u4efb\u52a1\u56e0\u7b49\u5f85\u6570\u636e\u800c\u963b\u585e\u3002\u5f53\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u65f6\uff0c\u53ea\u6709\u4e00\u4e2a\u4efb\u52a1\u5728\u6570\u636e\u53ef\u7528\u65f6\u88ab\u89e3\u9664\u963b\u585e\u3002\u88ab\u89e3\u9664\u963b\u585e\u7684\u4efb\u52a1\u59cb\u7ec8\u662f\u7b49\u5f85\u6570\u636e\u7684\u6700\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u3002\u5982\u679c\u4e24\u4e2a\u6216\u66f4\u591a\u963b\u585e\u4efb\u52a1\u5177\u6709\u76f8\u540c\u7684\u4f18\u5148\u7ea7\uff0c\u5219\u88ab\u89e3\u9664\u963b\u585e\u7684\u4efb\u52a1\u662f\u7b49\u5f85\u65f6\u95f4\u6700\u957f\u7684\u4efb\u52a1\u3002</p>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#524","title":"5.2.4 \u963b\u585e\u5728\u961f\u5217\u5199\u5165\u4e0a","text":"<p>\u4e0e\u4ece\u961f\u5217\u8bfb\u53d6\u65f6\u4e00\u6837\uff0c\u4efb\u52a1\u5728\u5199\u5165\u961f\u5217\u65f6\u4e5f\u53ef\u4ee5\u9009\u62e9\u6027\u5730\u6307\u5b9a\u4e00\u4e2a\u963b\u585e\u65f6\u95f4\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u963b\u585e\u65f6\u95f4\u662f\u4efb\u52a1\u5728\u963b\u585e\u72b6\u6001\u4e2d\u7b49\u5f85\u961f\u5217\u4e0a\u53ef\u7528\u7a7a\u95f4\u7684\u6700\u957f\u65f6\u95f4\uff0c\u4ee5\u9632\u961f\u5217\u5df2\u6ee1\u3002</p> <p>\u961f\u5217\u53ef\u4ee5\u6709\u591a\u4e2a\u5199\u5165\u8005\uff0c\u56e0\u6b64\u53ef\u80fd\u6709\u591a\u4e2a\u4efb\u52a1\u56e0\u7b49\u5f85\u5b8c\u6210\u53d1\u9001\u64cd\u4f5c\u800c\u963b\u585e\u5728\u4e00\u4e2a\u5df2\u6ee1\u7684\u961f\u5217\u4e0a\u3002\u5f53\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u65f6\uff0c\u53ea\u6709\u4e00\u4e2a\u4efb\u52a1\u5728\u961f\u5217\u4e0a\u6709\u7a7a\u95f4\u65f6\u88ab\u89e3\u9664\u963b\u585e\u3002\u88ab\u89e3\u9664\u963b\u585e\u7684\u4efb\u52a1\u59cb\u7ec8\u662f\u7b49\u5f85\u7a7a\u95f4\u7684\u6700\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u3002\u5982\u679c\u4e24\u4e2a\u6216\u66f4\u591a\u963b\u585e\u4efb\u52a1\u5177\u6709\u76f8\u540c\u7684\u4f18\u5148\u7ea7\uff0c\u5219\u88ab\u89e3\u9664\u963b\u585e\u7684\u4efb\u52a1\u662f\u7b49\u5f85\u65f6\u95f4\u6700\u957f\u7684\u4efb\u52a1\u3002</p>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#525","title":"5.2.5 \u963b\u585e\u5728\u591a\u4e2a\u961f\u5217\u4e0a","text":"<p>\u961f\u5217\u53ef\u4ee5\u5206\u7ec4\u5230\u96c6\u5408\u4e2d\uff0c\u5141\u8bb8\u4efb\u52a1\u8fdb\u5165\u963b\u585e\u72b6\u6001\u4ee5\u7b49\u5f85\u96c6\u5408\u4e2d\u4efb\u4f55\u961f\u5217\u7684\u6570\u636e\u53d8\u4e3a\u53ef\u7528\u3002\u7b2c 5.6 \u8282\u201c\u4ece\u591a\u4e2a\u961f\u5217\u63a5\u6536\u201d\u6f14\u793a\u4e86\u961f\u5217\u96c6\u7684\u7528\u6cd5\u3002</p>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#526","title":"5.2.6 \u521b\u5efa\u961f\u5217\uff1a\u9759\u6001\u5206\u914d\u548c\u52a8\u6001\u5206\u914d\u961f\u5217","text":"<p>\u961f\u5217\u901a\u8fc7\u53e5\u67c4\u5f15\u7528\uff0c\u53e5\u67c4\u662f <code>QueueHandle_t</code> \u7c7b\u578b\u7684\u53d8\u91cf\u3002\u961f\u5217\u5fc5\u987b\u5728\u4f7f\u7528\u4e4b\u524d\u663e\u5f0f\u521b\u5efa\u3002</p> <p>\u6709\u4e24\u4e2a API \u51fd\u6570\u53ef\u4ee5\u521b\u5efa\u961f\u5217\uff1a<code>xQueueCreate()</code>\u3001<code>xQueueCreateStatic()</code>\u3002</p> <p>\u6bcf\u4e2a\u961f\u5217\u9700\u8981\u4e24\u4e2a RAM \u5757\uff0c\u7b2c\u4e00\u4e2a\u7528\u4e8e\u4fdd\u5b58\u5176\u6570\u636e\u7ed3\u6784\uff0c\u7b2c\u4e8c\u4e2a\u7528\u4e8e\u4fdd\u5b58\u6392\u961f\u7684\u6570\u636e\u3002<code>xQueueCreate()</code> \u4ece\u5806\u4e2d\u5206\u914d\u6240\u9700\u7684 RAM\uff08\u52a8\u6001\uff09\u3002<code>xQueueCreateStatic()</code> \u4f7f\u7528\u9884\u5206\u914d\u7684 RAM\uff0c\u8be5 RAM \u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570\u3002</p>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#53","title":"5.3 \u4f7f\u7528\u961f\u5217","text":""},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#531-xqueuecreate-api","title":"5.3.1 xQueueCreate() API \u51fd\u6570","text":"<p>\u6e05\u5355 5.1 \u663e\u793a\u4e86 <code>xQueueCreate()</code> \u51fd\u6570\u539f\u578b\u3002<code>xQueueCreateStatic()</code> \u6709\u4e24\u4e2a\u989d\u5916\u7684\u53c2\u6570\uff0c\u6307\u5411\u9884\u5206\u914d\u7684 RAM\uff0c\u4ee5\u4fdd\u5b58\u961f\u5217\u7684\u6570\u636e\u7ed3\u6784\u548c\u6570\u636e\u5b58\u50a8\u533a\u57df\u3002</p> <p></p> <pre><code>QueueHandle_t xQueueCreate( UBaseType_t uxQueueLength, UBaseType_t uxItemSize );\n</code></pre> <p>\u6e05\u5355 5.1 xQueueCreate() API \u51fd\u6570\u539f\u578b</p> <p>xQueueCreate() \u53c2\u6570\u548c\u8fd4\u56de\u503c\uff1a</p> <ul> <li><code>uxQueueLength</code></li> </ul> <p>\u6b63\u5728\u521b\u5efa\u7684\u961f\u5217\u4e00\u6b21\u53ef\u4ee5\u5bb9\u7eb3\u7684\u6700\u5927\u9879\u6570\u3002</p> <ul> <li><code>uxItemSize</code></li> </ul> <p>\u53ef\u4ee5\u5b58\u50a8\u5728\u961f\u5217\u4e2d\u7684\u6bcf\u4e2a\u6570\u636e\u9879\u7684\u5927\u5c0f\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u5982\u679c\u8fd4\u56de NULL\uff0c\u5219\u8868\u793a\u65e0\u6cd5\u521b\u5efa\u961f\u5217\uff0c\u56e0\u4e3a FreeRTOS \u6ca1\u6709\u8db3\u591f\u7684\u5806\u5185\u5b58\u6765\u5206\u914d\u961f\u5217\u6570\u636e\u7ed3\u6784\u548c\u5b58\u50a8\u533a\u57df\u3002\u7b2c 2 \u7ae0\u63d0\u4f9b\u4e86\u6709\u5173 FreeRTOS \u5806\u7684\u66f4\u591a\u4fe1\u606f\u3002</p> <p>\u5982\u679c\u8fd4\u56de\u975e NULL \u503c\uff0c\u5219\u8868\u793a\u961f\u5217\u5df2\u6210\u529f\u521b\u5efa\uff0c\u8fd4\u56de\u503c\u662f\u521b\u5efa\u7684\u961f\u5217\u7684\u53e5\u67c4\u3002</p> <p><code>xQueueReset()</code> \u662f\u4e00\u4e2a API \u51fd\u6570\uff0c\u7528\u4e8e\u5c06\u5148\u524d\u521b\u5efa\u7684\u961f\u5217\u6062\u590d\u5230\u5176\u539f\u59cb\u7a7a\u72b6\u6001\u3002</p>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#532-xqueuesendtoback-xqueuesendtofront-api","title":"5.3.2 xQueueSendToBack() \u548c xQueueSendToFront() API \u51fd\u6570","text":"<p>\u987e\u540d\u601d\u4e49\uff0c<code>xQueueSendToBack()</code> \u5c06\u6570\u636e\u53d1\u9001\u5230\u961f\u5217\u7684\u540e\u9762\uff08\u5c3e\u90e8\uff09\uff0c\u800c <code>xQueueSendToFront()</code> \u5c06\u6570\u636e\u53d1\u9001\u5230\u961f\u5217\u7684\u524d\u9762\uff08\u5934\u90e8\uff09\u3002</p> <p><code>xQueueSend()</code> \u7b49\u6548\u4e8e <code>xQueueSendToBack()</code>\uff0c\u5b8c\u5168\u76f8\u540c\u3002</p> <p>\u6ce8\u610f\uff1a\u5207\u52ff\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u8c03\u7528 <code>xQueueSendToFront()</code> \u6216 <code>xQueueSendToBack()</code>\u3002\u5e94\u4f7f\u7528\u4e2d\u65ad\u5b89\u5168\u7248\u672c <code>xQueueSendToFrontFromISR()</code> \u548c <code>xQueueSendToBackFromISR()</code> \u4ee3\u66ff\u3002\u5b83\u4eec\u5728\u7b2c 7 \u7ae0\u4e2d\u8fdb\u884c\u4e86\u63cf\u8ff0\u3002</p> <p></p> <pre><code>BaseType_t xQueueSendToFront( QueueHandle_t xQueue,\n                              const void * pvItemToQueue,\n                              TickType_t xTicksToWait );\n</code></pre> <p>\u6e05\u5355 5.2 xQueueSendToFront() API \u51fd\u6570\u539f\u578b</p> <p></p> <pre><code>BaseType_t xQueueSendToBack( QueueHandle_t xQueue,\n                             const void * pvItemToQueue,\n                             TickType_t xTicksToWait );\n</code></pre> <p>\u6e05\u5355 5.3 xQueueSendToBack() API \u51fd\u6570\u539f\u578b</p> <p>xQueueSendToFront() \u548c xQueueSendToBack() \u51fd\u6570\u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>xQueue</code></li> </ul> <p>\u6b63\u5728\u53d1\u9001\uff08\u5199\u5165\uff09\u6570\u636e\u7684\u961f\u5217\u7684\u53e5\u67c4\u3002\u961f\u5217\u53e5\u67c4\u5c06\u662f\u4ece <code>xQueueCreate()</code> \u6216 <code>xQueueCreateStatic()</code> \u8fd4\u56de\u7684\uff0c\u7528\u4e8e\u521b\u5efa\u961f\u5217\u3002</p> <ul> <li><code>pvItemToQueue</code></li> </ul> <p>\u6307\u5411\u8981\u590d\u5236\u5230\u961f\u5217\u4e2d\u7684\u6570\u636e\u7684\u6307\u9488\u3002</p> <p>\u961f\u5217\u53ef\u4ee5\u5bb9\u7eb3\u7684\u6bcf\u4e2a\u9879\u76ee\u7684\u5927\u5c0f\u5728\u521b\u5efa\u961f\u5217\u65f6\u8bbe\u7f6e\uff0c\u56e0\u6b64\u5c06\u4ece <code>pvItemToQueue</code> \u590d\u5236\u5230\u961f\u5217\u5b58\u50a8\u533a\u57df\u7684\u5b57\u8282\u6570\u3002</p> <ul> <li><code>xTicksToWait</code></li> </ul> <p>\u4efb\u52a1\u5728\u963b\u585e\u72b6\u6001\u4e2d\u7b49\u5f85\u961f\u5217\u4e0a\u53ef\u7528\u7a7a\u95f4\u7684\u6700\u957f\u65f6\u95f4\uff0c\u4ee5\u9632\u961f\u5217\u5df2\u6ee1\u3002</p> <p>\u5982\u679c\u961f\u5217\u5df2\u6ee1\u5e76\u4e14 <code>xTicksToWait</code> \u4e3a\u96f6\uff0c\u5219 <code>xQueueSendToFront()</code> \u548c <code>xQueueSendToBack()</code> \u5c06\u7acb\u5373\u8fd4\u56de\u3002</p> <p>\u5757\u65f6\u95f4\u4ee5\u6ef4\u7b54\u5468\u671f\u4e3a\u5355\u4f4d\u6307\u5b9a\uff0c\u56e0\u6b64\u5b83\u8868\u793a\u7684\u7edd\u5bf9\u65f6\u95f4\u53d6\u51b3\u4e8e\u6ef4\u7b54\u9891\u7387\u3002\u5b8f <code>pdMS_TO_TICKS()</code> \u53ef\u7528\u4e8e\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5\u6ef4\u7b54\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u3002</p> <p>\u5c06 <code>xTicksToWait</code> \u8bbe\u7f6e\u4e3a <code>portMAX_DELAY</code> \u5c06\u5bfc\u81f4\u4efb\u52a1\u65e0\u9650\u671f\u7b49\u5f85\uff08\u4e0d\u8d85\u65f6\uff09\uff0c\u524d\u63d0\u662f <code>INCLUDE_vTaskSuspend</code> \u5728 FreeRTOSConfig.h \u4e2d\u8bbe\u7f6e\u4e3a 1\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u53ef\u80fd\u6709\u4e24\u4e2a\u8fd4\u56de\u503c\uff1a</p> <ul> <li> <p><code>pdPASS</code></p> <p>\u6570\u636e\u5df2\u6210\u529f\u53d1\u9001\u5230\u961f\u5217\u3002</p> <p>\u5982\u679c\u6307\u5b9a\u4e86\u5757\u65f6\u95f4\uff08<code>xTicksToWait</code> \u4e0d\u4e3a\u96f6\uff09\uff0c\u5219\u8c03\u7528\u4efb\u52a1\u53ef\u80fd\u88ab\u7f6e\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u961f\u5217\u4e2d\u53ef\u7528\u7a7a\u95f4\uff0c\u76f4\u5230\u51fd\u6570\u8fd4\u56de\uff0c\u4f46\u6570\u636e\u5728\u5757\u65f6\u95f4\u5230\u671f\u4e4b\u524d\u5df2\u6210\u529f\u5199\u5165\u961f\u5217\u3002</p> </li> <li> <p><code>errQUEUE_FULL</code>\uff08\u4e0e <code>pdFAIL</code> \u76f8\u540c\u7684\u503c\uff09</p> <p>\u5982\u679c\u65e0\u6cd5\u5c06\u6570\u636e\u5199\u5165\u961f\u5217\uff0c\u56e0\u4e3a\u961f\u5217\u5df2\u6ee1\uff0c\u5219\u8fd4\u56de <code>errQUEUE_FULL</code>\u3002</p> <p>\u5982\u679c\u6307\u5b9a\u4e86\u5757\u65f6\u95f4\uff08<code>xTicksToWait</code> \u4e0d\u4e3a\u96f6\uff09\uff0c\u5219\u8c03\u7528\u4efb\u52a1\u5c06\u88ab\u7f6e\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u53e6\u4e00\u4e2a\u4efb\u52a1\u6216\u4e2d\u65ad\u5728\u961f\u5217\u4e2d\u817e\u51fa\u7a7a\u95f4\uff0c\u4f46\u6307\u5b9a\u7684\u5757\u65f6\u95f4\u5728\u53d1\u751f\u4e4b\u524d\u5df2\u5230\u671f\u3002</p> </li> </ul>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#533-xqueuereceive-api","title":"5.3.3 xQueueReceive() API \u51fd\u6570","text":"<p><code>xQueueReceive()</code> \u4ece\u961f\u5217\u63a5\u6536\uff08\u8bfb\u53d6\uff09\u9879\u76ee\u3002\u63a5\u6536\u5230\u7684\u9879\u76ee\u5c06\u4ece\u961f\u5217\u4e2d\u79fb\u9664\u3002</p> <p>\u6ce8\u610f\uff1a\u5207\u52ff\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u8c03\u7528 <code>xQueueReceive()</code>\u3002\u4e2d\u65ad\u5b89\u5168\u7684 <code>xQueueReceiveFromISR()</code> API \u51fd\u6570\u5728\u7b2c 7 \u7ae0\u4e2d\u8fdb\u884c\u4e86\u63cf\u8ff0\u3002</p> <p></p> <pre><code>BaseType_t xQueueReceive( QueueHandle_t xQueue,\n                          void * const pvBuffer,\n                          TickType_t xTicksToWait );\n</code></pre> <p>\u6e05\u5355 5.4 xQueueReceive() API \u51fd\u6570\u539f\u578b</p> <p>xQueueReceive() \u51fd\u6570\u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>xQueue</code></li> </ul> <p>\u6b63\u5728\u63a5\u6536\uff08\u8bfb\u53d6\uff09\u6570\u636e\u7684\u961f\u5217\u7684\u53e5\u67c4\u3002\u961f\u5217\u53e5\u67c4\u5c06\u662f\u4ece <code>xQueueCreate()</code> \u6216 <code>xQueueCreateStatic()</code> \u8fd4\u56de\u7684\uff0c\u7528\u4e8e\u521b\u5efa\u961f\u5217\u3002</p> <ul> <li><code>pvBuffer</code></li> </ul> <p>\u6307\u5411\u5c06\u63a5\u6536\u7684\u6570\u636e\u590d\u5236\u5230\u7684\u5185\u5b58\u7684\u6307\u9488\u3002</p> <p>\u961f\u5217\u6240\u6301\u6709\u7684\u6bcf\u4e2a\u6570\u636e\u9879\u7684\u5927\u5c0f\u5728\u521b\u5efa\u961f\u5217\u65f6\u8bbe\u7f6e\u3002\u6307\u5411 <code>pvBuffer</code> \u7684\u5185\u5b58\u5fc5\u987b\u8db3\u591f\u5927\uff0c\u4ee5\u5bb9\u7eb3\u8be5\u5b57\u8282\u6570\u3002</p> <ul> <li><code>xTicksToWait</code></li> </ul> <p>\u4efb\u52a1\u5728\u963b\u585e\u72b6\u6001\u4e2d\u7b49\u5f85\u6570\u636e\u53d8\u4e3a\u53ef\u7528\u7684\u6700\u957f\u65f6\u95f4\uff0c\u5982\u679c\u961f\u5217\u5df2\u4e3a\u7a7a\u3002</p> <p>\u5982\u679c <code>xTicksToWait</code> \u4e3a\u96f6\uff0c\u5219\u5982\u679c\u961f\u5217\u5df2\u4e3a\u7a7a\uff0c<code>xQueueReceive()</code> \u5c06\u7acb\u5373\u8fd4\u56de\u3002</p> <p>\u5757\u65f6\u95f4\u4ee5\u6ef4\u7b54\u5468\u671f\u4e3a\u5355\u4f4d\u6307\u5b9a\uff0c\u56e0\u6b64\u5b83\u8868\u793a\u7684\u7edd\u5bf9\u65f6\u95f4\u53d6\u51b3\u4e8e\u6ef4\u7b54\u9891\u7387\u3002\u5b8f <code>pdMS_TO_TICKS()</code> \u53ef\u7528\u4e8e\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5\u6ef4\u7b54\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u3002</p> <p>\u5c06 <code>xTicksToWait</code> \u8bbe\u7f6e\u4e3a <code>portMAX_DELAY</code> \u5c06\u5bfc\u81f4\u4efb\u52a1\u65e0\u9650\u671f\u7b49\u5f85\uff08\u4e0d\u8d85\u65f6\uff09\uff0c\u524d\u63d0\u662f <code>INCLUDE_vTaskSuspend</code> \u5728 FreeRTOSConfig.h \u4e2d\u8bbe\u7f6e\u4e3a 1\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u53ef\u80fd\u6709\u4e24\u4e2a\u8fd4\u56de\u503c\uff1a</p> <ul> <li> <p><code>pdPASS</code></p> <p>\u6570\u636e\u5df2\u6210\u529f\u4ece\u961f\u5217\u4e2d\u8bfb\u53d6\u3002</p> <p>\u5982\u679c\u6307\u5b9a\u4e86\u5757\u65f6\u95f4\uff08<code>xTicksToWait</code> \u4e0d\u4e3a\u96f6\uff09\uff0c\u5219\u8c03\u7528\u4efb\u52a1\u53ef\u80fd\u88ab\u7f6e\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u6570\u636e\u53d8\u4e3a\u53ef\u7528\uff0c\u4f46\u6570\u636e\u5728\u5757\u65f6\u95f4\u5230\u671f\u4e4b\u524d\u5df2\u6210\u529f\u4ece\u961f\u5217\u4e2d\u8bfb\u53d6\u3002</p> </li> <li> <p><code>errQUEUE_EMPTY</code>\uff08\u4e0e <code>pdFAIL</code> \u76f8\u540c\u7684\u503c\uff09</p> <p>\u5982\u679c\u65e0\u6cd5\u4ece\u961f\u5217\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u56e0\u4e3a\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u8fd4\u56de <code>errQUEUE_EMPTY</code>\u3002</p> <p>\u5982\u679c\u6307\u5b9a\u4e86\u5757\u65f6\u95f4\uff08<code>xTicksToWait</code> \u4e0d\u4e3a\u96f6\uff09\uff0c\u5219\u8c03\u7528\u4efb\u52a1\u5c06\u88ab\u7f6e\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u53e6\u4e00\u4e2a\u4efb\u52a1\u6216\u4e2d\u65ad\u5c06\u6570\u636e\u53d1\u9001\u5230\u961f\u5217\uff0c\u4f46\u5757\u65f6\u95f4\u5728\u53d1\u751f\u4e4b\u524d\u5df2\u5230\u671f\u3002</p> </li> </ul>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#534-uxqueuemessageswaiting-api","title":"5.3.4 uxQueueMessagesWaiting() API \u51fd\u6570","text":"<p><code>uxQueueMessagesWaiting()</code> \u67e5\u8be2\u5f53\u524d\u5728\u961f\u5217\u4e2d\u7684\u9879\u76ee\u6570\u3002</p> <p>\u6ce8\u610f\uff1a\u5207\u52ff\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u8c03\u7528 <code>uxQueueMessagesWaiting()</code>\u3002\u4e2d\u65ad\u5b89\u5168\u7684 <code>uxQueueMessagesWaitingFromISR()</code> \u5e94\u8be5\u88ab\u7528\u6765\u4ee3\u66ff\u3002</p> <p></p> <pre><code>UBaseType_t uxQueueMessagesWaiting( QueueHandle_t xQueue );\n</code></pre> <p>\u6e05\u5355 5.5 uxQueueMessagesWaiting() API \u51fd\u6570\u539f\u578b</p> <p>uxQueueMessagesWaiting() \u51fd\u6570\u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>xQueue</code></li> </ul> <p>\u6b63\u5728\u67e5\u8be2\u7684\u961f\u5217\u7684\u53e5\u67c4\u3002\u961f\u5217\u53e5\u67c4\u5c06\u662f\u4ece <code>xQueueCreate()</code> \u6216 <code>xQueueCreateStatic()</code> \u8fd4\u56de\u7684\uff0c\u7528\u4e8e\u521b\u5efa\u961f\u5217\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u5f53\u524d\u961f\u5217\u4e2d\u9879\u76ee\u7684\u6570\u91cf\u3002\u5982\u679c\u8fd4\u56de\u96f6\uff0c\u5219\u961f\u5217\u4e3a\u7a7a\u3002</p>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#_1","title":"5 \u961f\u5217\u7ba1\u7406","text":"<p>\u793a\u4f8b 5.1 \u4ece\u961f\u5217\u63a5\u6536\u65f6\u963b\u585e</p> <p>\u6b64\u793a\u4f8b\u6f14\u793a\u4e86\u521b\u5efa\u961f\u5217\u3001\u4ece\u591a\u4e2a\u4efb\u52a1\u5411\u961f\u5217\u53d1\u9001\u6570\u636e\u4ee5\u53ca\u4ece\u961f\u5217\u63a5\u6536\u6570\u636e\u3002\u8be5\u961f\u5217\u88ab\u521b\u5efa\u4e3a\u53ef\u4ee5\u5bb9\u7eb3 <code>int32_t</code> \u7c7b\u578b\u7684\u6570\u636e\u9879\u3002\u53d1\u9001\u5230\u961f\u5217\u7684\u4efb\u52a1\u6ca1\u6709\u6307\u5b9a\u963b\u585e\u65f6\u95f4\uff0c\u800c\u4ece\u961f\u5217\u63a5\u6536\u6570\u636e\u7684\u4efb\u52a1\u5219\u6307\u5b9a\u4e86\u963b\u585e\u65f6\u95f4\u3002</p> <p>\u53d1\u9001\u5230\u961f\u5217\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u4f4e\u4e8e\u4ece\u961f\u5217\u63a5\u6536\u6570\u636e\u7684\u4efb\u52a1\u3002\u8fd9\u610f\u5473\u7740\u961f\u5217\u4e2d\u4e0d\u5e94\u5305\u542b\u591a\u4e2a\u9879\u76ee\uff0c\u56e0\u4e3a\u4e00\u65e6\u6570\u636e\u88ab\u53d1\u9001\u5230\u961f\u5217\uff0c\u63a5\u6536\u4efb\u52a1\u5c06\u89e3\u9664\u963b\u585e\u3001\u62a2\u5360\u53d1\u9001\u4efb\u52a1\uff08\u56e0\u4e3a\u5b83\u5177\u6709\u66f4\u9ad8\u7684\u4f18\u5148\u7ea7\uff09\u5e76\u79fb\u9664\u6570\u636e\uff0c\u4ece\u800c\u4f7f\u961f\u5217\u518d\u6b21\u4e3a\u7a7a\u3002</p> <p>\u8be5\u793a\u4f8b\u521b\u5efa\u4e86\u4e24\u4e2a\u53d1\u9001\u4efb\u52a1\u7684\u5b9e\u4f8b\uff0c\u5982\u6e05\u5355 5.6 \u6240\u793a\uff0c\u4e00\u4e2a\u4efb\u52a1\u4e0d\u65ad\u5411\u961f\u5217\u53d1\u9001\u503c 100\uff0c\u53e6\u4e00\u4e2a\u4efb\u52a1\u4e0d\u65ad\u5411\u540c\u4e00\u961f\u5217\u53d1\u9001\u503c 200\u3002\u4efb\u52a1\u53c2\u6570\u7528\u4e8e\u5c06\u8fd9\u4e9b\u503c\u4f20\u9012\u7ed9\u6bcf\u4e2a\u4efb\u52a1\u5b9e\u4f8b\u3002</p> <p></p> <pre><code>static void vSenderTask( void *pvParameters )\n{\n\n    int32_t lValueToSend;\n\n    BaseType_t xStatus;\n\n    /* \u6b64\u4efb\u52a1\u521b\u5efa\u4e86\u4e24\u4e2a\u5b9e\u4f8b\uff0c\u56e0\u6b64\u53d1\u9001\u5230\u961f\u5217\u7684\u503c\u901a\u8fc7\u4efb\u52a1\u53c2\u6570\u4f20\u9012\n       \u961f\u5217\u88ab\u521b\u5efa\u4e3a\u5bb9\u7eb3 int32_t \u7c7b\u578b\u7684\u503c\uff0c\u56e0\u6b64\u5c06\u53c2\u6570\u8f6c\u6362\u4e3a\u6240\u9700\u7684\u7c7b\u578b\u3002 */\n    lValueToSend = ( int32_t ) pvParameters;\n\n    /* \u4e0e\u5927\u591a\u6570\u4efb\u52a1\u4e00\u6837\uff0c\u6b64\u4efb\u52a1\u5728\u65e0\u9650\u5faa\u73af\u4e2d\u5b9e\u73b0\u3002 */\n    for( ;; )\n    {\n\n        /* \u5c06\u503c\u53d1\u9001\u5230\u961f\u5217\u3002\n\n           \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u6570\u636e\u8981\u53d1\u9001\u5230\u7684\u961f\u5217\u3002\u961f\u5217\u662f\u5728\u8c03\u5ea6\u7a0b\u5e8f\u542f\u52a8\u4e4b\u524d\u521b\u5efa\u7684\uff0c\u56e0\u6b64\u5728\u6b64\u4efb\u52a1\u5f00\u59cb\u6267\u884c\u4e4b\u524d\u3002\n\n           \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u8981\u53d1\u9001\u7684\u6570\u636e\u7684\u5730\u5740\uff0c\u5728\u672c\u4f8b\u4e2d\u662f lValueToSend \u7684\u5730\u5740\u3002\n\n           \u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u963b\u585e\u65f6\u95f4\u2014\u2014\u4efb\u52a1\u5728\u961f\u5217\u5df2\u6ee1\u65f6\u5e94\u4fdd\u6301\u5728\u963b\u585e\u72b6\u6001\u4ee5\u7b49\u5f85\u53ef\u7528\u7a7a\u95f4\u7684\u65f6\u95f4\u3002\u5728\u672c\u4f8b\u4e2d\u672a\u6307\u5b9a\u963b\u585e\u65f6\u95f4\uff0c\u56e0\u4e3a\u961f\u5217\u4e0d\u5e94\u5305\u542b\u591a\u4e2a\u9879\u76ee\uff0c\u56e0\u6b64\u6c38\u8fdc\u4e0d\u4f1a\u6ee1\u3002 */\n        xStatus = xQueueSendToBack( xQueue, &amp;lValueToSend, 0 );\n\n        if( xStatus != pdPASS )\n        {\n            /* \u53d1\u9001\u64cd\u4f5c\u65e0\u6cd5\u5b8c\u6210\uff0c\u56e0\u4e3a\u961f\u5217\u5df2\u6ee1\u2014\u2014\u8fd9\u4e00\u5b9a\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u961f\u5217\u4e0d\u5e94\u5305\u542b\u591a\u4e2a\u9879\u76ee\uff01 */\n            vPrintString( \"Could not send to the queue.\\r\\n\" );\n        }\n    }\n}\n</code></pre> <p>\u6e05\u5355 5.6 \u793a\u4f8b 5.1 \u4e2d\u53d1\u9001\u4efb\u52a1\u7684\u5b9e\u73b0</p> <p>\u6e05\u5355 5.7 \u663e\u793a\u4e86\u63a5\u6536\u4efb\u52a1\u7684\u5b9e\u73b0\u3002\u63a5\u6536\u4efb\u52a1\u6307\u5b9a\u4e86 100 \u6beb\u79d2\u7684\u963b\u585e\u65f6\u95f4\uff0c\u7136\u540e\u8fdb\u5165\u963b\u585e\u72b6\u6001\u4ee5\u7b49\u5f85\u6570\u636e\u53d8\u4e3a\u53ef\u7528\u3002\u5b83\u5728\u961f\u5217\u4e2d\u63a5\u6536\u5230\u6570\u636e\u540e\u89e3\u9664\u963b\u585e\uff0c\u6216\u8005\u5728 100 \u6beb\u79d2\u5185\u672a\u63a5\u6536\u5230\u6570\u636e\u540e\u89e3\u9664\u963b\u585e\u3002\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6709\u4e24\u4e2a\u4efb\u52a1\u4e0d\u65ad\u5411\u961f\u5217\u5199\u5165\u6570\u636e\uff0c\u56e0\u6b64 100 \u6beb\u79d2\u7684\u8d85\u65f6\u4ece\u672a\u5230\u671f\u3002</p> <p></p> <pre><code>static void vReceiverTask( void *pvParameters )\n{\n    /* \u58f0\u660e\u5c06\u4fdd\u5b58\u4ece\u961f\u5217\u63a5\u6536\u5230\u7684\u503c\u7684\u53d8\u91cf\u3002 */\n    int32_t lReceivedValue;\n    BaseType_t xStatus;\n    const TickType_t xTicksToWait = pdMS_TO_TICKS( 100 );\n\n    /* \u6b64\u4efb\u52a1\u4e5f\u5728\u65e0\u9650\u5faa\u73af\u4e2d\u5b9a\u4e49\u3002 */\n    for( ;; )\n    {\n        /* \u6b64\u8c03\u7528\u5e94\u8be5\u603b\u662f\u53d1\u73b0\u961f\u5217\u662f\u7a7a\u7684\uff0c\u56e0\u4e3a\u6b64\u4efb\u52a1\u5c06\u7acb\u5373\u5220\u9664\u5199\u5165\u961f\u5217\u7684\u4efb\u4f55\u6570\u636e\u3002 */\n        if( uxQueueMessagesWaiting( xQueue ) != 0 )\n        {\n            vPrintString( \"Queue should have been empty!\\r\\n\" );\n        }\n\n        /* \u4ece\u961f\u5217\u63a5\u6536\u6570\u636e\u3002\n\n           \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u8981\u63a5\u6536\u6570\u636e\u7684\u961f\u5217\u3002\n           \u961f\u5217\u662f\u5728\u8c03\u5ea6\u7a0b\u5e8f\u542f\u52a8\u4e4b\u524d\u521b\u5efa\u7684\uff0c\u56e0\u6b64\u5728\u6b64\u4efb\u52a1\u7b2c\u4e00\u6b21\u8fd0\u884c\u4e4b\u524d\u3002\n\n           \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u63a5\u6536\u6570\u636e\u5c06\u653e\u7f6e\u5230\u7684\u7f13\u51b2\u533a\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u7f13\u51b2\u533a\u53ea\u662f\u4e00\u4e2a\u53d8\u91cf\u7684\u5730\u5740\uff0c\u8be5\u53d8\u91cf\u7684\u5927\u5c0f\u8db3\u4ee5\u5bb9\u7eb3\u63a5\u6536\u5230\u7684\u6570\u636e\u3002\n\n           \u6700\u540e\u4e00\u4e2a\u53c2\u6570\u662f\u963b\u585e\u65f6\u95f4\u2014\u2014\u4efb\u52a1\u5728\u961f\u5217\u5df2\u7a7a\u65f6\u5e94\u4fdd\u6301\u5728\u963b\u585e\u72b6\u6001\u4ee5\u7b49\u5f85\u6570\u636e\u53d8\u4e3a\u53ef\u7528\u7684\u6700\u957f\u65f6\u95f4\u3002 */\n        xStatus = xQueueReceive( xQueue, &amp;lReceivedValue, xTicksToWait );\n\n        if( xStatus == pdPASS )\n        {\n            /* \u6570\u636e\u5df2\u6210\u529f\u4ece\u961f\u5217\u63a5\u6536\uff0c\u6253\u5370\u63a5\u6536\u5230\u7684\u503c\u3002 */\n            vPrintStringAndNumber( \"Received = \", lReceivedValue );\n        }\n        else\n        {\n            /* \u5373\u4f7f\u5728\u7b49\u5f85 100 \u6beb\u79d2\u540e\u4e5f\u672a\u80fd\u4ece\u961f\u5217\u63a5\u6536\u6570\u636e\u3002\u8fd9\u4e00\u5b9a\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u53d1\u9001\u4efb\u52a1\u662f\u81ea\u7531\u8fd0\u884c\u7684\uff0c\u5c06\u4e0d\u65ad\u5411\u961f\u5217\u5199\u5165\u6570\u636e\u3002 */\n            vPrintString( \"Could not receive from the queue.\\r\\n\" );\n        }\n    }\n}\n</code></pre> <p>\u6e05\u5355 5.7 \u793a\u4f8b 5.1 \u4e2d\u63a5\u6536\u4efb\u52a1\u7684\u5b9e\u73b0</p> <p>\u6e05\u5355 5.8 \u5305\u542b <code>main()</code> \u51fd\u6570\u7684\u5b9a\u4e49\u3002\u5b83\u53ea\u662f\u521b\u5efa\u961f\u5217\u548c\u4e09\u4e2a\u4efb\u52a1\uff0c\u7136\u540e\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u3002\u5c3d\u7ba1\u961f\u5217\u88ab\u521b\u5efa\u4e3a\u53ef\u4ee5\u5bb9\u7eb3\u6700\u591a\u4e94\u4e2a <code>int32_t</code> \u503c\uff0c\u4f46\u7531\u4e8e\u4efb\u52a1\u4f18\u5148\u7ea7\u7684\u5173\u7cfb\uff0c\u961f\u5217\u4e00\u6b21\u6c38\u8fdc\u4e0d\u4f1a\u5305\u542b\u591a\u4e2a\u9879\u76ee\u3002</p> <p></p> <pre><code>/* \u58f0\u660e\u4e00\u4e2a\u7c7b\u578b\u4e3a QueueHandle_t \u7684\u53d8\u91cf\u3002\u8fd9\u7528\u4e8e\u5b58\u50a8\u6240\u6709\u4e09\u4e2a\u4efb\u52a1\u8bbf\u95ee\u7684\u961f\u5217\u7684\u53e5\u67c4\u3002 */\nQueueHandle_t xQueue;\n\nint main( void )\n{\n    /* \u961f\u5217\u88ab\u521b\u5efa\u4e3a\u53ef\u4ee5\u5bb9\u7eb3\u6700\u591a 5 \u4e2a\u503c\uff0c\u6bcf\u4e2a\u503c\u8db3\u591f\u5927\u4ee5\u5bb9\u7eb3\u4e00\u4e2a int32_t \u7c7b\u578b\u7684\u53d8\u91cf\u3002 */\n    xQueue = xQueueCreate( 5, sizeof( int32_t ) );\n\n    if( xQueue != NULL )\n    {\n        /* \u521b\u5efa\u4e24\u4e2a\u5c06\u5411\u961f\u5217\u53d1\u9001\u6570\u636e\u7684\u4efb\u52a1\u5b9e\u4f8b\u3002\u4efb\u52a1\u53c2\u6570\u7528\u4e8e\u4f20\u9012\u4efb\u52a1\u5c06\u5199\u5165\u961f\u5217\u7684\u503c\uff0c\u56e0\u6b64\u4e00\u4e2a\u4efb\u52a1\u5c06\u4e0d\u65ad\u5411\u961f\u5217\u53d1\u9001 100\uff0c\u800c\u53e6\u4e00\u4e2a\u4efb\u52a1\u5c06\u4e0d\u65ad\u5411\u961f\u5217\u53d1\u9001 200\u3002\u4e24\u4e2a\u4efb\u52a1\u90fd\u4ee5\u4f18\u5148\u7ea7 1 \u521b\u5efa\u3002 */\n        xTaskCreate( vSenderTask, \"Sender1\", 1000, ( void * ) 100, 1, NULL );\n        xTaskCreate( vSenderTask, \"Sender2\", 1000, ( void * ) 200, 1, NULL );\n\n        /* \u521b\u5efa\u5c06\u4ece\u961f\u5217\u8bfb\u53d6\u6570\u636e\u7684\u4efb\u52a1\u3002\u8be5\u4efb\u52a1\u4ee5\u4f18\u5148\u7ea7 2 \u521b\u5efa\uff0c\u9ad8\u4e8e\u53d1\u9001\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002 */\n        xTaskCreate( vReceiverTask, \"Receiver\", 1000, NULL, 2, NULL );\n\n        /* \u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u521b\u5efa\u7684\u4efb\u52a1\u5f00\u59cb\u6267\u884c\u3002 */\n        vTaskStartScheduler();\n    }\n    else\n    {\n        /* \u65e0\u6cd5\u521b\u5efa\u961f\u5217\u3002 */\n    }\n\n    /* \u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u5219 main() \u6c38\u8fdc\u4e0d\u4f1a\u5230\u8fbe\u8fd9\u91cc\uff0c\u56e0\u4e3a\u8c03\u5ea6\u7a0b\u5e8f\u5c06\u8fd0\u884c\u4efb\u52a1\u3002\u5982\u679c main() \u5230\u8fbe\u8fd9\u91cc\uff0c\u5219\u53ef\u80fd\u662f\u7531\u4e8e\u6ca1\u6709\u8db3\u591f\u7684 FreeRTOS \u5806\u5185\u5b58\u53ef\u7528\u4e8e\u521b\u5efa\u7a7a\u95f2\u4efb\u52a1\u3002\u7b2c 3 \u7ae0\u63d0\u4f9b\u4e86\u6709\u5173\u5806\u5185\u5b58\u7ba1\u7406\u7684\u66f4\u591a\u4fe1\u606f\u3002 */\n    for( ;; );\n}\n</code></pre> <p>\u6e05\u5355 5.8 \u793a\u4f8b 5.1 \u4e2d main() \u7684\u5b9e\u73b0</p> <p>\u56fe 5.2 \u663e\u793a\u4e86\u793a\u4f8b 5.1 \u6267\u884c\u65f6\u4ea7\u751f\u7684\u8f93\u51fa\u3002</p> <p></p> <p> \u56fe 5.2 \u6267\u884c\u793a\u4f8b 5.1 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa</p> <p>\u56fe 5.3 \u6f14\u793a\u4e86\u6267\u884c\u5e8f\u5217\u3002</p> <p></p> <p> \u56fe 5.3 \u6267\u884c\u793a\u4f8b 5.1 \u65f6\u4ea7\u751f\u7684\u5e8f\u5217</p>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#54","title":"5.4 \u4ece\u591a\u4e2a\u6e90\u63a5\u6536\u6570\u636e","text":"<p>\u5728 FreeRTOS \u8bbe\u8ba1\u4e2d\uff0c\u4efb\u52a1\u4ece\u591a\u4e2a\u6e90\u63a5\u6536\u6570\u636e\u662f\u5f88\u5e38\u89c1\u7684\u3002\u63a5\u6536\u4efb\u52a1\u9700\u8981\u77e5\u9053\u6570\u636e\u6765\u81ea\u54ea\u91cc\uff0c\u4ee5\u4fbf\u786e\u5b9a\u5bf9\u6570\u636e\u7684\u5904\u7406\u65b9\u5f0f\u3002\u4e00\u79cd\u7b80\u5355\u7684\u8bbe\u8ba1\u6a21\u5f0f\u662f\u4f7f\u7528\u5355\u4e2a\u961f\u5217\u4f20\u8f93\u5305\u542b\u6570\u636e\u503c\u548c\u6570\u636e\u6e90\u7684\u7ed3\u6784\uff0c\u5982\u56fe 5.4 \u6240\u793a\u3002</p> <p></p> <p> \u56fe 5.4 \u53d1\u9001\u7ed3\u6784\u7684\u961f\u5217\u793a\u4f8b\u573a\u666f</p> <p>\u53c2\u89c1\u56fe 5.4\uff1a</p> <ul> <li> <p>\u521b\u5efa\u7684\u961f\u5217\u4fdd\u5b58 <code>Data_t</code> \u7c7b\u578b\u7684\u7ed3\u6784\u3002\u8be5\u7ed3\u6784\u5141\u8bb8\u5728\u4e00\u4e2a\u6d88\u606f\u4e2d\u53d1\u9001\u6570\u636e\u503c\u548c\u6307\u793a\u6570\u636e\u542b\u4e49\u7684\u679a\u4e3e\u7c7b\u578b\u3002</p> </li> <li> <p>\u4e2d\u592e\u63a7\u5236\u5668\u4efb\u52a1\u6267\u884c\u4e3b\u8981\u7684\u7cfb\u7edf\u529f\u80fd\u3002\u5b83\u5fc5\u987b\u5bf9\u901a\u8fc7\u961f\u5217\u53d1\u9001\u7ed9\u5b83\u7684\u8f93\u5165\u548c\u7cfb\u7edf\u72b6\u6001\u7684\u53d8\u5316\u505a\u51fa\u53cd\u5e94\u3002</p> </li> <li> <p>CAN \u603b\u7ebf\u4efb\u52a1\u7528\u4e8e\u5c01\u88c5 CAN \u603b\u7ebf\u63a5\u53e3\u529f\u80fd\u3002\u5f53 CAN \u603b\u7ebf\u4efb\u52a1\u63a5\u6536\u5230\u5e76\u89e3\u7801\u6d88\u606f\u65f6\uff0c\u5b83\u5c06\u5df2\u89e3\u7801\u7684\u6d88\u606f\u4f5c\u4e3a <code>Data_t</code> \u7ed3\u6784\u53d1\u9001\u7ed9\u63a7\u5236\u5668\u4efb\u52a1\u3002\u4f20\u8f93\u7ed3\u6784\u7684 <code>eDataID</code> \u6210\u5458\u544a\u8bc9\u63a7\u5236\u5668\u4efb\u52a1\u6570\u636e\u662f\u4ec0\u4e48\u3002\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u5b83\u662f\u7535\u673a\u901f\u5ea6\u503c\u3002\u4f20\u8f93\u7ed3\u6784\u7684 <code>lDataValue</code> \u6210\u5458\u544a\u8bc9\u63a7\u5236\u5668\u4efb\u52a1\u5b9e\u9645\u7684\u7535\u673a\u901f\u5ea6\u503c\u3002</p> </li> <li> <p>\u4eba\u673a\u754c\u9762\uff08HMI\uff09\u4efb\u52a1\u7528\u4e8e\u5c01\u88c5\u6240\u6709 HMI \u529f\u80fd\u3002\u673a\u5668\u64cd\u4f5c\u5458\u53ef\u80fd\u4ee5\u591a\u79cd\u65b9\u5f0f\u8f93\u5165\u547d\u4ee4\u548c\u67e5\u8be2\u503c\uff0c\u8fd9\u4e9b\u65b9\u5f0f\u5fc5\u987b\u5728 HMI \u4efb\u52a1\u4e2d\u68c0\u6d4b\u548c\u89e3\u91ca\u3002\u5f53\u8f93\u5165\u65b0\u547d\u4ee4\u65f6\uff0cHMI \u4efb\u52a1\u5c06\u547d\u4ee4\u4f5c\u4e3a <code>Data_t</code> \u7ed3\u6784\u53d1\u9001\u7ed9\u63a7\u5236\u5668\u4efb\u52a1\u3002\u4f20\u8f93\u7ed3\u6784\u7684 <code>eDataID</code> \u6210\u5458\u544a\u8bc9\u63a7\u5236\u5668\u4efb\u52a1\u6570\u636e\u662f\u4ec0\u4e48\u3002\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u5b83\u662f\u4e00\u4e2a\u65b0\u7684\u8bbe\u5b9a\u503c\u3002\u4f20\u8f93\u7ed3\u6784\u7684 <code>lDataValue</code> \u6210\u5458\u544a\u8bc9\u63a7\u5236\u5668\u4efb\u52a1\u5b9e\u9645\u7684\u8bbe\u5b9a\u503c\u3002</p> </li> </ul> <p>\u7b2c\uff08\u5f85\u5b9a\uff09\u7ae0\u5c06\u6f14\u793a\u5982\u4f55\u6269\u5c55\u6b64\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u4ee5\u4fbf\u63a7\u5236\u5668\u4efb\u52a1\u53ef\u4ee5\u76f4\u63a5\u56de\u590d\u5c06\u7ed3\u6784\u6392\u961f\u7684\u4efb\u52a1\u3002</p>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#_2","title":"5 \u961f\u5217\u7ba1\u7406","text":"<p>\u793a\u4f8b 5.2 \u963b\u585e\u65f6\u53d1\u9001\u5230\u961f\u5217\uff0c\u5e76\u5728\u961f\u5217\u4e0a\u4f20\u9001\u7ed3\u6784</p> <p>\u793a\u4f8b 5.2 \u7c7b\u4f3c\u4e8e\u793a\u4f8b 5.1\uff0c\u4f46\u4efb\u52a1\u4f18\u5148\u7ea7\u76f8\u53cd\uff0c\u56e0\u6b64\u63a5\u6536\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u4f4e\u4e8e\u53d1\u9001\u4efb\u52a1\u3002\u6b64\u5916\uff0c\u521b\u5efa\u7684\u961f\u5217\u4fdd\u5b58\u7ed3\u6784\uff0c\u800c\u4e0d\u662f\u6574\u6570\u3002</p> <p>\u6e05\u5355 5.9 \u663e\u793a\u4e86\u793a\u4f8b 5.2 \u4f7f\u7528\u7684\u7ed3\u6784\u7684\u5b9a\u4e49\u3002</p> <p></p> <pre><code>/* \u5b9a\u4e49\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b\uff0c\u7528\u4e8e\u6807\u8bc6\u6570\u636e\u7684\u6765\u6e90\u3002 */\ntypedef enum\n{\n    eSender1,\n    eSender2\n} DataSource_t;\n\n/* \u5b9a\u4e49\u5c06\u901a\u8fc7\u961f\u5217\u4f20\u9012\u7684\u7ed3\u6784\u7c7b\u578b\u3002 */\ntypedef struct\n{\n    uint8_t ucValue;\n    DataSource_t eDataSource;\n} Data_t;\n\n/* \u58f0\u660e\u4e24\u4e2a\u7c7b\u578b\u4e3a Data_t \u7684\u53d8\u91cf\uff0c\u5c06\u901a\u8fc7\u961f\u5217\u4f20\u9012\u3002 */\nstatic const Data_t xStructsToSend[ 2 ] =\n{\n    { 100, eSender1 }, /* Sender1 \u4f7f\u7528\u3002 */\n    { 200, eSender2 }  /* Sender2 \u4f7f\u7528\u3002 */\n};\n</code></pre> <p>\u6e05\u5355 5.9 \u8981\u901a\u8fc7\u961f\u5217\u4f20\u9012\u7684\u7ed3\u6784\u7684\u5b9a\u4e49\uff0c\u4ee5\u53ca\u4f9b\u793a\u4f8b\u4f7f\u7528\u7684\u4e24\u4e2a\u53d8\u91cf\u7684\u58f0\u660e</p> <p>\u5728\u793a\u4f8b 5.1 \u4e2d\uff0c\u63a5\u6536\u4efb\u52a1\u5177\u6709\u6700\u9ad8\u7684\u4f18\u5148\u7ea7\uff0c\u56e0\u6b64\u961f\u5217\u4e2d\u4ece\u4e0d\u5305\u542b\u591a\u4e2a\u9879\u76ee\u3002\u8fd9\u662f\u56e0\u4e3a\u63a5\u6536\u4efb\u52a1\u5728\u6570\u636e\u88ab\u653e\u5165\u961f\u5217\u540e\u4f1a\u62a2\u5360\u53d1\u9001\u4efb\u52a1\u3002\u5728\u793a\u4f8b 5.2 \u4e2d\uff0c\u53d1\u9001\u4efb\u52a1\u5177\u6709\u66f4\u9ad8\u7684\u4f18\u5148\u7ea7\uff0c\u56e0\u6b64\u961f\u5217\u901a\u5e38\u662f\u6ee1\u7684\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c\u5f53\u63a5\u6536\u4efb\u52a1\u4ece\u961f\u5217\u4e2d\u79fb\u9664\u4e00\u4e2a\u9879\u76ee\u65f6\uff0c\u5b83\u4f1a\u88ab\u4e00\u4e2a\u53d1\u9001\u4efb\u52a1\u62a2\u5360\uff0c\u53d1\u9001\u4efb\u52a1\u4f1a\u7acb\u5373\u91cd\u65b0\u586b\u5145\u961f\u5217\u3002\u7136\u540e\uff0c\u53d1\u9001\u4efb\u52a1\u91cd\u65b0\u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u7b49\u5f85\u961f\u5217\u4e2d\u518d\u6b21\u817e\u51fa\u7a7a\u95f4\u3002</p> <p>\u6e05\u5355 5.10 \u663e\u793a\u4e86\u53d1\u9001\u4efb\u52a1\u7684\u5b9e\u73b0\u3002\u53d1\u9001\u4efb\u52a1\u6307\u5b9a\u4e86 100 \u6beb\u79d2\u7684\u963b\u585e\u65f6\u95f4\uff0c\u56e0\u6b64\u6bcf\u5f53\u961f\u5217\u6ee1\u65f6\uff0c\u5b83\u5c31\u4f1a\u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u7b49\u5f85\u7a7a\u95f4\u53d8\u4e3a\u53ef\u7528\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u63a5\u6536\u4efb\u52a1\u4e0d\u65ad\u5730\u5728\u961f\u5217\u4e2d\u817e\u51fa\u7a7a\u95f4\uff0c\u56e0\u6b64 100 \u6beb\u79d2\u7684\u8d85\u65f6\u4ece\u672a\u5230\u671f\u3002</p> <p></p> <pre><code>static void vSenderTask( void *pvParameters )\n{\n    BaseType_t xStatus;\n    const TickType_t xTicksToWait = pdMS_TO_TICKS( 100 );\n\n    /* \u4e0e\u5927\u591a\u6570\u4efb\u52a1\u4e00\u6837\uff0c\u6b64\u4efb\u52a1\u5728\u65e0\u9650\u5faa\u73af\u4e2d\u5b9e\u73b0\u3002 */\n    for( ;; )\n    {\n        /* \u53d1\u9001\u5230\u961f\u5217\u3002\n\n           \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u8981\u53d1\u9001\u7684\u7ed3\u6784\u7684\u5730\u5740\u3002\u5730\u5740\u4f5c\u4e3a\u4efb\u52a1\u53c2\u6570\u4f20\u9012\uff0c\u56e0\u6b64\u76f4\u63a5\u4f7f\u7528 pvParameters\u3002\n\n           \u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u963b\u585e\u65f6\u95f4\u2014\u2014\u4efb\u52a1\u5728\u961f\u5217\u5df2\u6ee1\u65f6\u5e94\u4fdd\u6301\u5728\u963b\u585e\u72b6\u6001\u4ee5\u7b49\u5f85\u53ef\u7528\u7a7a\u95f4\u7684\u65f6\u95f4\u3002\u6307\u5b9a\u4e86\u963b\u585e\u65f6\u95f4\uff0c\u56e0\u4e3a\u53d1\u9001\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u63a5\u6536\u4efb\u52a1\uff0c\u56e0\u6b64\u9884\u8ba1\u961f\u5217\u4f1a\u6ee1\u3002\u5f53\u4e24\u4e2a\u53d1\u9001\u4efb\u52a1\u90fd\u5904\u4e8e\u963b\u585e\u72b6\u6001\u65f6\uff0c\u63a5\u6536\u4efb\u52a1\u4f1a\u4ece\u961f\u5217\u4e2d\u5220\u9664\u9879\u76ee\u3002 */\n        xStatus = xQueueSendToBack( xQueue, pvParameters, xTicksToWait );\n\n        if( xStatus != pdPASS )\n        {\n            /* \u53d1\u9001\u64cd\u4f5c\u65e0\u6cd5\u5b8c\u6210\uff0c\u5373\u4f7f\u5728\u7b49\u5f85 100 \u6beb\u79d2\u540e\u4e5f\u662f\u5982\u6b64\u3002\u8fd9\u4e00\u5b9a\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u63a5\u6536\u4efb\u52a1\u5e94\u8be5\u5728\u4e24\u4e2a\u53d1\u9001\u4efb\u52a1\u90fd\u5904\u4e8e\u963b\u585e\u72b6\u6001\u65f6\u7acb\u5373\u6e05\u7a7a\u961f\u5217\u3002 */\n            vPrintString( \"Could not send to the queue.\\r\\n\" );\n        }\n    }\n}\n</code></pre> <p>\u6e05\u5355 5.10 \u793a\u4f8b 5.2 \u4e2d\u53d1\u9001\u4efb\u52a1\u7684\u5b9e\u73b0</p> <p>\u63a5\u6536\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u6700\u4f4e\uff0c\u4ec5\u5728\u4e24\u4e2a\u53d1\u9001\u4efb\u52a1\u90fd\u5904\u4e8e\u963b\u585e\u72b6\u6001\u65f6\u8fd0\u884c\u3002\u53d1\u9001\u4efb\u52a1\u4ec5\u5728\u961f\u5217\u6ee1\u65f6\u624d\u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u56e0\u6b64\u63a5\u6536\u4efb\u52a1\u4ec5\u5728\u961f\u5217\u5df2\u6ee1\u65f6\u6267\u884c\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u63a5\u6536\u4efb\u52a1\u59cb\u7ec8\u671f\u671b\u63a5\u6536\u6570\u636e\uff0c\u5373\u4f7f\u5b83\u6ca1\u6709\u6307\u5b9a\u963b\u585e\u65f6\u95f4\u3002</p> <p>\u6e05\u5355 5.11 \u663e\u793a\u4e86\u63a5\u6536\u4efb\u52a1\u7684\u5b9e\u73b0\u3002</p> <p></p> <pre><code>static void vReceiverTask( void *pvParameters )\n{\n    /* \u58f0\u660e\u5c06\u4fdd\u5b58\u4ece\u961f\u5217\u63a5\u6536\u5230\u7684\u7ed3\u6784\u3002 */\n    Data_t xReceivedStructure;\n    BaseType_t xStatus;\n\n    /* \u6b64\u4efb\u52a1\u4e5f\u5728\u65e0\u9650\u5faa\u73af\u4e2d\u5b9a\u4e49\u3002 */\n    for( ;; )\n    {\n        /* \u7531\u4e8e\u4f18\u5148\u7ea7\u6700\u4f4e\uff0c\u6b64\u4efb\u52a1\u4ec5\u5728\u53d1\u9001\u4efb\u52a1\u5904\u4e8e\u963b\u585e\u72b6\u6001\u65f6\u8fd0\u884c\u3002\u5f53\u961f\u5217\u5df2\u6ee1\u65f6\uff0c\u53d1\u9001\u4efb\u52a1\u5c06\u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u56e0\u6b64\u6b64\u4efb\u52a1\u4ec5\u5728\u961f\u5217\u5df2\u6ee1\u65f6\u8fd0\u884c\u3002 */\n        if( uxQueueMessagesWaiting( xQueue ) != 3 )\n        {\n            vPrintString( \"Queue should have been full!\\r\\n\" );\n        }\n\n        /* \u4ece\u961f\u5217\u63a5\u6536\u3002\n\n           \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u63a5\u6536\u6570\u636e\u5c06\u653e\u7f6e\u5230\u7684\u7f13\u51b2\u533a\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u7f13\u51b2\u533a\u53ea\u662f\u4e00\u4e2a\u53d8\u91cf\u7684\u5730\u5740\uff0c\u8be5\u53d8\u91cf\u7684\u5927\u5c0f\u8db3\u4ee5\u5bb9\u7eb3\u63a5\u6536\u5230\u7684\u7ed3\u6784\u3002\n\n           \u6700\u540e\u4e00\u4e2a\u53c2\u6570\u662f\u963b\u585e\u65f6\u95f4\u2014\u2014\u4efb\u52a1\u5728\u961f\u5217\u5df2\u7a7a\u65f6\u5e94\u4fdd\u6301\u5728\u963b\u585e\u72b6\u6001\u4ee5\u7b49\u5f85\u6570\u636e\u53d8\u4e3a\u53ef\u7528\u7684\u6700\u957f\u65f6\u95f4\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u7531\u4e8e\u6b64\u4efb\u52a1\u4ec5\u5728\u961f\u5217\u5df2\u6ee1\u65f6\u8fd0\u884c\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u963b\u585e\u65f6\u95f4\u3002 */\n        xStatus = xQueueReceive( xQueue, &amp;xReceivedStructure, 0 );\n\n        if( xStatus == pdPASS )\n        {\n            /* \u6570\u636e\u5df2\u6210\u529f\u4ece\u961f\u5217\u63a5\u6536\uff0c\u6253\u5370\u63a5\u6536\u5230\u7684\u503c\u548c\u6765\u6e90\u3002 */\n            if( xReceivedStructure.eDataSource == eSender1 )\n            {\n                vPrintStringAndNumber( \"From Sender 1 = \", \n                                       xReceivedStructure.ucValue );\n            }\n            else\n            {\n                vPrintStringAndNumber( \"From Sender 2 = \", \n                                       xReceivedStructure.ucValue );\n            }\n        }\n        else\n        {\n            /* \u672a\u4ece\u961f\u5217\u63a5\u6536\u6570\u636e\u3002\u8fd9\u4e00\u5b9a\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u6b64\u4efb\u52a1\u5e94\u4ec5\u5728\u961f\u5217\u5df2\u6ee1\u65f6\u8fd0\u884c\u3002 */\n            vPrintString( \"Could not receive from the queue.\\r\\n\" );\n        }\n    }\n}\n</code></pre> <p>\u6e05\u5355 5.11 \u793a\u4f8b 5.2 \u4e2d\u63a5\u6536\u4efb\u52a1\u7684\u5b9a\u4e49</p> <p><code>main()</code> \u7684\u5b9e\u73b0\u4e0e\u4e0a\u4e00\u4e2a\u793a\u4f8b\u4ec5\u7565\u6709\u4e0d\u540c\u3002\u961f\u5217\u88ab\u521b\u5efa\u4e3a\u53ef\u4ee5\u5bb9\u7eb3\u4e09\u4e2a <code>Data_t</code> \u7ed3\u6784\uff0c\u53d1\u9001\u548c\u63a5\u6536\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u76f8\u53cd\u3002\u6e05\u5355 5.12 \u663e\u793a\u4e86 <code>main()</code> \u7684\u5b9e\u73b0\u3002</p> <p></p> <pre><code>int main( void )\n{\n    /* \u961f\u5217\u88ab\u521b\u5efa\u4e3a\u53ef\u4ee5\u5bb9\u7eb3\u6700\u591a 3 \u4e2a Data_t \u7c7b\u578b\u7684\u7ed3\u6784\u3002 */\n    xQueue = xQueueCreate( 3, sizeof( Data_t ) );\n\n    if( xQueue != NULL )\n    {\n        /* \u521b\u5efa\u4e24\u4e2a\u5c06\u5411\u961f\u5217\u5199\u5165\u7684\u4efb\u52a1\u5b9e\u4f8b\u3002\u53c2\u6570\u7528\u4e8e\u4f20\u9012\u4efb\u52a1\u5c06\u5199\u5165\u961f\u5217\u7684\u7ed3\u6784\uff0c\u56e0\u6b64\u4e00\u4e2a\u4efb\u52a1\u5c06\u4e0d\u65ad\u53d1\u9001 xStructsToSend[ 0 ] \u5230\u961f\u5217\uff0c\u800c\u53e6\u4e00\u4e2a\u4efb\u52a1\u5c06\u4e0d\u65ad\u53d1\u9001 xStructsToSend[ 1 ]\u3002\u4e24\u4e2a\u4efb\u52a1\u90fd\u4ee5\u4f18\u5148\u7ea7 2 \u521b\u5efa\uff0c\u9ad8\u4e8e\u63a5\u6536\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002 */\n        xTaskCreate( vSenderTask, \"Sender1\", 1000, &amp;( xStructsToSend[ 0 ] ),\n                     2, NULL );\n        xTaskCreate( vSenderTask, \"Sender2\", 1000, &amp;( xStructsToSend[ 1 ] ),\n                     2, NULL );\n\n        /* \u521b\u5efa\u5c06\u4ece\u961f\u5217\u8bfb\u53d6\u6570\u636e\u7684\u4efb\u52a1\u3002\u8be5\u4efb\u52a1\u4ee5\u4f18\u5148\u7ea7 1 \u521b\u5efa\uff0c\u4f4e\u4e8e\u53d1\u9001\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002 */\n        xTaskCreate( vReceiverTask, \"Receiver\", 1000, NULL, 1, NULL );\n\n        /* \u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u521b\u5efa\u7684\u4efb\u52a1\u5f00\u59cb\u6267\u884c\u3002 */\n        vTaskStartScheduler();\n    }\n    else\n    {\n        /* \u65e0\u6cd5\u521b\u5efa\u961f\u5217\u3002 */\n    }\n\n    /* \u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u5219 main() \u6c38\u8fdc\u4e0d\u4f1a\u5230\u8fbe\u8fd9\u91cc\uff0c\u56e0\u4e3a\u8c03\u5ea6\u7a0b\u5e8f\u5c06\u8fd0\u884c\u4efb\u52a1\u3002\u5982\u679c main() \u5230\u8fbe\u8fd9\u91cc\uff0c\u5219\u53ef\u80fd\u662f\u7531\u4e8e\u6ca1\u6709\u8db3\u591f\u7684 FreeRTOS \u5806\u5185\u5b58\u53ef\u7528\u4e8e\u521b\u5efa\u7a7a\u95f2\u4efb\u52a1\u3002\u7b2c 3 \u7ae0\u63d0\u4f9b\u4e86\u6709\u5173\u5806\u5185\u5b58\u7ba1\u7406\u7684\u66f4\u591a\u4fe1\u606f\u3002 */\n    for( ;; );\n}\n</code></pre> <p>\u6e05\u5355 5.12 \u793a\u4f8b 5.2 \u4e2d main() \u7684\u5b9e\u73b0</p> <p>\u56fe 5.5 \u663e\u793a\u4e86\u793a\u4f8b 5.2 \u4ea7\u751f\u7684\u8f93\u51fa\u3002</p> <p></p> <p> \u56fe 5.5 \u793a\u4f8b 5.2 \u4ea7\u751f\u7684\u8f93\u51fa</p> <p>\u56fe 5.6 \u6f14\u793a\u4e86\u6267\u884c\u6b64\u793a\u4f8b\u7684\u5e8f\u5217\u3002</p> <p></p> <p> \u56fe 5.6 \u793a\u4f8b 5.2 \u4ea7\u751f\u7684\u6267\u884c\u5e8f\u5217</p> <p>\u56fe 5.6 \u8bf4\u660e</p> <ul> <li>t1</li> </ul> <p>\u4efb\u52a1 Sender 1 \u6267\u884c\u5e76\u5411\u961f\u5217\u53d1\u9001 3 \u4e2a\u6570\u636e\u9879\u3002</p> <ul> <li>t2</li> </ul> <p>\u961f\u5217\u5df2\u6ee1\uff0c\u56e0\u6b64 Sender 1 \u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u7b49\u5f85\u5176\u4e0b\u4e00\u4e2a\u53d1\u9001\u5b8c\u6210\u3002\u4efb\u52a1 Sender 2 \u73b0\u5728\u662f\u53ef\u4ee5\u8fd0\u884c\u7684\u6700\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\uff0c\u56e0\u6b64\u5b83\u8fdb\u5165\u8fd0\u884c\u72b6\u6001\u3002</p> <ul> <li>t3</li> </ul> <p>\u4efb\u52a1 Sender 2 \u53d1\u73b0\u961f\u5217\u5df2\u6ee1\uff0c\u56e0\u6b64\u5b83\u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u7b49\u5f85\u5176\u7b2c\u4e00\u6b21\u53d1\u9001\u5b8c\u6210\u3002\u4efb\u52a1 Receiver \u73b0\u5728\u662f\u53ef\u4ee5\u8fd0\u884c\u7684\u6700\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\uff0c\u56e0\u6b64\u5b83\u8fdb\u5165\u8fd0\u884c\u72b6\u6001\u3002</p> <ul> <li>t4</li> </ul> <p>\u4e24\u4e2a\u4f18\u5148\u7ea7\u9ad8\u4e8e\u63a5\u6536\u4efb\u52a1\u7684\u4efb\u52a1\u6b63\u5728\u7b49\u5f85\u961f\u5217\u4e2d\u6709\u7a7a\u95f4\u53ef\u7528\uff0c\u56e0\u6b64\u63a5\u6536\u4efb\u52a1\u5728\u4ece\u961f\u5217\u4e2d\u5220\u9664\u4e00\u4e2a\u9879\u76ee\u540e\u88ab\u62a2\u5360\u3002\u4efb\u52a1 Sender 1 \u548c Sender 2 \u5177\u6709\u76f8\u540c\u7684\u4f18\u5148\u7ea7\uff0c\u56e0\u6b64\u8c03\u5ea6\u7a0b\u5e8f\u9009\u62e9\u7b49\u5f85\u65f6\u95f4\u6700\u957f\u7684\u4efb\u52a1\u8fdb\u5165\u8fd0\u884c\u72b6\u6001\u2014\u2014\u5728\u672c\u4f8b\u4e2d\u662f\u4efb\u52a1 Sender 1\u3002</p> <ul> <li>t5</li> </ul> <p>\u4efb\u52a1 Sender 1\u5411\u961f\u5217\u53d1\u9001\u53e6\u4e00\u4e2a\u6570\u636e\u9879\u3002\u961f\u5217\u4e2d\u53ea\u6709\u4e00\u4e2a\u7a7a\u4f4d\uff0c\u56e0\u6b64\u4efb\u52a1 Sender 1 \u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u7b49\u5f85\u5176\u4e0b\u4e00\u4e2a\u53d1\u9001\u5b8c\u6210\u3002\u4efb\u52a1 Receiver \u518d\u6b21\u662f\u53ef\u4ee5\u8fd0\u884c\u7684\u6700\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\uff0c\u56e0\u6b64\u5b83\u8fdb\u5165\u8fd0\u884c\u72b6\u6001\u3002</p> <p>\u4efb\u52a1 Sender 1\u5df2\u7ecf\u5411\u961f\u5217\u53d1\u9001\u4e86\u56db\u4e2a\u9879\u76ee\uff0c\u800c\u4efb\u52a1 Sender 2 \u4ecd\u5728\u7b49\u5f85\u5411\u961f\u5217\u53d1\u9001\u7b2c\u4e00\u4e2a\u9879\u76ee\u3002</p> <ul> <li>t6</li> </ul> <p>\u4e24\u4e2a\u4f18\u5148\u7ea7\u9ad8\u4e8e\u63a5\u6536\u4efb\u52a1\u7684\u4efb\u52a1\u6b63\u5728\u7b49\u5f85\u961f\u5217\u4e2d\u6709\u7a7a\u95f4\u53ef\u7528\uff0c\u56e0\u6b64\u4efb\u52a1\u63a5\u6536\u5668\u5728\u4ece\u961f\u5217\u4e2d\u5220\u9664\u4e00\u4e2a\u9879\u76ee\u540e\u88ab\u62a2\u5360\u3002\u8fd9\u6b21\uff0c\u7b49\u5f85\u65f6\u95f4\u6bd4 Sender 1 \u66f4\u957f\u7684\u4efb\u52a1 Sender 2 \u8fdb\u5165\u8fd0\u884c\u72b6\u6001\u3002</p> <ul> <li>t7</li> </ul> <p>\u4efb\u52a1 Sender 2 \u5411\u961f\u5217\u53d1\u9001\u4e00\u4e2a\u6570\u636e\u9879\u3002\u961f\u5217\u4e2d\u53ea\u6709\u4e00\u4e2a\u7a7a\u4f4d\uff0c\u56e0\u6b64 Sender 2 \u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u7b49\u5f85\u5176\u4e0b\u4e00\u4e2a\u53d1\u9001\u5b8c\u6210\u3002\u4efb\u52a1 Sender 1 \u548c Sender 2 \u90fd\u5728\u7b49\u5f85\u961f\u5217\u4e2d\u6709\u7a7a\u95f4\u53ef\u7528\uff0c\u56e0\u6b64\u4efb\u52a1 Receiver \u662f\u552f\u4e00\u53ef\u4ee5\u8fdb\u5165\u8fd0\u884c\u72b6\u6001\u7684\u4efb\u52a1\u3002</p>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#55","title":"5.5 \u5904\u7406\u5927\u6570\u636e\u6216\u53ef\u53d8\u5927\u5c0f\u6570\u636e","text":""},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#551","title":"5.5.1 \u6392\u961f\u6307\u9488","text":"<p>\u5982\u679c\u961f\u5217\u4e2d\u5b58\u50a8\u7684\u6570\u636e\u5f88\u5927\uff0c\u5219\u6700\u597d\u4f7f\u7528\u961f\u5217\u4f20\u8f93\u6307\u5411\u6570\u636e\u7684\u6307\u9488\uff0c\u800c\u4e0d\u662f\u9010\u5b57\u8282\u5730\u5c06\u6570\u636e\u590d\u5236\u5230\u961f\u5217\u4e2d\u548c\u4ece\u961f\u5217\u4e2d\u53d6\u51fa\u3002\u4f20\u8f93\u6307\u9488\u5728\u5904\u7406\u65f6\u95f4\u548c\u521b\u5efa\u961f\u5217\u6240\u9700\u7684 RAM \u6570\u91cf\u4e0a\u66f4\u6709\u6548\u3002\u4f46\u662f\uff0c\u5728\u6392\u961f\u6307\u9488\u65f6\uff0c\u5fc5\u987b\u975e\u5e38\u5c0f\u5fc3\uff0c\u4ee5\u786e\u4fdd\uff1a</p> <ul> <li>\u660e\u786e\u89c4\u5b9a RAM \u7684\u6240\u6709\u8005\u3002</li> </ul> <p>\u5728\u4efb\u52a1\u4e4b\u95f4\u901a\u8fc7\u6307\u9488\u5171\u4eab\u5185\u5b58\u65f6\uff0c\u5fc5\u987b\u786e\u4fdd\u4e24\u4e2a\u4efb\u52a1\u4e0d\u4f1a\u540c\u65f6\u4fee\u6539\u5185\u5b58\u5185\u5bb9\uff0c\u6216\u91c7\u53d6\u4efb\u4f55\u5176\u4ed6\u53ef\u80fd\u5bfc\u81f4\u5185\u5b58\u5185\u5bb9\u65e0\u6548\u6216\u4e0d\u4e00\u81f4\u7684\u64cd\u4f5c\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u53d1\u9001\u4efb\u52a1\u5728\u53d1\u9001\u6307\u9488\u5230\u961f\u5217\u4e4b\u524d\u53ef\u4ee5\u8bbf\u95ee\u5185\u5b58\uff0c\u53ea\u6709\u63a5\u6536\u4efb\u52a1\u5728\u4ece\u961f\u5217\u63a5\u6536\u6307\u9488\u540e\u53ef\u4ee5\u8bbf\u95ee\u5185\u5b58\u3002</p> <ul> <li>\u88ab\u6307\u5411\u7684 RAM \u4fdd\u6301\u6709\u6548\u3002</li> </ul> <p>\u5982\u679c\u88ab\u6307\u5411\u7684\u5185\u5b58\u662f\u52a8\u6001\u5206\u914d\u7684\uff0c\u6216\u8005\u662f\u4ece\u9884\u5206\u914d\u7f13\u51b2\u533a\u6c60\u4e2d\u83b7\u53d6\u7684\uff0c\u5219\u5fc5\u987b\u7531\u4e00\u4e2a\u4efb\u52a1\u8d1f\u8d23\u91ca\u653e\u5185\u5b58\u3002\u6ca1\u6709\u4efb\u52a1\u5e94\u8be5\u5728\u5185\u5b58\u88ab\u91ca\u653e\u540e\u5c1d\u8bd5\u8bbf\u95ee\u5b83\u3002</p> <p>\u4e0d\u5e94\u4f7f\u7528\u6307\u9488\u8bbf\u95ee\u5728\u4efb\u52a1\u5806\u6808\u4e0a\u5206\u914d\u7684\u6570\u636e\u3002\u5806\u6808\u5e27\u66f4\u6539\u540e\uff0c\u6570\u636e\u5c06\u65e0\u6548\u3002</p> <p>\u4f5c\u4e3a\u793a\u4f8b\uff0c\u6e05\u5355 5.13\u30015.14 \u548c 5.15 \u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u961f\u5217\u4ece\u4e00\u4e2a\u4efb\u52a1\u53d1\u9001\u6307\u5411\u4e00\u4e2a\u7f13\u51b2\u533a\u7684\u6307\u9488\u5230\u53e6\u4e00\u4e2a\u4efb\u52a1\uff1a</p> <ul> <li> <p>\u6e05\u5355 5.13 \u521b\u5efa\u4e00\u4e2a\u53ef\u4ee5\u5bb9\u7eb3 5 \u4e2a\u6307\u9488\u7684\u961f\u5217\u3002</p> </li> <li> <p>\u6e05\u5355 5.14 \u5206\u914d\u4e00\u4e2a\u7f13\u51b2\u533a\uff0c\u5c06\u5b57\u7b26\u4e32\u5199\u5165\u7f13\u51b2\u533a\uff0c\u7136\u540e\u5c06\u6307\u5411\u7f13\u51b2\u533a\u7684\u6307\u9488\u53d1\u9001\u5230\u961f\u5217\u3002</p> </li> <li> <p>\u6e05\u5355 5.15 \u4ece\u961f\u5217\u63a5\u6536\u6307\u5411\u7f13\u51b2\u533a\u7684\u6307\u9488\uff0c\u7136\u540e\u6253\u5370\u7f13\u51b2\u533a\u4e2d\u5305\u542b\u7684\u5b57\u7b26\u4e32\u3002</p> </li> </ul> <p></p> <pre><code>/* \u58f0\u660e\u4e00\u4e2a\u7c7b\u578b\u4e3a QueueHandle_t \u7684\u53d8\u91cf\uff0c\u4ee5\u4fdd\u5b58\u6b63\u5728\u521b\u5efa\u7684\u961f\u5217\u7684\u53e5\u67c4\u3002 */\nQueueHandle_t xPointerQueue;\n\n/* \u521b\u5efa\u4e00\u4e2a\u53ef\u4ee5\u5bb9\u7eb3\u6700\u591a 5 \u4e2a\u6307\u9488\u7684\u961f\u5217\uff0c\u5728\u672c\u4f8b\u4e2d\u662f\u5b57\u7b26\u6307\u9488\u3002 */\nxPointerQueue = xQueueCreate( 5, sizeof( char * ) );\n</code></pre> <p>\u6e05\u5355 5.13 \u521b\u5efa\u4e00\u4e2a\u53ef\u4ee5\u5bb9\u7eb3\u6307\u9488\u7684\u961f\u5217</p> <p></p> <pre><code>/* \u4e00\u4e2a\u4efb\u52a1\uff0c\u83b7\u53d6\u4e00\u4e2a\u7f13\u51b2\u533a\uff0c\u5c06\u5b57\u7b26\u4e32\u5199\u5165\u7f13\u51b2\u533a\uff0c\u7136\u540e\u5c06\u7f13\u51b2\u533a\u7684\u5730\u5740\u53d1\u9001\u5230\u5728\u6e05\u5355 5.13 \u4e2d\u521b\u5efa\u7684\u961f\u5217\u3002 */\nvoid vStringSendingTask( void *pvParameters )\n{\n    char *pcStringToSend;\n    const size_t xMaxStringLength = 50;\n    BaseType_t xStringNumber = 0;\n\n    for( ;; )\n    {\n        /* \u83b7\u53d6\u4e00\u4e2a\u81f3\u5c11\u4e3a xMaxStringLength \u5b57\u7b26\u5927\u5c0f\u7684\u7f13\u51b2\u533a\u3002\n           prvGetBuffer() \u7684\u5b9e\u73b0\u672a\u663e\u793a\u2014\u2014\u5b83\u53ef\u80fd\u4ece\u9884\u5206\u914d\u7684\u7f13\u51b2\u533a\u6c60\u4e2d\u83b7\u53d6\u7f13\u51b2\u533a\uff0c\u6216\u8005\u53ea\u662f\u52a8\u6001\u5206\u914d\u7f13\u51b2\u533a\u3002 */\n        pcStringToSend = ( char * ) prvGetBuffer( xMaxStringLength );\n\n        /* \u5411\u7f13\u51b2\u533a\u5199\u5165\u5b57\u7b26\u4e32\u3002 */\n        snprintf( pcStringToSend, xMaxStringLength, \"String number %d\\r\\n\",\n                  xStringNumber );\n\n        /* \u589e\u52a0\u8ba1\u6570\u5668\uff0c\u4ee5\u4fbf\u6bcf\u6b21\u4efb\u52a1\u8fed\u4ee3\u65f6\u5b57\u7b26\u4e32\u4e0d\u540c\u3002 */\n        xStringNumber++;\n\n        /* \u5c06\u7f13\u51b2\u533a\u7684\u5730\u5740\u53d1\u9001\u5230\u5728\u6e05\u5355 5.13 \u4e2d\u521b\u5efa\u7684\u961f\u5217\u3002\u7f13\u51b2\u533a\u7684\u5730\u5740\u5b58\u50a8\u5728 \n           pcStringToSend \u53d8\u91cf\u4e2d\u3002*/\n        xQueueSend( xPointerQueue,   /* \u961f\u5217\u7684\u53e5\u67c4\u3002 */\n                    &amp;pcStringToSend, /* \u6307\u5411\u7f13\u51b2\u533a\u7684\u6307\u9488\u7684\u5730\u5740\u3002 */\n                    portMAX_DELAY );\n    }\n}\n</code></pre> <p>\u6e05\u5355 5.14 \u4f7f\u7528\u961f\u5217\u53d1\u9001\u6307\u5411\u7f13\u51b2\u533a\u7684\u6307\u9488</p> <p></p> <pre><code>/* \u4e00\u4e2a\u4efb\u52a1\uff0c\u4ece\u5728\u6e05\u5355 5.13 \u4e2d\u521b\u5efa\u7684\u961f\u5217\u63a5\u6536\u6307\u5411\u7f13\u51b2\u533a\u7684\u5730\u5740\uff0c\u5e76\u6253\u5370\u7f13\u51b2\u533a\u4e2d\u5b57\u7b26\u4e32\u3002 */\n\nvoid vStringReceivingTask( void *pvParameters )\n{\n    char *pcReceivedString;\n\n    for( ;; )\n    {\n        /* \u63a5\u6536\u7f13\u51b2\u533a\u7684\u5730\u5740\u3002 */\n        xQueueReceive( xPointerQueue,     /* \u961f\u5217\u7684\u53e5\u67c4\u3002 */\n                       &amp;pcReceivedString, /* \u5b58\u50a8\u7f13\u51b2\u533a\u5730\u5740\u7684\u53d8\u91cf\u3002 */\n                       portMAX_DELAY );\n\n        /* \u7f13\u51b2\u533a\u4e2d\u4fdd\u5b58\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6253\u5370\u51fa\u6765\u3002 */\n        vPrintString( pcReceivedString );\n\n        /* \u4e0d\u518d\u9700\u8981\u7f13\u51b2\u533a\u2014\u2014\u91ca\u653e\u5b83\u4ee5\u4fbf\u53ef\u4ee5\u88ab\u91ca\u653e\u6216\u91cd\u65b0\u4f7f\u7528\u3002 */\n        prvReleaseBuffer( pcReceivedString );\n    }\n}\n</code></pre> <p>\u6e05\u5355 5.15 \u4f7f\u7528\u961f\u5217\u63a5\u6536\u6307\u5411\u7f13\u51b2\u533a\u7684\u6307\u9488</p>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#552-9","title":"5.5.2 \u4f7f\u7528\u961f\u5217\u53d1\u9001\u4e0d\u540c\u7c7b\u578b\u548c\u957f\u5ea6\u7684\u6570\u636e[^9]","text":"<p>[^9]: FreeRTOS \u6d88\u606f\u7f13\u51b2\u533a\u662f\u7528\u4e8e\u6301\u6709\u53ef\u53d8\u957f\u5ea6\u6570\u636e\u7684\u961f\u5217\u7684\u66f4\u8f7b\u91cf\u7ea7\u66ff\u4ee3\u65b9\u6848\u3002</p> <p>\u672c\u4e66\u524d\u9762\u7684\u7ae0\u8282\u6f14\u793a\u4e86\u4e24\u79cd\u5f3a\u5927\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff1b\u5c06\u7ed3\u6784\u53d1\u9001\u5230\u961f\u5217\uff0c\u5c06\u6307\u9488\u53d1\u9001\u5230\u961f\u5217\u3002\u7ed3\u5408\u8fd9\u4e9b\u6280\u672f\uff0c\u4efb\u52a1\u53ef\u4ee5\u4f7f\u7528\u5355\u4e2a\u961f\u5217\u4ece\u4efb\u4f55\u6570\u636e\u6e90\u63a5\u6536\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u3002FreeRTOS+TCP TCP/IP \u5806\u6808\u7684\u5b9e\u73b0\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e00\u70b9\u7684\u5b9e\u9645\u793a\u4f8b\u3002</p> <p>\u5728\u5176\u81ea\u8eab\u7684\u4efb\u52a1\u4e2d\u8fd0\u884c\u7684 TCP/IP \u5806\u6808\uff0c\u5fc5\u987b\u5904\u7406\u6765\u81ea\u8bb8\u591a\u4e0d\u540c\u6e90\u7684\u4e8b\u4ef6\u3002\u4e0d\u540c\u7684\u4e8b\u4ef6\u7c7b\u578b\u4e0e\u4e0d\u540c\u7c7b\u578b\u548c\u957f\u5ea6\u7684\u6570\u636e\u76f8\u5173\u8054\u3002<code>IPStackEvent_t</code> \u7ed3\u6784\u63cf\u8ff0\u4e86\u53d1\u751f\u5728 TCP/IP \u4efb\u52a1\u5916\u90e8\u7684\u6240\u6709\u4e8b\u4ef6\uff0c\u5e76\u901a\u8fc7\u961f\u5217\u53d1\u9001\u5230 TCP/IP \u4efb\u52a1\u3002\u6e05\u5355 5.16 \u663e\u793a\u4e86 <code>IPStackEvent_t</code> \u7ed3\u6784\u3002<code>IPStackEvent_t</code> \u7ed3\u6784\u7684 <code>pvData</code> \u6210\u5458\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u53ef\u4ee5\u7528\u6765\u76f4\u63a5\u4fdd\u5b58\u4e00\u4e2a\u503c\uff0c\u6216\u8005\u6307\u5411\u4e00\u4e2a\u7f13\u51b2\u533a\u3002</p> <p></p> <pre><code>/* TCP/IP \u5806\u6808\u4e2d\u7528\u4e8e\u6807\u8bc6\u4e8b\u4ef6\u7684\u679a\u4e3e\u7c7b\u578b\u7684\u5b50\u96c6\u3002 */\ntypedef enum\n{\n    eNetworkDownEvent = 0, /* \u7f51\u7edc\u63a5\u53e3\u4e22\u5931\u6216\u9700\u8981\uff08\u91cd\u65b0\uff09\u8fde\u63a5\u3002 */\n    eNetworkRxEvent,       /* \u4ece\u7f51\u7edc\u63a5\u6536\u5230\u6570\u636e\u5305\u3002 */\n    eTCPAcceptEvent,       /* \u8c03\u7528 FreeRTOS_accept() \u63a5\u53d7\u6216\u7b49\u5f85\u65b0\u5ba2\u6237\u7aef\u8fde\u63a5\u3002 */\n\n/* \u6b64\u5904\u8fd8\u6709\u5176\u4ed6\u4e8b\u4ef6\u7c7b\u578b\uff0c\u4f46\u5728\u6b64\u6e05\u5355\u4e2d\u672a\u663e\u793a\u3002 */\n\n} eIPEvent_t;\n\n/* \u63cf\u8ff0\u4e8b\u4ef6\u7684\u7ed3\u6784\u4f53\uff0c\u901a\u8fc7\u961f\u5217\u53d1\u9001\u5230 TCP/IP \u4efb\u52a1\u3002 */\ntypedef struct IP_TASK_COMMANDS\n{\n    /* \u6807\u8bc6\u4e8b\u4ef6\u7684\u679a\u4e3e\u7c7b\u578b\u3002\u8bf7\u53c2\u89c1\u4e0a\u9762\u7684 eIPEvent_t \u5b9a\u4e49\u3002 */\n    eIPEvent_t eEventType;\n\n    /* \u4e00\u4e2a\u901a\u7528\u6307\u9488\uff0c\u53ef\u4ee5\u4fdd\u5b58\u4e00\u4e2a\u503c\uff0c\u6216\u6307\u5411\u4e00\u4e2a\u7f13\u51b2\u533a\u3002 */\n    void *pvData;\n\n} IPStackEvent_t;\n</code></pre> <p>\u6e05\u5355 5.16 \u7528\u4e8e\u5c06\u4e8b\u4ef6\u53d1\u9001\u5230 TCP/IP \u5806\u6808\u4efb\u52a1\u7684\u7ed3\u6784\u4f53</p> <p>\u793a\u4f8b TCP/IP \u4e8b\u4ef6\u53ca\u5176\u76f8\u5173\u6570\u636e\u5305\u62ec\uff1a</p> <ul> <li><code>eNetworkRxEvent</code>\uff1a\u4ece\u7f51\u7edc\u63a5\u6536\u5230\u6570\u636e\u5305\u3002</li> </ul> <p>\u7f51\u7edc\u63a5\u53e3\u4f7f\u7528 <code>IPStackEvent_t</code> \u7c7b\u578b\u7684\u7ed3\u6784\u5c06\u63a5\u6536\u5230\u7684\u6570\u636e\u53d1\u9001\u5230 TCP/IP \u4efb\u52a1\u3002\u7ed3\u6784\u7684 <code>eEventType</code> \u6210\u5458\u8bbe\u7f6e\u4e3a <code>eNetworkRxEvent</code>\uff0c\u7ed3\u6784\u7684 <code>pvData</code> \u6210\u5458\u7528\u4e8e\u6307\u5411\u5305\u542b\u63a5\u6536\u6570\u636e\u7684\u7f13\u51b2\u533a\u3002\u6e05\u5355 59 \u663e\u793a\u4e86\u4e00\u4e2a\u4f2a\u4ee3\u7801\u793a\u4f8b\u3002</p> <p></p> <p>```c   void vSendRxDataToTheTCPTask( NetworkBufferDescriptor_t *pxRxedData )   {       IPStackEvent_t xEventStruct;</p> <pre><code>  /* \u5b8c\u6210 IPStackEvent_t \u7ed3\u6784\u3002\u63a5\u6536\u5230\u7684\u6570\u636e\u5b58\u50a8\u5728 pxRxedData \u4e2d\u3002 */\n  xEventStruct.eEventType = eNetworkRxEvent;\n  xEventStruct.pvData = ( void * ) pxRxedData;\n\n  /* \u5c06 IPStackEvent_t \u7ed3\u6784\u53d1\u9001\u5230 TCP/IP \u4efb\u52a1\u3002 */\n  xSendEventStructToIPTask( &amp;xEventStruct );\n</code></pre> <p>}   ```   \u6e05\u5355 5.17 \u5982\u4f55\u4f7f\u7528 IPStackEvent_t \u7ed3\u6784\u5c06\u4ece\u7f51\u7edc\u63a5\u6536\u5230\u7684\u6570\u636e\u53d1\u9001\u5230 TCP/IP \u4efb\u52a1\u7684\u4f2a\u4ee3\u7801\u793a\u4f8b</p> <ul> <li><code>eTCPAcceptEvent</code>\uff1a\u5957\u63a5\u5b57\u63a5\u53d7\u6216\u7b49\u5f85\u6765\u81ea\u5ba2\u6237\u7aef\u7684\u65b0\u8fde\u63a5\u3002</li> </ul> <p>\u8c03\u7528 <code>FreeRTOS_accept()</code> \u7684\u4efb\u52a1\u4f7f\u7528 <code>IPStackEvent_t</code> \u7c7b\u578b\u7684\u7ed3\u6784\u5c06\u63a5\u53d7\u4e8b\u4ef6\u53d1\u9001\u5230 TCP/IP \u4efb\u52a1\u3002\u7ed3\u6784\u7684 <code>eEventType</code> \u6210\u5458\u8bbe\u7f6e\u4e3a <code>eTCPAcceptEvent</code>\uff0c\u7ed3\u6784\u7684 <code>pvData</code> \u6210\u5458\u8bbe\u7f6e\u4e3a\u6b63\u5728\u63a5\u53d7\u8fde\u63a5\u7684\u5957\u63a5\u5b57\u7684\u53e5\u67c4\u3002\u6e05\u5355 5.18 \u663e\u793a\u4e86\u4e00\u4e2a\u4f2a\u4ee3\u7801\u793a\u4f8b\u3002</p> <p></p> <p>```c   void vSendAcceptRequestToTheTCPTask( Socket_t xSocket )   {       IPStackEvent_t xEventStruct;</p> <pre><code>  /* \u5b8c\u6210 IPStackEvent_t \u7ed3\u6784\u3002 */\n  xEventStruct.eEventType = eTCPAcceptEvent;\n  xEventStruct.pvData = ( void * ) xSocket;\n\n  /* \u5c06 IPStackEvent_t \u7ed3\u6784\u53d1\u9001\u5230 TCP/IP \u4efb\u52a1\u3002 */\n  xSendEventStructToIPTask( &amp;xEventStruct );\n</code></pre> <p>}   ```   \u6e05\u5355 5.18 \u5982\u4f55\u4f7f\u7528 IPStackEvent_t \u7ed3\u6784\u5c06\u6b63\u5728\u63a5\u53d7\u8fde\u63a5\u7684\u5957\u63a5\u5b57\u7684\u53e5\u67c4\u53d1\u9001\u5230 TCP/IP \u4efb\u52a1\u7684\u4f2a\u4ee3\u7801\u793a\u4f8b</p> <ul> <li><code>eNetworkDownEvent</code>\uff1a\u7f51\u7edc\u9700\u8981\u8fde\u63a5\u6216\u91cd\u65b0\u8fde\u63a5\u3002</li> </ul> <p>\u7f51\u7edc\u63a5\u53e3\u4f7f\u7528 <code>IPStackEvent_t</code> \u7c7b\u578b\u7684\u7ed3\u6784\u5c06\u7f51\u7edc\u6545\u969c\u4e8b\u4ef6\u53d1\u9001\u5230 TCP/IP \u4efb\u52a1\u3002\u7ed3\u6784\u7684 <code>eEventType</code> \u6210\u5458\u8bbe\u7f6e\u4e3a <code>eNetworkDownEvent</code>\u3002\u7f51\u7edc\u6545\u969c\u4e8b\u4ef6\u4e0d\u4e0e\u4efb\u4f55\u6570\u636e\u76f8\u5173\u8054\uff0c\u56e0\u6b64\u7ed3\u6784\u7684 <code>pvData</code> \u6210\u5458\u4e0d\u4f7f\u7528\u3002\u6e05\u5355 5.19 \u663e\u793a\u4e86\u4e00\u4e2a\u4f2a\u4ee3\u7801\u793a\u4f8b\u3002</p> <p></p> <p>```c   void vSendNetworkDownEventToTheTCPTask( Socket_t xSocket )   {       IPStackEvent_t xEventStruct;</p> <pre><code>  /* \u5b8c\u6210 IPStackEvent_t \u7ed3\u6784\u3002 */\n  xEventStruct.eEventType = eNetworkDownEvent;\n\n  xEventStruct.pvData = NULL; /* \u672a\u4f7f\u7528\uff0c\u4f46\u4e3a\u5b8c\u6574\u6027\u800c\u8bbe\u7f6e\u4e3a NULL\u3002 */\n\n  /* \u5c06 IPStackEvent_t \u7ed3\u6784\u53d1\u9001\u5230 TCP/IP \u4efb\u52a1\u3002 */\n  xSendEventStructToIPTask( &amp;xEventStruct );\n</code></pre> <p>}   ```   \u6e05\u5355 5.19 \u5982\u4f55\u4f7f\u7528 IPStackEvent_t \u7ed3\u6784\u5c06\u7f51\u7edc\u6545\u969c\u4e8b\u4ef6\u53d1\u9001\u5230 TCP/IP \u4efb\u52a1\u7684\u4f2a\u4ee3\u7801\u793a\u4f8b</p> <p>\u6e05\u5355 5.20 \u663e\u793a\u4e86\u63a5\u6536\u548c\u5904\u7406\u8fd9\u4e9b\u4e8b\u4ef6\u7684\u4ee3\u7801\u3002</p> <p></p> <p>```c   IPStackEvent_t xReceivedEvent;</p> <p>/ \u963b\u585e\u5728\u7f51\u7edc\u4e8b\u4ef6\u961f\u5217\u4e0a\uff0c\u76f4\u5230\u63a5\u6536\u5230\u4e8b\u4ef6\uff0c\u6216\u8005\u5728 xNextIPSleep \u6ef4\u7b54\u6570\u5185\u672a\u63a5\u6536\u5230\u4e8b\u4ef6\u3002eEventType \u5728\u8c03\u7528 xQueueReceive() \u65f6\u88ab\u8bbe\u7f6e\u4e3a eNoEvent\uff0c\u4ee5\u9632\u7531\u4e8e\u8d85\u65f6\u800c\u8fd4\u56de\u3002 /   xReceivedEvent.eEventType = eNoEvent;   xQueueReceive( xNetworkEventQueue, &amp;xReceivedEvent, xNextIPSleep );</p> <p>/ \u6536\u5230\u4e86\u4ec0\u4e48\u4e8b\u4ef6\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\uff1f /   switch( xReceivedEvent.eEventType )   {       case eNetworkDownEvent :            / \u5c1d\u8bd5\uff08\u91cd\u65b0\uff09\u5efa\u7acb\u8fde\u63a5\u3002\u6b64\u4e8b\u4ef6\u4e0d\u4e0e\u6570\u636e\u76f8\u5173\u8054\u3002 /            prvProcessNetworkDownEvent();            break;</p> <pre><code>  case eNetworkRxEvent:\n       /* \u7f51\u7edc\u63a5\u53e3\u63a5\u6536\u5230\u65b0\u6570\u636e\u5305\u3002\u63a5\u6536\u5230\u7684\u6570\u636e\u7684\u6307\u9488\u5b58\u50a8\u5728\u63a5\u6536\u5230\u7684 \n          IPStackEvent_t \u7ed3\u6784\u7684 pvData \u6210\u5458\u4e2d\u3002\u5904\u7406\u63a5\u6536\u5230\u7684\u6570\u636e\u3002 */\n       prvHandleEthernetPacket( ( NetworkBufferDescriptor_t * )\n                                ( xReceivedEvent.pvData ) );\n       break;\n\n  case eTCPAcceptEvent:\n       /* \u8c03\u7528\u4e86 FreeRTOS_accept() API \u51fd\u6570\u3002\u63a5\u53d7\u8fde\u63a5\u7684\u5957\u63a5\u5b57\u7684\u53e5\u67c4\u5b58\u50a8\u5728\u63a5\u6536\u5230\u7684 IPStackEvent_t \u7ed3\u6784\u7684 pvData \u6210\u5458\u4e2d\u3002 */\n       xSocket = ( FreeRTOS_Socket_t * ) ( xReceivedEvent.pvData );\n       xTCPCheckNewClient( xSocket );\n       break;\n\n  /* \u4ee5\u540c\u6837\u7684\u65b9\u5f0f\u5904\u7406\u5176\u4ed6\u4e8b\u4ef6\u7c7b\u578b\uff0c\u4f46\u5728\u6b64\u672a\u663e\u793a\u3002 */\n</code></pre> <p>}   ```   \u6e05\u5355 5.20 \u5982\u4f55\u63a5\u6536\u548c\u5904\u7406 IPStackEvent_t \u7ed3\u6784\u7684\u4f2a\u4ee3\u7801\u793a\u4f8b </p>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#56","title":"5.6 \u4ece\u591a\u4e2a\u961f\u5217\u63a5\u6536","text":""},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#561","title":"5.6.1 \u961f\u5217\u96c6","text":"<p>\u5e94\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\uff0c\u5355\u4e2a\u4efb\u52a1\u9700\u8981\u63a5\u6536\u4e0d\u540c\u5927\u5c0f\u3001\u4e0d\u540c\u542b\u4e49\u548c\u6765\u81ea\u4e0d\u540c\u6e90\u7684\u6570\u636e\u662f\u5f88\u5e38\u89c1\u7684\u3002\u4e0a\u4e00\u8282\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u5355\u4e2a\u961f\u5217\u63a5\u6536\u8fd9\u4e9b\u6570\u636e\u3002\u7136\u800c\uff0c\u6709\u65f6\u5e94\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u4eba\u5458\u5728\u5de5\u4f5c\u65f6\u53d7\u5230\u9650\u5236\uff0c\u5fc5\u987b\u4f7f\u7528\u5355\u72ec\u7684\u961f\u5217\u7528\u4e8e\u67d0\u4e9b\u6570\u636e\u6e90\u3002\u4f8b\u5982\uff0c\u96c6\u6210\u7684\u7b2c\u4e09\u65b9\u4ee3\u7801\u53ef\u80fd\u5047\u8bbe\u5b58\u5728\u4e13\u7528\u961f\u5217\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528\u201c\u961f\u5217\u96c6\u201d\u3002</p> <p>\u961f\u5217\u96c6\u5141\u8bb8\u4efb\u52a1\u4ece\u591a\u4e2a\u961f\u5217\u63a5\u6536\u6570\u636e\uff0c\u800c\u65e0\u9700\u8f6e\u8be2\u6bcf\u4e2a\u961f\u5217\u4ee5\u786e\u5b9a\u54ea\u4e2a\u961f\u5217\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u5305\u542b\u6570\u636e\u3002</p> <p>\u4f7f\u7528\u961f\u5217\u96c6\u7684\u8bbe\u8ba1\u4e0d\u5982\u4f7f\u7528\u5355\u4e2a\u63a5\u6536\u7ed3\u6784\u7684\u961f\u5217\u7684\u8bbe\u8ba1\u6574\u6d01\u548c\u9ad8\u6548\u3002\u56e0\u6b64\uff0c\u5efa\u8bae\u4ec5\u5728\u8bbe\u8ba1\u9650\u5236\u4f7f\u5176\u4f7f\u7528\u7edd\u5bf9\u5fc5\u8981\u65f6\u624d\u4f7f\u7528\u961f\u5217\u96c6\u3002</p> <p>\u4ee5\u4e0b\u5404\u8282\u5c06\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u63cf\u8ff0\u5982\u4f55\u4f7f\u7528\u961f\u5217\u96c6\uff1a</p> <ul> <li> <p>\u521b\u5efa\u961f\u5217\u96c6\u3002</p> </li> <li> <p>\u5411\u96c6\u5408\u4e2d\u6dfb\u52a0\u961f\u5217\u3002</p> </li> </ul> <p>\u8fd8\u53ef\u4ee5\u5c06\u4fe1\u53f7\u91cf\u6dfb\u52a0\u5230\u961f\u5217\u96c6\u4e2d\u3002\u4fe1\u53f7\u91cf\u5c06\u5728\u672c\u4e66\u540e\u9762\u63cf\u8ff0\u3002</p> <ul> <li>\u4ece\u961f\u5217\u96c6\u4e2d\u8bfb\u53d6\u4ee5\u786e\u5b9a\u96c6\u5408\u4e2d\u54ea\u4e9b\u961f\u5217\u5305\u542b\u6570\u636e\u3002</li> </ul> <p>\u5f53\u5c5e\u4e8e\u96c6\u5408\u7684\u961f\u5217\u63a5\u6536\u5230\u6570\u636e\u65f6\uff0c\u63a5\u6536\u961f\u5217\u7684\u53e5\u67c4\u5c06\u53d1\u9001\u5230\u961f\u5217\u96c6\uff0c\u5e76\u5728\u4efb\u52a1\u8c03\u7528\u4ece\u961f\u5217\u96c6\u8bfb\u53d6\u7684\u51fd\u6570\u65f6\u8fd4\u56de\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4ece\u961f\u5217\u96c6\u4e2d\u8fd4\u56de\u961f\u5217\u53e5\u67c4\uff0c\u5219\u8868\u793a\u8be5\u53e5\u67c4\u5f15\u7528\u7684\u961f\u5217\u5305\u542b\u6570\u636e\uff0c\u4efb\u52a1\u53ef\u4ee5\u76f4\u63a5\u4ece\u8be5\u961f\u5217\u8bfb\u53d6\u6570\u636e\u3002</p> <p>\u6ce8\u610f\uff1a\u5982\u679c\u961f\u5217\u662f\u961f\u5217\u96c6\u7684\u6210\u5458\uff0c\u5219\u5fc5\u987b\u5728\u5176\u53e5\u67c4\u4ece\u961f\u5217\u96c6\u4e2d\u63a5\u6536\u5230\u4e4b\u524d\uff0c\u8bfb\u53d6\u961f\u5217\u4e2d\u7684\u6570\u636e\uff1b\u5e76\u4e14\u5728\u5176\u53e5\u67c4\u4ece\u961f\u5217\u96c6\u4e2d\u63a5\u6536\u5230\u4e4b\u540e\uff0c\u624d\u53ef\u4ee5\u8bfb\u53d6\u961f\u5217\u4e2d\u7684\u6570\u636e\u3002</p> <p>\u901a\u8fc7\u5728 FreeRTOSConfig.h \u4e2d\u5c06 <code>configUSE_QUEUE_SETS</code> \u7f16\u8bd1\u65f6\u914d\u7f6e\u5e38\u91cf\u8bbe\u7f6e\u4e3a 1\uff0c\u542f\u7528\u961f\u5217\u96c6\u529f\u80fd\u3002</p>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#562-xqueuecreateset-api","title":"5.6.2 xQueueCreateSet() API \u51fd\u6570","text":"<p>\u5fc5\u987b\u663e\u5f0f\u521b\u5efa\u961f\u5217\u96c6\u624d\u80fd\u4f7f\u7528\u3002\u76ee\u524d\u5c1a\u672a\u5b9e\u73b0 <code>xQueueCreateSetStatic()</code>\u3002\u4f46\u662f\uff0c\u961f\u5217\u96c6\u672c\u8eab\u5c31\u662f\u961f\u5217\uff0c\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u5bf9 <code>xQueueCreateStatic()</code> \u7684\u7279\u6b8a\u8c03\u7528\u6765\u4f7f\u7528\u9884\u5206\u914d\u7684\u5185\u5b58\u521b\u5efa\u4e00\u4e2a\u96c6\u5408\u3002</p> <p>\u961f\u5217\u96c6\u901a\u8fc7\u53e5\u67c4\u5f15\u7528\uff0c\u53e5\u67c4\u662f <code>QueueSetHandle_t</code> \u7c7b\u578b\u7684\u53d8\u91cf\u3002<code>xQueueCreateSet()</code> API \u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u961f\u5217\u96c6\u5e76\u8fd4\u56de\u4e00\u4e2a\u5f15\u7528\u6240\u521b\u5efa\u961f\u5217\u96c6\u7684 <code>QueueSetHandle_t</code>\u3002</p> <p></p> <pre><code>QueueSetHandle_t xQueueCreateSet( const UBaseType_t uxEventQueueLength);\n</code></pre> <p>\u6e05\u5355 5.21 xQueueCreateSet() API \u51fd\u6570\u539f\u578b</p> <p>xQueueCreateSet() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>uxEventQueueLength</code></li> </ul> <p>\u5f53\u961f\u5217\u96c6\u7684\u6210\u5458\u961f\u5217\u63a5\u6536\u5230\u6570\u636e\u65f6\uff0c\u63a5\u6536\u961f\u5217\u7684\u53e5\u67c4\u5c06\u53d1\u9001\u5230\u961f\u5217\u96c6\u3002   <code>uxEventQueueLength</code> \u5b9a\u4e49\u4e86\u6b63\u5728\u521b\u5efa\u7684\u961f\u5217\u96c6\u4e00\u6b21\u53ef\u4ee5\u5bb9\u7eb3\u7684\u961f\u5217\u53e5\u67c4\u7684\u6700\u5927\u6570\u91cf\u3002</p> <p>\u4ec5\u5f53\u961f\u5217\u6ee1\u65f6\uff0c\u961f\u5217\u53e5\u67c4\u624d\u4f1a\u53d1\u9001\u5230\u961f\u5217\u96c6\uff0c\u56e0\u6b64\u961f\u5217\u96c6\u4e00\u6b21\u5fc5\u987b\u80fd\u591f\u5bb9\u7eb3\u96c6\u5408\u4e2d\u6240\u6709\u961f\u5217\u957f\u5ea6\u7684\u603b\u548c\u3002</p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u6709\u4e09\u4e2a\u7a7a\u961f\u5217\uff0c\u6bcf\u4e2a\u961f\u5217\u7684\u957f\u5ea6\u4e3a\u4e94\uff0c\u5219\u96c6\u5408\u4e2d\u7684\u961f\u5217\u603b\u5171\u53ef\u4ee5\u63a5\u6536\u5341\u4e94\u4e2a\u9879\u76ee\uff08\u4e09\u4e2a\u961f\u5217\u4e58\u4ee5\u6bcf\u4e2a\u961f\u5217\u4e94\u4e2a\u9879\u76ee\uff09\uff0c\u7136\u540e\u6240\u6709\u961f\u5217\u90fd\u6ee1\u4e86\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c<code>uxEventQueueLength</code> \u5fc5\u987b\u8bbe\u7f6e\u4e3a\u5341\u4e94\uff0c\u4ee5\u786e\u4fdd\u961f\u5217\u96c6\u53ef\u4ee5\u63a5\u6536\u53d1\u9001\u7ed9\u5b83\u7684\u6bcf\u4e2a\u9879\u76ee\u3002</p> <p>\u8fd8\u53ef\u4ee5\u5c06\u4fe1\u53f7\u91cf\u6dfb\u52a0\u5230\u961f\u5217\u96c6\u4e2d\u3002\u4fe1\u53f7\u91cf\u5728\u672c\u4e66\u540e\u9762\u4ecb\u7ecd\u3002\u5bf9\u4e8e\u8ba1\u7b97\u6240\u9700\u7684 <code>uxEventQueueLength</code>\uff0c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u7684\u957f\u5ea6\u4e3a 1\uff0c\u4e92\u65a5\u9501\u7684\u957f\u5ea6\u4e3a 1\uff0c\u8ba1\u6570\u4fe1\u53f7\u91cf\u7684\u957f\u5ea6\u7531\u4fe1\u53f7\u91cf\u7684\u6700\u5927\u8ba1\u6570\u503c\u7ed9\u51fa\u3002</p> <p>\u53e6\u4e00\u4e2a\u4f8b\u5b50\u662f\uff0c\u5982\u679c\u4e00\u4e2a\u961f\u5217\u96c6\u5305\u542b\u4e00\u4e2a\u957f\u5ea6\u4e3a\u4e09\u7684\u961f\u5217\u548c\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\uff08\u957f\u5ea6\u4e3a\u4e00\uff09\uff0c\u5219 <code>uxEventQueueLength</code> \u5fc5\u987b\u8bbe\u7f6e\u4e3a\u56db\uff083 \u52a0 1\uff09\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u5982\u679c\u8fd4\u56de NULL\uff0c\u5219\u8868\u793a\u65e0\u6cd5\u521b\u5efa\u961f\u5217\u96c6\uff0c\u56e0\u4e3a FreeRTOS \u6ca1\u6709\u8db3\u591f\u7684\u5806\u5185\u5b58\u6765\u5206\u914d\u961f\u5217\u96c6\u6570\u636e\u7ed3\u6784\u548c\u5b58\u50a8\u533a\u57df\u3002\u7b2c 3 \u7ae0\u63d0\u4f9b\u4e86\u6709\u5173 FreeRTOS \u5806\u7684\u66f4\u591a\u4fe1\u606f\u3002</p> <p>\u5982\u679c\u8fd4\u56de\u975e NULL \u503c\uff0c\u5219\u8868\u793a\u961f\u5217\u96c6\u5df2\u6210\u529f\u521b\u5efa\uff0c\u8fd4\u56de\u503c\u662f\u6240\u521b\u5efa\u961f\u5217\u96c6\u7684\u53e5\u67c4\u3002</p>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#563-xqueueaddtoset-api","title":"5.6.3 xQueueAddToSet() API \u51fd\u6570","text":"<p><code>xQueueAddToSet()</code> \u5c06\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u6dfb\u52a0\u5230\u961f\u5217\u96c6\u4e2d\u3002\u4fe1\u53f7\u91cf\u5c06\u5728\u672c\u4e66\u540e\u9762\u63cf\u8ff0\u3002</p> <p></p> <pre><code>BaseType_t xQueueAddToSet( QueueSetMemberHandle_t xQueueOrSemaphore,\n                           QueueSetHandle_t xQueueSet );\n</code></pre> <p>\u6e05\u5355 5.22 xQueueAddToSet() API \u51fd\u6570\u539f\u578b</p> <p>xQueueAddToSet() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>xQueueOrSemaphore</code></li> </ul> <p>\u6b63\u5728\u6dfb\u52a0\u5230\u961f\u5217\u96c6\u7684\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u7684\u53e5\u67c4\u3002</p> <p>\u961f\u5217\u53e5\u67c4\u548c\u4fe1\u53f7\u91cf\u53e5\u67c4\u90fd\u53ef\u4ee5\u8f6c\u6362\u4e3a <code>QueueSetMemberHandle_t</code> \u7c7b\u578b\u3002</p> <ul> <li><code>xQueueSet</code></li> </ul> <p>\u6b63\u5728\u5411\u5176\u6dfb\u52a0\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u7684\u961f\u5217\u96c6\u7684\u53e5\u67c4\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u53ef\u80fd\u6709\u4e24\u4e2a\u8fd4\u56de\u503c\uff1a</p> <ol> <li> <p><code>pdPASS</code></p> <p>\u8868\u793a\u961f\u5217\u96c6\u5df2\u6210\u529f\u521b\u5efa\u3002</p> </li> <li> <p><code>pdFAIL</code></p> <p>\u8868\u793a\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u65e0\u6cd5\u6dfb\u52a0\u5230\u961f\u5217\u96c6\u4e2d\u3002</p> </li> </ol> <p>\u961f\u5217\u548c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u53ea\u80fd\u5728\u7a7a\u72b6\u6001\u4e0b\u6dfb\u52a0\u5230\u96c6\u5408\u4e2d\u3002\u8ba1\u6570\u4fe1\u53f7\u91cf\u53ea\u80fd\u5728\u8ba1\u6570\u4e3a\u96f6\u65f6\u6dfb\u52a0\u5230\u96c6\u5408\u4e2d\u3002\u961f\u5217\u548c\u4fe1\u53f7\u91cf\u4e00\u6b21\u53ea\u80fd\u662f\u4e00\u4e2a\u96c6\u5408\u7684\u6210\u5458\u3002</p>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#564-xqueueselectfromset-api","title":"5.6.4 xQueueSelectFromSet() API \u51fd\u6570","text":"<p><code>xQueueSelectFromSet()</code> \u4ece\u961f\u5217\u96c6\u4e2d\u8bfb\u53d6\u4e00\u4e2a\u961f\u5217\u53e5\u67c4\u3002</p> <p>\u5f53\u5c5e\u4e8e\u96c6\u5408\u7684\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u63a5\u6536\u5230\u6570\u636e\u65f6\uff0c\u63a5\u6536\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u7684\u53e5\u67c4\u5c06\u53d1\u9001\u5230\u961f\u5217\u96c6\uff0c\u5e76\u5728\u4efb\u52a1\u8c03\u7528 <code>xQueueSelectFromSet()</code> \u65f6\u8fd4\u56de\u3002\u5982\u679c\u4ece <code>xQueueSelectFromSet()</code> \u8fd4\u56de\u4e86\u4e00\u4e2a\u53e5\u67c4\uff0c\u5219\u8868\u793a\u8be5\u53e5\u67c4\u5f15\u7528\u7684\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u5305\u542b\u6570\u636e\uff0c\u8c03\u7528\u4efb\u52a1\u5fc5\u987b\u76f4\u63a5\u4ece\u8be5\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u8bfb\u53d6\u6570\u636e\u3002</p> <p>\u6ce8\u610f\uff1a\u5728\u4ece\u961f\u5217\u96c6\u63a5\u6536\u5230\u53e5\u67c4\u4e4b\u524d\uff0c\u8bf7\u52ff\u8bfb\u53d6\u4f5c\u4e3a\u961f\u5217\u96c6\u6210\u5458\u7684\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u7684\u6570\u636e\uff1b\u5e76\u4e14\u5728\u4ece\u961f\u5217\u96c6\u63a5\u6536\u5230\u53e5\u67c4\u4e4b\u540e\uff0c\u624d\u53ef\u4ee5\u8bfb\u53d6\u4f5c\u4e3a\u961f\u5217\u96c6\u6210\u5458\u7684\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u7684\u6570\u636e\u3002\u6bcf\u6b21\u4ece\u961f\u5217\u96c6\u8c03\u7528 <code>xQueueSelectFromSet()</code> \u65f6\uff0c\u53ea\u8bfb\u53d6\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u4e2d\u7684\u4e00\u9879\u6570\u636e\u3002</p> <p></p> <pre><code>QueueSetMemberHandle_t xQueueSelectFromSet( QueueSetHandle_t xQueueSet,\n                                            const TickType_t xTicksToWait );\n</code></pre> <p>\u6e05\u5355 5.23 xQueueSelectFromSet() API \u51fd\u6570\u539f\u578b</p> <p>xQueueSelectFromSet() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>xQueueSet</code></li> </ul> <p>\u6b63\u5728\u63a5\u6536\u961f\u5217\u53e5\u67c4\u6216\u4fe1\u53f7\u91cf\u53e5\u67c4\u7684\u961f\u5217\u96c6\u7684\u53e5\u67c4\u3002\u961f\u5217\u96c6\u53e5\u67c4\u5c06\u662f\u7528\u4e8e\u521b\u5efa\u961f\u5217\u96c6\u7684 <code>xQueueCreateSet()</code> \u8c03\u7528\u8fd4\u56de\u7684\u3002</p> <ul> <li><code>xTicksToWait</code></li> </ul> <p>\u8c03\u7528\u4efb\u52a1\u5728\u963b\u585e\u72b6\u6001\u4e2d\u7b49\u5f85\u4ece\u961f\u5217\u96c6\u63a5\u6536\u5230\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u53e5\u67c4\u7684\u6700\u957f\u65f6\u95f4\uff0c\u5982\u679c\u96c6\u5408\u4e2d\u7684\u6240\u6709\u961f\u5217\u548c\u4fe1\u53f7\u91cf\u90fd\u4e3a\u7a7a\u3002</p> <p>\u5982\u679c <code>xTicksToWait</code> \u4e3a\u96f6\uff0c\u5219\u5982\u679c\u96c6\u5408\u4e2d\u7684\u6240\u6709\u961f\u5217\u548c\u4fe1\u53f7\u91cf\u90fd\u4e3a\u7a7a\uff0c<code>xQueueSelectFromSet()</code> \u5c06\u7acb\u5373\u8fd4\u56de\u3002</p> <p>\u5757\u65f6\u95f4\u4ee5\u6ef4\u7b54\u5468\u671f\u4e3a\u5355\u4f4d\u6307\u5b9a\uff0c\u56e0\u6b64\u5b83\u8868\u793a\u7684\u7edd\u5bf9\u65f6\u95f4\u53d6\u51b3\u4e8e\u6ef4\u7b54\u9891\u7387\u3002\u5b8f <code>pdMS_TO_TICKS()</code> \u53ef\u7528\u4e8e\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5\u6ef4\u7b54\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u3002</p> <p>\u5c06 <code>xTicksToWait</code> \u8bbe\u7f6e\u4e3a <code>portMAX_DELAY</code> \u5c06\u5bfc\u81f4\u4efb\u52a1\u65e0\u9650\u671f\u7b49\u5f85\uff08\u4e0d\u8d85\u65f6\uff09\uff0c\u524d\u63d0\u662f <code>INCLUDE_vTaskSuspend</code> \u5728 FreeRTOSConfig.h \u4e2d\u8bbe\u7f6e\u4e3a 1\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u975e NULL \u7684\u8fd4\u56de\u503c\u5c06\u662f\u4e00\u4e2a\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u7684\u53e5\u67c4\uff0c\u5df2\u77e5\u8be5\u53e5\u67c4\u5305\u542b\u6570\u636e\u3002\u5982\u679c\u6307\u5b9a\u4e86\u5757\u65f6\u95f4\uff08<code>xTicksToWait</code> \u4e0d\u4e3a\u96f6\uff09\uff0c\u5219\u8c03\u7528\u4efb\u52a1\u53ef\u80fd\u88ab\u7f6e\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u4e2d\u7684\u6570\u636e\u53d8\u4e3a\u53ef\u7528\uff0c\u4f46\u5728\u5757\u65f6\u95f4\u5230\u671f\u4e4b\u524d\u6210\u529f\u8bfb\u53d6\u4e86\u53e5\u67c4\u3002\u53e5\u67c4\u4f5c\u4e3a <code>QueueSetMemberHandle_t</code> \u7c7b\u578b\u8fd4\u56de\uff0c\u53ef\u4ee5\u8f6c\u6362\u4e3a <code>QueueHandle_t</code> \u7c7b\u578b\u6216 <code>SemaphoreHandle_t</code> \u7c7b\u578b\u3002</p> <p>\u5982\u679c\u8fd4\u56de\u503c\u4e3a NULL\uff0c\u5219\u65e0\u6cd5\u4ece\u961f\u5217\u96c6\u4e2d\u8bfb\u53d6\u53e5\u67c4\u3002\u5982\u679c\u6307\u5b9a\u4e86\u5757\u65f6\u95f4\uff08<code>xTicksToWait</code> \u4e0d\u4e3a\u96f6\uff09\uff0c\u5219\u8c03\u7528\u4efb\u52a1\u88ab\u7f6e\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u7b49\u5f85\u53e6\u4e00\u4e2a\u4efb\u52a1\u6216\u4e2d\u65ad\u5c06\u6570\u636e\u53d1\u9001\u5230\u96c6\u5408\u4e2d\u7684\u961f\u5217\u6216\u4fe1\u53f7\u91cf\uff0c\u4f46\u5757\u65f6\u95f4\u5728\u53d1\u751f\u4e4b\u524d\u5df2\u5230\u671f\u3002</p>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#_3","title":"5 \u961f\u5217\u7ba1\u7406","text":"<p>\u793a\u4f8b 5.3 *\u4f7f\u7528\u961f\u5217\u96c6</p> <p>\u6b64\u793a\u4f8b\u521b\u5efa\u4e24\u4e2a\u53d1\u9001\u4efb\u52a1\u548c\u4e00\u4e2a\u63a5\u6536\u4efb\u52a1\u3002\u53d1\u9001\u4efb\u52a1\u901a\u8fc7\u4e24\u4e2a\u5355\u72ec\u7684\u961f\u5217\u5411\u63a5\u6536\u4efb\u52a1\u53d1\u9001\u6570\u636e\uff0c\u4e00\u4e2a\u961f\u5217\u5bf9\u5e94\u4e00\u4e2a\u4efb\u52a1\u3002\u4e24\u4e2a\u961f\u5217\u88ab\u6dfb\u52a0\u5230\u4e00\u4e2a\u961f\u5217\u96c6\u4e2d\uff0c\u63a5\u6536\u4efb\u52a1\u4ece\u961f\u5217\u96c6\u4e2d\u8bfb\u53d6\u4ee5\u786e\u5b9a\u54ea\u4e2a\u961f\u5217\u5305\u542b\u6570\u636e\u3002</p> <p>\u4efb\u52a1\u3001\u961f\u5217\u548c\u961f\u5217\u96c6\u90fd\u5728 <code>main()</code> \u4e2d\u521b\u5efa\u2014\u2014\u8bf7\u53c2\u89c1\u6e05\u5355 5.24 \u4ee5\u83b7\u53d6\u5176\u5b9e\u73b0\u3002</p> <p></p> <pre><code>/* \u58f0\u660e\u4e24\u4e2a\u7c7b\u578b\u4e3a QueueHandle_t \u7684\u53d8\u91cf\u3002\u4e24\u4e2a\u961f\u5217\u88ab\u6dfb\u52a0\u5230\u540c\u4e00\u4e2a\u961f\u5217\u96c6\u4e2d\u3002 */\nstatic QueueHandle_t xQueue1 = NULL, xQueue2 = NULL;\n\n/* \u58f0\u660e\u4e00\u4e2a\u7c7b\u578b\u4e3a QueueSetHandle_t \u7684\u53d8\u91cf\u3002\u8fd9\u662f\u961f\u5217\u96c6\n   \u4e24\u4e2a\u961f\u5217\u88ab\u6dfb\u52a0\u5230\u5176\u4e2d\u3002 */\nstatic QueueSetHandle_t xQueueSet = NULL;\n\nint main( void )\n{\n    /* \u521b\u5efa\u4e24\u4e2a\u961f\u5217\uff0c\u4e24\u4e2a\u961f\u5217\u90fd\u53d1\u9001\u5b57\u7b26\u6307\u9488\u3002\u63a5\u6536\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u53d1\u9001\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff0c\u56e0\u6b64\u961f\u5217\u4e00\u6b21\u6c38\u8fdc\u4e0d\u4f1a\u5305\u542b\u591a\u4e2a\u9879\u76ee\u3002*/\n    xQueue1 = xQueueCreate( 1, sizeof( char * ) );\n    xQueue2 = xQueueCreate( 1, sizeof( char * ) );\n\n    /* \u521b\u5efa\u961f\u5217\u96c6\u3002\u5c06\u6709\u4e24\u4e2a\u961f\u5217\u6dfb\u52a0\u5230\u96c6\u5408\u4e2d\uff0c\u6bcf\u4e2a\u961f\u5217\u53ef\u4ee5\u5305\u542b 1 \u4e2a\u9879\u76ee\uff0c\u56e0\u6b64\u961f\u5217\u96c6\u4e00\u6b21\u6700\u591a\u53ea\u80fd\u5bb9\u7eb3 2 \u4e2a\u961f\u5217\u53e5\u67c4\uff082 \u4e2a\u961f\u5217\u4e58\u4ee5\u6bcf\u4e2a\u961f\u5217 1 \u4e2a\u9879\u76ee\uff09\u3002 */\n    xQueueSet = xQueueCreateSet( 1 * 2 );\n\n    /* \u5c06\u4e24\u4e2a\u961f\u5217\u6dfb\u52a0\u5230\u96c6\u5408\u4e2d\u3002 */\n    xQueueAddToSet( xQueue1, xQueueSet );\n    xQueueAddToSet( xQueue2, xQueueSet );\n\n    /* \u521b\u5efa\u5c06\u6570\u636e\u53d1\u9001\u5230\u961f\u5217\u7684\u4efb\u52a1\u3002 */\n    xTaskCreate( vSenderTask1, \"Sender1\", 1000, NULL, 1, NULL );\n    xTaskCreate( vSenderTask2, \"Sender2\", 1000, NULL, 1, NULL );\n\n    /* \u521b\u5efa\u4ece\u961f\u5217\u96c6\u4e2d\u8bfb\u53d6\u4ee5\u786e\u5b9a\u4e24\u4e2a\u961f\u5217\u4e2d\u54ea\u4e2a\u961f\u5217\u5305\u542b\u6570\u636e\u7684\u4efb\u52a1\u3002 */\n    xTaskCreate( vReceiverTask, \"Receiver\", 1000, NULL, 2, NULL );\n\n    /* \u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u521b\u5efa\u7684\u4efb\u52a1\u5f00\u59cb\u6267\u884c\u3002 */\n    vTaskStartScheduler();\n\n    /* \u50cf\u5f80\u5e38\u4e00\u6837\uff0cvTaskStartScheduler() \u4e0d\u5e94\u8fd4\u56de\uff0c\u56e0\u6b64\u4ee5\u4e0b\u884c\u5c06\u6c38\u8fdc\u4e0d\u4f1a\u6267\u884c\u3002 */\n    for( ;; );\n    return 0;\n}\n</code></pre> <p>\u6e05\u5355 5.24 \u793a\u4f8b 5.3 \u4e2d main() \u7684\u5b9e\u73b0</p> <p>\u7b2c\u4e00\u4e2a\u53d1\u9001\u4efb\u52a1\u4f7f\u7528 <code>xQueue1</code> \u6bcf 100 \u6beb\u79d2\u5411\u63a5\u6536\u4efb\u52a1\u53d1\u9001\u4e00\u4e2a\u5b57\u7b26\u6307\u9488\u3002\u7b2c\u4e8c\u4e2a\u53d1\u9001\u4efb\u52a1\u4f7f\u7528 <code>xQueue2</code> \u6bcf 200 \u6beb\u79d2\u5411\u63a5\u6536\u4efb\u52a1\u53d1\u9001\u4e00\u4e2a\u5b57\u7b26\u6307\u9488\u3002\u5b57\u7b26\u6307\u9488\u6307\u5411\u6807\u8bc6\u53d1\u9001\u4efb\u52a1\u7684\u5b57\u7b26\u4e32\u3002\u6e05\u5355 5.25 \u663e\u793a\u4e86\u8fd9\u4e24\u4e2a\u4efb\u52a1\u7684\u5b9e\u73b0\u3002</p> <p></p> <pre><code>void vSenderTask1( void *pvParameters )\n{\n    const TickType_t xBlockTime = pdMS_TO_TICKS( 100 );\n    const char * const pcMessage = \"Message from vSenderTask1\\r\\n\";\n\n    /* \u4e0e\u5927\u591a\u6570\u4efb\u52a1\u4e00\u6837\uff0c\u6b64\u4efb\u52a1\u5728\u65e0\u9650\u5faa\u73af\u4e2d\u5b9e\u73b0\u3002 */\n\n    for( ;; )\n    {\n\n        /* \u963b\u585e 100 \u6beb\u79d2\u3002 */\n        vTaskDelay( xBlockTime );\n\n        /* \u5c06\u6b64\u4efb\u52a1\u7684\u5b57\u7b26\u4e32\u53d1\u9001\u5230 xQueue1\u3002\u6ca1\u6709\u5fc5\u8981\u4f7f\u7528\u963b\u585e\u65f6\u95f4\uff0c\u5373\u4f7f\u961f\u5217\u4e00\u6b21\u53ea\u80fd\u5bb9\u7eb3\u4e00\u4e2a\u9879\u76ee\u3002\u8fd9\u662f\u56e0\u4e3a\u8bfb\u53d6\u961f\u5217\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u6b64\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff1b\u5f53\u6b64\u4efb\u52a1\u5199\u5165\u961f\u5217\u65f6\uff0c\u5b83\u5c06\u88ab\u8bfb\u53d6\u4efb\u52a1\u62a2\u5360\uff0c\u56e0\u6b64\u5728\u8c03\u7528 xQueueSend() \u8fd4\u56de\u65f6\uff0c\u961f\u5217\u5df2\u7ecf\u662f\u7a7a\u7684\u3002\u963b\u585e\u65f6\u95f4\u8bbe\u7f6e\u4e3a 0\u3002 */\n        xQueueSend( xQueue1, &amp;pcMessage, 0 );\n    }\n}\n\n/*-----------------------------------------------------------*/\n\nvoid vSenderTask2( void *pvParameters )\n{\n    const TickType_t xBlockTime = pdMS_TO_TICKS( 200 );\n    const char * const pcMessage = \"Message from vSenderTask2\\r\\n\";\n\n    /* \u4e0e\u5927\u591a\u6570\u4efb\u52a1\u4e00\u6837\uff0c\u6b64\u4efb\u52a1\u5728\u65e0\u9650\u5faa\u73af\u4e2d\u5b9e\u73b0\u3002 */\n    for( ;; )\n    {\n        /* \u963b\u585e 200 \u6beb\u79d2\u3002 */\n        vTaskDelay( xBlockTime );\n\n        /* \u5c06\u6b64\u4efb\u52a1\u7684\u5b57\u7b26\u4e32\u53d1\u9001\u5230 xQueue2\u3002\u6ca1\u6709\u5fc5\u8981\u4f7f\u7528\u963b\u585e\u65f6\u95f4\uff0c\u5373\u4f7f\u961f\u5217\u4e00\u6b21\u53ea\u80fd\u5bb9\u7eb3\u4e00\u4e2a\u9879\u76ee\u3002\u8fd9\u662f\u56e0\u4e3a\u8bfb\u53d6\u961f\u5217\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u6b64\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff1b\u5f53\u6b64\u4efb\u52a1\u5199\u5165\u961f\u5217\u65f6\uff0c\u5b83\u5c06\u88ab\u8bfb\u53d6\u4efb\u52a1\u62a2\u5360\uff0c\u56e0\u6b64\u5728\u8c03\u7528 xQueueSend() \u8fd4\u56de\u65f6\uff0c\u961f\u5217\u5df2\u7ecf\u662f\u7a7a\u7684\u3002\u963b\u585e\u65f6\u95f4\u8bbe\u7f6e\u4e3a 0\u3002 */\n        xQueueSend( xQueue2, &amp;pcMessage, 0 );\n    }\n}\n</code></pre> <p>\u6e05\u5355 5.25 \u793a\u4f8b 5.3 \u4e2d\u7684\u53d1\u9001\u4efb\u52a1</p> <p>\u5199\u5165\u53d1\u9001\u4efb\u52a1\u7684\u961f\u5217\u662f\u540c\u4e00\u4e2a\u961f\u5217\u96c6\u7684\u6210\u5458\u3002\u6bcf\u5f53\u4efb\u52a1\u5411\u5176\u4e2d\u4e00\u4e2a\u961f\u5217\u53d1\u9001\u6570\u636e\u65f6\uff0c\u961f\u5217\u7684\u53e5\u67c4\u5c31\u4f1a\u53d1\u9001\u5230\u961f\u5217\u96c6\u3002\u63a5\u6536\u4efb\u52a1\u8c03\u7528 <code>xQueueSelectFromSet()</code> \u4ece\u961f\u5217\u96c6\u4e2d\u8bfb\u53d6\u961f\u5217\u53e5\u67c4\u3002\u5728\u63a5\u6536\u4efb\u52a1\u4ece\u96c6\u5408\u4e2d\u63a5\u6536\u5230\u961f\u5217\u53e5\u67c4\u540e\uff0c\u5b83\u77e5\u9053\u8be5\u53e5\u67c4\u5f15\u7528\u7684\u961f\u5217\u5305\u542b\u6570\u636e\uff0c\u56e0\u6b64\u76f4\u63a5\u4ece\u8be5\u961f\u5217\u8bfb\u53d6\u6570\u636e\u3002\u5b83\u4ece\u961f\u5217\u4e2d\u8bfb\u53d6\u7684\u6570\u636e\u662f\u6307\u5411\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff0c\u63a5\u6536\u4efb\u52a1\u5c06\u5176\u6253\u5370\u51fa\u6765\u3002</p> <p>\u5982\u679c\u5bf9 <code>xQueueSelectFromSet()</code> \u7684\u8c03\u7528\u8d85\u65f6\uff0c\u5b83\u5c06\u8fd4\u56de NULL\u3002\u5728\u793a\u4f8b 5.3 \u4e2d\uff0c<code>xQueueSelectFromSet()</code> \u7684\u8c03\u7528\u5177\u6709\u65e0\u9650\u963b\u585e\u65f6\u95f4\uff0c\u56e0\u6b64\u5b83\u53ea\u4f1a\u8fd4\u56de\u6709\u6548\u7684\u961f\u5217\u53e5\u67c4\u3002\u56e0\u6b64\uff0c\u63a5\u6536\u4efb\u52a1\u5728\u4f7f\u7528\u8fd4\u56de\u503c\u4e4b\u524d\u4e0d\u9700\u8981\u68c0\u67e5 <code>xQueueSelectFromSet()</code> \u662f\u5426\u8fd4\u56de NULL\u3002</p> <p><code>xQueueSelectFromSet()</code> \u4ec5\u5728\u961f\u5217\u5f15\u7528\u7684\u53e5\u67c4\u5305\u542b\u6570\u636e\u65f6\u624d\u8fd4\u56de\u8be5\u53e5\u67c4\uff0c\u56e0\u6b64\u5728\u4ece\u961f\u5217\u8bfb\u53d6\u65f6\u4e0d\u9700\u8981\u6307\u5b9a\u963b\u585e\u65f6\u95f4\u3002</p> <p>\u6e05\u5355 5.26 \u663e\u793a\u4e86\u63a5\u6536\u4efb\u52a1\u7684\u5b9e\u73b0\u3002</p> <p></p> <pre><code>void vReceiverTask( void *pvParameters )\n{\n    QueueHandle_t xQueueThatContainsData;\n    char *pcReceivedString;\n\n    /* \u4e0e\u5927\u591a\u6570\u4efb\u52a1\u4e00\u6837\uff0c\u6b64\u4efb\u52a1\u5728\u65e0\u9650\u5faa\u73af\u4e2d\u5b9e\u73b0\u3002 */\n    for( ;; )\n    {\n        /* \u963b\u585e\u5728\u961f\u5217\u96c6\u4e0a\uff0c\u7b49\u5f85\u96c6\u5408\u4e2d\u4e00\u4e2a\u6210\u5458\u5305\u542b\u6570\u636e\u3002\u5c06\u4ece xQueueSelectFromSet() \u8fd4\u56de\u7684 QueueSetMemberHandle_t \u503c\u8f6c\u6362\u4e3a QueueHandle_t\uff0c\u56e0\u4e3a\u5df2\u77e5\u96c6\u5408\u7684\u6240\u6709\u6210\u5458\u90fd\u662f\u961f\u5217\uff08\u961f\u5217\u96c6\u4e0d\u5305\u542b\u4efb\u4f55\u4fe1\u53f7\u91cf\uff09\u3002 */\n        xQueueThatContainsData = ( QueueHandle_t ) xQueueSelectFromSet(\n                                                     xQueueSet, portMAX_DELAY );\n\n        /* \u4f7f\u7528\u65e0\u9650\u963b\u585e\u65f6\u95f4\u4ece\u961f\u5217\u96c6\u8bfb\u53d6\u53e5\u67c4\uff0c\u56e0\u6b64 xQueueSelectFromSet() \u4e0d\u4f1a\u8fd4\u56de\uff0c\u9664\u975e\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\u961f\u5217\u5305\u542b\u6570\u636e\uff0c\u5e76\u4e14 xQueueThatContainsData \u4e0d\u80fd\u4e3a NULL\u3002\u8bfb\u53d6\u961f\u5217\u3002\u7531\u4e8e\u5df2\u77e5\u961f\u5217\u5305\u542b\u6570\u636e\uff0c\u56e0\u6b64\u65e0\u9700\u6307\u5b9a\u963b\u585e\u65f6\u95f4\uff0c\u963b\u585e\u65f6\u95f4\u8bbe\u7f6e\u4e3a 0\u3002 */\n        xQueueReceive( xQueueThatContainsData, &amp;pcReceivedString, 0 );\n\n        /* \u6253\u5370\u4ece\u961f\u5217\u63a5\u6536\u5230\u7684\u5b57\u7b26\u4e32\u3002 */\n        vPrintString( pcReceivedString );\n    }\n}\n</code></pre> <p>\u6e05\u5355 5.26 \u793a\u4f8b 5.3 \u4e2d\u63a5\u6536\u4efb\u52a1\u7684\u5b9e\u73b0</p> <p>\u56fe 5.7 \u663e\u793a\u4e86\u793a\u4f8b 5.3 \u4ea7\u751f\u7684\u8f93\u51fa\u3002\u63a5\u6536\u4efb\u52a1\u4ece\u4e24\u4e2a\u53d1\u9001\u4efb\u52a1\u63a5\u6536\u5b57\u7b26\u4e32\u3002<code>vSenderTask1()</code> \u4f7f\u7528\u7684\u963b\u585e\u65f6\u95f4\u662f <code>vSenderTask2()</code> \u4f7f\u7528\u7684\u963b\u585e\u65f6\u95f4\u7684\u4e00\u534a\uff0c\u8fd9\u5bfc\u81f4 <code>vSenderTask1()</code> \u53d1\u9001\u7684\u5b57\u7b26\u4e32\u6253\u5370\u7684\u9891\u7387\u662f <code>vSenderTask2()</code> \u53d1\u9001\u7684\u5b57\u7b26\u4e32\u7684\u4e24\u500d\u3002</p> <p></p> <p> \u56fe 5.7 \u6267\u884c\u793a\u4f8b 5.3 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa</p>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#565","title":"5.6.5 \u66f4\u73b0\u5b9e\u7684\u961f\u5217\u96c6\u7528\u4f8b","text":"<p>\u793a\u4f8b 5.3 \u6f14\u793a\u4e86\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u60c5\u51b5\uff1b\u961f\u5217\u96c6\u4ec5\u5305\u542b\u961f\u5217\uff0c\u5e76\u4e14\u4e24\u4e2a\u961f\u5217\u7528\u4e8e\u53d1\u9001\u76f8\u540c\u7684\u5b57\u7b26\u6307\u9488\u3002\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u961f\u5217\u96c6\u53ef\u80fd\u540c\u65f6\u5305\u542b\u961f\u5217\u548c\u4fe1\u53f7\u91cf\uff0c\u5e76\u4e14\u961f\u5217\u53ef\u80fd\u5e76\u4e0d\u90fd\u4fdd\u5b58\u76f8\u540c\u7c7b\u578b\u7684\u6570\u636e\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6709\u5fc5\u8981\u5728\u4f7f\u7528\u8fd4\u56de\u7684\u503c\u4e4b\u524d\uff0c\u6d4b\u8bd5 <code>xQueueSelectFromSet()</code> \u8fd4\u56de\u7684\u503c\uff0c\u6e05\u5355 5.27 \u6f14\u793a\u4e86\u5982\u4f55\u5728\u96c6\u5408\u5177\u6709\u4ee5\u4e0b\u6210\u5458\u65f6\u4f7f\u7528 <code>xQueueSelectFromSet()</code>\uff1a</p> <ul> <li>\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u3002</li> <li>\u4e00\u4e2a\u63a5\u6536\u5b57\u7b26\u6307\u9488\u7684\u961f\u5217\u3002</li> <li>\u4e00\u4e2a\u63a5\u6536 <code>uint32_t</code> \u503c\u7684\u961f\u5217\u3002</li> </ul> <p>\u6e05\u5355 5.27 \u5047\u5b9a\u961f\u5217\u548c\u4fe1\u53f7\u91cf\u5df2\u7ecf\u88ab\u521b\u5efa\u5e76\u6dfb\u52a0\u5230\u961f\u5217\u96c6\u4e2d\u3002</p> <p></p> <pre><code>/* \u63a5\u6536\u5b57\u7b26\u6307\u9488\u7684\u961f\u5217\u7684\u53e5\u67c4\u3002 */\nQueueHandle_t xCharPointerQueue;\n\n/* \u63a5\u6536 uint32_t \u503c\u7684\u961f\u5217\u7684\u53e5\u67c4\u3002 */\nQueueHandle_t xUint32tQueue;\n\n/* \u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u7684\u53e5\u67c4\u3002 */\nSemaphoreHandle_t xBinarySemaphore;\n\n/* \u5305\u542b\u4e24\u4e2a\u961f\u5217\u548c\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u7684\u961f\u5217\u96c6\u3002 */\nQueueSetHandle_t xQueueSet;\n\nvoid vAMoreRealisticReceiverTask( void *pvParameters )\n{\n    QueueSetMemberHandle_t xHandle;\n    char *pcReceivedString;\n    uint32_t ulRecievedValue;\n    const TickType_t xDelay100ms = pdMS_TO_TICKS( 100 );\n\n    for( ;; )\n    {\n        /* \u963b\u585e\u5728\u961f\u5217\u96c6\uff0c\u6700\u591a\u7b49\u5f85 100 \u6beb\u79d2\u4ee5\u83b7\u53d6\u4e00\u4e2a\u6210\u5458\u7684\u6570\u636e\u3002 */\n        xHandle = xQueueSelectFromSet( xQueueSet, xDelay100ms );\n\n        /* \u6d4b\u8bd5 xQueueSelectFromSet() \u8fd4\u56de\u7684\u503c\u3002\u5982\u679c\u8fd4\u56de\u7684\u503c\u4e3a NULL\uff0c\u5219\u8868\u793a xQueueSelectFromSet() \u7684\u8c03\u7528\u8d85\u65f6\u3002\u5982\u679c\u8fd4\u56de\u7684\u503c\u4e0d\u4e3a NULL\uff0c\u5219\u8fd4\u56de\u7684\u503c\u5c06\u662f\u96c6\u5408\u4e2d\u4e00\u4e2a\u6210\u5458\u7684\u53e5\u67c4\u3002\u8fd4\u56de\u7684 QueueSetMemberHandle_t \u503c\u53ef\u4ee5\u8f6c\u6362\u4e3a QueueHandle_t \u6216 SemaphoreHandle_t\u3002\u662f\u5426\u9700\u8981\u663e\u5f0f\u8f6c\u6362\u53d6\u51b3\u4e8e\u7f16\u8bd1\u5668\u3002 */\n\n        if( xHandle == NULL )\n        {\n            /* xQueueSelectFromSet() \u7684\u8c03\u7528\u8d85\u65f6\u3002 */\n        }\n        else if( xHandle == ( QueueSetMemberHandle_t ) xCharPointerQueue )\n        {\n            /* xQueueSelectFromSet() \u8fd4\u56de\u63a5\u6536\u5b57\u7b26\u6307\u9488\u7684\u961f\u5217\u7684\u53e5\u67c4\u3002\u4ece\u961f\u5217\u4e2d\u8bfb\u53d6\u6570\u636e\u3002\u5df2\u77e5\u961f\u5217\u5305\u542b\u6570\u636e\uff0c\u56e0\u6b64\u4f7f\u7528\u963b\u585e\u65f6\u95f4 0\u3002 */\n            xQueueReceive( xCharPointerQueue, &amp;pcReceivedString, 0 );\n\n            /* \u53ef\u4ee5\u5728\u6b64\u5904\u5904\u7406\u63a5\u6536\u5230\u7684\u5b57\u7b26\u6307\u9488... */\n        }\n        else if( xHandle == ( QueueSetMemberHandle_t ) xUint32tQueue )\n        {\n            /* xQueueSelectFromSet() \u8fd4\u56de\u63a5\u6536 uint32_t \u7c7b\u578b\u7684\u961f\u5217\u7684\u53e5\u67c4\u3002\u4ece\u961f\u5217\u4e2d\u8bfb\u53d6\u6570\u636e\u3002\u5df2\u77e5\u961f\u5217\u5305\u542b\u6570\u636e\uff0c\u56e0\u6b64\u4f7f\u7528\u963b\u585e\u65f6\u95f4 0\u3002 */\n            xQueueReceive(xUint32tQueue, &amp;ulRecievedValue, 0 );\n\n            /* \u53ef\u4ee5\u5728\u6b64\u5904\u5904\u7406\u63a5\u6536\u5230\u7684\u503c... */\n        }\n        else if( xHandle == ( QueueSetMemberHandle_t ) xBinarySemaphore )\n        {\n            /* xQueueSelectFromSet() \u8fd4\u56de\u4fe1\u53f7\u91cf\u7684\u53e5\u67c4\u3002\u7acb\u5373\u83b7\u53d6\u4fe1\u53f7\u91cf\u3002\u5df2\u77e5\u4fe1\u53f7\u91cf\u53ef\u7528\uff0c\u56e0\u6b64\u4f7f\u7528\u963b\u585e\u65f6\u95f4 0\u3002 */\n            xSemaphoreTake( xBinarySemaphore, 0 );\n\n            /* \u5728\u6b64\u5904\u6267\u884c\u83b7\u53d6\u4fe1\u53f7\u91cf\u65f6\u6240\u9700\u7684\u5904\u7406... */\n        }\n    }\n}\n</code></pre> <p>\u6e05\u5355 5.27 \u4f7f\u7528\u5305\u542b\u961f\u5217\u548c\u4fe1\u53f7\u91cf\u7684\u961f\u5217\u96c6</p>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#57","title":"5.7 \u4f7f\u7528\u961f\u5217\u521b\u5efa\u90ae\u7bb1","text":"<p>\u5728\u5d4c\u5165\u5f0f\u793e\u533a\u4e2d\uff0c\u672f\u8bed\u6ca1\u6709\u7edf\u4e00\u7684\u5b9a\u4e49\uff0c\u201c\u90ae\u7bb1\u201d\u5728\u4e0d\u540c\u7684 RTOS \u4e2d\u53ef\u80fd\u610f\u5473\u7740\u4e0d\u540c\u7684\u4e1c\u897f\u3002\u5728\u672c\u4e66\u4e2d\uff0c\u90ae\u7bb1\u4e00\u8bcd\u7528\u4e8e\u6307\u4ee3\u957f\u5ea6\u4e3a\u4e00\u7684\u961f\u5217\u3002\u961f\u5217\u53ef\u80fd\u4f1a\u56e0\u4e3a\u5e94\u7528\u7a0b\u5e8f\u7684\u4f7f\u7528\u800c\u88ab\u63cf\u8ff0\u4e3a\u90ae\u7bb1\uff0c\u800c\u4e0d\u662f\u56e0\u4e3a\u5b83\u5728\u529f\u80fd\u4e0a\u4e0e\u90ae\u7bb1\u6709\u533a\u522b\uff1a</p> <ul> <li>\u961f\u5217\u7528\u4e8e\u5c06\u6570\u636e\u4ece\u4e00\u4e2a\u4efb\u52a1\u53d1\u9001\u5230\u53e6\u4e00\u4e2a\u4efb\u52a1\uff0c\u6216\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u53d1\u9001\u5230\u4efb\u52a1\u3002\u53d1\u9001\u65b9\u5c06\u9879\u76ee\u653e\u5165\u961f\u5217\uff0c\u63a5\u6536\u65b9\u4ece\u961f\u5217\u4e2d\u79fb\u9664\u9879\u76ee\u3002</li> <li>\u90ae\u7bb1\u7528\u4e8e\u4fdd\u5b58\u4efb\u4f55\u4efb\u52a1\u6216\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u90fd\u53ef\u4ee5\u8bfb\u53d6\u7684\u6570\u636e\u3002\u6570\u636e\u4e0d\u4f1a\u901a\u8fc7\u90ae\u7bb1\u4f20\u9012\uff0c\u800c\u662f\u4fdd\u7559\u5728\u90ae\u7bb1\u4e2d\uff0c\u76f4\u5230\u88ab\u8986\u76d6\u3002\u53d1\u9001\u65b9\u8986\u76d6\u90ae\u7bb1\u4e2d\u503c\u3002\u63a5\u6536\u65b9\u4ece\u90ae\u7bb1\u4e2d\u8bfb\u53d6\u503c\uff0c\u4f46\u4e0d\u5220\u9664\u90ae\u7bb1\u4e2d\u7684\u503c\u3002</li> </ul> <p>\u672c\u7ae0\u63cf\u8ff0\u4e86\u4e24\u4e2a API \u51fd\u6570\uff0c\u4f7f\u961f\u5217\u53ef\u4ee5\u7528\u4f5c\u90ae\u7bb1\u3002</p> <p>\u6e05\u5355 5.28 \u663e\u793a\u4e86\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u961f\u5217\u4ee5\u7528\u4f5c\u90ae\u7bb1\u3002</p> <p></p> <pre><code>/* \u4e00\u4e2a\u90ae\u7bb1\u53ef\u4ee5\u5bb9\u7eb3\u4e00\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u6570\u636e\u9879\u3002\u6570\u636e\u9879\u7684\u5927\u5c0f\u5728\u521b\u5efa\u90ae\u7bb1\uff08\u961f\u5217\uff09\u65f6\u8bbe\u7f6e\u3002\n   \u5728\u672c\u4f8b\u4e2d\uff0c\u90ae\u7bb1\u88ab\u521b\u5efa\u4e3a\u53ef\u4ee5\u5bb9\u7eb3\u4e00\u4e2a Example_t \u7ed3\u6784\u3002 Example_t \u5305\u542b\u4e00\u4e2a\u65f6\u95f4\u6233\uff0c\u4ee5\u4fbf\u90ae\u7bb1\u4e2d\u4fdd\u5b58\u7684\u6570\u636e\u53ef\u4ee5\u8bb0\u5f55\u6700\u540e\u66f4\u65b0\u65f6\u95f4\u3002\u6b64\u793a\u4f8b\u4e2d\u4f7f\u7528\u7684\u65f6\u95f4\u6233\u4ec5\u7528\u4e8e\u6f14\u793a\u76ee\u7684\u2014\u2014\u90ae\u7bb1\u53ef\u4ee5\u5bb9\u7eb3\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u8005\u6240\u9700\u7684\u4efb\u4f55\u6570\u636e\uff0c\u6570\u636e\u4e0d\u9700\u8981\u5305\u542b\u65f6\u95f4\u6233\u3002 */\ntypedef struct xExampleStructure\n{\n    TickType_t xTimeStamp;\n    uint32_t ulValue;\n} Example_t;\n\n/* \u90ae\u7bb1\u662f\u4e00\u4e2a\u961f\u5217\uff0c\u56e0\u6b64\u5b83\u7684\u53e5\u67c4\u4fdd\u5b58\u5728\u4e00\u4e2a\u7c7b\u578b\u4e3a QueueHandle_t \u7684\u53d8\u91cf\u4e2d\u3002 */\nQueueHandle_t xMailbox;\n\nvoid vAFunction( void )\n{\n    /* \u521b\u5efa\u5c06\u7528\u4f5c\u90ae\u7bb1\u7684\u961f\u5217\u3002\u961f\u5217\u7684\u957f\u5ea6\u4e3a 1\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u4e0e\u4e0b\u9762\u63cf\u8ff0\u7684 xQueueOverwrite() API \u51fd\u6570\u4e00\u8d77\u4f7f\u7528\u3002 */\n    xMailbox = xQueueCreate( 1, sizeof( Example_t ) );\n}\n</code></pre> <p>\u6e05\u5355 5.28 \u521b\u5efa\u4e00\u4e2a\u7528\u4f5c\u90ae\u7bb1\u7684\u961f\u5217</p>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#571-xqueueoverwrite-api","title":"5.7.1 xQueueOverwrite() API \u51fd\u6570","text":"<p>\u4e0e <code>xQueueSendToBack()</code> API \u51fd\u6570\u4e00\u6837\uff0c<code>xQueueOverwrite()</code> API \u51fd\u6570\u5c06\u6570\u636e\u53d1\u9001\u5230\u961f\u5217\u3002\u4e0e <code>xQueueSendToBack()</code> \u4e0d\u540c\uff0c\u5982\u679c\u961f\u5217\u5df2\u7ecf\u6ee1\u4e86\uff0c\u5219 <code>xQueueOverwrite()</code> \u4f1a\u8986\u76d6\u961f\u5217\u4e2d\u5df2\u7ecf\u5b58\u5728\u7684\u6570\u636e\u3002</p> <p><code>xQueueOverwrite()</code> \u53ea\u80fd\u4e0e\u957f\u5ea6\u4e3a\u4e00\u7684\u961f\u5217\u4e00\u8d77\u4f7f\u7528\u3002\u8986\u76d6\u6a21\u5f0f\u5c06\u59cb\u7ec8\u5199\u5165\u961f\u5217\u7684\u524d\u7aef\u5e76\u66f4\u65b0\u961f\u5217\u7684\u524d\u7aef\u6307\u9488\uff0c\u4f46\u4e0d\u4f1a\u66f4\u65b0\u7b49\u5f85\u7684\u6d88\u606f\u3002\u5982\u679c\u5b9a\u4e49\u4e86 <code>configASSERT</code>\uff0c\u5219\u5f53\u961f\u5217\u957f\u5ea6\u5927\u4e8e 1 \u65f6\uff0c\u5c06\u53d1\u751f\u65ad\u8a00\u5931\u8d25\u3002</p> <p>\u6ce8\u610f\uff1a\u5207\u52ff\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u8c03\u7528 <code>xQueueOverwrite()</code>\u3002\u5e94\u4f7f\u7528\u4e2d\u65ad\u5b89\u5168\u7248\u672c <code>xQueueOverwriteFromISR()</code> \u4ee3\u66ff\u3002</p> <p></p> <pre><code>BaseType_t xQueueOverwrite( QueueHandle_t xQueue, const void * pvItemToQueue );\n</code></pre> <p>\u6e05\u5355 5.29 xQueueOverwrite() API \u51fd\u6570\u539f\u578b</p> <p>xQueueOverwrite() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>xQueue</code></li> </ul> <p>\u6b63\u5728\u53d1\u9001\uff08\u5199\u5165\uff09\u6570\u636e\u7684\u961f\u5217\u7684\u53e5\u67c4\u3002\u961f\u5217\u53e5\u67c4\u5c06\u662f\u4ece <code>xQueueCreate()</code> \u6216 <code>xQueueCreateStatic()</code> \u8fd4\u56de\u7684\uff0c\u7528\u4e8e\u521b\u5efa\u961f\u5217\u3002</p> <ul> <li><code>pvItemToQueue</code></li> </ul> <p>\u6307\u5411\u8981\u590d\u5236\u5230\u961f\u5217\u4e2d\u7684\u6570\u636e\u7684\u6307\u9488\u3002</p> <p>\u961f\u5217\u53ef\u4ee5\u5bb9\u7eb3\u7684\u6bcf\u4e2a\u9879\u76ee\u7684\u5927\u5c0f\u5728\u521b\u5efa\u961f\u5217\u65f6\u8bbe\u7f6e\uff0c\u56e0\u6b64\u5c06\u4ece <code>pvItemToQueue</code> \u590d\u5236\u5230\u961f\u5217\u5b58\u50a8\u533a\u57df\u7684\u5b57\u8282\u6570\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p><code>xQueueOverwrite()</code> \u5373\u4f7f\u5728\u961f\u5217\u5df2\u6ee1\u65f6\u4e5f\u4f1a\u5199\u5165\u961f\u5217\uff0c\u56e0\u6b64 <code>pdPASS</code> \u662f\u552f\u4e00\u53ef\u80fd\u7684\u8fd4\u56de\u503c\u3002</p> <p>\u6e05\u5355 5.30 \u663e\u793a\u4e86\u5982\u4f55\u4f7f\u7528 <code>xQueueOverwrite()</code> \u5411\u5728\u6e05\u5355 5.28 \u4e2d\u521b\u5efa\u7684\u90ae\u7bb1\uff08\u961f\u5217\uff09\u5199\u5165\u6570\u636e\u3002</p> <p></p> <pre><code>void vUpdateMailbox( uint32_t ulNewValue )\n{\n    /* Example_t \u5728\u6e05\u5355 5.28 \u4e2d\u5b9a\u4e49\u3002 */\n    Example_t xData;\n\n    /* \u5c06\u65b0\u6570\u636e\u5199\u5165 Example_t \u7ed3\u6784\u3002*/\n    xData.ulValue = ulNewValue;\n\n    /* \u4f7f\u7528 RTOS \u6ef4\u7b54\u8ba1\u6570\u5668\u4f5c\u4e3a\u5b58\u50a8\u5728 Example_t \u4e2d\u7684\u65f6\u95f4\u6233\u3002\n       \u7ed3\u6784\u3002 */\n    xData.xTimeStamp = xTaskGetTickCount();\n\n    /* \u53d1\u9001\u7ed3\u6784\u5230\u90ae\u7bb1\u2014\u2014\u8986\u76d6\u90ae\u7bb1\u4e2d\u5df2\u7ecf\u5b58\u5728\u7684\u4efb\u4f55\u6570\u636e\u3002 */\n    xQueueOverwrite( xMailbox, &amp;xData );\n}\n</code></pre> <p>\u6e05\u5355 5.30 \u4f7f\u7528 xQueueOverwrite() API \u51fd\u6570</p>"},{"location":"ch05-%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86/#572-xqueuepeek-api","title":"5.7.2 xQueuePeek() API \u51fd\u6570","text":"<p><code>xQueuePeek()</code> \u4ece\u961f\u5217\u63a5\u6536\uff08\u8bfb\u53d6\uff09\u9879\u76ee \u800c\u4e0d \u79fb\u9664\u961f\u5217\u4e2d\u7684\u9879\u76ee\u3002<code>xQueuePeek()</code> \u4ece\u961f\u5217\u7684\u5934\u90e8\u63a5\u6536\u6570\u636e\uff0c\u800c\u4e0d\u4fee\u6539\u5b58\u50a8\u5728\u961f\u5217\u4e2d\u7684\u6570\u636e\u6216\u6570\u636e\u7684\u5b58\u50a8\u987a\u5e8f\u3002</p> <p>\u6ce8\u610f\uff1a\u5207\u52ff\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u8c03\u7528 <code>xQueuePeek()</code>\u3002\u5e94\u4f7f\u7528\u4e2d\u65ad\u5b89\u5168\u7248\u672c <code>xQueuePeekFromISR()</code> \u4ee3\u66ff\u3002</p> <p><code>xQueuePeek()</code> \u5177\u6709\u4e0e <code>xQueueReceive()</code> \u76f8\u540c\u7684\u51fd\u6570\u53c2\u6570\u548c\u8fd4\u56de\u503c\u3002</p> <p></p> <pre><code>BaseType_t xQueuePeek( QueueHandle_t xQueue,\n                       void * const pvBuffer,\n                       TickType_t xTicksToWait );\n</code></pre> <p>\u6e05\u5355 5.31 xQueuePeek() API \u51fd\u6570\u539f\u578b</p> <p>\u6e05\u5355 5.32 \u663e\u793a\u4e86\u5982\u4f55\u4f7f\u7528 <code>xQueuePeek()</code> \u63a5\u6536\u5728\u6e05\u5355 5.30 \u4e2d\u53d1\u5e03\u5230\u90ae\u7bb1\uff08\u961f\u5217\uff09\u7684\u9879\u76ee\u3002</p> <p></p> <pre><code>BaseType_t vReadMailbox( Example_t *pxData )\n{\n    TickType_t xPreviousTimeStamp;\n    BaseType_t xDataUpdated;\n\n    /* \u6b64\u51fd\u6570\u4f7f\u7528\u4ece\u90ae\u7bb1\u63a5\u6536\u5230\u7684\u6700\u65b0\u503c\u66f4\u65b0 Example_t \u7ed3\u6784\u3002\u5728\u8986\u76d6\u65b0\u6570\u636e\u4e4b\u524d\u8bb0\u5f55 pxData \u4e2d\u5305\u542b\u7684\u65f6\u95f4\u6233\u3002 */\n    xPreviousTimeStamp = pxData-&gt;xTimeStamp;\n\n    /* \u4f7f\u7528\u5b58\u50a8\u5728\u90ae\u7bb1\u4e2d\u7684\u6570\u636e\u66f4\u65b0\u6307\u5411 pxData \u7684 Example_t \u7ed3\u6784\u3002\u5982\u679c\u5728\u8fd9\u91cc\u4f7f\u7528 xQueueReceive()\uff0c\u5219\u90ae\u7bb1\u5c06\u88ab\u6e05\u7a7a\uff0c\u65e0\u6cd5\u88ab\u5176\u4ed6\u4efb\u52a1\u8bfb\u53d6\u3002\u4f7f\u7528 xQueuePeek() \u800c\u4e0d\u662f xQueueReceive() \u53ef\u786e\u4fdd\u6570\u636e\u4fdd\u7559\u5728\u90ae\u7bb1\u4e2d\u3002\n\n       \u6307\u5b9a\u4e86\u963b\u585e\u65f6\u95f4\uff0c\u56e0\u6b64\u8c03\u7528\u4efb\u52a1\u5c06\u5728\u90ae\u7bb1\u4e3a\u7a7a\u65f6\u88ab\u7f6e\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u90ae\u7bb1\u4e2d\u6570\u636e\u53d8\u4e3a\u53ef\u7528\u3002\u4f7f\u7528\u65e0\u9650\u5757\u65f6\u95f4\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u68c0\u67e5 xQueuePeek() \u8fd4\u56de\u503c\uff0c\u56e0\u4e3a xQueuePeek() \u4ec5\u5728\u6570\u636e\u53ef\u7528\u65f6\u8fd4\u56de\u3002 */\n    xQueuePeek( xMailbox, pxData, portMAX_DELAY );\n\n    /* \u5982\u679c\u8bfb\u53d6\u7684\u503c\u81ea\u4e0a\u6b21\u8c03\u7528\u4ee5\u6765\u5df2\u66f4\u65b0\uff0c\u5219\u8fd4\u56de pdTRUE\uff1b\u5426\u5219\u8fd4\u56de pdFALSE\u3002 */\n    if( pxData-&gt;xTimeStamp &gt; xPreviousTimeStamp )\n    {\n        xDataUpdated = pdTRUE;\n    }\n    else\n    {\n        xDataUpdated = pdFALSE;\n    }\n\n    return xDataUpdated;\n}\n</code></pre> <p>\u6e05\u5355 5.32 \u4f7f\u7528 xQueuePeek() API \u51fd\u6570</p>"},{"location":"ch06-%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86/","title":"6 \u8f6f\u4ef6\u5b9a\u65f6\u5668\u7ba1\u7406","text":""},{"location":"ch06-%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86/#61","title":"6.1 \u7ae0\u8282\u7b80\u4ecb\u548c\u8303\u56f4","text":"<p>\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7528\u4e8e\u5728\u672a\u6765\u7684\u67d0\u4e2a\u8bbe\u5b9a\u65f6\u95f4\u6216\u4ee5\u56fa\u5b9a\u9891\u7387\u5468\u671f\u6027\u5730\u8c03\u5ea6\u51fd\u6570\u7684\u6267\u884c\u3002\u7531\u8f6f\u4ef6\u5b9a\u65f6\u5668\u6267\u884c\u7684\u51fd\u6570\u79f0\u4e3a\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u56de\u8c03\u51fd\u6570\u3002</p> <p>\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7531 FreeRTOS \u5185\u6838\u5b9e\u73b0\u5e76\u53d7\u5176\u63a7\u5236\u3002\u5b83\u4eec\u4e0d\u9700\u8981\u786c\u4ef6\u652f\u6301\uff0c\u4e5f\u4e0e\u786c\u4ef6\u5b9a\u65f6\u5668\u6216\u786c\u4ef6\u8ba1\u6570\u5668\u65e0\u5173\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u6839\u636e FreeRTOS \u7684\u8bbe\u8ba1\u7406\u5ff5\uff0c\u8f6f\u4ef6\u5b9a\u65f6\u5668\u5728\u6ca1\u6709\u5b9e\u9645\u6267\u884c\u56de\u8c03\u51fd\u6570\u65f6\u4e0d\u4f1a\u6d88\u8017\u4efb\u4f55\u5904\u7406\u65f6\u95f4\u3002</p> <p>\u8f6f\u4ef6\u5b9a\u65f6\u5668\u529f\u80fd\u662f\u53ef\u9009\u7684\u3002\u8981\u5305\u542b\u8f6f\u4ef6\u5b9a\u65f6\u5668\u529f\u80fd\uff1a</p> <ol> <li> <p>\u5c06 FreeRTOS \u6e90\u6587\u4ef6 FreeRTOS/Source/timers.c \u6784\u5efa\u4e3a\u9879\u76ee\u7684\u4e00\u90e8\u5206\u3002</p> </li> <li> <p>\u5728\u5e94\u7528\u7a0b\u5e8f\u7684 FreeRTOSConfig.h \u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4ee5\u4e0b\u5e38\u91cf\uff1a</p> </li> <li> <p><code>configUSE_TIMERS</code></p> </li> </ol> <p>\u5728 FreeRTOSConfig.h \u4e2d\u5c06 <code>configUSE_TIMERS</code> \u8bbe\u7f6e\u4e3a 1\u3002</p> <ul> <li><code>configTIMER_TASK_PRIORITY</code></li> </ul> <p>\u8bbe\u7f6e\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff0c\u8303\u56f4\u4e3a 0 \u5230 (<code>configMAX_PRIORITIES</code> - 1)\u3002</p> <ul> <li><code>configTIMER_QUEUE_LENGTH</code></li> </ul> <p>\u8bbe\u7f6e\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u5728\u4efb\u610f\u65f6\u95f4\u70b9\u53ef\u4ee5\u5bb9\u7eb3\u7684\u672a\u5904\u7406\u547d\u4ee4\u7684\u6700\u5927\u6570\u91cf\u3002</p> <ul> <li><code>configTIMER_TASK_STACK_DEPTH</code></li> </ul> <p>\u8bbe\u7f6e\u5206\u914d\u7ed9\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u7684\u5806\u6808\u5927\u5c0f\uff08\u4ee5\u5b57\u4e3a\u5355\u4f4d\uff0c\u800c\u4e0d\u662f\u5b57\u8282\uff09\u3002</p>"},{"location":"ch06-%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86/#611","title":"6.1.1 \u8303\u56f4","text":"<p>\u672c\u7ae0\u6db5\u76d6\uff1a</p> <ul> <li>\u8f6f\u4ef6\u5b9a\u65f6\u5668\u4e0e\u4efb\u52a1\u7684\u7279\u6027\u6bd4\u8f83\u3002</li> <li>RTOS \u5b88\u62a4\u4efb\u52a1\u3002</li> <li>\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u3002</li> <li>\u5355\u6b21\u8f6f\u4ef6\u5b9a\u65f6\u5668\u548c\u5468\u671f\u6027\u8f6f\u4ef6\u5b9a\u65f6\u5668\u4e4b\u95f4\u7684\u533a\u522b\u3002</li> <li>\u5982\u4f55\u521b\u5efa\u3001\u542f\u52a8\u3001\u91cd\u7f6e\u548c\u66f4\u6539\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u5468\u671f\u3002</li> </ul>"},{"location":"ch06-%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86/#62","title":"6.2 \u8f6f\u4ef6\u5b9a\u65f6\u5668\u56de\u8c03\u51fd\u6570","text":"<p>\u8f6f\u4ef6\u5b9a\u65f6\u5668\u56de\u8c03\u51fd\u6570\u5b9e\u73b0\u4e3a C \u51fd\u6570\u3002\u5b83\u4eec\u552f\u4e00\u7279\u522b\u4e4b\u5904\u5728\u4e8e\u5176\u539f\u578b\uff0c\u5fc5\u987b\u8fd4\u56de\u7a7a\uff0c\u5e76\u5c06\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u53e5\u67c4\u4f5c\u4e3a\u552f\u4e00\u53c2\u6570\u3002\u56de\u8c03\u51fd\u6570\u539f\u578b\u5982\u6e05\u5355 6.1 \u6240\u793a\u3002</p> <p></p> <pre><code>void ATimerCallback( TimerHandle_t xTimer );\n</code></pre> <p>Listing 6.1 The software timer callback function prototype</p> <p>\u8f6f\u4ef6\u5b9a\u65f6\u5668\u56de\u8c03\u51fd\u6570\u4ece\u5934\u5230\u5c3e\u6267\u884c\uff0c\u5e76\u4ee5\u6b63\u5e38\u65b9\u5f0f\u9000\u51fa\u3002\u5b83\u4eec\u5e94\u8be5\u4fdd\u6301\u7b80\u77ed\uff0c\u5e76\u4e14\u4e0d\u5f97\u8fdb\u5165\u963b\u585e\u72b6\u6001\u3002</p> <p>\u6ce8\u610f\uff1a\u6b63\u5982\u5c06\u8981\u770b\u5230\u7684\uff0c\u8f6f\u4ef6\u5b9a\u65f6\u5668\u56de\u8c03\u51fd\u6570\u5728 FreeRTOS \u8c03\u5ea6\u7a0b\u5e8f\u542f\u52a8\u65f6\u81ea\u52a8\u521b\u5efa\u7684\u4efb\u52a1\u7684\u4e0a\u4e0b\u6587\u4e2d\u6267\u884c\u3002\u56e0\u6b64\uff0c\u8f6f\u4ef6\u5b9a\u65f6\u5668\u56de\u8c03\u51fd\u6570\u7edd\u4e0d\u80fd\u8c03\u7528\u4f1a\u5bfc\u81f4\u8c03\u7528\u4efb\u52a1\u8fdb\u5165\u963b\u585e\u72b6\u6001\u7684 FreeRTOS API \u51fd\u6570\u3002\u53ef\u4ee5\u8c03\u7528\u8bf8\u5982 <code>xQueueReceive()</code> \u7684\u51fd\u6570\uff0c\u4f46\u524d\u63d0\u662f\u8be5\u51fd\u6570\u7684 <code>xTicksToWait</code> \u53c2\u6570\uff08\u6307\u5b9a\u51fd\u6570\u7684\u963b\u585e\u65f6\u95f4\uff09\u8bbe\u7f6e\u4e3a 0\u3002\u4e0d\u80fd\u8c03\u7528\u8bf8\u5982 <code>vTaskDelay()</code> \u7684\u51fd\u6570\uff0c\u56e0\u4e3a\u8c03\u7528 <code>vTaskDelay()</code> \u5c06\u59cb\u7ec8\u4f7f\u8c03\u7528\u4efb\u52a1\u8fdb\u5165\u963b\u585e\u72b6\u6001\u3002</p>"},{"location":"ch06-%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86/#63","title":"6.3 \u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u5c5e\u6027\u548c\u72b6\u6001","text":""},{"location":"ch06-%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86/#631","title":"6.3.1 \u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u5468\u671f","text":"<p>\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u201c\u5468\u671f\u201d\u662f\u6307\u4ece\u8f6f\u4ef6\u5b9a\u65f6\u5668\u542f\u52a8\u5230\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u56de\u8c03\u51fd\u6570\u6267\u884c\u4e4b\u95f4\u7684\u65f6\u95f4\u3002</p>"},{"location":"ch06-%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86/#632","title":"6.3.2 \u5355\u6b21\u548c\u81ea\u52a8\u91cd\u8f7d\u5b9a\u65f6\u5668","text":"<p>\u8f6f\u4ef6\u5b9a\u65f6\u5668\u6709\u4e24\u79cd\u7c7b\u578b\uff1a</p> <ol> <li>\u5355\u6b21\u5b9a\u65f6\u5668</li> </ol> <p>\u4e00\u65e6\u542f\u52a8\uff0c\u5355\u6b21\u5b9a\u65f6\u5668\u53ea\u4f1a\u6267\u884c\u4e00\u6b21\u56de\u8c03\u51fd\u6570\u3002\u5355\u6b21\u5b9a\u65f6\u5668\u53ef\u4ee5\u624b\u52a8\u91cd\u65b0\u542f\u52a8\uff0c\u4f46\u4e0d\u4f1a\u81ea\u52a8\u91cd\u542f\u3002</p> <ol> <li>\u81ea\u52a8\u91cd\u8f7d\u5b9a\u65f6\u5668</li> </ol> <p>\u4e00\u65e6\u542f\u52a8\uff0c\u81ea\u52a8\u91cd\u8f7d\u5b9a\u65f6\u5668\u5c06\u5728\u6bcf\u6b21\u5230\u671f\u65f6\u91cd\u65b0\u542f\u52a8\u81ea\u5df1\uff0c\u4ece\u800c\u5468\u671f\u6027\u5730\u6267\u884c\u5176\u56de\u8c03\u51fd\u6570\u3002</p> <p>\u56fe 6.1 \u663e\u793a\u4e86\u5355\u6b21\u5b9a\u65f6\u5668\u548c\u81ea\u52a8\u91cd\u8f7d\u5b9a\u65f6\u5668\u4e4b\u95f4\u7684\u884c\u4e3a\u5dee\u5f02\u3002\u865a\u7ebf\u7ad6\u7ebf\u6807\u8bb0\u4e86\u6ef4\u7b54\u4e2d\u65ad\u53d1\u751f\u7684\u65f6\u95f4\u3002</p> <p></p> <p> Figure 6.1 The difference in behavior between one-shot and auto-reload software timers</p> <p>\u53c2\u8003\u56fe 6.1\uff1a</p> <ul> <li>\u5b9a\u65f6\u5668 1</li> </ul> <p>\u5b9a\u65f6\u5668 1 \u662f\u4e00\u4e2a\u5468\u671f\u4e3a 6 \u4e2a\u6ef4\u7b54\u7684\u5355\u6b21\u5b9a\u65f6\u5668\u3002\u5b83\u5728\u65f6\u95f4 t1 \u542f\u52a8\uff0c\u56e0\u6b64\u5b83\u7684\u56de\u8c03\u51fd\u6570\u5728 6 \u4e2a\u6ef4\u7b54\u540e\u6267\u884c\uff0c\u5373\u5728\u65f6\u95f4 t7\u3002\u7531\u4e8e\u5b9a\u65f6\u5668 1 \u662f\u5355\u6b21\u5b9a\u65f6\u5668\uff0c\u56e0\u6b64\u5b83\u7684\u56de\u8c03\u51fd\u6570\u4e0d\u4f1a\u518d\u6b21\u6267\u884c\u3002</p> <ul> <li>\u5b9a\u65f6\u5668 2</li> </ul> <p>\u5b9a\u65f6\u5668 2 \u662f\u4e00\u4e2a\u5468\u671f\u4e3a 5 \u4e2a\u6ef4\u7b54\u7684\u81ea\u52a8\u91cd\u8f7d\u5b9a\u65f6\u5668\u3002\u5b83\u5728\u65f6\u95f4 t1 \u542f\u52a8\uff0c\u56e0\u6b64\u5b83\u7684\u56de\u8c03\u51fd\u6570\u5728\u65f6\u95f4 t1 \u4e4b\u540e\u6bcf\u9694 5 \u4e2a\u6ef4\u7b54\u6267\u884c\u4e00\u6b21\u3002\u5728\u56fe 6.1 \u4e2d\uff0c\u5206\u522b\u5728 t6\u3001t11 \u548c t16 \u65f6\u523b\u6267\u884c\u3002</p>"},{"location":"ch06-%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86/#633","title":"6.3.3 \u8f6f\u4ef6\u5b9a\u65f6\u5668\u72b6\u6001","text":"<p>\u8f6f\u4ef6\u5b9a\u65f6\u5668\u53ef\u4ee5\u5904\u4e8e\u4ee5\u4e0b\u4e24\u79cd\u72b6\u6001\u4e4b\u4e00\uff1a</p> <ul> <li>\u4f11\u7720</li> </ul> <p>\u4f11\u7720\u7684\u8f6f\u4ef6\u5b9a\u65f6\u5668\u5b58\u5728\uff0c\u53ef\u4ee5\u901a\u8fc7\u5176\u53e5\u67c4\u5f15\u7528\uff0c\u4f46\u672a\u5728\u8fd0\u884c\u72b6\u6001\uff0c\u56e0\u6b64\u5176\u56de\u8c03\u51fd\u6570\u4e0d\u4f1a\u6267\u884c\u3002</p> <ul> <li>\u8fd0\u884c</li> </ul> <p>\u8fd0\u884c\u4e2d\u7684\u8f6f\u4ef6\u5b9a\u65f6\u5668\u5c06\u5728\u81ea\u8f6f\u4ef6\u5b9a\u65f6\u5668\u8fdb\u5165\u8fd0\u884c\u72b6\u6001\u6216\u81ea\u4e0a\u6b21\u91cd\u7f6e\u4ee5\u6765\u7ecf\u8fc7\u7684\u65f6\u95f4\u7b49\u4e8e\u5176\u5468\u671f\u540e\u6267\u884c\u5176\u56de\u8c03\u51fd\u6570\u3002</p> <p>\u56fe 6.2 \u548c\u56fe 6.3 \u5206\u522b\u663e\u793a\u4e86\u81ea\u52a8\u91cd\u8f7d\u5b9a\u65f6\u5668\u548c\u5355\u6b21\u5b9a\u65f6\u5668\u4e4b\u95f4\u7684\u53ef\u80fd\u72b6\u6001\u8f6c\u6362\u3002\u4e24\u4e2a\u56fe\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u5b9a\u65f6\u5668\u5230\u671f\u540e\u8fdb\u5165\u7684\u72b6\u6001\uff1b\u81ea\u52a8\u91cd\u8f7d\u5b9a\u65f6\u5668\u5728\u6267\u884c\u56de\u8c03\u51fd\u6570\u540e\u91cd\u65b0\u8fdb\u5165\u8fd0\u884c\u72b6\u6001\uff0c\u800c\u5355\u6b21\u5b9a\u65f6\u5668\u5728\u6267\u884c\u56de\u8c03\u51fd\u6570\u540e\u8fdb\u5165\u4f11\u7720\u72b6\u6001\u3002</p> <p> </p> <p> Figure 6.2 Auto-reload software timer states and transitions</p> <p> Figure 6.3 One-shot software timer states and transitions</p> <p><code>xTimerDelete()</code> API \u51fd\u6570\u7528\u4e8e\u5220\u9664\u5b9a\u65f6\u5668\u3002\u5b9a\u65f6\u5668\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u5019\u88ab\u5220\u9664\u3002\u51fd\u6570\u539f\u578b\u5982\u6e05\u5355 6.2 \u6240\u793a\u3002</p> <p></p> <pre><code>BaseType_t xTimerDelete( TimerHandle_t xTimer, TickType_t xTicksToWait );\n</code></pre> <p>Listing 6.2 The xTimerDelete() API function prototype</p> <p>xTimerDelete() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>xTimer</code></li> </ul> <p>\u6b63\u5728\u5220\u9664\u7684\u5b9a\u65f6\u5668\u7684\u53e5\u67c4\u3002</p> <ul> <li><code>xTicksToWait</code></li> </ul> <p>\u6307\u5b9a\u8c03\u7528\u4efb\u52a1\u5e94\u5728\u963b\u585e\u72b6\u6001\u4e2d\u7b49\u5f85\u7684\u65f6\u95f4\uff08\u4ee5\u6ef4\u7b54\u4e3a\u5355\u4f4d\uff09\uff0c\u4ee5\u7b49\u5f85\u5220\u9664\u547d\u4ee4\u6210\u529f\u53d1\u9001\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\uff08\u5982\u679c\u961f\u5217\u5728\u8c03\u7528 xTimerDelete() \u65f6\u5df2\u6ee1\uff09\u3002\u5982\u679c\u5728\u8c03\u5ea6\u7a0b\u5e8f\u542f\u52a8\u4e4b\u524d\u8c03\u7528 xTimerDelete()\uff0c\u5219\u5ffd\u7565 xTicksToWait\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u53ef\u80fd\u7684\u8fd4\u56de\u503c\u6709\u4e24\u4e2a\uff1a</p> <ul> <li> <p><code>pdPASS</code></p> <p>\u5982\u679c\u547d\u4ee4\u6210\u529f\u53d1\u9001\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\uff0c\u5219\u8fd4\u56de <code>pdPASS</code>\u3002</p> </li> <li> <p><code>pdFAIL</code></p> <p>\u5982\u679c\u5373\u4f7f\u5728 xBlockTime \u6ef4\u7b54\u540e\u4e5f\u65e0\u6cd5\u5c06\u5220\u9664\u547d\u4ee4\u53d1\u9001\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\uff0c\u5219\u8fd4\u56de <code>pdFAIL</code>\u3002</p> </li> </ul>"},{"location":"ch06-%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86/#64","title":"6.4 \u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u4e0a\u4e0b\u6587","text":""},{"location":"ch06-%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86/#641-rtos","title":"6.4.1 RTOS \u5b88\u62a4\uff08\u5b9a\u65f6\u5668\u670d\u52a1\uff09\u4efb\u52a1","text":"<p>\u6240\u6709\u8f6f\u4ef6\u5b9a\u65f6\u5668\u56de\u8c03\u51fd\u6570\u90fd\u5728\u540c\u4e00\u4e2a RTOS \u5b88\u62a4\uff08\u6216\u201c\u5b9a\u65f6\u5668\u670d\u52a1\u201d\uff09\u4efb\u52a1\u7684\u4e0a\u4e0b\u6587\u4e2d\u6267\u884c[^10]\u3002</p> <p>[^10]: \u8be5\u4efb\u52a1\u66fe\u88ab\u79f0\u4e3a\u201c\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u201d\uff0c\u56e0\u4e3a\u6700\u521d\u5b83\u4ec5\u7528\u4e8e\u6267\u884c\u8f6f\u4ef6\u5b9a\u65f6\u5668\u56de\u8c03\u51fd\u6570\u3002\u73b0\u5728\u540c\u4e00\u4e2a\u4efb\u52a1\u4e5f\u7528\u4e8e\u5176\u4ed6\u76ee\u7684\uff0c\u56e0\u6b64\u5b83\u88ab\u79f0\u4e3a\u66f4\u901a\u7528\u7684\u201cRTOS \u5b88\u62a4\u4efb\u52a1\u201d\u3002</p> <p>\u5b88\u62a4\u4efb\u52a1\u662f\u4e00\u4e2a\u6807\u51c6\u7684 FreeRTOS \u4efb\u52a1\uff0c\u5728\u8c03\u5ea6\u7a0b\u5e8f\u542f\u52a8\u65f6\u81ea\u52a8\u521b\u5efa\u3002\u5176\u4f18\u5148\u7ea7\u548c\u5806\u6808\u5927\u5c0f\u5206\u522b\u7531 <code>configTIMER_TASK_PRIORITY</code> \u548c <code>configTIMER_TASK_STACK_DEPTH</code> \u7f16\u8bd1\u65f6\u914d\u7f6e\u5e38\u91cf\u8bbe\u7f6e\u3002\u8fd9\u4e24\u4e2a\u5e38\u91cf\u5728 FreeRTOSConfig.h \u4e2d\u5b9a\u4e49\u3002</p> <p>\u8f6f\u4ef6\u5b9a\u65f6\u5668\u56de\u8c03\u51fd\u6570\u4e0d\u5f97\u8c03\u7528\u4f1a\u5bfc\u81f4\u8c03\u7528\u4efb\u52a1\u8fdb\u5165\u963b\u585e\u72b6\u6001\u7684 FreeRTOS API \u51fd\u6570\uff0c\u56e0\u4e3a\u8fd9\u6837\u505a\u4f1a\u5bfc\u81f4\u5b88\u62a4\u4efb\u52a1\u8fdb\u5165\u963b\u585e\u72b6\u6001\u3002</p>"},{"location":"ch06-%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86/#642","title":"6.4.2 \u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217","text":"<p>\u8f6f\u4ef6\u5b9a\u65f6\u5668 API \u51fd\u6570\u901a\u8fc7\u4e00\u4e2a\u79f0\u4e3a\u201c\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u201d\u7684\u961f\u5217\u5c06\u547d\u4ee4\u4ece\u8c03\u7528\u4efb\u52a1\u53d1\u9001\u5230\u5b88\u62a4\u4efb\u52a1\u3002\u5982\u56fe 6.4 \u6240\u793a\u3002\u547d\u4ee4\u7684\u793a\u4f8b\u5305\u62ec\u201c\u542f\u52a8\u5b9a\u65f6\u5668\u201d\u3001\u201c\u505c\u6b62\u5b9a\u65f6\u5668\u201d\u548c\u201c\u91cd\u7f6e\u5b9a\u65f6\u5668\u201d\u3002</p> <p>\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u662f\u4e00\u4e2a\u6807\u51c6\u7684 FreeRTOS \u961f\u5217\uff0c\u5728\u8c03\u5ea6\u7a0b\u5e8f\u542f\u52a8\u65f6\u81ea\u52a8\u521b\u5efa\u3002\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u7684\u957f\u5ea6\u7531 FreeRTOSConfig.h \u4e2d\u7684 <code>configTIMER_QUEUE_LENGTH</code> \u7f16\u8bd1\u65f6\u914d\u7f6e\u5e38\u91cf\u8bbe\u7f6e\u3002</p> <p></p> <p> Figure 6.4 The timer command queue being used by a software timer API function to communicate with the RTOS daemon task</p>"},{"location":"ch06-%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86/#643","title":"6.4.3 \u5b88\u62a4\u4efb\u52a1\u8c03\u5ea6","text":"<p>\u5b88\u62a4\u4efb\u52a1\u7684\u8c03\u5ea6\u65b9\u5f0f\u4e0e\u5176\u4ed6 FreeRTOS \u4efb\u52a1\u76f8\u540c\uff1b\u53ea\u6709\u5728\u5b83\u662f\u80fd\u591f\u8fd0\u884c\u7684\u6700\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u65f6\uff0c\u5b83\u624d\u4f1a\u5904\u7406\u547d\u4ee4\u6216\u6267\u884c\u5b9a\u65f6\u5668\u56de\u8c03\u51fd\u6570\u3002\u56fe 6.5 \u548c\u56fe 6.6 \u6f14\u793a\u4e86 <code>configTIMER_TASK_PRIORITY</code> \u8bbe\u7f6e\u5982\u4f55\u5f71\u54cd\u6267\u884c\u6a21\u5f0f\u3002</p> <p>\u56fe 6.5 \u663e\u793a\u4e86\u5f53\u5b88\u62a4\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u4f4e\u4e8e\u8c03\u7528 <code>xTimerStart()</code> API \u51fd\u6570\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u65f6\u7684\u6267\u884c\u6a21\u5f0f\u3002</p> <p></p> <p> Figure 6.5 The execution pattern when the priority of a task calling xTimerStart() is above the priority of the daemon task</p> <p>\u53c2\u8003\u56fe 6.5\uff0c\u5176\u4e2d\u4efb\u52a1 1 \u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5b88\u62a4\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff0c\u5b88\u62a4\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u53c8\u9ad8\u4e8e\u7a7a\u95f2\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff1a</p> <ol> <li> <p>\u5728\u65f6\u95f4 t1</p> <p>\u4efb\u52a1 1 \u5904\u4e8e\u8fd0\u884c\u72b6\u6001\uff0c\u5b88\u62a4\u4efb\u52a1\u5904\u4e8e\u963b\u585e\u72b6\u6001\u3002</p> <p>\u5982\u679c\u5411\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u53d1\u9001\u547d\u4ee4\uff0c\u5b88\u62a4\u4efb\u52a1\u5c06\u79bb\u5f00\u963b\u585e\u72b6\u6001\u5e76\u5904\u7406\u8be5\u547d\u4ee4\uff1b\u6216\u8005\u5982\u679c\u8f6f\u4ef6\u5b9a\u65f6\u5668\u5230\u671f\uff0c\u5b88\u62a4\u4efb\u52a1\u5c06\u6267\u884c\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u56de\u8c03\u51fd\u6570\u3002</p> </li> <li> <p>\u5728\u65f6\u95f4 t2</p> </li> </ol> <p>\u4efb\u52a1 1 \u8c03\u7528 <code>xTimerStart()</code>\u3002</p> <p><code>xTimerStart()</code> \u5c06\u547d\u4ee4\u53d1\u9001\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\uff0c\u5bfc\u81f4\u5b88\u62a4\u4efb\u52a1\u79bb\u5f00\u963b\u585e\u72b6\u6001\u3002\u4efb\u52a1 1 \u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5b88\u62a4\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff0c\u56e0\u6b64\u5b88\u62a4\u4efb\u52a1\u4e0d\u4f1a\u62a2\u5360\u4efb\u52a1 1\u3002</p> <p>\u4efb\u52a1 1 \u4ecd\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\uff0c\u5b88\u62a4\u4efb\u52a1\u5df2\u79bb\u5f00\u963b\u585e\u72b6\u6001\u5e76\u8fdb\u5165\u5c31\u7eea\u72b6\u6001\u3002</p> <ol> <li>\u5728\u65f6\u95f4 t3</li> </ol> <p>\u4efb\u52a1 1 \u5b8c\u6210\u5bf9 <code>xTimerStart()</code> API \u51fd\u6570\u7684\u6267\u884c\u3002\u4efb\u52a1 1 \u4ece\u51fd\u6570\u5f00\u59cb\u5230\u7ed3\u675f\u6267\u884c <code>xTimerStart()</code>\uff0c\u800c\u6ca1\u6709\u79bb\u5f00\u8fd0\u884c\u72b6\u6001\u3002</p> <ol> <li>\u5728\u65f6\u95f4 t4</li> </ol> <p>\u4efb\u52a1 1 \u8c03\u7528\u4e00\u4e2a API \u51fd\u6570\uff0c\u5bfc\u81f4\u5176\u8fdb\u5165\u963b\u585e\u72b6\u6001\u3002\u6b64\u65f6\uff0c\u5b88\u62a4\u4efb\u52a1\u662f\u5c31\u7eea\u72b6\u6001\u4e0b\u7684\u6700\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\uff0c\u56e0\u6b64\u8c03\u5ea6\u7a0b\u5e8f\u5c06\u5b88\u62a4\u4efb\u52a1\u9009\u4e3a\u8fdb\u5165\u8fd0\u884c\u72b6\u6001\u7684\u4efb\u52a1\u3002\u5b88\u62a4\u4efb\u52a1\u7136\u540e\u5f00\u59cb\u5904\u7406\u4efb\u52a1 1 \u53d1\u9001\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u7684\u547d\u4ee4\u3002</p> <p>\u6ce8\u610f\uff1a\u8ba1\u7b97\u8f6f\u4ef6\u5b9a\u65f6\u5668\u4f55\u65f6\u5230\u671f\u7684\u65f6\u95f4\u662f\u4ece\u53d1\u9001\u201c\u542f\u52a8\u5b9a\u65f6\u5668\u201d\u547d\u4ee4\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u7684\u65f6\u95f4\u5f00\u59cb\u7684\uff0c\u800c\u4e0d\u662f\u4ece\u5b88\u62a4\u4efb\u52a1\u4ece\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u63a5\u6536\u201c\u542f\u52a8\u5b9a\u65f6\u5668\u201d\u547d\u4ee4\u7684\u65f6\u95f4\u5f00\u59cb\u7684\u3002</p> <ol> <li>\u5728\u65f6\u95f4 t5</li> </ol> <p>\u5b88\u62a4\u4efb\u52a1\u5df2\u5b8c\u6210\u5904\u7406\u4efb\u52a1 1 \u53d1\u9001\u7ed9\u5b83\u7684\u547d\u4ee4\uff0c\u5e76\u5c1d\u8bd5\u4ece\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u63a5\u6536\u66f4\u591a\u6570\u636e\u3002\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4e3a\u7a7a\uff0c\u56e0\u6b64\u5b88\u62a4\u4efb\u52a1\u91cd\u65b0\u8fdb\u5165\u963b\u585e\u72b6\u6001\u3002\u5b88\u62a4\u4efb\u52a1\u5c06\u518d\u6b21\u79bb\u5f00\u963b\u585e\u72b6\u6001\uff0c\u5982\u679c\u5411\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u53d1\u9001\u547d\u4ee4\uff0c\u6216\u8005\u5982\u679c\u8f6f\u4ef6\u5b9a\u65f6\u5668\u5230\u671f\u3002</p> <p>\u6b64\u65f6\uff0c\u7a7a\u95f2\u4efb\u52a1\u662f\u5c31\u7eea\u72b6\u6001\u4e0b\u7684\u6700\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\uff0c\u56e0\u6b64\u8c03\u5ea6\u7a0b\u5e8f\u5c06\u7a7a\u95f2\u4efb\u52a1\u9009\u4e3a\u8fdb\u5165\u8fd0\u884c\u72b6\u6001\u7684\u4efb\u52a1\u3002</p> <p>\u56fe 6.6 \u663e\u793a\u4e86\u4e0e\u56fe 6.5 \u7c7b\u4f3c\u7684\u573a\u666f\uff0c\u4f46\u8fd9\u6b21\u5b88\u62a4\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u8c03\u7528 <code>xTimerStart()</code> \u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002</p> <p></p> <p> Figure 6.6 The execution pattern when the priority of a task calling xTimerStart() is below the priority of the daemon task</p> <p>\u53c2\u8003\u56fe 6.6\uff0c\u5176\u4e2d\u5b88\u62a4\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u4efb\u52a1 1 \u7684\u4f18\u5148\u7ea7\uff0c\u4efb\u52a1 1 \u7684\u4f18\u5148\u7ea7\u53c8\u9ad8\u4e8e\u7a7a\u95f2\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff1a</p> <ol> <li>\u5728\u65f6\u95f4 t1</li> </ol> <p>\u4e0e\u4e4b\u524d\u4e00\u6837\uff0c\u4efb\u52a1 1 \u5904\u4e8e\u8fd0\u884c\u72b6\u6001\uff0c\u5b88\u62a4\u4efb\u52a1\u5904\u4e8e\u963b\u585e\u72b6\u6001\u3002</p> <ol> <li>\u5728\u65f6\u95f4 t2</li> </ol> <p>\u4efb\u52a1 1 \u8c03\u7528 <code>xTimerStart()</code>\u3002</p> <p><code>xTimerStart()</code> \u5c06\u547d\u4ee4\u53d1\u9001\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\uff0c\u5bfc\u81f4\u5b88\u62a4\u4efb\u52a1\u79bb\u5f00\u963b\u585e\u72b6\u6001\u3002\u5b88\u62a4\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u4efb\u52a1 1 \u7684\u4f18\u5148\u7ea7\uff0c\u56e0\u6b64\u8c03\u5ea6\u7a0b\u5e8f\u5c06\u5b88\u62a4\u4efb\u52a1\u9009\u4e3a\u8fdb\u5165\u8fd0\u884c\u72b6\u6001\u7684\u4efb\u52a1\u3002</p> <p>\u4efb\u52a1 1 \u5728\u5b8c\u6210\u5bf9 <code>xTimerStart()</code> \u7684\u6267\u884c\u4e4b\u524d\u88ab\u5b88\u62a4\u4efb\u52a1\u62a2\u5360\uff0c\u5e76\u4e14\u73b0\u5728\u5904\u4e8e\u5c31\u7eea\u72b6\u6001\u3002</p> <p>\u5b88\u62a4\u4efb\u52a1\u5f00\u59cb\u5904\u7406\u4efb\u52a1 1 \u53d1\u9001\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u7684\u547d\u4ee4\u3002</p> <ol> <li>\u5728\u65f6\u95f4 t3</li> </ol> <p>\u5b88\u62a4\u4efb\u52a1\u5df2\u5b8c\u6210\u5904\u7406\u4efb\u52a1 1 \u53d1\u9001\u7ed9\u5b83\u7684\u547d\u4ee4\uff0c\u5e76\u5c1d\u8bd5\u4ece\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u63a5\u6536\u66f4\u591a\u6570\u636e\u3002\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4e3a\u7a7a\uff0c\u56e0\u6b64\u5b88\u62a4\u4efb\u52a1\u91cd\u65b0\u8fdb\u5165\u963b\u585e\u72b6\u6001\u3002</p> <p>\u6b64\u65f6\uff0c\u4efb\u52a1 1 \u662f\u5c31\u7eea\u72b6\u6001\u4e0b\u7684\u6700\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\uff0c\u56e0\u6b64\u8c03\u5ea6\u7a0b\u5e8f\u5c06\u4efb\u52a1 1 \u9009\u4e3a\u8fdb\u5165\u8fd0\u884c\u72b6\u6001\u7684\u4efb\u52a1\u3002</p> <ol> <li>\u5728\u65f6\u95f4 t4</li> </ol> <p>\u4efb\u52a1 1 \u5728\u5b88\u62a4\u4efb\u52a1\u4e4b\u524d\u88ab\u62a2\u5360\uff0c\u56e0\u6b64\u5728\u91cd\u65b0\u8fdb\u5165\u8fd0\u884c\u72b6\u6001\u540e\u624d\u4ece <code>xTimerStart()</code> \u8fd4\u56de\u3002</p> <ol> <li>\u5728\u65f6\u95f4 t5</li> </ol> <p>\u4efb\u52a1 1 \u8c03\u7528\u4e00\u4e2a API \u51fd\u6570\uff0c\u5bfc\u81f4\u5176\u8fdb\u5165\u963b\u585e\u72b6\u6001\u3002\u6b64\u65f6\uff0c\u7a7a\u95f2\u4efb\u52a1\u662f\u5c31\u7eea\u72b6\u6001\u4e0b\u7684\u6700\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\uff0c\u56e0\u6b64\u8c03\u5ea6\u7a0b\u5e8f\u5c06\u7a7a\u95f2\u4efb\u52a1\u9009\u4e3a\u8fdb\u5165\u8fd0\u884c\u72b6\u6001\u7684\u4efb\u52a1\u3002</p> <p>\u5728\u56fe 6.5 \u6240\u793a\u7684\u573a\u666f\u4e2d\uff0c\u4efb\u52a1 1 \u53d1\u9001\u547d\u4ee4\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u548c\u5b88\u62a4\u4efb\u52a1\u63a5\u6536\u5e76\u5904\u7406\u8be5\u547d\u4ee4\u4e4b\u95f4\u7ecf\u8fc7\u4e86\u4e00\u6bb5\u65f6\u95f4\u3002\u5728\u56fe 6.6 \u6240\u793a\u7684\u573a\u666f\u4e2d\uff0c\u5b88\u62a4\u4efb\u52a1\u5728\u4efb\u52a1 1 \u4ece\u53d1\u9001\u547d\u4ee4\u7684\u51fd\u6570\u8fd4\u56de\u4e4b\u524d\u5c31\u5df2\u63a5\u6536\u5e76\u5904\u7406\u4e86\u4efb\u52a1 1 \u53d1\u9001\u7ed9\u5b83\u7684\u547d\u4ee4\u3002</p> <p>\u53d1\u9001\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u7684\u547d\u4ee4\u5305\u542b\u65f6\u95f4\u6233\u3002\u65f6\u95f4\u6233\u7528\u4e8e\u8ba1\u7b97\u5e94\u7528\u7a0b\u5e8f\u4efb\u52a1\u53d1\u9001\u547d\u4ee4\u548c\u5b88\u62a4\u4efb\u52a1\u5904\u7406\u76f8\u540c\u547d\u4ee4\u4e4b\u95f4\u7ecf\u8fc7\u7684\u65f6\u95f4\u3002\u4f8b\u5982\uff0c\u5982\u679c\u53d1\u9001\u4e86\u4e00\u4e2a\u201c\u542f\u52a8\u5b9a\u65f6\u5668\u201d\u7684\u547d\u4ee4\u6765\u542f\u52a8\u4e00\u4e2a\u5468\u671f\u4e3a 10 \u4e2a\u6ef4\u7b54\u7684\u5b9a\u65f6\u5668\uff0c\u5219\u65f6\u95f4\u6233\u7528\u4e8e\u786e\u4fdd\u88ab\u542f\u52a8\u7684\u5b9a\u65f6\u5668\u5728\u547d\u4ee4\u53d1\u9001\u540e 10 \u4e2a\u6ef4\u7b54\u5230\u671f\uff0c\u800c\u4e0d\u662f\u5728\u5b88\u62a4\u4efb\u52a1\u5904\u7406\u547d\u4ee4\u540e 10 \u4e2a\u6ef4\u7b54\u5230\u671f\u3002</p>"},{"location":"ch06-%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86/#65","title":"6.5 \u521b\u5efa\u548c\u542f\u52a8\u8f6f\u4ef6\u5b9a\u65f6\u5668","text":""},{"location":"ch06-%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86/#651-xtimercreate-api","title":"6.5.1 xTimerCreate() API \u51fd\u6570","text":"<p>FreeRTOS \u8fd8\u5305\u62ec <code>xTimerCreateStatic()</code> \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u9759\u6001\u5206\u914d\u521b\u5efa\u5b9a\u65f6\u5668\u6240\u9700\u7684\u5185\u5b58\uff1a\u5fc5\u987b\u663e\u5f0f\u521b\u5efa\u8f6f\u4ef6\u5b9a\u65f6\u5668\uff0c\u7136\u540e\u624d\u80fd\u4f7f\u7528\u5b83\u3002</p> <p>\u8f6f\u4ef6\u5b9a\u65f6\u5668\u901a\u8fc7 <code>TimerHandle_t</code> \u7c7b\u578b\u7684\u53d8\u91cf\u5f15\u7528\u3002<code>xTimerCreate()</code> \u7528\u4e8e\u521b\u5efa\u8f6f\u4ef6\u5b9a\u65f6\u5668\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a <code>TimerHandle_t</code> \u6765\u5f15\u7528\u5b83\u6240\u521b\u5efa\u7684\u8f6f\u4ef6\u5b9a\u65f6\u5668\u3002\u8f6f\u4ef6\u5b9a\u65f6\u5668\u5728\u4f11\u7720\u72b6\u6001\u4e0b\u521b\u5efa\u3002</p> <p>\u8f6f\u4ef6\u5b9a\u65f6\u5668\u53ef\u4ee5\u5728\u8c03\u5ea6\u7a0b\u5e8f\u8fd0\u884c\u4e4b\u524d\u521b\u5efa\uff0c\u4e5f\u53ef\u4ee5\u5728\u8c03\u5ea6\u7a0b\u5e8f\u542f\u52a8\u540e\u7684\u4efb\u52a1\u4e2d\u521b\u5efa\u3002</p> <p>\u7b2c 2.5 \u8282\uff1a\u6570\u636e\u7c7b\u578b\u548c\u7f16\u7801\u98ce\u683c\u6307\u5357 \u63cf\u8ff0\u4e86\u4f7f\u7528\u7684\u6570\u636e\u7c7b\u578b\u548c\u547d\u540d\u7ea6\u5b9a\u3002</p> <p></p> <pre><code>TimerHandle_t xTimerCreate( const char * const pcTimerName,\n                            const TickType_t xTimerPeriodInTicks,\n                            const BaseType_t xAutoReload,\n                            void * const pvTimerID,\n                            TimerCallbackFunction_t pxCallbackFunction );\n</code></pre> <p>Listing 6.3 The xTimerCreate() API function prototype</p> <p>xTimerCreate() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>pcTimerName</code></li> </ul> <p>\u5b9a\u65f6\u5668\u7684\u63cf\u8ff0\u6027\u540d\u79f0\u3002FreeRTOS \u4e0d\u4ee5\u4efb\u4f55\u65b9\u5f0f\u4f7f\u7528\u6b64\u540d\u79f0\u3002\u5b83\u4ec5\u4f5c\u4e3a\u8c03\u8bd5\u8f85\u52a9\u5de5\u5177\u5305\u542b\u3002\u901a\u8fc7\u4eba\u7c7b\u53ef\u8bfb\u7684\u540d\u79f0\u8bc6\u522b\u5b9a\u65f6\u5668\u6bd4\u901a\u8fc7\u5176\u53e5\u67c4\u8bc6\u522b\u5b9a\u65f6\u5668\u8981\u7b80\u5355\u5f97\u591a\u3002</p> <ul> <li><code>xTimerPeriodInTicks</code></li> </ul> <p>\u5b9a\u65f6\u5668\u7684\u5468\u671f\uff0c\u4ee5\u6ef4\u7b54\u4e3a\u5355\u4f4d\u3002\u53ef\u4ee5\u4f7f\u7528 <code>pdMS_TO_TICKS()</code> \u5b8f\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5\u6ef4\u7b54\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u3002\u4e0d\u80fd\u4e3a 0\u3002</p> <ul> <li><code>xAutoReload</code></li> </ul> <p>\u5c06 <code>xAutoReload</code> \u8bbe\u7f6e\u4e3a <code>pdTRUE</code> \u4ee5\u521b\u5efa\u81ea\u52a8\u91cd\u8f7d\u5b9a\u65f6\u5668\u3002\u5c06 <code>xAutoReload</code> \u8bbe\u7f6e\u4e3a <code>pdFALSE</code> \u4ee5\u521b\u5efa\u5355\u6b21\u5b9a\u65f6\u5668\u3002</p> <ul> <li><code>pvTimerID</code></li> </ul> <p>\u6bcf\u4e2a\u8f6f\u4ef6\u5b9a\u65f6\u5668\u90fd\u6709\u4e00\u4e2a ID \u503c\u3002\u8be5 ID \u662f\u4e00\u4e2a\u7a7a\u6307\u9488\uff0c\u53ef\u4ee5\u88ab\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u8005\u7528\u4e8e\u4efb\u4f55\u76ee\u7684\u3002\u7279\u522b\u662f\u5728\u540c\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u88ab\u591a\u4e2a\u8f6f\u4ef6\u5b9a\u65f6\u5668\u4f7f\u7528\u65f6\uff0cID \u7279\u522b\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u7528\u6765\u63d0\u4f9b\u7279\u5b9a\u4e8e\u5b9a\u65f6\u5668\u7684\u5b58\u50a8\u3002ID \u7684\u4f7f\u7528\u5728\u672c\u7ae0\u7684\u793a\u4f8b\u4e2d\u5f97\u5230\u4e86\u6f14\u793a\u3002</p> <p><code>pvTimerID</code> \u4e3a\u6b63\u5728\u521b\u5efa\u7684\u4efb\u52a1\u7684 ID \u8bbe\u7f6e\u521d\u59cb\u503c\u3002</p> <ul> <li><code>pxCallbackFunction</code></li> </ul> <p>\u8f6f\u4ef6\u5b9a\u65f6\u5668\u56de\u8c03\u51fd\u6570\u53ea\u662f\u7b26\u5408\u6e05\u5355 6.1 \u4e2d\u6240\u793a\u539f\u578b\u7684 C \u51fd\u6570\u3002<code>pxCallbackFunction</code> \u53c2\u6570\u662f\u6307\u5411\u7528\u4e8e\u4f5c\u4e3a\u6b63\u5728\u521b\u5efa\u7684\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u56de\u8c03\u51fd\u6570\u7684\u51fd\u6570\u7684\u6307\u9488\uff08\u5b9e\u9645\u4e0a\u53ea\u662f\u51fd\u6570\u540d\u79f0\uff09\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u5982\u679c\u8fd4\u56de NULL\uff0c\u5219\u8868\u793a\u7531\u4e8e\u53ef\u7528\u5806\u5185\u5b58\u4e0d\u8db3\uff0c\u65e0\u6cd5\u521b\u5efa\u8f6f\u4ef6\u5b9a\u65f6\u5668\u3002</p> <p>\u5982\u679c\u8fd4\u56de\u975e NULL \u503c\uff0c\u5219\u8868\u793a\u8f6f\u4ef6\u5b9a\u65f6\u5668\u5df2\u6210\u529f\u521b\u5efa\u3002\u8fd4\u56de\u7684\u503c\u662f\u5df2\u521b\u5efa\u5b9a\u65f6\u5668\u7684\u53e5\u67c4\u3002</p> <p>\u7b2c 3 \u7ae0\u63d0\u4f9b\u4e86\u6709\u5173\u5806\u5185\u5b58\u7ba1\u7406\u7684\u66f4\u591a\u4fe1\u606f\u3002</p>"},{"location":"ch06-%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86/#652-xtimerstart-api","title":"6.5.2 xTimerStart() API \u51fd\u6570","text":"<p><code>xTimerStart()</code> \u7528\u4e8e\u542f\u52a8\u5904\u4e8e\u4f11\u7720\u72b6\u6001\u7684\u8f6f\u4ef6\u5b9a\u65f6\u5668\uff0c\u6216\u91cd\u7f6e\uff08\u91cd\u65b0\u542f\u52a8\uff09\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u7684\u8f6f\u4ef6\u5b9a\u65f6\u5668\u3002<code>xTimerStop()</code> \u7528\u4e8e\u505c\u6b62\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u7684\u8f6f\u4ef6\u5b9a\u65f6\u5668\u3002\u505c\u6b62\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7b49\u540c\u4e8e\u5c06\u5b9a\u65f6\u5668\u8f6c\u6362\u4e3a\u4f11\u7720\u72b6\u6001\u3002</p> <p><code>xTimerStart()</code> \u53ef\u4ee5\u5728\u8c03\u5ea6\u7a0b\u5e8f\u542f\u52a8\u4e4b\u524d\u8c03\u7528\uff0c\u4f46\u8fd9\u6837\u505a\u65f6\uff0c\u8f6f\u4ef6\u5b9a\u65f6\u5668\u5b9e\u9645\u4e0a\u8981\u7b49\u5230\u8c03\u5ea6\u7a0b\u5e8f\u542f\u52a8\u65f6\u624d\u4f1a\u542f\u52a8\u3002</p> <p>\u6ce8\u610f\uff1a\u5207\u52ff\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u8c03\u7528 <code>xTimerStart()</code>\u3002\u5e94\u4f7f\u7528\u4e2d\u65ad\u5b89\u5168\u7248\u672c <code>xTimerStartFromISR()</code> \u4ee3\u66ff\u3002</p> <p></p> <pre><code>BaseType_t xTimerStart( TimerHandle_t xTimer, TickType_t xTicksToWait );\n</code></pre> <p>Listing 6.4 The xTimerStart() API function prototype</p> <p>xTimerStart() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>xTimer</code></li> </ul> <p>\u6b63\u5728\u542f\u52a8\u6216\u91cd\u7f6e\u7684\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u53e5\u67c4\u3002\u8be5\u53e5\u67c4\u662f\u901a\u8fc7\u7528\u4e8e\u521b\u5efa\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684 <code>xTimerCreate()</code> \u8c03\u7528\u8fd4\u56de\u7684\u3002</p> <ul> <li><code>xTicksToWait</code></li> </ul> <p><code>xTimerStart()</code> \u4f7f\u7528\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u5c06\u201c\u542f\u52a8\u5b9a\u65f6\u5668\u201d\u547d\u4ee4\u53d1\u9001\u5230\u5b88\u62a4\u4efb\u52a1\u3002<code>xTicksToWait</code> \u6307\u5b9a\u8c03\u7528\u4efb\u52a1\u5728\u963b\u585e\u72b6\u6001\u4e2d\u7b49\u5f85\u7684\u6700\u957f\u65f6\u95f4\uff0c\u4ee5\u7b49\u5f85\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4e2d\u6709\u53ef\u7528\u7a7a\u95f4\uff08\u5982\u679c\u961f\u5217\u5df2\u6ee1\uff09\u3002</p> <p>\u5982\u679c\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u5df2\u6ee1\u5e76\u4e14 <code>xTicksToWait</code> \u8bbe\u7f6e\u4e3a 0\uff0c\u5219 <code>xTimerStart()</code> \u5c06\u7acb\u5373\u8fd4\u56de\u3002</p> <p>\u5757\u65f6\u95f4\u4ee5\u6ef4\u7b54\u5468\u671f\u4e3a\u5355\u4f4d\u6307\u5b9a\uff0c\u56e0\u6b64\u5b83\u8868\u793a\u7684\u7edd\u5bf9\u65f6\u95f4\u53d6\u51b3\u4e8e\u6ef4\u7b54\u9891\u7387\u3002\u5b8f <code>pdMS_TO_TICKS()</code> \u53ef\u7528\u4e8e\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5\u6ef4\u7b54\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u3002</p> <p>\u5982\u679c\u5728 <code>FreeRTOSConfig.h</code> \u4e2d\u5c06 <code>INCLUDE_vTaskSuspend</code> \u8bbe\u7f6e\u4e3a 1\uff0c\u5219\u5c06 <code>xTicksToWait</code> \u8bbe\u7f6e\u4e3a <code>portMAX_DELAY</code> \u5c06\u5bfc\u81f4\u8c03\u7528\u4efb\u52a1\u65e0\u9650\u671f\uff08\u6ca1\u6709\u8d85\u65f6\uff09\u4fdd\u6301\u5728\u963b\u585e\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4e2d\u6709\u53ef\u7528\u7a7a\u95f4\u3002</p> <p>\u5982\u679c\u5728\u8c03\u5ea6\u7a0b\u5e8f\u542f\u52a8\u4e4b\u524d\u8c03\u7528 <code>xTimerStart()</code>\uff0c\u5219 <code>xTicksToWait</code> \u7684\u503c\u5c06\u88ab\u5ffd\u7565\uff0c<code>xTimerStart()</code> \u7684\u884c\u4e3a\u5c31\u50cf <code>xTicksToWait</code> \u88ab\u8bbe\u7f6e\u4e3a\u96f6\u4e00\u6837\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u53ef\u80fd\u7684\u8fd4\u56de\u503c\u6709\u4e24\u4e2a\uff1a</p> <ul> <li> <p><code>pdPASS</code></p> <p>\u4ec5\u5f53\u201c\u542f\u52a8\u5b9a\u65f6\u5668\u201d\u547d\u4ee4\u6210\u529f\u53d1\u9001\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u65f6\uff0c\u624d\u4f1a\u8fd4\u56de <code>pdPASS</code>\u3002</p> <p>\u5982\u679c\u5b88\u62a4\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u8c03\u7528 <code>xTimerStart()</code> \u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff0c\u5219\u8c03\u5ea6\u7a0b\u5e8f\u5c06\u786e\u4fdd\u5728 <code>xTimerStart()</code> \u8fd4\u56de\u4e4b\u524d\u5904\u7406\u542f\u52a8\u547d\u4ee4\u3002\u8fd9\u662f\u56e0\u4e3a\u5b88\u62a4\u4efb\u52a1\u5c06\u5728\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4e2d\u6709\u6570\u636e\u65f6\u62a2\u5360\u8c03\u7528 <code>xTimerStart()</code> \u7684\u4efb\u52a1\u3002</p> <p>\u5982\u679c\u6307\u5b9a\u4e86\u5757\u65f6\u95f4\uff08<code>xTicksToWait</code> \u4e0d\u4e3a\u96f6\uff09\uff0c\u5219\u8c03\u7528\u4efb\u52a1\u53ef\u80fd\u4f1a\u88ab\u7f6e\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4e2d\u6709\u53ef\u7528\u7a7a\u95f4\uff0c\u7136\u540e\u8be5\u51fd\u6570\u8fd4\u56de\uff0c\u4f46\u5728\u5757\u65f6\u95f4\u5230\u671f\u4e4b\u524d\uff0c\u6570\u636e\u5df2\u6210\u529f\u5199\u5165\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u3002</p> </li> <li> <p><code>pdFAIL</code></p> <p>\u5982\u679c\u201c\u542f\u52a8\u5b9a\u65f6\u5668\u201d\u547d\u4ee4\u65e0\u6cd5\u5199\u5165\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\uff08\u56e0\u4e3a\u961f\u5217\u5df2\u6ee1\uff09\uff0c\u5219\u8fd4\u56de <code>pdFAIL</code>\u3002</p> <p>\u5982\u679c\u6307\u5b9a\u4e86\u5757\u65f6\u95f4\uff08<code>xTicksToWait</code> \u4e0d\u4e3a\u96f6\uff09\uff0c\u5219\u8c03\u7528\u4efb\u52a1\u5c06\u88ab\u7f6e\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u5b88\u62a4\u4efb\u52a1\u5728\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4e2d\u817e\u51fa\u7a7a\u95f4\uff0c\u4f46\u5728\u5757\u65f6\u95f4\u5230\u671f\u4e4b\u524d\u672a\u80fd\u6210\u529f\u5199\u5165\u6570\u636e\u3002</p> </li> </ul>"},{"location":"ch06-%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86/#_1","title":"6 \u8f6f\u4ef6\u5b9a\u65f6\u5668\u7ba1\u7406","text":"<p>Example 6.1 Creating one-shot and auto-reload timers</p> <p>\u6b64\u793a\u4f8b\u521b\u5efa\u5e76\u542f\u52a8\u4e00\u4e2a\u5355\u6b21\u5b9a\u65f6\u5668\u548c\u4e00\u4e2a\u81ea\u52a8\u91cd\u8f7d\u5b9a\u65f6\u5668\uff0c\u5982\u6e05\u5355 6.5 \u6240\u793a\u3002</p> <p></p> <pre><code>/* The periods assigned to the one-shot and auto-reload timers are 3.333\n   second and half a second respectively. */\n#define mainONE_SHOT_TIMER_PERIOD pdMS_TO_TICKS( 3333 )\n#define mainAUTO_RELOAD_TIMER_PERIOD pdMS_TO_TICKS( 500 )\n\nint main( void )\n{\n    TimerHandle_t xAutoReloadTimer, xOneShotTimer;\n    BaseType_t xTimer1Started, xTimer2Started;\n\n    /* Create the one shot timer, storing the handle to the created timer in\n       xOneShotTimer. */\n    xOneShotTimer = xTimerCreate(\n        /* Text name for the software timer - not used by FreeRTOS. */\n                                  \"OneShot\",\n        /* The software timer's period in ticks. */\n                                   mainONE_SHOT_TIMER_PERIOD,\n        /* Setting uxAutoRealod to pdFALSE creates a one-shot software timer. */\n                                   pdFALSE,\n        /* This example does not use the timer id. */\n                                   0,\n        /* Callback function to be used by the software timer being created. */\n                                   prvOneShotTimerCallback );\n\n    /* Create the auto-reload timer, storing the handle to the created timer\n       in xAutoReloadTimer. */\n    xAutoReloadTimer = xTimerCreate(\n        /* Text name for the software timer - not used by FreeRTOS. */\n                                     \"AutoReload\",\n        /* The software timer's period in ticks. */\n                                     mainAUTO_RELOAD_TIMER_PERIOD,\n        /* Setting uxAutoRealod to pdTRUE creates an auto-reload timer. */\n                                     pdTRUE,\n        /* This example does not use the timer id. */\n                                     0,\n        /* Callback function to be used by the software timer being created. */\n                                     prvAutoReloadTimerCallback );\n\n    /* Check the software timers were created. */\n    if( ( xOneShotTimer != NULL ) &amp;&amp; ( xAutoReloadTimer != NULL ) )\n    {\n        /* Start the software timers, using a block time of 0 (no block time).\n           The scheduler has not been started yet so any block time specified\n           here would be ignored anyway. */\n        xTimer1Started = xTimerStart( xOneShotTimer, 0 );\n        xTimer2Started = xTimerStart( xAutoReloadTimer, 0 );\n\n        /* The implementation of xTimerStart() uses the timer command queue,\n           and xTimerStart() will fail if the timer command queue gets full.\n           The timer service task does not get created until the scheduler is\n           started, so all commands sent to the command queue will stay in the\n           queue until after the scheduler has been started. Check both calls\n           to xTimerStart() passed. */\n        if( ( xTimer1Started == pdPASS ) &amp;&amp; ( xTimer2Started == pdPASS ) )\n        {\n            /* Start the scheduler. */\n            vTaskStartScheduler();\n        }\n    }\n\n    /* As always, this line should not be reached. */\n    for( ;; );\n}\n</code></pre> <p>Listing 6.5 Creating and starting the timers used in Example 6.1</p> <p>\u5b9a\u65f6\u5668\u7684\u56de\u8c03\u51fd\u6570\u6bcf\u6b21\u88ab\u8c03\u7528\u65f6\u53ea\u6253\u5370\u4e00\u4e2a\u6d88\u606f\u3002\u5355\u6b21\u5b9a\u65f6\u5668\u56de\u8c03\u51fd\u6570\u7684\u5b9e\u73b0\u5982\u6e05\u5355 6.6 \u6240\u793a\u3002\u81ea\u52a8\u91cd\u8f7d\u5b9a\u65f6\u5668\u56de\u8c03\u51fd\u6570\u7684\u5b9e\u73b0\u5982\u6e05\u5355 6.7 \u6240\u793a\u3002</p> <p></p> <pre><code>static void prvOneShotTimerCallback( TimerHandle_t xTimer )\n{\n    TickType_t xTimeNow;\n\n    /* Obtain the current tick count. */\n    xTimeNow = xTaskGetTickCount();\n\n    /* Output a string to show the time at which the callback was executed. */\n    vPrintStringAndNumber( \"One-shot timer callback executing\", xTimeNow );\n\n    /* File scope variable. */\n    ulCallCount++;\n}\n</code></pre> <p>Listing 6.6 The callback function used by the one-shot timer in Example 6.1</p> <p></p> <pre><code>static void prvAutoReloadTimerCallback( TimerHandle_t xTimer )\n{\n    TickType_t xTimeNow;\n\n    /* Obtain the current tick count. */\n    xTimeNow = xTaskGetTickCount();\n\n    /* Output a string to show the time at which the callback was executed. */\n    vPrintStringAndNumber( \"Auto-reload timer callback executing\", xTimeNow);\n\n    ulCallCount++;\n}\n</code></pre> <p>Listing 6.7 The callback function used by the auto-reload timer in Example 6.1</p> <p>\u6267\u884c\u6b64\u793a\u4f8b\u4f1a\u4ea7\u751f\u56fe 6.7 \u6240\u793a\u7684\u8f93\u51fa\u3002\u56fe 6.7 \u663e\u793a\u4e86\u81ea\u52a8\u91cd\u8f7d\u5b9a\u65f6\u5668\u7684\u56de\u8c03\u51fd\u6570\u4ee5\u56fa\u5b9a\u5468\u671f\uff08\u5728\u6e05\u5355 6.5 \u4e2d\u5c06 <code>mainAUTO_RELOAD_TIMER_PERIOD</code> \u8bbe\u7f6e\u4e3a 500\uff09\u6267\u884c\uff0c\u4ee5\u53ca\u5355\u6b21\u5b9a\u65f6\u5668\u7684\u56de\u8c03\u51fd\u6570\u4ec5\u5728\u6ef4\u7b54\u8ba1\u6570\u4e3a 3333 \u65f6\u6267\u884c\uff08\u5728\u6e05\u5355 6.5 \u4e2d\u5c06 <code>mainONE_SHOT_TIMER_PERIOD</code> \u8bbe\u7f6e\u4e3a 3333\uff09\u3002</p> <p></p> <p> Figure 6.7 The output produced when Example 6.1 is executed</p>"},{"location":"ch06-%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86/#66-id","title":"6.6 \u5b9a\u65f6\u5668 ID","text":"<p>\u6bcf\u4e2a\u8f6f\u4ef6\u5b9a\u65f6\u5668\u90fd\u6709\u4e00\u4e2a ID\uff0c\u8fd9\u662f\u4e00\u4e2a\u6807\u7b7e\u503c\uff0c\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u8005\u53ef\u4ee5\u51fa\u4e8e\u4efb\u4f55\u76ee\u7684\u4f7f\u7528\u3002\u8be5 ID \u5b58\u50a8\u5728\u4e00\u4e2a\u7a7a\u6307\u9488\uff08<code>void *</code>\uff09\u4e2d\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u5b58\u50a8\u4e00\u4e2a\u6574\u6570\u503c\uff0c\u53ef\u4ee5\u6307\u5411\u4efb\u4f55\u5176\u4ed6\u5bf9\u8c61\uff0c\u6216\u8005\u53ef\u4ee5\u7528\u4f5c\u51fd\u6570\u6307\u9488\u3002</p> <p>\u5728\u521b\u5efa\u8f6f\u4ef6\u5b9a\u65f6\u5668\u65f6\u4f1a\u5206\u914d\u4e00\u4e2a\u521d\u59cb\u503c\u7ed9 ID\uff0c\u6b64\u540e\u53ef\u4ee5\u4f7f\u7528 <code>vTimerSetTimerID()</code> API \u51fd\u6570\u66f4\u65b0 ID\uff0c\u5e76\u4f7f\u7528 <code>pvTimerGetTimerID()</code> API \u51fd\u6570\u67e5\u8be2 ID\u3002</p> <p>\u4e0e\u5176\u4ed6\u8f6f\u4ef6\u5b9a\u65f6\u5668 API \u51fd\u6570\u4e0d\u540c\uff0c<code>vTimerSetTimerID()</code> \u548c <code>pvTimerGetTimerID()</code> \u76f4\u63a5\u8bbf\u95ee\u8f6f\u4ef6\u5b9a\u65f6\u5668\u2014\u2014\u5b83\u4eec\u4e0d\u4f1a\u5c06\u547d\u4ee4\u53d1\u9001\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u3002</p>"},{"location":"ch06-%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86/#661-vtimersettimerid-api","title":"6.6.1 vTimerSetTimerID() API \u51fd\u6570","text":"<pre><code>void vTimerSetTimerID( const TimerHandle_t xTimer, void *pvNewID );\n</code></pre> <p>Listing 6.8 The vTimerSetTimerID() API function prototype</p> <p>vTimerSetTimerID() \u53c2\u6570</p> <ul> <li><code>xTimer</code></li> </ul> <p>\u6b63\u5728\u66f4\u65b0\u5176\u65b0 ID \u503c\u7684\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u53e5\u67c4\u3002\u8be5\u53e5\u67c4\u662f\u901a\u8fc7\u7528\u4e8e\u521b\u5efa\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684 <code>xTimerCreate()</code> \u8c03\u7528\u8fd4\u56de\u7684\u3002</p> <ul> <li><code>pvNewID</code></li> </ul> <p>\u8981\u8bbe\u7f6e\u4e3a\u8f6f\u4ef6\u5b9a\u65f6\u5668 ID \u7684\u65b0\u503c\u3002</p>"},{"location":"ch06-%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86/#662-pvtimergettimerid-api","title":"6.6.2 pvTimerGetTimerID() API \u51fd\u6570","text":"<pre><code>void *pvTimerGetTimerID( const TimerHandle_t xTimer );\n</code></pre> <p>Listing 6.9 The pvTimerGetTimerID() API function prototype</p> <p>pvTimerGetTimerID() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>xTimer</code></li> </ul> <p>\u6b63\u5728\u67e5\u8be2\u7684\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u53e5\u67c4\u3002\u8be5\u53e5\u67c4\u662f\u901a\u8fc7\u7528\u4e8e\u521b\u5efa\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684 <code>xTimerCreate()</code> \u8c03\u7528\u8fd4\u56de\u7684\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u6b63\u5728\u67e5\u8be2\u7684\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684 ID\u3002</p>"},{"location":"ch06-%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86/#_2","title":"6 \u8f6f\u4ef6\u5b9a\u65f6\u5668\u7ba1\u7406","text":"<p>Example 6.2 Using the callback function parameter and the software timer ID</p> <p>\u540c\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u53ef\u4ee5\u5206\u914d\u7ed9\u591a\u4e2a\u8f6f\u4ef6\u5b9a\u65f6\u5668\u3002\u5f53\u8fd9\u6837\u505a\u65f6\uff0c\u56de\u8c03\u51fd\u6570\u53c2\u6570\u7528\u4e8e\u786e\u5b9a\u662f\u54ea\u4e2a\u8f6f\u4ef6\u5b9a\u65f6\u5668\u5230\u671f\u3002</p> <p>\u793a\u4f8b 6.1 \u4f7f\u7528\u4e86\u4e24\u4e2a\u5355\u72ec\u7684\u56de\u8c03\u51fd\u6570\uff1b\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u7528\u4e8e\u5355\u6b21\u5b9a\u65f6\u5668\uff0c\u53e6\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u7528\u4e8e\u81ea\u52a8\u91cd\u8f7d\u5b9a\u65f6\u5668\u3002\u793a\u4f8b 6.2 \u521b\u5efa\u4e86\u4e0e\u793a\u4f8b 6.1 \u521b\u5efa\u7684\u529f\u80fd\u76f8\u4f3c\u7684\u529f\u80fd\uff0c\u4f46\u5c06\u5355\u4e2a\u56de\u8c03\u51fd\u6570\u5206\u914d\u7ed9\u4e24\u4e2a\u8f6f\u4ef6\u5b9a\u65f6\u5668\u3002</p> <p><code>main()</code> \u51fd\u6570\u4e0e\u793a\u4f8b 6.1 \u4e2d\u7684 <code>main()</code> \u51fd\u6570\u51e0\u4e4e\u76f8\u540c\u3002\u552f\u4e00\u4e0d\u540c\u7684\u662f\u521b\u5efa\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u5730\u65b9\u3002\u6b64\u5dee\u5f02\u5728\u6e05\u5355 6.10 \u4e2d\u663e\u793a\uff0c\u5176\u4e2d <code>prvTimerCallback()</code> \u7528\u4f5c\u4e24\u4e2a\u5b9a\u65f6\u5668\u7684\u56de\u8c03\u51fd\u6570\u3002</p> <p></p> <pre><code>/* Create the one shot timer software timer, storing the handle in\n   xOneShotTimer. */\nxOneShotTimer = xTimerCreate( \"OneShot\",\n                              mainONE_SHOT_TIMER_PERIOD,\n                              pdFALSE,\n                              /* The timer's ID is initialized to NULL. */\n                              NULL,\n                              /* prvTimerCallback() is used by both timers. */\n                              prvTimerCallback );\n\n/* Create the auto-reload software timer, storing the handle in\n   xAutoReloadTimer */\nxAutoReloadTimer = xTimerCreate( \"AutoReload\",\n                                 mainAUTO_RELOAD_TIMER_PERIOD,\n                                 pdTRUE,\n                                 /* The timer's ID is initialized to NULL. */\n                                 NULL,\n                                 /* prvTimerCallback() is used by both timers. */\n                                 prvTimerCallback );\n</code></pre> <p>Listing 6.10 Creating the timers used in Example 6.2</p> <p><code>prvTimerCallback()</code> \u5728\u4efb\u4e00\u5b9a\u65f6\u5668\u5230\u671f\u65f6\u6267\u884c\u3002<code>prvTimerCallback()</code> \u7684\u5b9e\u73b0\u4f7f\u7528\u51fd\u6570\u7684\u53c2\u6570\u6765\u786e\u5b9a\u662f\u5355\u6b21\u5b9a\u65f6\u5668\u5230\u671f\u8fd8\u662f\u81ea\u52a8\u91cd\u8f7d\u5b9a\u65f6\u5668\u5230\u671f\u3002</p> <p><code>prvTimerCallback()</code> \u8fd8\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u8f6f\u4ef6\u5b9a\u65f6\u5668 ID \u4f5c\u4e3a\u7279\u5b9a\u4e8e\u5b9a\u65f6\u5668\u7684\u5b58\u50a8\uff1b\u6bcf\u4e2a\u8f6f\u4ef6\u5b9a\u65f6\u5668\u5728\u5176 ID \u4e2d\u4fdd\u5b58\u5176\u5230\u671f\u6b21\u6570\uff0c\u81ea\u52a8\u91cd\u8f7d\u5b9a\u65f6\u5668\u4f7f\u7528\u8be5\u8ba1\u6570\u5728\u7b2c\u4e94\u6b21\u6267\u884c\u65f6\u505c\u6b62\u81ea\u8eab\u3002</p> <p><code>prvTimerCallback()</code> \u7684\u5b9e\u73b0\u5982\u6e05\u5355 6.9 \u6240\u793a\u3002</p> <p></p> <pre><code>static void prvTimerCallback( TimerHandle_t xTimer )\n{\n    TickType_t xTimeNow;\n    uint32_t ulExecutionCount;\n\n    /* A count of the number of times this software timer has expired is\n       stored in the timer's ID. Obtain the ID, increment it, then save it as\n       the new ID value. The ID is a void pointer, so is cast to a uint32_t. */\n    ulExecutionCount = ( uint32_t ) pvTimerGetTimerID( xTimer );\n    ulExecutionCount++;\n    vTimerSetTimerID( xTimer, ( void * ) ulExecutionCount );\n\n    /* Obtain the current tick count. */\n    xTimeNow = xTaskGetTickCount();\n\n    /* The handle of the one-shot timer was stored in xOneShotTimer when the\n       timer was created. Compare the handle passed into this function with\n       xOneShotTimer to determine if it was the one-shot or auto-reload timer\n       that expired, then output a string to show the time at which the\n       callback was executed. */\n    if( xTimer == xOneShotTimer )\n    {\n        vPrintStringAndNumber( \"One-shot timer callback executing\", xTimeNow );\n    }\n    else\n    {\n        /* xTimer did not equal xOneShotTimer, so it must have been the\n           auto-reload timer that expired. */\n        vPrintStringAndNumber( \"Auto-reload timer callback executing\", xTimeNow);\n\n        if( ulExecutionCount == 5 )\n        {\n            /* Stop the auto-reload timer after it has executed 5 times. This\n               callback function executes in the context of the RTOS daemon\n               task so must not call any functions that might place the daemon\n               task into the Blocked state. Therefore a block time of 0 is\n               used. */\n            xTimerStop( xTimer, 0 );\n        }\n    }\n}\n</code></pre> <p>Listing 6.11 The timer callback function used in Example 6.2</p> <p>\u793a\u4f8b 6.2 \u6267\u884c\u65f6\u4ea7\u751f\u7684\u8f93\u51fa\u5982\u56fe 6.8 \u6240\u793a\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u81ea\u52a8\u91cd\u8f7d\u5b9a\u65f6\u5668\u4ec5\u6267\u884c\u4e86\u4e94\u6b21\u3002</p> <p></p> <p> Figure 6.8 The output produced when Example 6.2 is executed</p>"},{"location":"ch06-%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86/#67","title":"6.7 \u66f4\u6539\u5b9a\u65f6\u5668\u7684\u5468\u671f","text":"<p>\u6bcf\u4e2a\u5b98\u65b9 FreeRTOS \u79fb\u690d\u7248\u90fd\u63d0\u4f9b\u4e00\u4e2a\u6216\u591a\u4e2a\u793a\u4f8b\u9879\u76ee\u3002\u5927\u591a\u6570\u793a\u4f8b\u9879\u76ee\u90fd\u662f\u81ea\u68c0\u7684\uff0c\u4f7f\u7528 LED \u6765\u63d0\u4f9b\u9879\u76ee\u72b6\u6001\u7684\u53ef\u89c6\u53cd\u9988\uff1b\u5982\u679c\u81ea\u68c0\u59cb\u7ec8\u901a\u8fc7\uff0c\u5219 LED \u4ee5\u8f83\u6162\u7684\u901f\u5ea6\u95ea\u70c1\uff1b\u5982\u679c\u81ea\u68c0\u66fe\u7ecf\u5931\u8d25\uff0c\u5219 LED \u4ee5\u8f83\u5feb\u7684\u901f\u5ea6\u95ea\u70c1\u3002</p> <p>\u4e00\u4e9b\u793a\u4f8b\u9879\u76ee\u5728\u4efb\u52a1\u4e2d\u6267\u884c\u81ea\u68c0\uff0c\u5e76\u4f7f\u7528 <code>vTaskDelay()</code> \u51fd\u6570\u63a7\u5236 LED \u95ea\u70c1\u7684\u901f\u5ea6\u3002\u5176\u4ed6\u793a\u4f8b\u9879\u76ee\u5728\u8f6f\u4ef6\u5b9a\u65f6\u5668\u56de\u8c03\u51fd\u6570\u4e2d\u6267\u884c\u81ea\u68c0\uff0c\u5e76\u4f7f\u7528\u5b9a\u65f6\u5668\u7684\u5468\u671f\u6765\u63a7\u5236 LED \u95ea\u70c1\u7684\u901f\u5ea6\u3002</p>"},{"location":"ch06-%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86/#671-xtimerchangeperiod-api","title":"6.7.1 xTimerChangePeriod() API \u51fd\u6570","text":"<p>\u5b9a\u65f6\u5668\u7684\u5468\u671f\u901a\u8fc7 <code>xTimerChangePeriod()</code> \u51fd\u6570\u66f4\u6539\u3002</p> <p>\u5982\u679c\u4f7f\u7528 <code>xTimerChangePeriod()</code> \u66f4\u6539\u6b63\u5728\u8fd0\u884c\u7684\u5b9a\u65f6\u5668\u7684\u5468\u671f\uff0c\u5219\u5b9a\u65f6\u5668\u5c06\u4f7f\u7528\u65b0\u5468\u671f\u503c\u91cd\u65b0\u8ba1\u7b97\u5230\u671f\u65f6\u95f4\u3002\u91cd\u65b0\u8ba1\u7b97\u7684\u5230\u671f\u65f6\u95f4\u662f\u76f8\u5bf9\u4e8e\u8c03\u7528 <code>xTimerChangePeriod()</code> \u7684\u65f6\u95f4\uff0c\u800c\u4e0d\u662f\u76f8\u5bf9\u4e8e\u5b9a\u65f6\u5668\u6700\u521d\u542f\u52a8\u7684\u65f6\u95f4\u3002</p> <p>\u5982\u679c\u4f7f\u7528 <code>xTimerChangePeriod()</code> \u66f4\u6539\u5904\u4e8e\u4f11\u7720\u72b6\u6001\u7684\u5b9a\u65f6\u5668\u7684\u5468\u671f\uff08\u5373\u672a\u8fd0\u884c\u7684\u5b9a\u65f6\u5668\uff09\uff0c\u5219\u5b9a\u65f6\u5668\u5c06\u8ba1\u7b97\u4e00\u4e2a\u5230\u671f\u65f6\u95f4\uff0c\u5e76\u8f6c\u6362\u4e3a\u8fd0\u884c\u72b6\u6001\uff08\u5b9a\u65f6\u5668\u5c06\u5f00\u59cb\u8fd0\u884c\uff09\u3002</p> <p>\u6ce8\u610f\uff1a\u5207\u52ff\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u8c03\u7528 <code>xTimerChangePeriod()</code>\u3002\u5e94\u4f7f\u7528\u4e2d\u65ad\u5b89\u5168\u7248\u672c <code>xTimerChangePeriodFromISR()</code> \u4ee3\u66ff\u3002</p> <p></p> <pre><code>BaseType_t xTimerChangePeriod( TimerHandle_t xTimer,\n                               TickType_t xNewPeriod,\n                               TickType_t xTicksToWait );\n</code></pre> <p>Listing 6.12 The xTimerChangePeriod() API function prototype</p> <p>xTimerChangePeriod() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>xTimer</code></li> </ul> <p>\u6b63\u5728\u66f4\u65b0\u5176\u65b0\u5468\u671f\u503c\u7684\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u53e5\u67c4\u3002\u8be5\u53e5\u67c4\u662f\u901a\u8fc7\u7528\u4e8e\u521b\u5efa\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684 <code>xTimerCreate()</code> \u8c03\u7528\u8fd4\u56de\u7684\u3002</p> <ul> <li><code>xTimerPeriodInTicks</code></li> </ul> <p>\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u65b0\u5468\u671f\uff0c\u4ee5\u6ef4\u7b54\u4e3a\u5355\u4f4d\u3002\u53ef\u4ee5\u4f7f\u7528 <code>pdMS_TO_TICKS()</code> \u5b8f\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5\u6ef4\u7b54\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u3002</p> <ul> <li><code>xTicksToWait</code></li> </ul> <p><code>xTimerChangePeriod()</code> \u4f7f\u7528\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u5c06\u201c\u66f4\u6539\u5468\u671f\u201d\u547d\u4ee4\u53d1\u9001\u5230\u5b88\u62a4\u4efb\u52a1\u3002<code>xTicksToWait</code> \u6307\u5b9a\u8c03\u7528\u4efb\u52a1\u5728\u963b\u585e\u72b6\u6001\u4e2d\u7b49\u5f85\u7684\u6700\u957f\u65f6\u95f4\uff0c\u4ee5\u7b49\u5f85\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4e2d\u6709\u53ef\u7528\u7a7a\u95f4\uff08\u5982\u679c\u961f\u5217\u5df2\u6ee1\uff09\u3002</p> <p>\u5982\u679c\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u5df2\u6ee1\u5e76\u4e14 <code>xTicksToWait</code> \u8bbe\u7f6e\u4e3a 0\uff0c\u5219 <code>xTimerChangePeriod()</code> \u5c06\u7acb\u5373\u8fd4\u56de\u3002</p> <p>\u5b8f <code>pdMS_TO_TICKS()</code> \u53ef\u7528\u4e8e\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5\u6ef4\u7b54\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u3002</p> <p>\u5982\u679c\u5728 <code>FreeRTOSConfig.h</code> \u4e2d\u5c06 <code>INCLUDE_vTaskSuspend</code> \u8bbe\u7f6e\u4e3a 1\uff0c\u5219\u5c06 <code>xTicksToWait</code> \u8bbe\u7f6e\u4e3a <code>portMAX_DELAY</code> \u5c06\u5bfc\u81f4\u8c03\u7528\u4efb\u52a1\u65e0\u9650\u671f\uff08\u6ca1\u6709\u8d85\u65f6\uff09\u4fdd\u6301\u5728\u963b\u585e\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4e2d\u6709\u53ef\u7528\u7a7a\u95f4\u3002</p> <p>\u5982\u679c\u5728\u8c03\u5ea6\u7a0b\u5e8f\u542f\u52a8\u4e4b\u524d\u8c03\u7528 <code>xTimerChangePeriod()</code>\uff0c\u5219 <code>xTicksToWait</code> \u7684\u503c\u5c06\u88ab\u5ffd\u7565\uff0c<code>xTimerChangePeriod()</code> \u7684\u884c\u4e3a\u5c31\u50cf <code>xTicksToWait</code> \u88ab\u8bbe\u7f6e\u4e3a\u96f6\u4e00\u6837\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u53ef\u80fd\u7684\u8fd4\u56de\u503c\u6709\u4e24\u4e2a\uff1a</p> <ul> <li> <p><code>pdPASS</code></p> <p>\u4ec5\u5f53\u6570\u636e\u6210\u529f\u53d1\u9001\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u65f6\uff0c\u624d\u4f1a\u8fd4\u56de <code>pdPASS</code>\u3002</p> <p>\u5982\u679c\u6307\u5b9a\u4e86\u5757\u65f6\u95f4\uff08<code>xTicksToWait</code> \u4e0d\u4e3a\u96f6\uff09\uff0c\u5219\u8c03\u7528\u4efb\u52a1\u53ef\u80fd\u4f1a\u88ab\u7f6e\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4e2d\u6709\u53ef\u7528\u7a7a\u95f4\uff0c\u7136\u540e\u8be5\u51fd\u6570\u8fd4\u56de\uff0c\u4f46\u5728\u5757\u65f6\u95f4\u5230\u671f\u4e4b\u524d\uff0c\u6570\u636e\u5df2\u6210\u529f\u5199\u5165\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u3002</p> </li> <li> <p><code>pdFAIL</code></p> <p>\u5982\u679c\u201c\u66f4\u6539\u5468\u671f\u201d\u547d\u4ee4\u65e0\u6cd5\u5199\u5165\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\uff08\u56e0\u4e3a\u961f\u5217\u5df2\u6ee1\uff09\uff0c\u5219\u8fd4\u56de <code>pdFAIL</code>\u3002</p> <p>\u5982\u679c\u6307\u5b9a\u4e86\u5757\u65f6\u95f4\uff08<code>xTicksToWait</code> \u4e0d\u4e3a\u96f6\uff09\uff0c\u5219\u8c03\u7528\u4efb\u52a1\u5c06\u88ab\u7f6e\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u5b88\u62a4\u4efb\u52a1\u5728\u961f\u5217\u4e2d\u817e\u51fa\u7a7a\u95f4\uff0c\u4f46\u5728\u5757\u65f6\u95f4\u5230\u671f\u4e4b\u524d\u672a\u80fd\u6210\u529f\u5199\u5165\u6570\u636e\u3002</p> </li> </ul> <p>\u6e05\u5355 6.13 \u663e\u793a\u4e86\u5305\u542b\u81ea\u68c0\u529f\u80fd\u7684 FreeRTOS \u793a\u4f8b\u5982\u4f55\u4f7f\u7528 <code>xTimerChangePeriod()</code> \u6765\u589e\u52a0 LED \u95ea\u70c1\u7684\u9891\u7387\uff0c\u5982\u679c\u68c0\u6d4b\u5230\u81ea\u68c0\u5931\u8d25\uff0c\u5219\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\u6267\u884c\u81ea\u68c0\u7684\u8f6f\u4ef6\u5b9a\u65f6\u5668\u79f0\u4e3a\u201c\u68c0\u67e5\u5b9a\u65f6\u5668\u201d\u3002</p> <p></p> <pre><code>/* The check timer is created with a period of 3000 milliseconds, resulting\n   in the LED toggling every 3 seconds. If the self-checking functionality\n   detects an unexpected state, then the check timer's period is changed to\n   just 200 milliseconds, resulting in a much faster toggle rate. */\nconst TickType_t xHealthyTimerPeriod = pdMS_TO_TICKS( 3000 );\nconst TickType_t xErrorTimerPeriod = pdMS_TO_TICKS( 200 );\n\n/* The callback function used by the check timer. */\nstatic void prvCheckTimerCallbackFunction( TimerHandle_t xTimer )\n{\n    static BaseType_t xErrorDetected = pdFALSE;\n\n    if( xErrorDetected == pdFALSE )\n    {\n        /* No errors have yet been detected. Run the self-checking function\n           again. The function asks each task created by the example to report\n           its own status, and also checks that all the tasks are actually\n           still running (and so able to report their status correctly). */\n        if( CheckTasksAreRunningWithoutError() == pdFAIL )\n        {\n            /* One or more tasks reported an unexpected status. An error might\n               have occurred. Reduce the check timer's period to increase the\n               rate at which this callback function executes, and in so doing\n               also increase the rate at which the LED is toggled. This\n               callback function is executing in the context of the RTOS daemon\n               task, so a block time of 0 is used to ensure the Daemon task\n               never enters the Blocked state. */\n            xTimerChangePeriod(\n                  xTimer,            /* The timer being updated */\n                  xErrorTimerPeriod, /* The new period for the timer */\n                  0 );               /* Do not block when sending this command */\n\n            /* Latch that an error has already been detected. */\n            xErrorDetected = pdTRUE;\n        }\n    }\n\n    /* Toggle the LED. The rate at which the LED toggles will depend on how\n       often this function is called, which is determined by the period of the\n       check timer. The timer's period will have been reduced from 3000ms to\n       just 200ms if CheckTasksAreRunningWithoutError() has ever returned\n       pdFAIL. */\n    ToggleLED();\n}\n</code></pre> <p>Listing 6.13 Using xTimerChangePeriod()</p>"},{"location":"ch06-%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86/#68","title":"6.8 \u91cd\u7f6e\u8f6f\u4ef6\u5b9a\u65f6\u5668","text":"<p>\u91cd\u7f6e\u8f6f\u4ef6\u5b9a\u65f6\u5668\u662f\u6307\u91cd\u65b0\u542f\u52a8\u5b9a\u65f6\u5668\uff1b\u5b9a\u65f6\u5668\u7684\u5230\u671f\u65f6\u95f4\u91cd\u65b0\u8ba1\u7b97\u4e3a\u76f8\u5bf9\u4e8e\u91cd\u7f6e\u5b9a\u65f6\u5668\u7684\u65f6\u95f4\uff0c\u800c\u4e0d\u662f\u76f8\u5bf9\u4e8e\u5b9a\u65f6\u5668\u6700\u521d\u542f\u52a8\u7684\u65f6\u95f4\u3002\u8fd9\u5728\u56fe 6.9 \u4e2d\u5f97\u5230\u4e86\u8bc1\u660e\uff0c\u8be5\u56fe\u663e\u793a\u4e86\u4e00\u4e2a\u5468\u671f\u4e3a 6 \u7684\u5b9a\u65f6\u5668\u88ab\u542f\u52a8\u3001\u7136\u540e\u91cd\u7f6e\u4e24\u6b21\uff0c\u6700\u540e\u5230\u671f\u5e76\u6267\u884c\u5176\u56de\u8c03\u51fd\u6570\u3002</p> <p></p> <p> Figure 6.9 Starting and resetting a software timer that has a period of 6 ticks</p> <p>\u53c2\u8003\u56fe 6.9\uff1a</p> <ul> <li> <p>\u5b9a\u65f6\u5668 1\u5728\u65f6\u95f4 t1\u542f\u52a8\u3002\u5b83\u7684\u5468\u671f\u4e3a 6\uff0c\u56e0\u6b64\u5b83\u7684\u56de\u8c03\u51fd\u6570\u6700\u521d\u8ba1\u7b97\u7684\u6267\u884c\u65f6\u95f4\u4e3a t7\uff0c\u5373\u5728\u542f\u52a8\u540e 6 \u4e2a\u6ef4\u7b54\u3002</p> </li> <li> <p>\u5b9a\u65f6\u5668 1 \u5728\u5230\u8fbe\u65f6\u95f4 t7 \u4e4b\u524d\u88ab\u91cd\u7f6e\uff0c\u56e0\u6b64\u5728\u5230\u671f\u5e76\u6267\u884c\u56de\u8c03\u51fd\u6570\u4e4b\u524d\u3002\u5b9a\u65f6\u5668 1 \u5728\u65f6\u95f4 t5 \u88ab\u91cd\u7f6e\uff0c\u56e0\u6b64\u5b83\u7684\u56de\u8c03\u51fd\u6570\u6267\u884c\u65f6\u95f4\u91cd\u65b0\u8ba1\u7b97\u4e3a t11\uff0c\u5373\u5728\u91cd\u7f6e\u540e 6 \u4e2a\u6ef4\u7b54\u3002</p> </li> <li> <p>\u5b9a\u65f6\u5668 1 \u5728\u5230\u8fbe\u65f6\u95f4 t11 \u4e4b\u524d\u518d\u6b21\u88ab\u91cd\u7f6e\uff0c\u56e0\u6b64\u518d\u6b21\u5728\u5230\u671f\u5e76\u6267\u884c\u56de\u8c03\u51fd\u6570\u4e4b\u524d\u3002\u5b9a\u65f6\u5668 1 \u5728\u65f6\u95f4 t9 \u88ab\u91cd\u7f6e\uff0c\u56e0\u6b64\u5b83\u7684\u56de\u8c03\u51fd\u6570\u6267\u884c\u65f6\u95f4\u91cd\u65b0\u8ba1\u7b97\u4e3a t15\uff0c\u5373\u5728\u6700\u540e\u4e00\u6b21\u91cd\u7f6e\u540e 6 \u4e2a\u6ef4\u7b54\u3002</p> </li> <li> <p>\u5b9a\u65f6\u5668 1 \u6ca1\u6709\u518d\u6b21\u88ab\u91cd\u7f6e\uff0c\u56e0\u6b64\u5b83\u5728\u65f6\u95f4 t15 \u5230\u671f\uff0c\u5e76\u4e14\u76f8\u5e94\u5730\u6267\u884c\u5176\u56de\u8c03\u51fd\u6570\u3002</p> </li> </ul>"},{"location":"ch06-%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86/#681-xtimerreset-api","title":"6.8.1 xTimerReset() API \u51fd\u6570","text":"<p>\u5b9a\u65f6\u5668\u901a\u8fc7 <code>xTimerReset()</code> API \u51fd\u6570\u91cd\u7f6e\u3002</p> <p><code>xTimerReset()</code> \u4e5f\u53ef\u4ee5\u7528\u4e8e\u542f\u52a8\u5904\u4e8e\u4f11\u7720\u72b6\u6001\u7684\u5b9a\u65f6\u5668\u3002</p> <p>\u6ce8\u610f\uff1a\u5207\u52ff\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u8c03\u7528 <code>xTimerReset()</code>\u3002\u5e94\u4f7f\u7528\u4e2d\u65ad\u5b89\u5168\u7248\u672c <code>xTimerResetFromISR()</code> \u4ee3\u66ff\u3002</p> <p></p> <pre><code>BaseType_t xTimerReset( TimerHandle_t xTimer, TickType_t xTicksToWait );\n</code></pre> <p>Listing 6.14 The xTimerReset() API function prototype</p> <p>xTimerReset() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>xTimer</code></li> </ul> <p>\u6b63\u5728\u91cd\u7f6e\u6216\u542f\u52a8\u7684\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u53e5\u67c4\u3002\u8be5\u53e5\u67c4\u662f\u901a\u8fc7\u7528\u4e8e\u521b\u5efa\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684 <code>xTimerCreate()</code> \u8c03\u7528\u8fd4\u56de\u7684\u3002</p> <ul> <li><code>xTicksToWait</code></li> </ul> <p><code>xTimerReset()</code> \u4f7f\u7528\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u5c06\u201c\u91cd\u7f6e\u201d\u547d\u4ee4\u53d1\u9001\u5230\u5b88\u62a4\u4efb\u52a1\u3002<code>xTicksToWait</code> \u6307\u5b9a\u8c03\u7528\u4efb\u52a1\u5728\u963b\u585e\u72b6\u6001\u4e2d\u7b49\u5f85\u7684\u6700\u957f\u65f6\u95f4\uff0c\u4ee5\u7b49\u5f85\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4e2d\u6709\u53ef\u7528\u7a7a\u95f4\uff08\u5982\u679c\u961f\u5217\u5df2\u6ee1\uff09\u3002</p> <p>\u5982\u679c\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u5df2\u6ee1\u5e76\u4e14 <code>xTicksToWait</code> \u8bbe\u7f6e\u4e3a 0\uff0c\u5219 <code>xTimerReset()</code> \u5c06\u7acb\u5373\u8fd4\u56de\u3002</p> <p>\u5982\u679c\u5728 <code>FreeRTOSConfig.h</code> \u4e2d\u5c06 <code>INCLUDE_vTaskSuspend</code> \u8bbe\u7f6e\u4e3a 1\uff0c\u5219\u5c06 <code>xTicksToWait</code> \u8bbe\u7f6e\u4e3a <code>portMAX_DELAY</code> \u5c06\u5bfc\u81f4\u8c03\u7528\u4efb\u52a1\u65e0\u9650\u671f\uff08\u6ca1\u6709\u8d85\u65f6\uff09\u4fdd\u6301\u5728\u963b\u585e\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4e2d\u6709\u53ef\u7528\u7a7a\u95f4\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u53ef\u80fd\u7684\u8fd4\u56de\u503c\u6709\u4e24\u4e2a\uff1a</p> <ul> <li> <p><code>pdPASS</code></p> <p>\u4ec5\u5f53\u6570\u636e\u6210\u529f\u53d1\u9001\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u65f6\uff0c\u624d\u4f1a\u8fd4\u56de <code>pdPASS</code>\u3002</p> <p>\u5982\u679c\u6307\u5b9a\u4e86\u5757\u65f6\u95f4\uff08<code>xTicksToWait</code> \u4e0d\u4e3a\u96f6\uff09\uff0c\u5219\u8c03\u7528\u4efb\u52a1\u53ef\u80fd\u4f1a\u88ab\u7f6e\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4e2d\u6709\u53ef\u7528\u7a7a\u95f4\uff0c\u7136\u540e\u8be5\u51fd\u6570\u8fd4\u56de\uff0c\u4f46\u5728\u5757\u65f6\u95f4\u5230\u671f\u4e4b\u524d\uff0c\u6570\u636e\u5df2\u6210\u529f\u5199\u5165\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u3002</p> </li> <li> <p><code>pdFAIL</code></p> <p>\u5982\u679c\u201c\u91cd\u7f6e\u201d\u547d\u4ee4\u65e0\u6cd5\u5199\u5165\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\uff08\u56e0\u4e3a\u961f\u5217\u5df2\u6ee1\uff09\uff0c\u5219\u8fd4\u56de <code>pdFAIL</code>\u3002</p> <p>\u5982\u679c\u6307\u5b9a\u4e86\u5757\u65f6\u95f4\uff08<code>xTicksToWait</code> \u4e0d\u4e3a\u96f6\uff09\uff0c\u5219\u8c03\u7528\u4efb\u52a1\u5c06\u88ab\u7f6e\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u5b88\u62a4\u4efb\u52a1\u5728\u961f\u5217\u4e2d\u817e\u51fa\u7a7a\u95f4\uff0c\u4f46\u5728\u5757\u65f6\u95f4\u5230\u671f\u4e4b\u524d\u672a\u80fd\u6210\u529f\u5199\u5165\u6570\u636e\u3002</p> </li> </ul>"},{"location":"ch06-%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8%E7%AE%A1%E7%90%86/#_3","title":"6 \u8f6f\u4ef6\u5b9a\u65f6\u5668\u7ba1\u7406","text":"<p>Example 6.3 Resetting a software timer</p> <p>\u6b64\u793a\u4f8b\u6a21\u62df\u4e86\u624b\u673a\u80cc\u5149\u7684\u884c\u4e3a\u3002\u80cc\u5149\uff1a</p> <ul> <li> <p>\u5728\u6309\u4e0b\u952e\u65f6\u6253\u5f00\u3002</p> </li> <li> <p>\u53ea\u8981\u5728\u4e00\u5b9a\u65f6\u95f4\u5185\u7ee7\u7eed\u6309\u4e0b\u5176\u4ed6\u952e\uff0c\u80cc\u5149\u5c31\u4fdd\u6301\u5f00\u542f\u3002</p> </li> <li> <p>\u5982\u679c\u5728\u4e00\u5b9a\u65f6\u95f4\u5185\u6ca1\u6709\u6309\u4e0b\u4efb\u4f55\u952e\uff0c\u80cc\u5149\u4f1a\u81ea\u52a8\u5173\u95ed\u3002</p> </li> </ul> <p>\u4e00\u4e2a\u5355\u6b21\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7528\u4e8e\u5b9e\u73b0\u6b64\u884c\u4e3a\uff1a</p> <ul> <li> <p>\u5f53\u6309\u4e0b\u4e00\u4e2a\u952e\u65f6\uff0c\u80cc\u5149\u88ab\u6253\u5f00\uff0c\u5e76\u5728\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u56de\u8c03\u51fd\u6570\u4e2d\u5173\u95ed\u3002</p> </li> <li> <p>\u6bcf\u6b21\u6309\u4e0b\u952e\u65f6\uff0c\u8f6f\u4ef6\u5b9a\u65f6\u5668\u88ab\u91cd\u7f6e\u3002</p> </li> <li> <p>\u4e3a\u4e86\u9632\u6b62\u80cc\u5149\u5173\u95ed\uff0c\u5fc5\u987b\u5728\u5b9a\u65f6\u5668\u5230\u671f\u4e4b\u524d\u6309\u4e0b\u952e\uff1b\u5982\u679c\u5728\u5b9a\u65f6\u5668\u5230\u671f\u4e4b\u524d\u672a\u901a\u8fc7\u6309\u952e\u91cd\u7f6e\u5b9a\u65f6\u5668\uff0c\u5219\u5b9a\u65f6\u5668\u7684\u56de\u8c03\u51fd\u6570\u5c06\u6267\u884c\uff0c\u80cc\u5149\u5c06\u5173\u95ed\u3002</p> </li> </ul> <p><code>xSimulatedBacklightOn</code> \u53d8\u91cf\u4fdd\u5b58\u80cc\u5149\u72b6\u6001\u3002<code>xSimulatedBacklightOn</code> \u88ab\u8bbe\u7f6e\u4e3a <code>pdTRUE</code> \u4ee5\u6307\u793a\u80cc\u5149\u5f00\u542f\uff0c\u8bbe\u7f6e\u4e3a <code>pdFALSE</code> \u4ee5\u6307\u793a\u80cc\u5149\u5173\u95ed\u3002</p> <p>\u5355\u6b21\u5b9a\u65f6\u5668\u7684\u56de\u8c03\u51fd\u6570\u5982\u6e05\u5355 6.15 \u6240\u793a\u3002</p> <p></p> <pre><code>static void prvBacklightTimerCallback( TimerHandle_t xTimer )\n{\n    TickType_t xTimeNow = xTaskGetTickCount();\n\n    /* The backlight timer expired, turn the backlight off. */\n    xSimulatedBacklightOn = pdFALSE;\n\n    /* Print the time at which the backlight was turned off. */\n    vPrintStringAndNumber(\n            \"Timer expired, turning backlight OFF at time\\t\\t\", xTimeNow );\n}\n</code></pre> <p>Listing 6.15 The callback function for the one-shot timer used in Example 6.3</p> <p>\u5f53\u6309\u4e0b\u952e\u65f6\uff0c\u793a\u4f8b 6.3 \u521b\u5efa\u4e00\u4e2a\u4efb\u52a1\u6765\u8f6e\u8be2\u952e\u76d8[^11]\u3002\u8be5\u4efb\u52a1\u5982\u6e05\u5355 6.16 \u6240\u793a\uff0c\u4f46\u7531\u4e8e\u4ee5\u4e0b\u539f\u56e0\uff0c\u6e05\u5355 6.16 \u5e76\u4e0d\u4ee3\u8868\u6700\u4f73\u8bbe\u8ba1\u3002</p> <p>[^11]: \u6253\u5370\u5230 Windows \u63a7\u5236\u53f0\u548c\u4ece Windows \u63a7\u5236\u53f0\u8bfb\u53d6\u952e\u90fd\u4f1a\u5bfc\u81f4 Windows \u7cfb\u7edf\u8c03\u7528\u7684\u6267\u884c\u3002Windows \u7cfb\u7edf\u8c03\u7528\uff08\u5305\u62ec\u4f7f\u7528 Windows \u63a7\u5236\u53f0\u3001\u78c1\u76d8\u6216 TCP/IP \u5806\u6808\uff09\u53ef\u80fd\u4f1a\u5bf9 FreeRTOS Windows \u79fb\u690d\u7248\u7684\u884c\u4e3a\u4ea7\u751f\u4e0d\u5229\u5f71\u54cd\uff0c\u56e0\u6b64\u901a\u5e38\u5e94\u907f\u514d\u4f7f\u7528\u3002</p> <p>\u4f7f\u7528 FreeRTOS \u5141\u8bb8\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\u3002\u4e8b\u4ef6\u9a71\u52a8\u8bbe\u8ba1\u975e\u5e38\u6709\u6548\u5730\u5229\u7528\u5904\u7406\u65f6\u95f4\uff0c\u56e0\u4e3a\u53ea\u6709\u5728\u53d1\u751f\u4e8b\u4ef6\u65f6\u624d\u4f7f\u7528\u5904\u7406\u65f6\u95f4\uff0c\u800c\u4e0d\u4f1a\u6d6a\u8d39\u65f6\u95f4\u8f6e\u8be2\u672a\u53d1\u751f\u4e8b\u4ef6\u3002\u5982\u679c\u6e05\u5355 6.16 \u662f\u4e00\u4e2a\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\uff0c\u5219\u4f1a\u4f7f\u7528 <code>xTimerResetFromISR()</code> \u4ee3\u66ff <code>xTimerReset()</code>\u3002</p> <p></p> <pre><code>static void vKeyHitTask( void *pvParameters )\n{\n    const TickType_t xShortDelay = pdMS_TO_TICKS( 50 );\n    TickType_t xTimeNow;\n\n    vPrintString( \"Press a key to turn the backlight on.\\r\\n\" );\n\n    /* Ideally an application would be event driven, and use an interrupt to\n       process key presses. It is not practical to use keyboard interrupts\n       when using the FreeRTOS Windows port, so this task is used to poll for\n       a key press. */\n    for( ;; )\n    {\n        /* Has a key been pressed? */\n        if( _kbhit() != 0 )\n        {\n            /* A key has been pressed. Record the time. */\n            xTimeNow = xTaskGetTickCount();\n\n            if( xSimulatedBacklightOn == pdFALSE )\n            {\n\n                /* The backlight was off, so turn it on and print the time at\n                   which it was turned on. */\n                xSimulatedBacklightOn = pdTRUE;\n                vPrintStringAndNumber(\n                    \"Key pressed, turning backlight ON at time\\t\\t\",\n                    xTimeNow );\n            }\n            else\n            {\n                /* The backlight was already on, so print a message to say the\n                   timer is about to be reset and the time at which it was\n                   reset. */\n                vPrintStringAndNumber(\n                    \"Key pressed, resetting software timer at time\\t\\t\",\n                    xTimeNow );\n            }\n\n            /* Reset the software timer. If the backlight was previously off,\n               then this call will start the timer. If the backlight was\n               previously on, then this call will restart the timer. A real\n               application may read key presses in an interrupt. If this\n               function was an interrupt service routine then\n               xTimerResetFromISR() must be used instead of xTimerReset(). */\n            xTimerReset( xBacklightTimer, xShortDelay );\n\n            /* Read and discard the key that was pressed \u2013 it is not required\n               by this simple example. */\n            ( void ) _getch();\n        }\n    }\n}\n</code></pre> <p>Listing 6.16 The task used to reset the software timer in Example 6.3</p> <p>\u6267\u884c\u793a\u4f8b 6.3 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa\u5982\u56fe 6.10 \u6240\u793a\u3002\u5173\u4e8e\u56fe 6.10\uff1a</p> <ul> <li> <p>\u7b2c\u4e00\u4e2a\u6309\u952e\u53d1\u751f\u5728\u6ef4\u7b54\u8ba1\u6570\u4e3a 812 \u65f6\u3002\u6b64\u65f6\uff0c\u80cc\u5149\u88ab\u6253\u5f00\uff0c\u5355\u6b21\u5b9a\u65f6\u5668\u88ab\u542f\u52a8\u3002</p> </li> <li> <p>\u5728\u6ef4\u7b54\u8ba1\u6570\u4e3a 1813\u30013114\u30014015 \u548c 5016 \u65f6\u53d1\u751f\u4e86\u8fdb\u4e00\u6b65\u7684\u6309\u952e\u3002\u8fd9\u4e9b\u6309\u952e\u5bfc\u81f4\u5b9a\u65f6\u5668\u5728\u5230\u671f\u4e4b\u524d\u88ab\u91cd\u7f6e\u3002</p> </li> <li> <p>\u5b9a\u65f6\u5668\u5728\u6ef4\u7b54\u8ba1\u6570\u4e3a 10016 \u65f6\u5230\u671f\u3002\u6b64\u65f6\uff0c\u80cc\u5149\u88ab\u5173\u95ed\u3002</p> </li> </ul> <p></p> <p> Figure 6.10 The output produced when Example 6.3 is executed</p> <p>\u53ef\u4ee5\u5728\u56fe 6.10 \u4e2d\u770b\u5230\uff0c\u5b9a\u65f6\u5668\u7684\u5468\u671f\u4e3a 5000 \u6ef4\u7b54\uff1b\u5728\u4e0a\u6b21\u6309\u952e\u91cd\u7f6e\u5b9a\u65f6\u5668\u540e\uff0c\u80cc\u5149\u6b63\u597d\u5728 5000 \u6ef4\u7b54\u540e\u5173\u95ed\u3002</p>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/","title":"7 \u4e2d\u65ad\u7ba1\u7406","text":""},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#71","title":"7.1 \u7b80\u4ecb","text":""},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#711","title":"7.1.1 \u4e8b\u4ef6","text":"<p>\u5d4c\u5165\u5f0f\u5b9e\u65f6\u7cfb\u7edf\u5fc5\u987b\u5bf9\u6765\u81ea\u73af\u5883\u7684\u4e8b\u4ef6\u91c7\u53d6\u884c\u52a8\u3002\u4f8b\u5982\uff0c\u5230\u8fbe\u4ee5\u592a\u7f51\u5916\u8bbe\u7684\u4e00\u4e2a\u6570\u636e\u5305\uff08\u4e8b\u4ef6\uff09\u53ef\u80fd\u9700\u8981\u5c06\u5176\u4f20\u9012\u5230 TCP/IP \u534f\u8bae\u6808\u8fdb\u884c\u5904\u7406\uff08\u52a8\u4f5c\uff09\u3002\u590d\u6742\u7684\u7cfb\u7edf\u9700\u8981\u5904\u7406\u6765\u81ea\u591a\u4e2a\u6e90\u7684\u4e8b\u4ef6\uff0c\u8fd9\u4e9b\u4e8b\u4ef6\u5177\u6709\u4e0d\u540c\u7684\u5904\u7406\u5f00\u9500\u548c\u54cd\u5e94\u65f6\u95f4\u8981\u6c42\u3002\u5728\u6bcf\u79cd\u60c5\u51b5\u4e0b\uff0c\u90fd\u9700\u8981\u5224\u65ad\u6700\u4f73\u7684\u4e8b\u4ef6\u5904\u7406\u5b9e\u73b0\u7b56\u7565\uff1a</p> <ul> <li> <p>\u5982\u4f55\u68c0\u6d4b\u4e8b\u4ef6\uff1f\u901a\u5e38\u4f7f\u7528\u4e2d\u65ad\uff0c\u4f46\u4e5f\u53ef\u4ee5\u8f6e\u8be2\u8f93\u5165\u3002</p> </li> <li> <p>\u4f7f\u7528\u4e2d\u65ad\u65f6\uff0c\u5728\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\uff08ISR\uff09\u4e2d\u5e94\u6267\u884c\u591a\u5c11\u5904\u7406\uff0c\u5728\u5916\u90e8\u5e94\u6267\u884c\u591a\u5c11\uff1f\u901a\u5e38\u5e0c\u671b\u5c06\u6bcf\u4e2a ISR \u4fdd\u6301\u5c3d\u53ef\u80fd\u77ed\u3002</p> </li> <li> <p>\u5982\u4f55\u5c06\u4e8b\u4ef6\u4f20\u9012\u5230\u4e3b\u4ee3\u7801\uff08\u975e ISR\uff09\uff0c\u4ee5\u53ca\u5982\u4f55\u6784\u5efa\u6b64\u4ee3\u7801\u4ee5\u6700\u597d\u5730\u9002\u5e94\u6f5c\u5728\u7684\u5f02\u6b65\u4e8b\u4ef6\uff1f</p> </li> </ul> <p>FreeRTOS \u4e0d\u5bf9\u5e94\u7528\u8bbe\u8ba1\u8005\u65bd\u52a0\u4efb\u4f55\u7279\u5b9a\u7684\u4e8b\u4ef6\u5904\u7406\u7b56\u7565\uff0c\u4f46\u63d0\u4f9b\u4e86\u5141\u8bb8\u5b9e\u73b0\u6240\u9009\u7b56\u7565\u7684\u529f\u80fd\u3002</p> <p>\u9700\u8981\u533a\u5206\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u548c\u4e2d\u65ad\u7684\u4f18\u5148\u7ea7\uff1a</p> <ul> <li> <p>\u4efb\u52a1\u662f\u4e0e\u8fd0\u884c FreeRTOS \u7684\u786c\u4ef6\u65e0\u5173\u7684\u8f6f\u4ef6\u7279\u6027\u3002\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u7531\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u8005\u5728\u8f6f\u4ef6\u4e2d\u5206\u914d\uff0c\u8c03\u5ea6\u5668\u51b3\u5b9a\u54ea\u4e2a\u4efb\u52a1\u5c06\u8fdb\u5165\u8fd0\u884c\u72b6\u6001\u3002</p> </li> <li> <p>\u5c3d\u7ba1\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u662f\u7528\u8f6f\u4ef6\u7f16\u5199\u7684\uff0c\u4f46\u5b83\u662f\u4e00\u4e2a\u786c\u4ef6\u7279\u6027\uff0c\u56e0\u4e3a\u786c\u4ef6\u63a7\u5236\u54ea\u4e2a\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u5c06\u8fd0\u884c\u4ee5\u53ca\u4f55\u65f6\u8fd0\u884c\u3002\u4efb\u52a1\u53ea\u80fd\u5728\u6ca1\u6709 ISR \u8fd0\u884c\u65f6\u8fd0\u884c\uff0c\u56e0\u6b64\u6700\u4f4e\u4f18\u5148\u7ea7\u7684\u4e2d\u65ad\u4f1a\u4e2d\u65ad\u6700\u9ad8\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\uff0c\u800c\u4efb\u52a1\u65e0\u6cd5\u62a2\u5360 ISR\u3002</p> </li> </ul> <p>\u6240\u6709 FreeRTOS \u8fd0\u884c\u7684\u4f53\u7cfb\u7ed3\u6784\u90fd\u80fd\u591f\u5904\u7406\u6765\u81ea\u786c\u4ef6\u7684\u4e2d\u65ad\uff0c\u4f46\u4e0e\u4e2d\u65ad\u5165\u53e3\u548c\u4e2d\u65ad\u4f18\u5148\u7ea7\u5206\u914d\u76f8\u5173\u7684\u7ec6\u8282\u5728\u4e0d\u540c\u7684\u4f53\u7cfb\u7ed3\u6784\u4e4b\u95f4\u6709\u6240\u4e0d\u540c\u3002</p>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#712","title":"7.1.2 \u8303\u56f4","text":"<p>\u672c\u7ae0\u6db5\u76d6\uff1a</p> <ul> <li>\u54ea\u4e9b FreeRTOS API \u51fd\u6570\u53ef\u4ee5\u5728\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u3002</li> <li>\u5c06\u4e2d\u65ad\u5904\u7406\u63a8\u8fdf\u5230\u4efb\u52a1\u7684\u65b9\u6cd5\u3002</li> <li>\u5982\u4f55\u521b\u5efa\u548c\u4f7f\u7528\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u548c\u8ba1\u6570\u4fe1\u53f7\u91cf\u3002</li> <li>\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u548c\u8ba1\u6570\u4fe1\u53f7\u91cf\u4e4b\u95f4\u7684\u533a\u522b\u3002</li> <li>\u5982\u4f55\u4f7f\u7528\u961f\u5217\u5728\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u4e2d\u4f20\u9012\u6570\u636e\u3002</li> <li>\u67d0\u4e9b FreeRTOS \u79fb\u690d\u4e2d\u53ef\u7528\u7684\u4e2d\u65ad\u5d4c\u5957\u6a21\u578b\u3002</li> </ul>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#72-isr-freertos-api","title":"7.2 \u5728 ISR \u4e2d\u4f7f\u7528 FreeRTOS API","text":""},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#721-api","title":"7.2.1 \u4e2d\u65ad\u5b89\u5168 API","text":"<p>\u901a\u5e38\u9700\u8981\u5728\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\uff08ISR\uff09\u4e2d\u4f7f\u7528 FreeRTOS API \u51fd\u6570\u63d0\u4f9b\u7684\u529f\u80fd\uff0c\u4f46\u8bb8\u591a FreeRTOS API \u51fd\u6570\u6267\u884c\u7684\u64cd\u4f5c\u5728 ISR \u5185\u90e8\u662f\u65e0\u6548\u7684\u3002\u5176\u4e2d\u6700\u663e\u8457\u7684\u5c31\u662f\u5c06\u8c03\u7528 API \u51fd\u6570\u7684\u4efb\u52a1\u7f6e\u4e8e\u963b\u585e\u72b6\u6001\u2014\u2014\u5982\u679c API \u51fd\u6570\u662f\u4ece ISR \u8c03\u7528\u7684\uff0c\u90a3\u4e48\u5b83\u5c31\u4e0d\u662f\u4ece\u4efb\u52a1\u4e2d\u8c03\u7528\u7684\uff0c\u56e0\u6b64\u6ca1\u6709\u8c03\u7528\u4efb\u52a1\u53ef\u4ee5\u88ab\u7f6e\u4e8e\u963b\u585e\u72b6\u6001\u3002FreeRTOS \u901a\u8fc7\u63d0\u4f9b\u67d0\u4e9b API \u51fd\u6570\u7684\u4e24\u4e2a\u7248\u672c\u6765\u89e3\u51b3\u6b64\u95ee\u9898\uff1b\u4e00\u4e2a\u7248\u672c\u7528\u4e8e\u4efb\u52a1\uff0c\u53e6\u4e00\u4e2a\u7248\u672c\u7528\u4e8e ISR\u3002\u7528\u4e8e ISR \u7684\u51fd\u6570\u5728\u540d\u79f0\u540e\u9644\u52a0\u4e86\u201cFromISR\u201d\u3002</p> <p>\u6ce8\u610f\uff1a\u7edd\u4e0d\u8981\u4ece ISR \u4e2d\u8c03\u7528\u540d\u79f0\u4e2d\u6ca1\u6709\u201cFromISR\u201d\u7684 FreeRTOS API \u51fd\u6570\u3002</p>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#722-api","title":"7.2.2 \u4f7f\u7528\u5355\u72ec\u7684\u4e2d\u65ad\u5b89\u5168 API \u7684\u597d\u5904","text":"<p>\u4e3a\u4e2d\u65ad\u63d0\u4f9b\u5355\u72ec\u7684 API \u53ef\u4ee5\u4f7f\u4efb\u52a1\u4ee3\u7801\u66f4\u9ad8\u6548\uff0cISR \u4ee3\u7801\u66f4\u9ad8\u6548\uff0c\u5e76\u4e14\u4e2d\u65ad\u5165\u53e3\u66f4\u7b80\u5355\u3002\u8981\u4e86\u89e3\u539f\u56e0\uff0c\u8bf7\u8003\u8651\u66ff\u4ee3\u89e3\u51b3\u65b9\u6848\uff0c\u5373\u4e3a\u4efb\u52a1\u548c ISR \u63d0\u4f9b\u6bcf\u4e2a API \u51fd\u6570\u7684\u5355\u4e2a\u7248\u672c\u3002\u5982\u679c\u540c\u4e00\u4e2a API \u51fd\u6570\u53ef\u4ee5\u4ece\u4efb\u52a1\u548c ISR \u8c03\u7528\uff0c\u90a3\u4e48\uff1a</p> <ul> <li> <p>API \u51fd\u6570\u9700\u8981\u989d\u5916\u7684\u903b\u8f91\u6765\u786e\u5b9a\u5b83\u4eec\u662f\u4ece\u4efb\u52a1\u8fd8\u662f ISR \u8c03\u7528\u7684\u3002\u989d\u5916\u7684\u903b\u8f91\u4f1a\u5728\u51fd\u6570\u4e2d\u5f15\u5165\u65b0\u7684\u8def\u5f84\uff0c\u4f7f\u51fd\u6570\u53d8\u5f97\u66f4\u957f\u3001\u66f4\u590d\u6742\uff0c\u4e5f\u66f4\u96be\u6d4b\u8bd5\u3002</p> </li> <li> <p>\u5f53\u4ece\u4efb\u52a1\u8c03\u7528\u8be5\u51fd\u6570\u65f6\uff0c\u67d0\u4e9b API \u51fd\u6570\u53c2\u6570\u5c06\u662f\u8fc7\u65f6\u7684\uff0c\u800c\u5f53\u4ece ISR \u8c03\u7528\u8be5\u51fd\u6570\u65f6\uff0c\u5176\u4ed6\u53c2\u6570\u5c06\u662f\u8fc7\u65f6\u7684\u3002</p> </li> <li> <p>\u6bcf\u4e2a FreeRTOS \u79fb\u690d\u90fd\u9700\u8981\u63d0\u4f9b\u4e00\u79cd\u673a\u5236\u6765\u786e\u5b9a\u6267\u884c\u4e0a\u4e0b\u6587\uff08\u4efb\u52a1\u6216 ISR\uff09\u3002</p> </li> <li> <p>\u5728\u6267\u884c\u4e0a\u4e0b\u6587\uff08\u4efb\u52a1\u6216 ISR\uff09\u4e0d\u6613\u786e\u5b9a\u7684\u4f53\u7cfb\u7ed3\u6784\u4e0a\uff0c\u5c06\u9700\u8981\u989d\u5916\u7684\u3001\u6d6a\u8d39\u7684\u3001\u4f7f\u7528\u8d77\u6765\u66f4\u590d\u6742\u7684\u975e\u6807\u51c6\u4e2d\u65ad\u5165\u53e3\u4ee3\u7801\uff0c\u4ee5\u5141\u8bb8\u901a\u8fc7\u8f6f\u4ef6\u63d0\u4f9b\u6267\u884c\u4e0a\u4e0b\u6587\u3002</p> </li> </ul>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#723-api","title":"7.2.3 \u4f7f\u7528\u5355\u72ec\u7684\u4e2d\u65ad\u5b89\u5168 API \u7684\u7f3a\u70b9","text":"<p>\u62e5\u6709\u4e24\u4e2a\u7248\u672c\u7684\u67d0\u4e9b API \u51fd\u6570\u4f7f\u4efb\u52a1\u548c ISR \u90fd\u66f4\u9ad8\u6548\uff0c\u4f46\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u95ee\u9898\uff1b\u6709\u65f6\u9700\u8981\u8c03\u7528\u4e00\u4e2a\u4e0d\u5c5e\u4e8e FreeRTOS API \u7684\u51fd\u6570\uff0c\u4f46\u8be5\u51fd\u6570\u53c8\u9700\u8981\u4ece\u4efb\u52a1\u548c ISR \u4e2d\u8c03\u7528\u3002</p> <p>\u8fd9\u901a\u5e38\u53ea\u5728\u96c6\u6210\u7b2c\u4e09\u65b9\u4ee3\u7801\u65f6\u624d\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u56e0\u4e3a\u8fd9\u662f\u8f6f\u4ef6\u8bbe\u8ba1\u8d85\u51fa\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u8005\u63a7\u5236\u7684\u552f\u4e00\u60c5\u51b5\u3002\u5982\u679c\u786e\u5b9e\u51fa\u73b0\u6b64\u95ee\u9898\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u6280\u672f\u4e4b\u4e00\u6765\u514b\u670d\u6b64\u95ee\u9898\uff1a</p> <ul> <li> <p>\u5c06\u4e2d\u65ad\u5904\u7406\u63a8\u8fdf\u5230\u4efb\u52a1^12\uff0c\u4ee5\u4fbf API \u51fd\u6570\u4ec5\u5728\u4efb\u52a1\u4e0a\u4e0b\u6587\u4e2d\u8c03\u7528\u3002</p> </li> <li> <p>\u5982\u679c\u4f7f\u7528\u652f\u6301\u4e2d\u65ad\u5d4c\u5957\u7684 FreeRTOS \u79fb\u690d\uff0c\u5219\u4f7f\u7528\u4ee5\u201cFromISR\u201d\u7ed3\u5c3e\u7684 API \u51fd\u6570\u7248\u672c\uff0c\u56e0\u4e3a\u8be5\u7248\u672c\u53ef\u4ee5\u4ece\u4efb\u52a1\u548c ISR \u4e2d\u8c03\u7528\u3002\uff08\u53cd\u4e4b\u5219\u4e0d\u7136\uff0c\u672a\u4ee5\u201cFromISR\u201d\u7ed3\u5c3e\u7684 API \u51fd\u6570\u4e0d\u5f97\u4ece ISR \u4e2d\u8c03\u7528\u3002\uff09</p> </li> <li> <p>\u7b2c\u4e09\u65b9\u4ee3\u7801\u901a\u5e38\u5305\u542b\u4e00\u4e2a RTOS \u62bd\u8c61\u5c42\uff0c\u53ef\u4ee5\u5b9e\u73b0\u8be5\u5c42\u4ee5\u6d4b\u8bd5\u51fd\u6570\u88ab\u8c03\u7528\u7684\u4e0a\u4e0b\u6587\uff08\u4efb\u52a1\u6216\u4e2d\u65ad\uff09\uff0c\u7136\u540e\u8c03\u7528\u9002\u5408\u8be5\u4e0a\u4e0b\u6587\u7684 API \u51fd\u6570\u3002</p> </li> </ul>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#724-xhigherprioritytaskwoken","title":"7.2.4 xHigherPriorityTaskWoken \u53c2\u6570","text":"<p>\u672c\u8282\u4ecb\u7ecd <code>xHigherPriorityTaskWoken</code> \u53c2\u6570\u7684\u6982\u5ff5\u3002\u5982\u679c\u60a8\u8fd8\u4e0d\u5b8c\u5168\u7406\u89e3\u672c\u8282\u5185\u5bb9\uff0c\u8bf7\u4e0d\u8981\u62c5\u5fc3\uff0c\u540e\u9762\u7684\u7ae0\u8282\u5c06\u63d0\u4f9b\u5b9e\u9645\u793a\u4f8b\u3002</p> <p>\u5982\u679c\u4e2d\u65ad\u6267\u884c\u4e86\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u5219\u5728\u4e2d\u65ad\u9000\u51fa\u65f6\u8fd0\u884c\u7684\u4efb\u52a1\u53ef\u80fd\u4e0e\u4e2d\u65ad\u8fdb\u5165\u65f6\u8fd0\u884c\u7684\u4efb\u52a1\u4e0d\u540c\u2014\u2014\u4e2d\u65ad\u5c06\u6253\u65ad\u4e00\u4e2a\u4efb\u52a1\uff0c\u4f46\u8fd4\u56de\u65f6\u5374\u8fd4\u56de\u7ed9\u53e6\u4e00\u4e2a\u4efb\u52a1\u3002</p> <p>\u67d0\u4e9b FreeRTOS API \u51fd\u6570\u53ef\u4ee5\u5c06\u4efb\u52a1\u4ece\u963b\u585e\u72b6\u6001\u79fb\u52a8\u5230\u5c31\u7eea\u72b6\u6001\u3002\u4e4b\u524d\u5df2\u7ecf\u770b\u5230\u8fc7\u8fd9\u6837\u7684\u51fd\u6570\uff0c\u4f8b\u5982 <code>xQueueSendToBack()</code>\uff0c\u5982\u679c\u6709\u4efb\u52a1\u5728\u7b49\u5f85\u6570\u636e\u53d8\u4e3a\u53ef\u7528\u800c\u5904\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u5219\u8be5\u51fd\u6570\u5c06\u89e3\u9664\u8be5\u4efb\u52a1\u7684\u963b\u585e\u3002</p> <p>\u5982\u679c FreeRTOS API \u51fd\u6570\u89e3\u9664\u963b\u585e\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u8fd0\u884c\u72b6\u6001\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff0c\u5219\u6839\u636e FreeRTOS \u8c03\u5ea6\u7b56\u7565\uff0c\u5e94\u53d1\u751f\u5bf9\u66f4\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u7684\u5207\u6362\u3002\u8c03\u7528 API \u51fd\u6570\u7684\u4e0a\u4e0b\u6587\u51b3\u5b9a\u4e86\u5b9e\u9645\u53d1\u751f\u5207\u6362\u7684\u65f6\u673a\uff1a</p> <ul> <li>\u5982\u679c API \u51fd\u6570\u662f\u4ece\u4efb\u52a1\u4e2d\u8c03\u7528\u7684\uff1a</li> </ul> <p>\u5982\u679c FreeRTOSConfig.h \u4e2d\u5c06 <code>configUSE_PREEMPTION</code> \u8bbe\u7f6e\u4e3a 1\uff0c\u5219\u5728 API \u51fd\u6570\u5185\u90e8\u4f1a\u81ea\u52a8\u53d1\u751f\u5bf9\u66f4\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u7684\u5207\u6362\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u5728 API \u51fd\u6570\u9000\u51fa\u4e4b\u524d\u3002\u4e4b\u524d\u5728\u56fe 6.6 \u4e2d\u5df2\u7ecf\u770b\u5230\u8fc7\u8fd9\u79cd\u60c5\u51b5\uff0c\u5373\u5bf9\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u7684\u5199\u5165\u5bfc\u81f4\u5728\u5199\u5165\u547d\u4ee4\u961f\u5217\u7684\u51fd\u6570\u9000\u51fa\u4e4b\u524d\u5207\u6362\u5230 RTOS \u5b88\u62a4\u4efb\u52a1\u3002</p> <ul> <li>\u5982\u679c API \u51fd\u6570\u662f\u4ece\u4e2d\u65ad\u4e2d\u8c03\u7528\u7684\uff1a</li> </ul> <p>\u5728\u4e2d\u65ad\u5185\u90e8\u4e0d\u4f1a\u81ea\u52a8\u53d1\u751f\u5bf9\u66f4\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u7684\u5207\u6362\u3002\u76f8\u53cd\uff0c\u8bbe\u7f6e\u4e00\u4e2a\u53d8\u91cf\u4ee5\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u8005\u5e94\u8be5\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002\u4e2d\u65ad\u5b89\u5168 API \u51fd\u6570\uff08\u4ee5\u201cFromISR\u201d\u7ed3\u5c3e\u7684\u51fd\u6570\uff09\u5177\u6709\u4e00\u4e2a\u6307\u9488\u53c2\u6570 <code>pxHigherPriorityTaskWoken</code>\uff0c\u7528\u4e8e\u6b64\u76ee\u7684\u3002</p> <p>\u5982\u679c\u5e94\u8be5\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u5219\u4e2d\u65ad\u5b89\u5168 API \u51fd\u6570\u4f1a\u5c06 <code>*pxHigherPriorityTaskWoken</code> \u8bbe\u7f6e\u4e3a <code>pdTRUE</code>\u3002\u4e3a\u4e86\u80fd\u591f\u68c0\u6d4b\u5230\u8fd9\u79cd\u60c5\u51b5\uff0c\u7b2c\u4e00\u6b21\u4f7f\u7528\u65f6\uff0c<code>pxHigherPriorityTaskWoken</code> \u6307\u5411\u7684\u53d8\u91cf\u5fc5\u987b\u521d\u59cb\u5316\u4e3a <code>pdFALSE</code>\u3002</p> <p>\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u8005\u9009\u62e9\u4e0d\u8bf7\u6c42 ISR \u4e2d\u7684\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u5219\u66f4\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u5c06\u4fdd\u6301\u5728\u5c31\u7eea\u72b6\u6001\uff0c\u76f4\u5230\u4e0b\u6b21\u8c03\u5ea6\u7a0b\u5e8f\u8fd0\u884c\uff0c\u6700\u574f\u7684\u60c5\u51b5\u662f\u5728\u4e0b\u4e00\u4e2a\u6ef4\u7b54\u4e2d\u65ad\u671f\u95f4\u3002</p> <p>FreeRTOS API \u51fd\u6570\u53ea\u80fd\u5c06 <code>*pxHighPriorityTaskWoken</code> \u8bbe\u7f6e\u4e3a <code>pdTRUE</code>\u3002\u5982\u679c ISR \u8c03\u7528\u591a\u4e2a FreeRTOS API \u51fd\u6570\uff0c\u5219\u53ef\u4ee5\u5728\u6bcf\u4e2a API \u51fd\u6570\u8c03\u7528\u4e2d\u4f20\u9012\u76f8\u540c\u7684 <code>pxHigherPriorityTaskWoken</code> \u53c2\u6570\u53d8\u91cf\uff0c\u5e76\u4e14\u8be5\u53d8\u91cf\u53ea\u9700\u5728\u7b2c\u4e00\u6b21\u4f7f\u7528\u65f6\u521d\u59cb\u5316\u4e3a <code>pdFALSE</code>\u3002</p> <p>\u4e2d\u65ad\u5b89\u5168 API \u51fd\u6570\u5185\u90e8\u4e0d\u81ea\u52a8\u53d1\u751f\u4e0a\u4e0b\u6587\u5207\u6362\u6709\u51e0\u4e2a\u539f\u56e0\uff1a</p> <ul> <li>\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u4e0a\u4e0b\u6587\u5207\u6362</li> </ul> <p>\u5728\u4efb\u52a1\u6267\u884c\u4efb\u4f55\u5904\u7406\u4e4b\u524d\uff0c\u4e2d\u65ad\u53ef\u80fd\u4f1a\u6267\u884c\u591a\u6b21\u3002\u4f8b\u5982\uff0c\u8003\u8651\u4e00\u4e2a\u4efb\u52a1\u901a\u8fc7\u4e2d\u65ad\u9a71\u52a8\u7684 UART \u63a5\u6536\u5b57\u7b26\u4e32\u5e76\u5904\u7406\u7684\u573a\u666f\uff1b\u6bcf\u5f53\u63a5\u6536\u5230\u4e00\u4e2a\u5b57\u7b26\u65f6\uff0cUART ISR \u5207\u6362\u5230\u4efb\u52a1\u90fd\u662f\u6d6a\u8d39\u7684\uff0c\u56e0\u4e3a\u4efb\u52a1\u53ea\u6709\u5728\u63a5\u6536\u5230\u5b8c\u6574\u5b57\u7b26\u4e32\u540e\u624d\u4f1a\u8fdb\u884c\u5904\u7406\u3002</p> <ul> <li>\u63a7\u5236\u6267\u884c\u987a\u5e8f</li> </ul> <p>\u4e2d\u65ad\u53ef\u80fd\u4f1a\u4e0d\u5b9a\u671f\u53d1\u751f\uff0c\u5e76\u4e14\u5728\u4e0d\u53ef\u9884\u6d4b\u7684\u65f6\u95f4\u3002\u7ecf\u9a8c\u4e30\u5bcc\u7684 FreeRTOS \u7528\u6237\u53ef\u80fd\u5e0c\u671b\u5728\u5176\u5e94\u7528\u7a0b\u5e8f\u7684\u7279\u5b9a\u70b9\u4e34\u65f6\u907f\u514d\u4e0d\u53ef\u9884\u6d4b\u5730\u5207\u6362\u5230\u5176\u4ed6\u4efb\u52a1\uff0c\u5c3d\u7ba1\u8fd9\u4e5f\u53ef\u4ee5\u901a\u8fc7 FreeRTOS \u8c03\u5ea6\u7a0b\u5e8f\u9501\u5b9a\u673a\u5236\u6765\u5b9e\u73b0\u3002</p> <ul> <li>\u53ef\u79fb\u690d\u6027</li> </ul> <p>\u8fd9\u662f\u53ef\u4ee5\u5728\u6240\u6709 FreeRTOS \u79fb\u690d\u4e2d\u4f7f\u7528\u7684\u6700\u7b80\u5355\u673a\u5236\u3002</p> <ul> <li>\u6548\u7387</li> </ul> <p>\u9488\u5bf9\u8f83\u5c0f\u5904\u7406\u5668\u4f53\u7cfb\u7ed3\u6784\u7684\u79fb\u690d\u4ec5\u5141\u8bb8\u5728 ISR \u7684\u6700\u540e\u8fdb\u884c\u8bf7\u6c42\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u53d6\u6d88\u8be5\u9650\u5236\u5c06\u9700\u8981\u989d\u5916\u7684\u3001\u66f4\u590d\u6742\u7684\u4ee3\u7801\u3002\u5b83\u8fd8\u5141\u8bb8\u5728\u540c\u4e00 ISR \u5185\u591a\u6b21\u8c03\u7528 FreeRTOS API \u51fd\u6570\uff0c\u800c\u4e0d\u4f1a\u5728\u540c\u4e00 ISR \u5185\u751f\u6210\u591a\u6b21\u8bf7\u6c42\u4e0a\u4e0b\u6587\u5207\u6362\u3002</p> <ul> <li>\u5728 RTOS \u6ef4\u7b54\u4e2d\u65ad\u4e2d\u6267\u884c</li> </ul> <p>\u5982\u672c\u4e66\u540e\u9762\u5c06\u770b\u5230\u7684\uff0c\u53ef\u4ee5\u5728 RTOS \u6ef4\u7b54\u4e2d\u65ad\u4e2d\u6dfb\u52a0\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u3002\u5c1d\u8bd5\u5728\u6ef4\u7b54\u4e2d\u65ad\u5185\u90e8\u8fdb\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u7ed3\u679c\u53d6\u51b3\u4e8e\u6240\u4f7f\u7528\u7684 FreeRTOS \u79fb\u690d\u3002\u5145\u5176\u91cf\uff0c\u5b83\u5c06\u5bfc\u81f4\u5bf9\u8c03\u5ea6\u7a0b\u5e8f\u7684\u4e0d\u5fc5\u8981\u8c03\u7528\u3002</p> <p><code>pxHigherPriorityTaskWoken</code> \u53c2\u6570\u7684\u4f7f\u7528\u662f\u53ef\u9009\u7684\u3002\u5982\u679c\u4e0d\u9700\u8981\uff0c\u5219\u5c06 <code>pxHigherPriorityTaskWoken</code> \u8bbe\u7f6e\u4e3a NULL\u3002</p>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#725-portyield_from_isr-portend_switching_isr","title":"7.2.5 portYIELD_FROM_ISR() \u548c portEND_SWITCHING_ISR()\u5b8f","text":"<p>\u672c\u8282\u4ecb\u7ecd\u7528\u4e8e\u8bf7\u6c42 ISR \u4e2d\u7684\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u5b8f\u3002\u8bf7\u4e0d\u8981\u62c5\u5fc3\uff0c\u5982\u679c\u60a8\u8fd8\u4e0d\u5b8c\u5168\u7406\u89e3\u672c\u8282\u5185\u5bb9\uff0c\u540e\u9762\u7684\u7ae0\u8282\u5c06\u63d0\u4f9b\u5b9e\u9645\u793a\u4f8b\u3002</p> <p><code>taskYIELD()</code> \u662f\u4e00\u4e2a\u53ef\u4ee5\u5728\u4efb\u52a1\u4e2d\u8c03\u7528\u7684\u5b8f\uff0c\u7528\u4e8e\u8bf7\u6c42\u4e0a\u4e0b\u6587\u5207\u6362\u3002<code>portYIELD_FROM_ISR()</code> \u548c <code>portEND_SWITCHING_ISR()</code> \u662f <code>taskYIELD()</code> \u7684\u4e2d\u65ad\u5b89\u5168\u7248\u672c\u3002<code>portYIELD_FROM_ISR()</code> \u548c <code>portEND_SWITCHING_ISR()</code> \u7684\u7528\u6cd5\u76f8\u540c\uff0c\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c[^13]\u3002\u67d0\u4e9b FreeRTOS \u79fb\u690d\u4ec5\u63d0\u4f9b\u8fd9\u4e24\u4e2a\u5b8f\u4e2d\u7684\u4e00\u4e2a\u3002\u8f83\u65b0\u7684 FreeRTOS \u79fb\u690d\u63d0\u4f9b\u4e86\u8fd9\u4e24\u4e2a\u5b8f\u3002\u672c\u4e66\u4e2d\u7684\u793a\u4f8b\u4f7f\u7528 <code>portYIELD_FROM_ISR()</code>\u3002</p> <p>[^13]: \u4ece\u5386\u53f2\u4e0a\u770b\uff0c<code>portEND_SWITCHING_ISR()</code> \u662f\u9700\u8981\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u4f7f\u7528\u6c47\u7f16\u4ee3\u7801\u5305\u88c5\u7684 FreeRTOS \u79fb\u690d\u4e2d\u4f7f\u7528\u7684\u540d\u79f0\uff0c\u800c <code>portYIELD_FROM_ISR()</code> \u662f\u5728\u5141\u8bb8\u7528 C \u8bed\u8a00\u7f16\u5199\u6574\u4e2a\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u7684 FreeRTOS \u79fb\u690d\u4e2d\u4f7f\u7528\u7684\u540d\u79f0\u3002</p> <p></p> <pre><code>portEND_SWITCHING_ISR( xHigherPriorityTaskWoken );\n</code></pre> <p>Listing 7.1 The portEND_SWITCHING_ISR() macros</p> <p></p> <pre><code>portYIELD_FROM_ISR( xHigherPriorityTaskWoken );\n</code></pre> <p>Listing 7.2 The portYIELD_FROM_ISR() macros</p> <p>\u4ece\u4e2d\u65ad\u5b89\u5168 API \u51fd\u6570\u4f20\u51fa\u7684 <code>xHigherPriorityTaskWoken</code> \u53c2\u6570\u53ef\u4ee5\u76f4\u63a5\u7528\u4f5c\u5bf9 <code>portYIELD_FROM_ISR()</code> \u7684\u8c03\u7528\u4e2d\u7684\u53c2\u6570\u3002</p> <p>\u5982\u679c <code>portYIELD_FROM_ISR()</code> \u7684 <code>xHigherPriorityTaskWoken</code> \u53c2\u6570\u4e3a <code>pdFALSE</code>\uff08\u96f6\uff09\uff0c\u5219\u4e0d\u8bf7\u6c42\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u5b8f\u6ca1\u6709\u6548\u679c\u3002\u5982\u679c <code>portYIELD_FROM_ISR()</code> \u7684 <code>xHigherPriorityTaskWoken</code> \u53c2\u6570\u4e0d\u4e3a <code>pdFALSE</code>\uff0c\u5219\u8bf7\u6c42\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u8fd0\u884c\u72b6\u6001\u7684\u4efb\u52a1\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u4e2d\u65ad\u5c06\u59cb\u7ec8\u8fd4\u56de\u5230\u8fd0\u884c\u72b6\u6001\u7684\u4efb\u52a1\uff0c\u5373\u4f7f\u5728\u4e2d\u65ad\u6267\u884c\u671f\u95f4\u8fd0\u884c\u72b6\u6001\u7684\u4efb\u52a1\u53d1\u751f\u4e86\u53d8\u5316\u3002</p> <p>\u5927\u591a\u6570 FreeRTOS \u79fb\u690d\u5141\u8bb8\u5728 ISR \u5185\u7684\u4efb\u4f55\u4f4d\u7f6e\u8c03\u7528 <code>portYIELD_FROM_ISR()</code>\u3002\u5c11\u6570 FreeRTOS \u79fb\u690d\uff08\u4e3b\u8981\u662f\u9488\u5bf9\u8f83\u5c0f\u4f53\u7cfb\u7ed3\u6784\u7684\u79fb\u690d\uff09\u4ec5\u5141\u8bb8\u5728 ISR \u7684\u6700\u540e\u8c03\u7528 <code>portYIELD_FROM_ISR()</code>\u3002</p>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#73","title":"7.3 \u5ef6\u8fdf\u4e2d\u65ad\u5904\u7406","text":"<p>\u901a\u5e38\u8ba4\u4e3a\uff0c\u5c3d\u53ef\u80fd\u7f29\u77ed ISR \u662f\u6700\u4f73\u5b9e\u8df5\u3002\u8fd9\u6837\u505a\u7684\u539f\u56e0\u5305\u62ec\uff1a</p> <ul> <li> <p>\u5373\u4f7f\u4efb\u52a1\u88ab\u5206\u914d\u4e86\u5f88\u9ad8\u7684\u4f18\u5148\u7ea7\uff0c\u5b83\u4eec\u4e5f\u53ea\u80fd\u5728\u786c\u4ef6\u6ca1\u6709\u6b63\u5728\u670d\u52a1\u7684\u4e2d\u65ad\u65f6\u8fd0\u884c\u3002</p> </li> <li> <p>ISR \u4f1a\u5e72\u6270\uff08\u589e\u52a0\u201c\u6296\u52a8\u201d\uff09\u4efb\u52a1\u7684\u5f00\u59cb\u65f6\u95f4\u548c\u6267\u884c\u65f6\u95f4\u3002</p> </li> <li> <p>\u6839\u636e FreeRTOS \u8fd0\u884c\u7684\u4f53\u7cfb\u7ed3\u6784\uff0c\u53ef\u80fd\u65e0\u6cd5\u5728 ISR \u6267\u884c\u65f6\u63a5\u53d7\u4efb\u4f55\u65b0\u4e2d\u65ad\uff0c\u6216\u8005\u81f3\u5c11\u65e0\u6cd5\u63a5\u53d7\u4e00\u90e8\u5206\u65b0\u4e2d\u65ad\u3002</p> </li> <li> <p>\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u8005\u9700\u8981\u8003\u8651\u5e76\u53d1\u8bbf\u95ee\u53d8\u91cf\u3001\u5916\u8bbe\u548c\u5185\u5b58\u7f13\u51b2\u533a\u7684\u540e\u679c\uff0c\u5e76\u52a0\u4ee5\u9632\u8303\uff0c\u4ee5\u9632\u4efb\u52a1\u548c ISR \u540c\u65f6\u8bbf\u95ee\u5b83\u4eec\u3002</p> </li> <li> <p>\u67d0\u4e9b FreeRTOS \u79fb\u690d\u5141\u8bb8\u4e2d\u65ad\u5d4c\u5957\uff0c\u4f46\u4e2d\u65ad\u5d4c\u5957\u4f1a\u589e\u52a0\u590d\u6742\u6027\u5e76\u964d\u4f4e\u53ef\u9884\u6d4b\u6027\u3002\u4e2d\u65ad\u8d8a\u77ed\uff0c\u5d4c\u5957\u7684\u53ef\u80fd\u6027\u5c31\u8d8a\u5c0f\u3002</p> </li> </ul> <p>\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u5fc5\u987b\u8bb0\u5f55\u4e2d\u65ad\u539f\u56e0\u5e76\u6e05\u9664\u4e2d\u65ad\u3002\u4e2d\u65ad\u5f15\u8d77\u7684\u4efb\u4f55\u5176\u4ed6\u5904\u7406\u901a\u5e38\u53ef\u4ee5\u5728\u4efb\u52a1\u4e2d\u6267\u884c\uff0c\u4ece\u800c\u4f7f\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u5c3d\u5feb\u9000\u51fa\u3002\u8fd9\u88ab\u79f0\u4e3a\u201c\u5ef6\u8fdf\u4e2d\u65ad\u5904\u7406\u201d\uff0c\u56e0\u4e3a\u4e2d\u65ad\u5f15\u8d77\u7684\u5904\u7406\u88ab\u201c\u63a8\u8fdf\u201d\u5230 ISR \u4e4b\u5916\u7684\u4efb\u52a1\u4e2d\u3002</p> <p>\u5c06\u4e2d\u65ad\u5904\u7406\u63a8\u8fdf\u5230\u4efb\u52a1\u4e2d\u8fd8\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u8005\u76f8\u5bf9\u4e8e\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u5176\u4ed6\u4efb\u52a1\u5bf9\u5904\u7406\u8fdb\u884c\u4f18\u5148\u7ea7\u6392\u5e8f\uff0c\u5e76\u4f7f\u7528\u6240\u6709 FreeRTOS API \u51fd\u6570\u3002</p> <p>\u5982\u679c\u5c06\u4e2d\u65ad\u5904\u7406\u63a8\u8fdf\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u4efb\u4f55\u5176\u4ed6\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff0c\u5219\u5904\u7406\u5c06\u7acb\u5373\u6267\u884c\uff0c\u5c31\u50cf\u5904\u7406\u662f\u5728 ISR \u672c\u8eab\u4e2d\u6267\u884c\u7684\u4e00\u6837\u3002\u56fe 7.1 \u663e\u793a\u4e86\u8fd9\u79cd\u60c5\u51b5\uff0c\u5176\u4e2d\u4efb\u52a1 1 \u662f\u4e00\u4e2a\u666e\u901a\u5e94\u7528\u4efb\u52a1\uff0c\u4efb\u52a1 2 \u662f\u4e2d\u65ad\u5904\u7406\u88ab\u63a8\u8fdf\u5230\u7684\u4efb\u52a1\u3002</p> <p></p> <p> Figure 7.1 Completing interrupt processing in a high priority task</p> <p>\u5728\u56fe 7.1 \u4e2d\uff0c\u4e2d\u65ad\u5904\u7406\u5728\u65f6\u95f4 t2 \u5f00\u59cb\uff0c\u5728\u65f6\u95f4 t4 \u7ed3\u675f\uff0c\u4f46\u4ec5\u5728\u65f6\u95f4 t2 \u548c t3 \u4e4b\u95f4\u7684\u65f6\u95f4\u82b1\u8d39\u5728 ISR \u4e2d\u3002\u5982\u679c\u6ca1\u6709\u4f7f\u7528\u5ef6\u8fdf\u4e2d\u65ad\u5904\u7406\uff0c\u5219\u5728\u65f6\u95f4 t2 \u548c t4 \u4e4b\u95f4\u7684\u6574\u4e2a\u65f6\u95f4\u6bb5\u90fd\u5c06\u82b1\u8d39\u5728 ISR \u4e2d\u3002</p> <p>\u5173\u4e8e\u4f55\u65f6\u6700\u597d\u5728 ISR \u4e2d\u6267\u884c\u6240\u6709\u4e2d\u65ad\u5904\u7406\u4ee5\u53ca\u4f55\u65f6\u6700\u597d\u5c06\u90e8\u5206\u5904\u7406\u63a8\u8fdf\u5230\u4efb\u52a1\u4e2d\uff0c\u6ca1\u6709\u7edd\u5bf9\u7684\u89c4\u5219\u3002\u5f53\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u65f6\uff0c\u5c06\u5904\u7406\u63a8\u8fdf\u5230\u4efb\u52a1\u4e2d\u6700\u4e3a\u6709\u7528\uff1a</p> <ul> <li> <p>\u4e2d\u65ad\u5f15\u8d77\u7684\u5904\u7406\u4e0d\u662f\u5fae\u4e0d\u8db3\u9053\u7684\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4e2d\u65ad\u53ea\u662f\u5b58\u50a8\u6a21\u62df\u5230\u6570\u5b57\u8f6c\u6362\u7684\u7ed3\u679c\uff0c\u5219\u51e0\u4e4e\u53ef\u4ee5\u80af\u5b9a\u8fd9\u6700\u597d\u5728 ISR \u5185\u90e8\u6267\u884c\uff0c\u4f46\u662f\u5982\u679c\u8f6c\u6362\u7ed3\u679c\u8fd8\u5fc5\u987b\u901a\u8fc7\u8f6f\u4ef6\u6ee4\u6ce2\u5668\uff0c\u5219\u53ef\u80fd\u6700\u597d\u5728\u4efb\u52a1\u4e2d\u6267\u884c\u6ee4\u6ce2\u5668\u3002</p> </li> <li> <p>\u4e2d\u65ad\u5904\u7406\u9700\u8981\u6267\u884c\u65e0\u6cd5\u5728 ISR \u5185\u90e8\u6267\u884c\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982\u5199\u5165\u63a7\u5236\u53f0\u6216\u5206\u914d\u5185\u5b58\u3002</p> </li> <li> <p>\u4e2d\u65ad\u5904\u7406\u662f\u975e\u786e\u5b9a\u6027\u7684\u2014\u2014\u5373\u4e8b\u5148\u4e0d\u77e5\u9053\u5904\u7406\u5c06\u82b1\u8d39\u591a\u957f\u65f6\u95f4\u3002</p> </li> </ul> <p>\u4ee5\u4e0b\u5404\u8282\u5c06\u63cf\u8ff0\u548c\u6f14\u793a\u5230\u76ee\u524d\u4e3a\u6b62\u672c\u7ae0\u4e2d\u4ecb\u7ecd\u7684\u6982\u5ff5\uff0c\u5305\u62ec\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u5ef6\u8fdf\u4e2d\u65ad\u5904\u7406\u7684 FreeRTOS \u7279\u6027\u3002</p>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#74","title":"7.4 \u7528\u4e8e\u540c\u6b65\u7684\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf","text":"<p>\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf API \u7684\u4e2d\u65ad\u5b89\u5168\u7248\u672c\u53ef\u7528\u4e8e\u5728\u7279\u5b9a\u4e2d\u65ad\u53d1\u751f\u65f6\u89e3\u9664\u5bf9\u4efb\u52a1\u7684\u963b\u585e\uff0c\u4ece\u800c\u6709\u6548\u5730\u5c06\u4efb\u52a1\u4e0e\u4e2d\u65ad\u540c\u6b65\u3002\u8fd9\u5141\u8bb8\u5927\u591a\u6570\u4e2d\u65ad\u4e8b\u4ef6\u5904\u7406\u5728\u540c\u6b65\u4efb\u52a1\u4e2d\u5b9e\u73b0\uff0c\u4ec5\u5728 ISR \u4e2d\u4fdd\u7559\u975e\u5e38\u5feb\u901f\u548c\u7b80\u77ed\u7684\u90e8\u5206\u3002\u5982\u524d\u4e00\u8282\u6240\u8ff0\uff0c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u7528\u4e8e\u5c06\u4e2d\u65ad\u5904\u7406\u201c\u63a8\u8fdf\u201d\u5230\u4efb\u52a1\u4e2d[^14]\u3002</p> <p>[^14]: \u4f7f\u7528\u76f4\u63a5\u4efb\u52a1\u901a\u77e5\u4ece\u4e2d\u65ad\u4e2d\u89e3\u9664\u5bf9\u4efb\u52a1\u7684\u963b\u585e\u6bd4\u4f7f\u7528\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u66f4\u9ad8\u6548\u3002\u76f4\u63a5\u4efb\u52a1\u901a\u77e5\u5c06\u5728\u7b2c 10 \u7ae0\u201c\u4efb\u52a1\u901a\u77e5\u201d\u4e2d\u4ecb\u7ecd\u3002</p> <p>\u5982\u524d\u9762\u56fe 7.1 \u6240\u793a\uff0c\u5982\u679c\u4e2d\u65ad\u5904\u7406\u5728\u65f6\u95f4\u4e0a\u7279\u522b\u5173\u952e\uff0c\u5219\u53ef\u4ee5\u8bbe\u7f6e\u63a8\u8fdf\u5904\u7406\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff0c\u4ee5\u786e\u4fdd\u8be5\u4efb\u52a1\u59cb\u7ec8\u62a2\u5360\u7cfb\u7edf\u4e2d\u7684\u5176\u4ed6\u4efb\u52a1\u3002\u7136\u540e\uff0c\u53ef\u4ee5\u5728 ISR \u4e2d\u5b9e\u73b0\u5bf9 <code>portYIELD_FROM_ISR()</code> \u7684\u8c03\u7528\uff0c\u786e\u4fdd ISR \u76f4\u63a5\u8fd4\u56de\u5230\u4e2d\u65ad\u5904\u7406\u88ab\u63a8\u8fdf\u5230\u7684\u4efb\u52a1\u3002\u8fd9\u5c06\u786e\u4fdd\u6574\u4e2a\u4e8b\u4ef6\u5904\u7406\u8fde\u7eed\u6267\u884c\uff08\u6ca1\u6709\u4e2d\u65ad\uff09\uff0c\u5c31\u50cf\u5b83\u5168\u90e8\u5728 ISR \u5185\u90e8\u5b9e\u73b0\u4e00\u6837\u3002\u56fe 7.2 \u91cd\u590d\u4e86\u56fe 7.1 \u4e2d\u7684\u573a\u666f\uff0c\u4f46\u6587\u672c\u5df2\u66f4\u65b0\u4e3a\u63cf\u8ff0\u5982\u4f55\u4f7f\u7528\u4fe1\u53f7\u91cf\u63a7\u5236\u63a8\u8fdf\u5904\u7406\u4efb\u52a1\u7684\u6267\u884c\u3002</p> <p></p> <p> Figure 7.2 Using a binary semaphore to implement deferred interrupt processing</p> <p>\u63a8\u8fdf\u5904\u7406\u4efb\u52a1\u4f7f\u7528\u4fe1\u53f7\u91cf\u7684\u963b\u585e\u5f0f\u201c\u83b7\u53d6\u201d\u8c03\u7528\u4f5c\u4e3a\u8fdb\u5165\u963b\u585e\u72b6\u6001\u4ee5\u7b49\u5f85\u4e8b\u4ef6\u53d1\u751f\u7684\u65b9\u5f0f\u3002\u5f53\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0cISR \u4f7f\u7528\u5bf9\u540c\u4e00\u4fe1\u53f7\u91cf\u7684\u201c\u7ed9\u4e88\u201d\u64cd\u4f5c\u6765\u89e3\u9664\u4efb\u52a1\u7684\u963b\u585e\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u7ee7\u7eed\u6240\u9700\u7684\u4e8b\u4ef6\u5904\u7406\u3002</p> <p>\u201c\u83b7\u53d6\u4fe1\u53f7\u91cf\u201d\u548c\u201c\u7ed9\u4e88\u4fe1\u53f7\u91cf\u201d\u662f\u6839\u636e\u5176\u4f7f\u7528\u573a\u666f\u5177\u6709\u4e0d\u540c\u542b\u4e49\u7684\u6982\u5ff5\u3002\u5728\u6b64\u4e2d\u65ad\u540c\u6b65\u573a\u666f\u4e2d\uff0c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u53ef\u4ee5\u88ab\u6982\u5ff5\u5316\u4e3a\u4e00\u4e2a\u957f\u5ea6\u4e3a 1 \u7684\u961f\u5217\u3002\u961f\u5217\u4e00\u6b21\u6700\u591a\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u9879\u76ee\uff0c\u56e0\u6b64\u59cb\u7ec8\u4e3a\u7a7a\u6216\u6ee1\uff08\u56e0\u6b64\u4e3a\u4e8c\u8fdb\u5236\uff09\u3002\u901a\u8fc7\u8c03\u7528 <code>xSemaphoreTake()</code>\uff0c\u4e2d\u65ad\u5904\u7406\u88ab\u63a8\u8fdf\u5230\u7684\u4efb\u52a1\u6709\u6548\u5730\u5c1d\u8bd5\u4ece\u961f\u5217\u4e2d\u8bfb\u53d6\uff0c\u5e26\u6709\u963b\u585e\u65f6\u95f4\uff0c\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u5bfc\u81f4\u4efb\u52a1\u8fdb\u5165\u963b\u585e\u72b6\u6001\u3002\u5f53\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0cISR \u4f7f\u7528 <code>xSemaphoreGiveFromISR()</code> \u51fd\u6570\u5c06\u4ee4\u724c\uff08\u4fe1\u53f7\u91cf\uff09\u653e\u5165\u961f\u5217\u4e2d\uff0c\u4f7f\u961f\u5217\u53d8\u4e3a\u6ee1\u3002\u8fd9\u5bfc\u81f4\u4efb\u52a1\u9000\u51fa\u963b\u585e\u72b6\u6001\u5e76\u79fb\u9664\u4ee4\u724c\uff0c\u961f\u5217\u518d\u6b21\u53d8\u4e3a\u7a7a\u3002\u5f53\u4efb\u52a1\u5b8c\u6210\u5904\u7406\u540e\uff0c\u5b83\u518d\u6b21\u5c1d\u8bd5\u4ece\u961f\u5217\u4e2d\u8bfb\u53d6\uff0c\u53d1\u73b0\u961f\u5217\u4e3a\u7a7a\uff0c\u91cd\u65b0\u8fdb\u5165\u963b\u585e\u72b6\u6001\u4ee5\u7b49\u5f85\u4e0b\u4e00\u4e2a\u4e8b\u4ef6\u3002\u6b64\u5e8f\u5217\u5728\u56fe 7.3 \u4e2d\u6f14\u793a\u3002</p> <p>\u56fe 7.3 \u663e\u793a\u4e2d\u65ad\u201c\u7ed9\u4e88\u201d\u4fe1\u53f7\u91cf\uff0c\u5373\u4f7f\u5b83\u6ca1\u6709\u5148\u201c\u83b7\u53d6\u201d\u4fe1\u53f7\u91cf\uff0c\u4efb\u52a1\u201c\u83b7\u53d6\u201d\u4fe1\u53f7\u91cf\uff0c\u4f46\u4ece\u4e0d\u5c06\u5176\u8fd4\u56de\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8be5\u573a\u666f\u88ab\u63cf\u8ff0\u4e3a\u5728\u5199\u5165\u548c\u4ece\u961f\u5217\u4e2d\u8bfb\u53d6\u662f\u6982\u5ff5\u4e0a\u76f8\u4f3c\u7684\u3002\u5b83\u7ecf\u5e38\u5f15\u8d77\u6df7\u6dc6\uff0c\u56e0\u4e3a\u5b83\u4e0d\u9075\u5faa\u5176\u4ed6\u4fe1\u53f7\u91cf\u4f7f\u7528\u573a\u666f\u7684\u76f8\u540c\u89c4\u5219\uff0c\u5728\u8fd9\u4e9b\u573a\u666f\u4e2d\uff0c\u83b7\u53d6\u4fe1\u53f7\u91cf\u7684\u4efb\u52a1\u5fc5\u987b\u59cb\u7ec8\u5c06\u5176\u8fd4\u56de\u2014\u2014\u4f8b\u5982\u7b2c 8 \u7ae0\u201c\u8d44\u6e90\u7ba1\u7406\u201d\u4e2d\u63cf\u8ff0\u7684\u573a\u666f\u3002</p> <p></p> <p> Figure 7.3 Using a binary semaphore to synchronize a task with an interrupt</p>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#741-xsemaphorecreatebinary-api","title":"7.4.1 xSemaphoreCreateBinary() API \u51fd\u6570","text":"<p>FreeRTOS \u8fd8\u5305\u62ec <code>xSemaphoreCreateBinaryStatic()</code> \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u9759\u6001\u5206\u914d\u521b\u5efa\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u6240\u9700\u7684\u5185\u5b58\uff1a\u6240\u6709 FreeRTOS \u4fe1\u53f7\u91cf\u7684\u53e5\u67c4\u90fd\u5b58\u50a8\u5728 <code>SemaphoreHandle_t</code> \u7c7b\u578b\u7684\u53d8\u91cf\u4e2d\u3002</p> <p>\u5728\u4fe1\u53f7\u91cf\u53ef\u4ee5\u4f7f\u7528\u4e4b\u524d\uff0c\u5fc5\u987b\u5148\u521b\u5efa\u5b83\u3002\u8981\u521b\u5efa\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\uff0c\u8bf7\u4f7f\u7528 <code>xSemaphoreCreateBinary()</code> API \u51fd\u6570[^15]\u3002</p> <p>[^15]: \u4e00\u4e9b\u4fe1\u53f7\u91cf API \u51fd\u6570\u5b9e\u9645\u4e0a\u662f\u5b8f\uff0c\u800c\u4e0d\u662f\u51fd\u6570\u3002\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u5728\u672c\u4e66\u4e2d\u5c06\u5b83\u4eec\u7edf\u79f0\u4e3a\u51fd\u6570\u3002</p> <p></p> <pre><code>SemaphoreHandle_t xSemaphoreCreateBinary( void );\n</code></pre> <p>Listing 7.3 The xSemaphoreCreateBinary() API function prototype</p> <p>xSemaphoreCreateBinary() \u8fd4\u56de\u503c</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u5982\u679c\u8fd4\u56de NULL\uff0c\u5219\u8868\u793a\u7531\u4e8e FreeRTOS \u65e0\u6cd5\u5206\u914d\u4fe1\u53f7\u91cf\u6570\u636e\u7ed3\u6784\u6240\u9700\u7684\u5806\u5185\u5b58\u4e0d\u8db3\uff0c\u56e0\u6b64\u65e0\u6cd5\u521b\u5efa\u4fe1\u53f7\u91cf\u3002</p> <p>\u5982\u679c\u8fd4\u56de\u975e NULL \u503c\uff0c\u5219\u8868\u793a\u4fe1\u53f7\u91cf\u5df2\u6210\u529f\u521b\u5efa\u3002\u8fd4\u56de\u7684\u503c\u5e94\u5b58\u50a8\u4e3a\u521b\u5efa\u7684\u4fe1\u53f7\u91cf\u7684\u53e5\u67c4\u3002</p>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#742-xsemaphoretake-api","title":"7.4.2 xSemaphoreTake() API \u51fd\u6570","text":"<p>\u201c\u83b7\u53d6\u201d\u4fe1\u53f7\u91cf\u610f\u5473\u7740\u201c\u83b7\u5f97\u201d\u6216\u201c\u63a5\u6536\u201d\u4fe1\u53f7\u91cf\u3002\u53ea\u6709\u5728\u4fe1\u53f7\u91cf\u53ef\u7528\u65f6\uff0c\u624d\u80fd\u83b7\u53d6\u4fe1\u53f7\u91cf\u3002</p> <p>\u9664\u9012\u5f52\u4e92\u65a5\u9501\u5916\uff0c\u6240\u6709\u7c7b\u578b\u7684 FreeRTOS \u4fe1\u53f7\u91cf\u90fd\u53ef\u4ee5\u4f7f\u7528 <code>xSemaphoreTake()</code> \u51fd\u6570\u201c\u83b7\u53d6\u201d\u3002</p> <p><code>xSemaphoreTake()</code> \u4e0d\u80fd\u5728\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u3002</p> <p></p> <pre><code>BaseType_t xSemaphoreTake( SemaphoreHandle_t xSemaphore, TickType_t xTicksToWait );\n</code></pre> <p>Listing 7.4 The xSemaphoreTake() API function prototype</p> <p>xSemaphoreTake() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>xSemaphore</code></li> </ul> <p>\u6b63\u5728\u201c\u83b7\u53d6\u201d\u7684\u4fe1\u53f7\u91cf\u3002</p> <p>\u4fe1\u53f7\u91cf\u901a\u8fc7 <code>SemaphoreHandle_t</code> \u7c7b\u578b\u7684\u53d8\u91cf\u5f15\u7528\u3002\u5fc5\u987b\u663e\u5f0f\u521b\u5efa\u5b83\u624d\u80fd\u4f7f\u7528\u3002</p> <ul> <li><code>xTicksToWait</code></li> </ul> <p>\u4efb\u52a1\u5728\u4fe1\u53f7\u91cf\u4e0d\u53ef\u7528\u65f6\u5e94\u5728\u963b\u585e\u72b6\u6001\u4e2d\u7b49\u5f85\u4fe1\u53f7\u91cf\u7684\u6700\u957f\u65f6\u95f4\u3002</p> <p>\u5982\u679c <code>xTicksToWait</code> \u4e3a\u96f6\uff0c\u5219\u5982\u679c\u4fe1\u53f7\u91cf\u4e0d\u53ef\u7528\uff0c<code>xSemaphoreTake()</code> \u5c06\u7acb\u5373\u8fd4\u56de\u3002</p> <p>\u5757\u65f6\u95f4\u4ee5\u6ef4\u7b54\u5468\u671f\u4e3a\u5355\u4f4d\u6307\u5b9a\uff0c\u56e0\u6b64\u5b83\u6240\u4ee3\u8868\u7684\u7edd\u5bf9\u65f6\u95f4\u53d6\u51b3\u4e8e\u6ef4\u7b54\u9891\u7387\u3002\u5b8f <code>pdMS_TO_TICKS()</code> \u53ef\u7528\u4e8e\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5\u6ef4\u7b54\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u3002</p> <p>\u5c06 <code>xTicksToWait</code> \u8bbe\u7f6e\u4e3a <code>portMAX_DELAY</code> \u5c06\u5bfc\u81f4\u4efb\u52a1\u5728\u6ca1\u6709\u8d85\u65f6\u7684\u60c5\u51b5\u4e0b\u65e0\u9650\u671f\u7b49\u5f85\u4fe1\u53f7\u91cf\uff08\u524d\u63d0\u662f FreeRTOSConfig.h \u4e2d\u5c06 <code>INCLUDE_vTaskSuspend</code> \u8bbe\u7f6e\u4e3a 1\uff09\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u53ef\u80fd\u6709\u4e24\u79cd\u8fd4\u56de\u503c\uff1a</p> <ul> <li> <p><code>pdPASS</code></p> <p>\u4ec5\u5f53\u8c03\u7528 <code>xSemaphoreTake()</code> \u6210\u529f\u83b7\u53d6\u4fe1\u53f7\u91cf\u65f6\uff0c\u624d\u4f1a\u8fd4\u56de <code>pdPASS</code>\u3002</p> <p>\u5982\u679c\u6307\u5b9a\u4e86\u5757\u65f6\u95f4\uff08<code>xTicksToWait</code> \u4e0d\u4e3a\u96f6\uff09\uff0c\u5219\u53ef\u80fd\u662f\u8c03\u7528\u4efb\u52a1\u88ab\u7f6e\u4e8e\u963b\u585e\u72b6\u6001\u4ee5\u7b49\u5f85\u4fe1\u53f7\u91cf\uff0c\u4f46\u4fe1\u53f7\u91cf\u5728\u5757\u65f6\u95f4\u5230\u671f\u4e4b\u524d\u53d8\u4e3a\u53ef\u7528\u3002</p> </li> <li> <p><code>pdFALSE</code></p> <p>\u4fe1\u53f7\u91cf\u4e0d\u53ef\u7528\u3002</p> <p>\u5982\u679c\u6307\u5b9a\u4e86\u5757\u65f6\u95f4\uff08<code>xTicksToWait</code> \u4e0d\u4e3a\u96f6\uff09\uff0c\u5219\u8c03\u7528\u4efb\u52a1\u5c06\u88ab\u7f6e\u4e8e\u963b\u585e\u72b6\u6001\u4ee5\u7b49\u5f85\u4fe1\u53f7\u91cf\u53d8\u4e3a\u53ef\u7528\uff0c\u4f46\u5757\u65f6\u95f4\u5728\u6b64\u4e4b\u524d\u5df2\u5230\u671f\u3002</p> </li> </ul>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#743-xsemaphoregivefromisr-api","title":"7.4.3 xSemaphoreGiveFromISR() API \u51fd\u6570","text":"<p>\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u548c\u8ba1\u6570\u4fe1\u53f7\u91cf^16\u53ef\u4ee5\u4f7f\u7528 <code>xSemaphoreGiveFromISR()</code> \u51fd\u6570\u201c\u7ed9\u4e88\u201d\u3002</p> <p><code>xSemaphoreGiveFromISR()</code> \u662f <code>xSemaphoreGive()</code> \u7684\u4e2d\u65ad\u5b89\u5168\u7248\u672c\uff0c\u56e0\u6b64\u5177\u6709\u672c\u7ae0\u5f00\u5934\u63cf\u8ff0\u7684 <code>pxHigherPriorityTaskWoken</code> \u53c2\u6570\u3002</p> <p></p> <pre><code>BaseType_t xSemaphoreGiveFromISR( SemaphoreHandle_t xSemaphore,\n                                  BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre> <p>Listing 7.5 The xSemaphoreGiveFromISR() API function prototype</p> <p>xSemaphoreGiveFromISR() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>xSemaphore</code></li> </ul> <p>\u6b63\u5728\u201c\u7ed9\u4e88\u201d\u7684\u4fe1\u53f7\u91cf\u3002</p> <p>\u4fe1\u53f7\u91cf\u901a\u8fc7 <code>SemaphoreHandle_t</code> \u7c7b\u578b\u7684\u53d8\u91cf\u5f15\u7528\uff0c\u5fc5\u987b\u663e\u5f0f\u521b\u5efa\u624d\u80fd\u4f7f\u7528\u3002</p> <ul> <li><code>pxHigherPriorityTaskWoken</code></li> </ul> <p>\u53ef\u80fd\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u4efb\u52a1\u5728\u4fe1\u53f7\u91cf\u4e0a\u88ab\u963b\u585e\uff0c\u7b49\u5f85\u4fe1\u53f7\u91cf\u53d8\u4e3a\u53ef\u7528\u3002\u8c03\u7528 <code>xSemaphoreGiveFromISR()</code> \u53ef\u4ee5\u4f7f\u4fe1\u53f7\u91cf\u53d8\u4e3a\u53ef\u7528\uff0c\u4ece\u800c\u5bfc\u81f4\u7b49\u5f85\u4fe1\u53f7\u91cf\u7684\u4efb\u52a1\u79bb\u5f00\u963b\u585e\u72b6\u6001\u3002\u5982\u679c\u8c03\u7528 <code>xSemaphoreGiveFromISR()</code> \u5bfc\u81f4\u4efb\u52a1\u79bb\u5f00\u963b\u585e\u72b6\u6001\uff0c\u5e76\u4e14\u89e3\u9664\u963b\u585e\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5f53\u524d\u6267\u884c\u4efb\u52a1\uff08\u88ab\u4e2d\u65ad\u7684\u4efb\u52a1\uff09\u7684\u4f18\u5148\u7ea7\uff0c\u5219\u5728\u5185\u90e8\uff0c<code>xSemaphoreGiveFromISR()</code> \u5c06 <code>*pxHigherPriorityTaskWoken</code> \u8bbe\u7f6e\u4e3a <code>pdTRUE</code>\u3002</p> <p>\u5982\u679c <code>xSemaphoreGiveFromISR()</code> \u5c06\u6b64\u503c\u8bbe\u7f6e\u4e3a <code>pdTRUE</code>\uff0c\u5219\u901a\u5e38\u5e94\u5728\u4e2d\u65ad\u9000\u51fa\u4e4b\u524d\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002\u8fd9\u5c06\u786e\u4fdd\u4e2d\u65ad\u76f4\u63a5\u8fd4\u56de\u5230\u6700\u9ad8\u4f18\u5148\u7ea7\u7684\u5c31\u7eea\u72b6\u6001\u4efb\u52a1\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u53ef\u80fd\u6709\u4e24\u79cd\u8fd4\u56de\u503c\uff1a</p> <ul> <li> <p><code>pdPASS</code></p> <p>\u4ec5\u5f53\u8c03\u7528 <code>xSemaphoreGiveFromISR()</code> \u6210\u529f\u65f6\uff0c\u624d\u4f1a\u8fd4\u56de <code>pdPASS</code>\u3002</p> </li> <li> <p><code>pdFAIL</code></p> <p>\u5982\u679c\u4fe1\u53f7\u91cf\u5df2\u7ecf\u53ef\u7528\uff0c\u5219\u65e0\u6cd5\u518d\u6b21\u7ed9\u4e88\u4fe1\u53f7\u91cf\uff0c<code>xSemaphoreGiveFromISR()</code> \u5c06\u8fd4\u56de <code>pdFAIL</code>\u3002</p> </li> </ul>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#_1","title":"7 \u4e2d\u65ad\u7ba1\u7406","text":"<p>Example 7.1 Using a binary semaphore to synchronize a task with an interrupt</p> <p>\u6b64\u793a\u4f8b\u4f7f\u7528\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u89e3\u9664\u5bf9\u4efb\u52a1\u7684\u963b\u585e\uff0c\u6709\u6548\u5730\u5c06\u4efb\u52a1\u4e0e\u4e2d\u65ad\u540c\u6b65\u3002</p> <p>\u4e00\u4e2a\u7b80\u5355\u7684\u5468\u671f\u6027\u4efb\u52a1\u7528\u4e8e\u6bcf 500 \u6beb\u79d2\u751f\u6210\u4e00\u6b21\u8f6f\u4ef6\u4e2d\u65ad\u3002\u51fa\u4e8e\u65b9\u4fbf\uff0c\u4f7f\u7528\u8f6f\u4ef6\u4e2d\u65ad\uff0c\u56e0\u4e3a\u5728\u67d0\u4e9b\u76ee\u6807\u73af\u5883\u4e2d\u6302\u94a9\u5230\u771f\u5b9e\u4e2d\u65ad\u7684\u590d\u6742\u6027\u3002\u56fe 7.6 \u663e\u793a\u4e86\u5468\u671f\u6027\u4efb\u52a1\u7684\u5b9e\u73b0\u3002\u8bf7\u6ce8\u610f\uff0c\u4efb\u52a1\u5728\u751f\u6210\u4e2d\u65ad\u4e4b\u524d\u548c\u4e4b\u540e\u90fd\u4f1a\u6253\u5370\u51fa\u4e00\u6761\u5b57\u7b26\u4e32\u3002\u8fd9\u5141\u8bb8\u5728\u6267\u884c\u793a\u4f8b\u65f6\u4ece\u8f93\u51fa\u4e2d\u89c2\u5bdf\u5230\u6267\u884c\u987a\u5e8f\u3002</p> <p></p> <pre><code>/* The number of the software interrupt used in this example. The code\n   shown is from the Windows project, where numbers 0 to 2 are used by the\n   FreeRTOS Windows port itself, so 3 is the first number available to the\n   application. */\n#define mainINTERRUPT_NUMBER 3\n\nstatic void vPeriodicTask( void *pvParameters )\n{\n    const TickType_t xDelay500ms = pdMS_TO_TICKS( 500UL );\n\n    /* As per most tasks, this task is implemented within an infinite loop. */\n    for( ;; )\n    {\n        /* Block until it is time to generate the software interrupt again. */\n        vTaskDelay( xDelay500ms );\n\n        /* Generate the interrupt, printing a message both before and after\n           the interrupt has been generated, so the sequence of execution is\n           evident from the output.\n\n           The syntax used to generate a software interrupt is dependent on\n           the FreeRTOS port being used. The syntax used below can only be\n           used with the FreeRTOS Windows port, in which such interrupts are\n           only simulated. */\n        vPrintString( \"Periodic task - About to generate an interrupt.\\r\\n\" );\n        vPortGenerateSimulatedInterrupt( mainINTERRUPT_NUMBER );\n        vPrintString( \"Periodic task - Interrupt generated.\\r\\n\\r\\n\\r\\n\" );\n    }\n}\n</code></pre> <p>Listing 7.6 Implementation of the task that periodically generates a software interrupt in Example 7.1</p> <p>\u56fe 7.7 \u663e\u793a\u4e86\u4e2d\u65ad\u5904\u7406\u88ab\u63a8\u8fdf\u5230\u7684\u4efb\u52a1\u7684\u5b9e\u73b0\u2014\u2014\u901a\u8fc7\u4f7f\u7528\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u4e0e\u8f6f\u4ef6\u4e2d\u65ad\u540c\u6b65\u7684\u4efb\u52a1\u3002\u518d\u6b21\uff0c\u5728\u4efb\u52a1\u7684\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u6253\u5370\u51fa\u4e00\u6761\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u5728\u6267\u884c\u793a\u4f8b\u65f6\u4ece\u8f93\u51fa\u4e2d\u53ef\u4ee5\u660e\u663e\u770b\u51fa\u4efb\u52a1\u548c\u4e2d\u65ad\u7684\u6267\u884c\u987a\u5e8f\u3002</p> <p>\u5e94\u8be5\u6ce8\u610f\u7684\u662f\uff0c\u5c3d\u7ba1\u56fe 7.7 \u4e2d\u663e\u793a\u7684\u4ee3\u7801\u5bf9\u4e8e\u793a\u4f8b 7.1 \u662f\u8db3\u591f\u7684\uff0c\u4f46\u5bf9\u4e8e\u7531\u786c\u4ef6\u5916\u8bbe\u751f\u6210\u4e2d\u65ad\u7684\u573a\u666f\u6765\u8bf4\uff0c\u5b83\u662f\u4e0d\u591f\u7684\u3002\u540e\u9762\u7684\u5b50\u7ae0\u8282\u5c06\u63cf\u8ff0\u5982\u4f55\u66f4\u6539\u4ee3\u7801\u7ed3\u6784\uff0c\u4ee5\u4f7f\u5176\u9002\u7528\u4e8e\u786c\u4ef6\u751f\u6210\u7684\u4e2d\u65ad\u3002</p> <p></p> <pre><code>static void vHandlerTask( void *pvParameters )\n{\n    /* As per most tasks, this task is implemented within an infinite loop. */\n    for( ;; )\n    {\n        /* Use the semaphore to wait for the event. The semaphore was created\n           before the scheduler was started, so before this task ran for the\n           first time. The task blocks indefinitely, meaning this function\n           call will only return once the semaphore has been successfully\n           obtained - so there is no need to check the value returned by\n           xSemaphoreTake(). */\n        xSemaphoreTake( xBinarySemaphore, portMAX_DELAY );\n\n        /* To get here the event must have occurred. Process the event (in\n           this Case, just print out a message). */\n        vPrintString( \"Handler task - Processing event.\\r\\n\" );\n    }\n}\n</code></pre> <p>Listing 7.7 The implementation of the task to which the interrupt processing is deferred (the task that synchronizes with the interrupt) in Example 7.1</p> <p>\u56fe 7.8 \u663e\u793a\u4e86 ISR\u3002\u5b83\u6240\u505a\u7684\u5f88\u5c11\uff0c\u4ec5\u4ec5\u662f\u201c\u7ed9\u4e88\u201d\u4fe1\u53f7\u91cf\u4ee5\u89e3\u9664\u5bf9\u4e2d\u65ad\u5904\u7406\u88ab\u63a8\u8fdf\u5230\u7684\u4efb\u52a1\u7684\u963b\u585e\u3002</p> <p>\u8bf7\u6ce8\u610f <code>xHigherPriorityTaskWoken</code> \u53d8\u91cf\u7684\u7528\u6cd5\u3002\u5728\u8c03\u7528 <code>xSemaphoreGiveFromISR()</code> \u4e4b\u524d\u5c06\u5176\u8bbe\u7f6e\u4e3a <code>pdFALSE</code>\uff0c\u7136\u540e\u5728\u8c03\u7528 <code>portYIELD_FROM_ISR()</code> \u65f6\u7528\u4f5c\u53c2\u6570\u3002\u5982\u679c\u5728 <code>xSemaphoreGiveFromISR()</code> \u4e2d <code>xHigherPriorityTaskWoken</code> \u7b49\u4e8e <code>pdTRUE</code>\uff0c\u5219\u5c06\u8bf7\u6c42\u4e0a\u4e0b\u6587\u5207\u6362\u3002\u5982\u679c\u5728 ISR \u6267\u884c\u671f\u95f4 <code>xHigherPriorityTaskWoken</code> \u4ecd\u4e3a <code>pdFALSE</code>\uff0c\u5219\u8c03\u7528 <code>portYIELD_FROM_ISR()</code> \u5c06\u6ca1\u6709\u6548\u679c\u3002\u4e0e\u5927\u591a\u6570 FreeRTOS \u79fb\u690d\u4e0d\u540c\uff0cWindows \u79fb\u690d\u8981\u6c42 ISR \u8fd4\u56de\u4e00\u4e2a\u503c\uff0c<code>portYIELD_FROM_ISR()</code> \u5b8f\u7684\u5b9e\u73b0\u5305\u542b\u8fd4\u56de\u8bed\u53e5\uff0c\u56e0\u6b64\u56fe 7.8 \u4e2d\u6ca1\u6709\u663e\u793a\u663e\u5f0f\u8fd4\u56de\u503c\u3002</p> <p></p> <pre><code>static uint32_t ulExampleInterruptHandler( void )\n{\n    BaseType_t xHigherPriorityTaskWoken;\n\n    /* The xHigherPriorityTaskWoken parameter must be initialized to\n       pdFALSE as it will get set to pdTRUE inside the interrupt safe\n       API function if a context switch is required. */\n    xHigherPriorityTaskWoken = pdFALSE;\n\n    /* 'Give' the semaphore to unblock the task, passing in the address of\n       xHigherPriorityTaskWoken as the interrupt safe API function's\n       pxHigherPriorityTaskWoken parameter. */\n    xSemaphoreGiveFromISR( xBinarySemaphore, &amp;xHigherPriorityTaskWoken );\n\n    /* Pass the xHigherPriorityTaskWoken value into portYIELD_FROM_ISR().\n       If xHigherPriorityTaskWoken was set to pdTRUE inside\n       xSemaphoreGiveFromISR() then calling portYIELD_FROM_ISR() will request\n       a context switch. If xHigherPriorityTaskWoken is still pdFALSE then\n       calling portYIELD_FROM_ISR() will have no effect. Unlike most FreeRTOS\n       ports, the Windows port requires the ISR to return a value - the return\n       statement is inside the Windows version of portYIELD_FROM_ISR(). */\n    portYIELD_FROM_ISR( xHigherPriorityTaskWoken );\n}\n</code></pre> <p>Listing 7.8 The ISR for the software interrupt used in Example 7.1</p> <p><code>main()</code> \u51fd\u6570\u521b\u5efa\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\uff0c\u521b\u5efa\u4efb\u52a1\uff0c\u5b89\u88c5\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff0c\u5e76\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u3002\u5176\u5b9e\u73b0\u5982\u56fe 7.9 \u6240\u793a\u3002</p> <p>\u5b89\u88c5\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u7684\u51fd\u6570\u7684\u8bed\u6cd5\u7279\u5b9a\u4e8e FreeRTOS Windows \u79fb\u690d\uff0c\u53ef\u80fd\u4e0e\u5176\u4ed6 FreeRTOS \u79fb\u690d\u4e0d\u540c\u3002\u6709\u5173\u6240\u4f7f\u7528\u79fb\u690d\u6240\u9700\u8bed\u6cd5\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 FreeRTOS.org \u7f51\u7ad9\u4e0a\u7684\u7279\u5b9a\u4e8e\u79fb\u690d\u7684\u6587\u6863\u9875\u9762\uff0c\u4ee5\u53ca FreeRTOS \u4e0b\u8f7d\u4e2d\u63d0\u4f9b\u7684\u793a\u4f8b\u3002</p> <p></p> <pre><code>int main( void )\n{\n    /* Before a semaphore is used it must be explicitly created. In this\n       example a binary semaphore is created. */\n    xBinarySemaphore = xSemaphoreCreateBinary();\n\n    /* Check the semaphore was created successfully. */\n    if( xBinarySemaphore != NULL )\n    {\n        /* Create the 'handler' task, which is the task to which interrupt\n           processing is deferred. This is the task that will be synchronized\n           with the interrupt. The handler task is created with a high priority\n           to ensure it runs im../mediately after the interrupt exits. In this\n           case a priority of 3 is chosen. */\n        xTaskCreate( vHandlerTask, \"Handler\", 1000, NULL, 3, NULL );\n\n        /* Create the task that will periodically generate a software\n           interrupt. This is created with a priority below the handler task\n           to ensure it will get preempted each time the handler task exits\n           the Blocked state. */\n        xTaskCreate( vPeriodicTask, \"Periodic\", 1000, NULL, 1, NULL );\n\n        /* Install the handler for the software interrupt. The syntax necessary\n           to do this is dependent on the FreeRTOS port being used. The syntax\n           shown here can only be used with the FreeRTOS windows port, where\n           such interrupts are only simulated. */\n        vPortSetInterruptHandler( mainINTERRUPT_NUMBER,\n                                  ulExampleInterruptHandler );\n\n        /* Start the scheduler so the created tasks start executing. */\n        vTaskStartScheduler();\n    }\n\n    /* As normal, the following line should never be reached. */\n    for( ;; );\n}\n</code></pre> <p>Listing 7.9 The implementation of main() for Example 7.1</p> <p>\u5f53\u6267\u884c\u793a\u4f8b 7.1 \u65f6\uff0c\u4ea7\u751f\u7684\u8f93\u51fa\u5982\u56fe 7.4 \u6240\u793a\u3002\u5982\u9884\u671f\u7684\u90a3\u6837\uff0c<code>vHandlerTask()</code> \u5728\u4e2d\u65ad\u751f\u6210\u540e\u7acb\u5373\u8fdb\u5165\u8fd0\u884c\u72b6\u6001\uff0c\u56e0\u6b64\u8be5\u4efb\u52a1\u7684\u8f93\u51fa\u63d2\u5165\u4e86\u5468\u671f\u6027\u4efb\u52a1\u7684\u8f93\u51fa\u4e2d\u3002\u56fe 7.5 \u63d0\u4f9b\u4e86\u8fdb\u4e00\u6b65\u7684\u89e3\u91ca\u3002</p> <p> </p> <p> Figure 7.4 The output produced when Example 7.1 is executed</p> <p> Figure 7.5 The sequence of execution when Example 7.1 is executed</p>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#744-71","title":"7.4.4 \u6539\u8fdb\u793a\u4f8b 7.1 \u4e2d\u4f7f\u7528\u7684\u4efb\u52a1\u7684\u5b9e\u73b0","text":"<p>\u793a\u4f8b 7.1 \u4f7f\u7528\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u5c06\u4efb\u52a1\u4e0e\u4e2d\u65ad\u540c\u6b65\u3002\u6267\u884c\u987a\u5e8f\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u4e2d\u65ad\u53d1\u751f\u3002</p> </li> <li> <p>ISR \u6267\u884c\u5e76\u201c\u7ed9\u4e88\u201d\u4fe1\u53f7\u91cf\u4ee5\u89e3\u9664\u4efb\u52a1\u7684\u963b\u585e\u3002</p> </li> <li> <p>\u4efb\u52a1\u5728 ISR \u4e4b\u540e\u7acb\u5373\u6267\u884c\uff0c\u5e76\u201c\u83b7\u53d6\u201d\u4fe1\u53f7\u91cf\u3002</p> </li> <li> <p>\u4efb\u52a1\u5904\u7406\u4e8b\u4ef6\uff0c\u7136\u540e\u5c1d\u8bd5\u518d\u6b21\u201c\u83b7\u53d6\u201d\u4fe1\u53f7\u91cf\u2014\u2014\u7531\u4e8e\u4fe1\u53f7\u91cf\u5c1a\u4e0d\u53ef\u7528\u800c\u8fdb\u5165\u963b\u585e\u72b6\u6001\uff08\u53e6\u4e00\u4e2a\u4e2d\u65ad\u5c1a\u672a\u53d1\u751f\uff09\u3002</p> </li> </ol> <p>\u793a\u4f8b 7.1 \u4e2d\u4f7f\u7528\u7684\u63a8\u8fdf\u4e2d\u65ad\u5904\u7406\u4efb\u52a1\u7684\u7ed3\u6784\u4ec5\u5728\u4e2d\u65ad\u53d1\u751f\u9891\u7387\u76f8\u5bf9\u8f83\u4f4e\u65f6\u662f\u8db3\u591f\u7684\u3002\u8981\u7406\u89e3\u539f\u56e0\uff0c\u8bf7\u8003\u8651\u5982\u679c\u5728\u4efb\u52a1\u5b8c\u6210\u5bf9\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u7684\u5904\u7406\u4e4b\u524d\u53d1\u751f\u4e86\u7b2c\u4e8c\u4e2a\uff0c\u7136\u540e\u662f\u7b2c\u4e09\u4e2a\u4e2d\u65ad\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1a</p> <ul> <li> <p>\u5f53\u7b2c\u4e8c\u4e2a ISR \u6267\u884c\u65f6\uff0c\u4fe1\u53f7\u91cf\u5c06\u4e3a\u7a7a\uff0c\u56e0\u6b64 ISR \u5c06\u7ed9\u4e88\u4fe1\u53f7\u91cf\uff0c\u5e76\u4e14\u4efb\u52a1\u5c06\u5728\u5b8c\u6210\u5bf9\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u7684\u5904\u7406\u540e\u7acb\u5373\u5904\u7406\u7b2c\u4e8c\u4e2a\u4e8b\u4ef6\u3002\u8be5\u573a\u666f\u5982\u56fe 7.6 \u6240\u793a\u3002</p> </li> <li> <p>\u5f53\u7b2c\u4e09\u4e2a ISR \u6267\u884c\u65f6\uff0c\u4fe1\u53f7\u91cf\u5df2\u7ecf\u53ef\u7528\uff0cISR \u5c06\u65e0\u6cd5\u518d\u6b21\u7ed9\u4e88\u4fe1\u53f7\u91cf\uff0c\u56e0\u6b64\u4efb\u52a1\u5c06\u65e0\u6cd5\u5f97\u77e5\u7b2c\u4e09\u4e2a\u4e8b\u4ef6\u7684\u53d1\u751f\u3002\u8be5\u573a\u666f\u5982\u56fe 7.7 \u6240\u793a\u3002</p> </li> </ul> <p> </p> <p> Figure 7.6 The scenario when one interrupt occurs before the task has finished processing the first event</p> <p> Figure 7.7 The scenario when two interrupts occur before the task has finished processing the first event</p> <p>\u793a\u4f8b 7.1 \u4e2d\u7684\u63a8\u8fdf\u4e2d\u65ad\u5904\u7406\u4efb\u52a1\u7684\u7ed3\u6784\u662f\u8fd9\u6837\u7684\uff0c\u5b83\u5728\u6bcf\u6b21\u8c03\u7528 <code>xSemaphoreTake()</code> \u4e4b\u95f4\u4ec5\u5904\u7406\u4e00\u4e2a\u4e8b\u4ef6\u3002\u8fd9\u5bf9\u4e8e\u793a\u4f8b 7.1 \u662f\u8db3\u591f\u7684\uff0c\u56e0\u4e3a\u751f\u6210\u4e2d\u65ad\u7684\u64cd\u4f5c\u662f\u7531\u8f6f\u4ef6\u89e6\u53d1\u7684\uff0c\u5e76\u4e14\u53d1\u751f\u5728\u53ef\u9884\u6d4b\u7684\u65f6\u95f4\u3002\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u4e2d\u65ad\u662f\u7531\u786c\u4ef6\u751f\u6210\u7684\uff0c\u5e76\u4e14\u5728\u4e0d\u53ef\u9884\u6d4b\u7684\u65f6\u95f4\u53d1\u751f\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u6700\u5c0f\u5316\u4e22\u5931\u4e2d\u65ad\u7684\u53ef\u80fd\u6027\uff0c\u63a8\u8fdf\u4e2d\u65ad\u5904\u7406\u4efb\u52a1\u7684\u7ed3\u6784\u5fc5\u987b\u662f\u8fd9\u6837\u7684\uff0c\u5728\u6bcf\u6b21\u8c03\u7528 <code>xSemaphoreTake()</code> \u4e4b\u95f4\u5904\u7406\u6240\u6709\u5df2\u7ecf\u5b58\u5728\u7684\u4e8b\u4ef6[^17]\u3002\u56fe 7.10 \u663e\u793a\u4e86\u5982\u4f55\u6784\u5efa UART \u7684\u63a8\u8fdf\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u3002</p> <p>[^17]: \u6216\u8005\uff0c\u53ef\u4ee5\u4f7f\u7528\u8ba1\u6570\u4fe1\u53f7\u91cf\u6216\u76f4\u63a5\u4efb\u52a1\u901a\u77e5\u6765\u8ba1\u7b97\u4e8b\u4ef6\u3002\u8ba1\u6570\u4fe1\u53f7\u91cf\u5c06\u5728\u4e0b\u4e00\u8282\u4e2d\u4ecb\u7ecd\u3002\u76f4\u63a5\u4efb\u52a1\u901a\u77e5\u5c06\u5728\u7b2c 10 \u7ae0\u201c\u4efb\u52a1\u901a\u77e5\u201d\u4e2d\u4ecb\u7ecd\u3002\u7531\u4e8e\u76f4\u63a5\u4efb\u52a1\u901a\u77e5\u5728\u8fd0\u884c\u65f6\u548c RAM \u4f7f\u7528\u65b9\u9762\u6700\u6709\u6548\uff0c\u56e0\u6b64\u5b83\u4eec\u662f\u9996\u9009\u65b9\u6cd5\u3002</p> <p>\u793a\u4f8b 7.1 \u4e2d\u7684\u63a8\u8fdf\u4e2d\u65ad\u5904\u7406\u8fd8\u6709\u4e00\u4e2a\u5f31\u70b9\uff1b\u5b83\u5728\u8c03\u7528 <code>xSemaphoreTake()</code> \u65f6\u6ca1\u6709\u4f7f\u7528\u8d85\u65f6\u3002\u76f8\u53cd\uff0c\u4efb\u52a1\u5c06 <code>portMAX_DELAY</code> \u4f5c\u4e3a <code>xSemaphoreTake()</code> \u7684 <code>xTicksToWait</code> \u53c2\u6570\uff0c\u8fd9\u5bfc\u81f4\u4efb\u52a1\u5728\u6ca1\u6709\u8d85\u65f6\u7684\u60c5\u51b5\u4e0b\u65e0\u9650\u671f\u7b49\u5f85\u4fe1\u53f7\u91cf\u3002\u7531\u4e8e\u793a\u4f8b\u4ee3\u7801\u7b80\u5316\u4e86\u793a\u4f8b\u7ed3\u6784\uff0c\u56e0\u6b64\u901a\u5e38\u5728\u793a\u4f8b\u4ee3\u7801\u4e2d\u4f7f\u7528\u65e0\u9650\u8d85\u65f6\uff0c\u56e0\u4e3a\u8fd9\u4f7f\u793a\u4f8b\u66f4\u6613\u4e8e\u7406\u89e3\u3002\u7136\u800c\uff0c\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u65e0\u9650\u8d85\u65f6\u901a\u5e38\u662f\u4e0d\u597d\u7684\u505a\u6cd5\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f7f\u5f97\u5728\u9519\u8bef\u53d1\u751f\u65f6\u96be\u4ee5\u6062\u590d\u3002\u4f8b\u5982\uff0c\u8003\u8651\u4e00\u4e2a\u4efb\u52a1\u5728\u7b49\u5f85\u4e2d\u65ad\u7ed9\u4e88\u4fe1\u53f7\u91cf\uff0c\u4f46\u786c\u4ef6\u9519\u8bef\u72b6\u6001\u963b\u6b62\u4e2d\u65ad\u88ab\u751f\u6210\uff1a</p> <ul> <li> <p>\u5982\u679c\u4efb\u52a1\u5728\u6ca1\u6709\u8d85\u65f6\u7684\u60c5\u51b5\u4e0b\u7b49\u5f85\uff0c\u5b83\u5c06\u65e0\u6cd5\u5f97\u77e5\u9519\u8bef\u72b6\u6001\uff0c\u5e76\u5c06\u6c38\u8fdc\u7b49\u5f85\u3002</p> </li> <li> <p>\u5982\u679c\u4efb\u52a1\u5728\u8d85\u65f6\u7684\u60c5\u51b5\u4e0b\u7b49\u5f85\uff0c\u5219\u5f53\u8d85\u65f6\u5230\u671f\u65f6\uff0c<code>xSemaphoreTake()</code> \u5c06\u8fd4\u56de <code>pdFAIL</code>\uff0c\u7136\u540e\u4efb\u52a1\u53ef\u4ee5\u5728\u4e0b\u6b21\u6267\u884c\u65f6\u68c0\u6d4b\u5e76\u6e05\u9664\u9519\u8bef\u3002\u6b64\u573a\u666f\u4e5f\u5728\u56fe 7.10 \u4e2d\u6f14\u793a\u3002</p> </li> </ul> <p></p> <pre><code>static void vUARTReceiveHandlerTask( void *pvParameters )\n{\n    /* xMaxExpectedBlockTime holds the maximum time expected between two\n       interrupts. */\n    const TickType_t xMaxExpectedBlockTime = pdMS_TO_TICKS( 500 );\n\n    /* As per most tasks, this task is implemented within an infinite loop. */\n    for( ;; )\n    {\n        /* The semaphore is 'given' by the UART's receive (Rx) interrupt.\n           Wait a maximum of xMaxExpectedBlockTime ticks for the next\n           interrupt. */\n        if( xSemaphoreTake( xBinarySemaphore, xMaxExpectedBlockTime ) == pdPASS)\n        {\n            /* The semaphore was obtained. Process ALL pending Rx events before\n               calling xSemaphoreTake() again. Each Rx event will have placed a\n               character in the UART's receive FIFO, and UART_RxCount() is\n               assumed to return the number of characters in the FIFO. */\n            while( UART_RxCount() &gt; 0 )\n            {\n                /* UART_ProcessNextRxEvent() is assumed to process one Rx\n                   character, reducing the number of characters in the FIFO\n                   by 1. */\n                UART_ProcessNextRxEvent();\n            }\n\n            /* No more Rx events are pending (there are no more characters in\n               the FIFO), so loop back and call xSemaphoreTake() to wait for\n               the next interrupt. Any interrupts occurring between this point\n               in the code and the call to xSemaphoreTake() will be latched in\n               the semaphore, so will not be lost. */\n        }\n        else\n        {\n            /* An event was not received within the expected time. Check for,\n               and if necessary clear, any error conditions in the UART that\n               might be preventing the UART from generating any more\n               interrupts. */\n            UART_ClearErrors();\n        }\n    }\n}\n</code></pre> <p>Listing 7.10 The recommended structure of a deferred interrupt processing task, using a UART receive handler as an example</p>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#75","title":"7.5 \u8ba1\u6570\u4fe1\u53f7\u91cf","text":"<p>\u6b63\u5982\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u53ef\u4ee5\u88ab\u89c6\u4e3a\u957f\u5ea6\u4e3a\u4e00\u7684\u961f\u5217\uff0c\u8ba1\u6570\u4fe1\u53f7\u91cf\u53ef\u4ee5\u88ab\u89c6\u4e3a\u957f\u5ea6\u5927\u4e8e\u4e00\u7684\u961f\u5217\u3002\u4efb\u52a1\u5bf9\u5b58\u50a8\u5728\u961f\u5217\u4e2d\u7684\u6570\u636e\u4e0d\u611f\u5174\u8da3\u2014\u2014\u53ea\u5bf9\u961f\u5217\u4e2d\u7684\u9879\u76ee\u6570\u91cf\u611f\u5174\u8da3\u3002 <code>configUSE_COUNTING_SEMAPHORES</code> \u5fc5\u987b\u5728 FreeRTOSConfig.h \u4e2d\u8bbe\u7f6e\u4e3a 1\uff0c\u624d\u80fd\u4f7f\u7528\u8ba1\u6570\u4fe1\u53f7\u91cf\u3002</p> <p>\u6bcf\u5f53\u201c\u7ed9\u4e88\u201d\u8ba1\u6570\u4fe1\u53f7\u91cf\u65f6\uff0c\u5b83\u7684\u961f\u5217\u4e2d\u7684\u53e6\u4e00\u4e2a\u7a7a\u95f4\u5c31\u4f1a\u88ab\u4f7f\u7528\u3002\u961f\u5217\u4e2d\u7684\u9879\u76ee\u6570\u91cf\u5c31\u662f\u4fe1\u53f7\u91cf\u7684\u201c\u8ba1\u6570\u201d\u503c\u3002</p> <p>\u8ba1\u6570\u4fe1\u53f7\u91cf\u901a\u5e38\u7528\u4e8e\u4e24\u4ef6\u4e8b\uff1a</p> <ol> <li>\u8ba1\u6570\u4e8b\u4ef6[^18]</li> </ol> <p>\u5728\u6b64\u573a\u666f\u4e2d\uff0c\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u6bcf\u6b21\u53d1\u751f\u4e8b\u4ef6\u65f6\u90fd\u4f1a\u201c\u7ed9\u4e88\u201d\u4fe1\u53f7\u91cf\uff0c\u4ece\u800c\u5bfc\u81f4\u4fe1\u53f7\u91cf\u7684\u8ba1\u6570\u503c\u5728\u6bcf\u6b21\u201c\u7ed9\u4e88\u201d\u65f6\u9012\u589e\u3002\u4efb\u52a1\u6bcf\u6b21\u5904\u7406\u4e8b\u4ef6\u65f6\u90fd\u4f1a\u83b7\u53d6\u4fe1\u53f7\u91cf\uff0c\u4ece\u800c\u5bfc\u81f4\u4fe1\u53f7\u91cf\u7684\u8ba1\u6570\u503c\u5728\u6bcf\u6b21\u201c\u83b7\u53d6\u201d\u65f6\u9012\u51cf\u3002\u8ba1\u6570\u503c\u662f\u5df2\u53d1\u751f\u4e8b\u4ef6\u6570\u91cf\u4e0e\u5df2\u5904\u7406\u4e8b\u4ef6\u6570\u91cf\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u6b64\u673a\u5236\u5982\u56fe 7.8 \u6240\u793a\u3002</p> <p>\u7528\u4e8e\u8ba1\u6570\u4e8b\u4ef6\u7684\u8ba1\u6570\u4fe1\u53f7\u91cf\u5728\u521b\u5efa\u65f6\u521d\u59cb\u8ba1\u6570\u503c\u4e3a\u96f6\u3002</p> <p>[^18]: \u4f7f\u7528\u76f4\u63a5\u4efb\u52a1\u901a\u77e5\u8ba1\u6570\u4e8b\u4ef6\u6bd4\u4f7f\u7528\u8ba1\u6570\u4fe1\u53f7\u91cf\u66f4\u9ad8\u6548\u3002\u76f4\u63a5\u4efb\u52a1\u901a\u77e5\u5c06\u5728\u7b2c 10 \u7ae0\u4e2d\u4ecb\u7ecd\u3002</p> <ol> <li>\u8d44\u6e90\u7ba1\u7406\u3002</li> </ol> <p>\u5728\u6b64\u573a\u666f\u4e2d\uff0c\u8ba1\u6570\u503c\u6307\u793a\u53ef\u7528\u8d44\u6e90\u7684\u6570\u91cf\u3002\u8981\u83b7\u53d6\u5bf9\u8d44\u6e90\u7684\u63a7\u5236\uff0c\u4efb\u52a1\u5fc5\u987b\u5148\u83b7\u53d6\u4fe1\u53f7\u91cf\uff0c\u8fd9\u4f1a\u9012\u51cf\u4fe1\u53f7\u91cf\u7684\u8ba1\u6570\u503c\u3002\u5f53\u8ba1\u6570\u503c\u8fbe\u5230\u96f6\u65f6\uff0c\u8868\u793a\u6ca1\u6709\u7a7a\u95f2\u8d44\u6e90\u3002\u5f53\u4efb\u52a1\u5b8c\u6210\u5bf9\u8d44\u6e90\u7684\u4f7f\u7528\u540e\uff0c\u5b83\u4f1a\u5c06\u4fe1\u53f7\u91cf\u201c\u7ed9\u4e88\u201d\u56de\u53bb\uff0c\u4ece\u800c\u9012\u589e\u4fe1\u53f7\u91cf\u7684\u8ba1\u6570\u503c\u3002</p> <p>\u7528\u4e8e\u7ba1\u7406\u8d44\u6e90\u7684\u8ba1\u6570\u4fe1\u53f7\u91cf\u7684\u521d\u59cb\u8ba1\u6570\u503c\u5e94\u7b49\u4e8e\u53ef\u7528\u8d44\u6e90\u7684\u6570\u91cf\u3002\u7b2c 7 \u7ae0\u4ecb\u7ecd\u4e86\u4f7f\u7528\u4fe1\u53f7\u91cf\u7ba1\u7406\u8d44\u6e90\u3002</p> <p></p> <p> Figure 7.8 Using a counting semaphore to 'count' events</p>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#751-xsemaphorecreatecounting-api","title":"7.5.1 xSemaphoreCreateCounting() API \u51fd\u6570","text":"<p>FreeRTOS \u8fd8\u5305\u62ec <code>xSemaphoreCreateCountingStatic()</code> \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u9759\u6001\u5206\u914d\u521b\u5efa\u8ba1\u6570\u4fe1\u53f7\u91cf\u6240\u9700\u7684\u5185\u5b58\uff1a\u6240\u6709 FreeRTOS \u4fe1\u53f7\u91cf\u7684\u53e5\u67c4\u90fd\u5b58\u50a8\u5728 <code>SemaphoreHandle_t</code> \u7c7b\u578b\u7684\u53d8\u91cf\u4e2d\u3002</p> <p>\u5728\u4fe1\u53f7\u91cf\u53ef\u4ee5\u4f7f\u7528\u4e4b\u524d\uff0c\u5fc5\u987b\u5148\u521b\u5efa\u5b83\u3002\u8981\u521b\u5efa\u8ba1\u6570\u4fe1\u53f7\u91cf\uff0c\u8bf7\u4f7f\u7528 <code>xSemaphoreCreateCounting()</code> API \u51fd\u6570\u3002</p> <p></p> <pre><code>SemaphoreHandle_t xSemaphoreCreateCounting( UBaseType_t uxMaxCount,\n                                            UBaseType_t uxInitialCount );\n</code></pre> <p>Listing 7.11 The xSemaphoreCreateCounting() API function prototype</p> <p>xSemaphoreCreateCounting() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>uxMaxCount</code></li> </ul> <p>\u4fe1\u53f7\u91cf\u5c06\u8ba1\u6570\u7684\u6700\u5927\u503c\u3002\u4e3a\u4e86\u7ee7\u7eed\u961f\u5217\u7c7b\u6bd4\uff0c<code>uxMaxCount</code> \u503c\u5b9e\u9645\u4e0a\u662f\u961f\u5217\u7684\u957f\u5ea6\u3002</p> <p>\u5f53\u4fe1\u53f7\u91cf\u7528\u4e8e\u8ba1\u6570\u6216\u9501\u5b58\u4e8b\u4ef6\u65f6\uff0c<code>uxMaxCount</code> \u662f\u53ef\u4ee5\u9501\u5b58\u7684\u6700\u5927\u4e8b\u4ef6\u6570\u3002</p> <p>\u5f53\u4fe1\u53f7\u91cf\u7528\u4e8e\u7ba1\u7406\u5bf9\u8d44\u6e90\u96c6\u5408\u7684\u8bbf\u95ee\u65f6\uff0c<code>uxMaxCount</code> \u5e94\u8bbe\u7f6e\u4e3a\u53ef\u7528\u8d44\u6e90\u7684\u603b\u6570\u3002</p> <ul> <li><code>uxInitialCount</code></li> </ul> <p>\u4fe1\u53f7\u91cf\u521b\u5efa\u540e\u521d\u59cb\u7684\u8ba1\u6570\u503c\u3002</p> <p>\u5f53\u4fe1\u53f7\u91cf\u7528\u4e8e\u8ba1\u6570\u6216\u9501\u5b58\u4e8b\u4ef6\u65f6\uff0c<code>uxInitialCount</code> \u5e94\u8bbe\u7f6e\u4e3a\u96f6\uff08\u56e0\u4e3a\u5728\u521b\u5efa\u4fe1\u53f7\u91cf\u65f6\u6211\u4eec\u5047\u8bbe\u5c1a\u672a\u53d1\u751f\u4efb\u4f55\u4e8b\u4ef6\uff09\u3002</p> <p>\u5f53\u4fe1\u53f7\u91cf\u7528\u4e8e\u7ba1\u7406\u5bf9\u8d44\u6e90\u96c6\u5408\u7684\u8bbf\u95ee\u65f6\uff0c<code>uxInitialCount</code> \u5e94\u8bbe\u7f6e\u4e3a\u7b49\u4e8e <code>uxMaxCount</code>\uff08\u56e0\u4e3a\u5728\u521b\u5efa\u4fe1\u53f7\u91cf\u65f6\u6211\u4eec\u5047\u8bbe\u6240\u6709\u8d44\u6e90\u90fd\u662f\u53ef\u7528\u7684\uff09\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u5982\u679c\u8fd4\u56de NULL\uff0c\u5219\u4fe1\u53f7\u91cf\u65e0\u6cd5\u521b\u5efa\uff0c\u56e0\u4e3a FreeRTOS \u65e0\u6cd5\u5206\u914d\u4fe1\u53f7\u91cf\u6570\u636e\u7ed3\u6784\u6240\u9700\u7684\u5806\u5185\u5b58\u4e0d\u8db3\u3002\u7b2c 3 \u7ae0\u63d0\u4f9b\u4e86\u6709\u5173\u5806\u5185\u5b58\u7ba1\u7406\u7684\u66f4\u591a\u4fe1\u606f\u3002</p> <p>\u5982\u679c\u8fd4\u56de\u975e NULL \u503c\uff0c\u5219\u8868\u793a\u4fe1\u53f7\u91cf\u5df2\u6210\u529f\u521b\u5efa\u3002\u8fd4\u56de\u7684\u503c\u5e94\u5b58\u50a8\u4e3a\u521b\u5efa\u7684\u4fe1\u53f7\u91cf\u7684\u53e5\u67c4\u3002</p>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#_2","title":"7 \u4e2d\u65ad\u7ba1\u7406","text":"<p>Example 7.2 Using a counting semaphore to synchronize a task with an interrupt</p> <p>\u793a\u4f8b 7.2 \u901a\u8fc7\u4f7f\u7528\u8ba1\u6570\u4fe1\u53f7\u91cf\u53d6\u4ee3\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\uff0c\u6539\u8fdb\u4e86\u793a\u4f8b 7.1 \u7684\u5b9e\u73b0\u3002<code>main()</code> \u51fd\u6570\u88ab\u66f4\u6539\u4e3a\u5728\u8c03\u7528 <code>xSemaphoreCreateCounting()</code> \u65f6\u53d6\u4ee3\u5bf9 <code>xSemaphoreCreateBinary()</code> \u7684\u8c03\u7528\u3002\u65b0\u7684 API \u8c03\u7528\u5982\u56fe 7.12 \u6240\u793a\u3002</p> <p></p> <pre><code>/* Before a semaphore is used it must be explicitly created. In this example a\n   counting semaphore is created. The semaphore is created to have a maximum\n   count value of 10, and an initial count value of 0. */\nxCountingSemaphore = xSemaphoreCreateCounting( 10, 0 );\n</code></pre> <p>Listing 7.12 The call to xSemaphoreCreateCounting() used to create the counting semaphore in Example 7.2</p> <p>\u4e3a\u4e86\u6a21\u62df\u4ee5\u9ad8\u9891\u7387\u53d1\u751f\u591a\u4e2a\u4e8b\u4ef6\uff0c\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u88ab\u66f4\u6539\u4e3a\u6bcf\u6b21\u4e2d\u65ad\u201c\u7ed9\u4e88\u201d\u4fe1\u53f7\u91cf\u591a\u6b21\u3002\u6bcf\u4e2a\u4e8b\u4ef6\u90fd\u88ab\u9501\u5b58\u5230\u4fe1\u53f7\u91cf\u7684\u8ba1\u6570\u503c\u4e2d\u3002\u4fee\u6539\u540e\u7684\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u5982\u56fe 7.13 \u6240\u793a\u3002</p> <p></p> <pre><code>static uint32_t ulExampleInterruptHandler( void )\n{\n    BaseType_t xHigherPriorityTaskWoken;\n\n    /* The xHigherPriorityTaskWoken parameter must be initialized to pdFALSE\n       as it will get set to pdTRUE inside the interrupt safe API function if\n       a context switch is required. */\n    xHigherPriorityTaskWoken = pdFALSE;\n\n    /* 'Give' the semaphore multiple times. The first will unblock the deferred\n       interrupt handling task, the following 'gives' are to demonstrate that\n       the semaphore latches the events to allow the task to which interrupts\n       are deferred to process them in turn, without events getting lost. This\n       simulates multiple interrupts being received by the processor, even\n       though in this case the events are simulated within a single interrupt\n       occurrence. */\n    xSemaphoreGiveFromISR( xCountingSemaphore, &amp;xHigherPriorityTaskWoken );\n    xSemaphoreGiveFromISR( xCountingSemaphore, &amp;xHigherPriorityTaskWoken );\n    xSemaphoreGiveFromISR( xCountingSemaphore, &amp;xHigherPriorityTaskWoken );\n\n    /* Pass the xHigherPriorityTaskWoken value into portYIELD_FROM_ISR().\n       If xHigherPriorityTaskWoken was set to pdTRUE inside\n       xSemaphoreGiveFromISR() then calling portYIELD_FROM_ISR() will request\n       a context switch. If xHigherPriorityTaskWoken is still pdFALSE then\n       calling portYIELD_FROM_ISR() will have no effect. Unlike most FreeRTOS\n       ports, the Windows port requires the ISR to return a value - the return\n       statement is inside the Windows version of portYIELD_FROM_ISR(). */\n    portYIELD_FROM_ISR( xHigherPriorityTaskWoken );\n}\n</code></pre> <p>Listing 7.13 The implementation of the interrupt service routine used by Example 7.2</p> <p>\u793a\u4f8b 7.2 \u4e2d\u7684\u6240\u6709\u5176\u4ed6\u51fd\u6570\u4fdd\u6301\u4e0d\u53d8\u3002</p> <p>\u6267\u884c\u793a\u4f8b 7.2 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa\u5982\u56fe 7.9 \u6240\u793a\u3002\u5982\u6240\u89c1\uff0c\u89e3\u9664\u5bf9\u4e2d\u65ad\u5904\u7406\u7684\u63a8\u8fdf\u7684\u4efb\u52a1\u6bcf\u6b21\u4e2d\u65ad\u751f\u6210\u65f6\u5904\u7406\u6240\u6709\u4e09\u4e2a\uff08\u6a21\u62df\uff09\u4e8b\u4ef6\u3002\u4e8b\u4ef6\u88ab\u9501\u5b58\u5230\u4fe1\u53f7\u91cf\u7684\u8ba1\u6570\u503c\u4e2d\uff0c\u5141\u8bb8\u4efb\u52a1\u4f9d\u6b21\u5904\u7406\u5b83\u4eec\u3002</p> <p></p> <p> Figure 7.9 The output produced when Example 7.2 is executed</p>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#76-rtos","title":"7.6 \u5c06\u5de5\u4f5c\u63a8\u8fdf\u5230 RTOS \u5b88\u62a4\u4efb\u52a1","text":"<p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6240\u5448\u73b0\u7684\u5ef6\u8fdf\u4e2d\u65ad\u5904\u7406\u793a\u4f8b\u8981\u6c42\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u8005\u4e3a\u6bcf\u4e2a\u4f7f\u7528\u5ef6\u8fdf\u5904\u7406\u6280\u672f\u7684\u4e2d\u65ad\u521b\u5efa\u4e00\u4e2a\u4efb\u52a1\u3002\u8fd8\u53ef\u4ee5\u4f7f\u7528 <code>xTimerPendFunctionCallFromISR()</code>[^19] API \u51fd\u6570\u5c06\u4e2d\u65ad\u5904\u7406\u63a8\u8fdf\u5230 RTOS \u5b88\u62a4\u4efb\u52a1\uff0c\u4ece\u800c\u65e0\u9700\u4e3a\u6bcf\u4e2a\u4e2d\u65ad\u521b\u5efa\u5355\u72ec\u7684\u4efb\u52a1\u3002\u5c06\u4e2d\u65ad\u5904\u7406\u63a8\u8fdf\u5230\u5b88\u62a4\u4efb\u52a1\u79f0\u4e3a\u201c\u96c6\u4e2d\u5f0f\u5ef6\u8fdf\u4e2d\u65ad\u5904\u7406\u201d\u3002</p> <p>[^19]: \u5b88\u62a4\u4efb\u52a1\u6700\u521d\u88ab\u79f0\u4e3a\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\uff0c\u56e0\u4e3a\u5b83\u6700\u521d\u4ec5\u7528\u4e8e\u6267\u884c\u8f6f\u4ef6\u5b9a\u65f6\u5668\u56de\u8c03\u51fd\u6570\u3002\u56e0\u6b64\uff0c<code>xTimerPendFunctionCall()</code> \u5728 timers.c \u4e2d\u5b9e\u73b0\uff0c\u5e76\u4e14\u6839\u636e\u51fd\u6570\u540d\u79f0\u524d\u7f00\u7ea6\u5b9a\uff0c\u51fd\u6570\u540d\u79f0\u524d\u7f00\u4e3a\u201cTimer\u201d\u3002</p> <p>\u7b2c 6 \u7ae0\u63cf\u8ff0\u4e86\u4e0e\u8f6f\u4ef6\u5b9a\u65f6\u5668\u76f8\u5173\u7684 FreeRTOS API \u51fd\u6570\u5982\u4f55\u901a\u8fc7\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u53d1\u9001\u547d\u4ee4\u5230\u5b88\u62a4\u4efb\u52a1\u3002<code>xTimerPendFunctionCall()</code> \u548c <code>xTimerPendFunctionCallFromISR()</code> API \u51fd\u6570\u4f7f\u7528\u76f8\u540c\u7684\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u5411\u5b88\u62a4\u4efb\u52a1\u53d1\u9001\u201c\u6267\u884c\u51fd\u6570\u201d\u547d\u4ee4\u3002\u56e0\u6b64\uff0c\u5b9e\u9645\u6267\u884c\u8be5\u51fd\u6570\u7684\u65f6\u95f4\u53d6\u51b3\u4e8e\u5b88\u62a4\u4efb\u52a1\u76f8\u5bf9\u4e8e\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5176\u4ed6\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002</p> <p>\u96c6\u4e2d\u5f0f\u5ef6\u8fdf\u4e2d\u65ad\u5904\u7406\u7684\u4f18\u70b9\u5305\u62ec\uff1a</p> <ul> <li>\u66f4\u4f4e\u7684\u8d44\u6e90\u4f7f\u7528</li> </ul> <p>\u5b83\u6d88\u9664\u4e86\u4e3a\u6bcf\u4e2a\u5ef6\u8fdf\u4e2d\u65ad\u521b\u5efa\u5355\u72ec\u4efb\u52a1\u7684\u9700\u8981\u3002</p> <ul> <li>\u7b80\u5316\u7684\u7528\u6237\u6a21\u578b</li> </ul> <p>\u5ef6\u8fdf\u4e2d\u65ad\u5904\u7406\u51fd\u6570\u662f\u6807\u51c6 C \u51fd\u6570\u3002</p> <p>\u96c6\u4e2d\u5f0f\u5ef6\u8fdf\u4e2d\u65ad\u5904\u7406\u7684\u7f3a\u70b9\u5305\u62ec\uff1a</p> <ul> <li>\u7075\u6d3b\u6027\u8f83\u5dee</li> </ul> <p>\u65e0\u6cd5\u5355\u72ec\u8bbe\u7f6e\u6bcf\u4e2a\u5ef6\u8fdf\u4e2d\u65ad\u5904\u7406\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002\u6bcf\u4e2a\u5ef6\u8fdf\u4e2d\u65ad\u5904\u7406\u51fd\u6570\u4ee5\u5b88\u62a4\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u6267\u884c\u3002\u5982\u7b2c 6 \u7ae0\u6240\u8ff0\uff0c\u5b88\u62a4\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u7531 FreeRTOSConfig.h \u4e2d\u7684 <code>configTIMER_TASK_PRIORITY</code> \u7f16\u8bd1\u65f6\u914d\u7f6e\u5e38\u91cf\u8bbe\u7f6e\u3002</p> <ul> <li>\u786e\u5b9a\u6027\u8f83\u5dee</li> </ul> <p><code>xTimerPendFunctionCallFromISR()</code> \u5c06\u547d\u4ee4\u53d1\u9001\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u7684\u672b\u5c3e\u3002\u5df2\u7ecf\u5728\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4e2d\u7684\u547d\u4ee4\u5c06\u5728\u5b88\u62a4\u4efb\u52a1\u5904\u7406 <code>xTimerPendFunctionCallFromISR()</code> \u53d1\u9001\u7684\u201c\u6267\u884c\u51fd\u6570\u201d\u547d\u4ee4\u4e4b\u524d\u88ab\u5904\u7406\u3002</p> <p>\u4e0d\u540c\u4e2d\u65ad\u5177\u6709\u4e0d\u540c\u7684\u65f6\u95f4\u7ea6\u675f\uff0c\u56e0\u6b64\u5728\u540c\u4e00\u5e94\u7528\u7a0b\u5e8f\u4e2d\u901a\u5e38\u540c\u65f6\u4f7f\u7528\u4e24\u79cd\u4e2d\u65ad\u5904\u7406\u63a8\u8fdf\u65b9\u6cd5\u3002</p>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#761-xtimerpendfunctioncallfromisr-api","title":"7.6.1 xTimerPendFunctionCallFromISR() API \u51fd\u6570","text":"<p><code>xTimerPendFunctionCallFromISR()</code> \u662f <code>xTimerPendFunctionCall()</code> \u7684\u4e2d\u65ad\u5b89\u5168\u7248\u672c\u3002\u4e24\u4e2a API \u51fd\u6570\u90fd\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u8005\u63d0\u4f9b\u7684\u51fd\u6570\u7531 RTOS \u5b88\u62a4\u4efb\u52a1\u6267\u884c\uff0c\u56e0\u6b64\u5728\u5b88\u62a4\u4efb\u52a1\u7684\u4e0a\u4e0b\u6587\u4e2d\u6267\u884c\u3002\u53d1\u9001\u5230\u5b88\u62a4\u4efb\u52a1\u7684\u51fd\u6570\u53ca\u5176\u8f93\u5165\u53c2\u6570\u7684\u503c\u901a\u8fc7\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4f20\u9012\u3002\u56e0\u6b64\uff0c\u5b9e\u9645\u6267\u884c\u8be5\u51fd\u6570\u7684\u65f6\u95f4\u53d6\u51b3\u4e8e\u5b88\u62a4\u4efb\u52a1\u76f8\u5bf9\u4e8e\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5176\u4ed6\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002</p> <p></p> <pre><code>BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t\n                                          xFunctionToPend,\n                                          void *pvParameter1,\n                                          uint32_t ulParameter2,\n                                          BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre> <p>Listing 7.14 The xTimerPendFunctionCallFromISR() API function prototype</p> <p></p> <pre><code>void vPendableFunction( void *pvParameter1, uint32_t ulParameter2 );\n</code></pre> <p>Listing 7.15 The prototype to which a function passed in the xFunctionToPend parameter of xTimerPendFunctionCallFromISR() must conform</p> <p>xTimerPendFunctionCallFromISR() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>xFunctionToPend</code></li> </ul> <p>\u6307\u5411\u5c06\u5728\u5b88\u62a4\u4efb\u52a1\u4e2d\u6267\u884c\u7684\u51fd\u6570\u7684\u6307\u9488\uff08\u5b9e\u9645\u4e0a\u53ea\u662f\u51fd\u6570\u540d\u79f0\uff09\u3002\u8be5\u51fd\u6570\u7684\u539f\u578b\u5fc5\u987b\u4e0e\u56fe 7.15 \u4e2d\u7684\u76f8\u540c\u3002</p> <ul> <li><code>pvParameter1</code></li> </ul> <p>\u5c06\u4f5c\u4e3a\u8be5\u51fd\u6570\u7684 <code>pvParameter1</code> \u53c2\u6570\u4f20\u9012\u7ed9\u5b88\u62a4\u4efb\u52a1\u4e2d\u6267\u884c\u7684\u51fd\u6570\u7684\u503c\u3002\u8be5\u53c2\u6570\u5177\u6709 <code>void *</code> \u7c7b\u578b\uff0c\u4ee5\u5141\u8bb8\u4f20\u9012\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u3002\u4f8b\u5982\uff0c\u6574\u6570\u7c7b\u578b\u53ef\u4ee5\u76f4\u63a5\u8f6c\u6362\u4e3a <code>void *</code>\uff0c\u6216\u8005 <code>void *</code> \u53ef\u4ee5\u6307\u5411\u7ed3\u6784\u3002</p> <ul> <li><code>ulParameter2</code></li> </ul> <p>\u5c06\u4f5c\u4e3a\u8be5\u51fd\u6570\u7684 <code>ulParameter2</code> \u53c2\u6570\u4f20\u9012\u7ed9\u5b88\u62a4\u4efb\u52a1\u4e2d\u6267\u884c\u7684\u51fd\u6570\u7684\u503c\u3002</p> <ul> <li><code>pxHigherPriorityTaskWoken</code></li> </ul> <p><code>xTimerPendFunctionCallFromISR()</code> \u5c06\u547d\u4ee4\u5199\u5165\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u3002\u5982\u679c RTOS \u5b88\u62a4\u4efb\u52a1\u5904\u4e8e\u963b\u585e\u72b6\u6001\u4ee5\u7b49\u5f85\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4e0a\u7684\u6570\u636e\u53d8\u4e3a\u53ef\u7528\uff0c\u5219\u5199\u5165\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u5c06\u5bfc\u81f4\u5b88\u62a4\u4efb\u52a1\u79bb\u5f00\u963b\u585e\u72b6\u6001\u3002\u5982\u679c\u5b88\u62a4\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5f53\u524d\u6267\u884c\u4efb\u52a1\uff08\u88ab\u4e2d\u65ad\u7684\u4efb\u52a1\uff09\u7684\u4f18\u5148\u7ea7\uff0c\u5219\u5728\u5185\u90e8\uff0c<code>xTimerPendFunctionCallFromISR()</code> \u5c06 <code>*pxHigherPriorityTaskWoken</code> \u8bbe\u7f6e\u4e3a <code>pdTRUE</code>\u3002</p> <p>\u5982\u679c <code>xTimerPendFunctionCallFromISR()</code> \u5c06\u6b64\u503c\u8bbe\u7f6e\u4e3a <code>pdTRUE</code>\uff0c\u5219\u5fc5\u987b\u5728\u4e2d\u65ad\u9000\u51fa\u4e4b\u524d\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002\u8fd9\u5c06\u786e\u4fdd\u4e2d\u65ad\u76f4\u63a5\u8fd4\u56de\u5230\u5b88\u62a4\u4efb\u52a1\uff0c\u56e0\u4e3a\u5b88\u62a4\u4efb\u52a1\u5c06\u662f\u6700\u9ad8\u4f18\u5148\u7ea7\u7684\u5c31\u7eea\u72b6\u6001\u4efb\u52a1\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u6709\u4e24\u79cd\u53ef\u80fd\u7684\u8fd4\u56de\u503c\uff1a</p> <ul> <li> <p><code>pdPASS</code></p> <p>\u5982\u679c\u201c\u6267\u884c\u51fd\u6570\u201d\u547d\u4ee4\u5df2\u5199\u5165\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\uff0c\u5219\u8fd4\u56de <code>pdPASS</code>\u3002</p> </li> <li> <p><code>pdFAIL</code></p> <p>\u5982\u679c\u7531\u4e8e\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u5df2\u6ee1\u800c\u65e0\u6cd5\u5c06\u201c\u6267\u884c\u51fd\u6570\u201d\u547d\u4ee4\u5199\u5165\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\uff0c\u5219\u8fd4\u56de <code>pdFAIL</code>\u3002\u7b2c 6 \u7ae0\u63cf\u8ff0\u4e86\u5982\u4f55\u8bbe\u7f6e\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u7684\u957f\u5ea6\u3002</p> </li> </ul>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#_3","title":"7 \u4e2d\u65ad\u7ba1\u7406","text":"<p>Example 7.3 Centralized deferred interrupt processing</p> <p>\u793a\u4f8b 7.3 \u63d0\u4f9b\u4e86\u4e0e\u793a\u4f8b 7.1 \u7c7b\u4f3c\u7684\u529f\u80fd\uff0c\u4f46\u4e0d\u4f7f\u7528\u4fe1\u53f7\u91cf\uff0c\u4e5f\u4e0d\u521b\u5efa\u4e13\u95e8\u7684\u4efb\u52a1\u6765\u6267\u884c\u4e2d\u65ad\u5f15\u8d77\u7684\u5904\u7406\u3002\u76f8\u53cd\uff0c\u5904\u7406\u7531 RTOS \u5b88\u62a4\u4efb\u52a1\u6267\u884c\u3002</p> <p>\u793a\u4f8b 7.3 \u4e2d\u4f7f\u7528\u7684\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u5982\u56fe 7.16 \u6240\u793a\u3002\u5b83\u8c03\u7528 <code>xTimerPendFunctionCallFromISR()</code> \u5c06\u6307\u5411 <code>vDeferredHandlingFunction()</code> \u51fd\u6570\u7684\u6307\u9488\u4f20\u9012\u7ed9\u5b88\u62a4\u4efb\u52a1\u3002\u5ef6\u8fdf\u4e2d\u65ad\u5904\u7406\u7531 <code>vDeferredHandlingFunction()</code> \u51fd\u6570\u6267\u884c\u3002</p> <p>\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u6bcf\u6b21\u6267\u884c\u65f6\u90fd\u4f1a\u9012\u589e\u4e00\u4e2a\u540d\u4e3a <code>ulParameterValue</code> \u7684\u53d8\u91cf\u3002\u5f53 <code>vDeferredHandlingFunction()</code> \u5728\u5b88\u62a4\u4efb\u52a1\u4e2d\u6267\u884c\u65f6\uff0c<code>ulParameterValue</code> \u5c06\u4f5c\u4e3a <code>ulParameter2</code> \u7684\u503c\u4f20\u9012\u7ed9 <code>vDeferredHandlingFunction()</code>\u3002\u8be5\u51fd\u6570\u7684\u53e6\u4e00\u4e2a\u53c2\u6570 <code>pvParameter1</code> \u5728\u672c\u4f8b\u4e2d\u672a\u4f7f\u7528\u3002</p> <p></p> <pre><code>static uint32_t ulExampleInterruptHandler( void )\n{\n    static uint32_t ulParameterValue = 0;\n    BaseType_t xHigherPriorityTaskWoken;\n\n    /* The xHigherPriorityTaskWoken parameter must be initialized to pdFALSE\n       as it will get set to pdTRUE inside the interrupt safe API function if\n       a context switch is required. */\n    xHigherPriorityTaskWoken = pdFALSE;\n\n    /* Send a pointer to the interrupt's deferred handling function to the\n       daemon task. The deferred handling function's pvParameter1 parameter\n       is not used so just set to NULL. The deferred handling function's\n       ulParameter2 parameter is used to pass a number that is incremented by\n       one each time this interrupt handler executes. */\n    xTimerPendFunctionCallFromISR( vDeferredHandlingFunction, /* Function to execute */\n                                   NULL, /* Not used */\n                                   ulParameterValue, /* Incrementing value. */\n                                   &amp;xHigherPriorityTaskWoken );\n    ulParameterValue++;\n\n    /* Pass the xHigherPriorityTaskWoken value into portYIELD_FROM_ISR(). If\n       xHigherPriorityTaskWoken was set to pdTRUE inside\n       xTimerPendFunctionCallFromISR() then calling portYIELD_FROM_ISR() will\n       request a context switch. If xHigherPriorityTaskWoken is still pdFALSE\n       then calling portYIELD_FROM_ISR() will have no effect. Unlike most\n       FreeRTOS ports, the Windows port requires the ISR to return a value -\n       the return statement is inside the Windows version\n       of portYIELD_FROM_ISR(). */\n    portYIELD_FROM_ISR( xHigherPriorityTaskWoken );\n}\n</code></pre> <p>Listing 7.16 The software interrupt handler used in Example 7.3</p> <p><code>vDeferredHandlingFunction()</code> \u7684\u5b9e\u73b0\u5982\u56fe 7.17 \u6240\u793a\u3002\u5b83\u6253\u5370\u51fa\u4e00\u6761\u56fa\u5b9a\u5b57\u7b26\u4e32\u53ca\u5176 <code>ulParameter2</code> \u53c2\u6570\u7684\u503c\u3002</p> <p><code>vDeferredHandlingFunction()</code> \u5fc5\u987b\u5177\u6709\u56fe 7.15 \u4e2d\u6240\u793a\u7684\u539f\u578b\uff0c\u5373\u4f7f\u5728\u672c\u4f8b\u4e2d\u4ec5\u4f7f\u7528\u4e86\u4e00\u4e2a\u53c2\u6570\u3002</p> <p></p> <pre><code>static void vDeferredHandlingFunction( void *pvParameter1, uint32_t ulParameter2 )\n{\n    /* Process the event - in this case just print out a message and the value\n       of ulParameter2. pvParameter1 is not used in this example. */\n    vPrintStringAndNumber( \"Handler function - Processing event \", ulParameter2 );\n}\n</code></pre> <p>Listing 7.17 The function that performs the processing necessitated by the interrupt in Example 7.3</p> <p>\u793a\u4f8b 7.3 \u7684 <code>main()</code> \u51fd\u6570\u5982\u56fe 7.18 \u6240\u793a\u3002\u5b83\u6bd4\u793a\u4f8b 7.1 \u4e2d\u7684 <code>main()</code> \u51fd\u6570\u66f4\u7b80\u5355\uff0c\u56e0\u4e3a\u5b83\u4e0d\u9700\u8981\u521b\u5efa\u4fe1\u53f7\u91cf\u6216\u4e13\u95e8\u7684\u4efb\u52a1\u6765\u6267\u884c\u5ef6\u8fdf\u4e2d\u65ad\u5904\u7406\u3002</p> <p><code>vPeriodicTask()</code> \u662f\u751f\u6210\u8f6f\u4ef6\u4e2d\u65ad\u7684\u4efb\u52a1\u3002\u5b83\u7684\u4f18\u5148\u7ea7\u8bbe\u7f6e\u4f4e\u4e8e\u5b88\u62a4\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff0c\u4ee5\u786e\u4fdd\u5728\u5b88\u62a4\u4efb\u52a1\u79bb\u5f00\u963b\u585e\u72b6\u6001\u540e\u88ab\u5b88\u62a4\u4efb\u52a1\u62a2\u5360\u3002</p> <p></p> <pre><code>int main( void )\n{\n    /* The task that generates the software interrupt is created at a priority\n       below the priority of the daemon task. The priority of the daemon task\n       is set by the configTIMER_TASK_PRIORITY compile time configuration\n       constant in FreeRTOSConfig.h. */\n    const UBaseType_t ulPeriodicTaskPriority = configTIMER_TASK_PRIORITY - 1;\n\n    /* Create the task that will periodically generate a software interrupt. */\n    xTaskCreate( vPeriodicTask, \"Periodic\", 1000, NULL, ulPeriodicTaskPriority,\n                 NULL );\n\n    /* Install the handler for the software interrupt. The syntax necessary to\n       do this is dependent on the FreeRTOS port being used. The syntax shown\n       here can only be used with the FreeRTOS windows port, where such\n       interrupts are only simulated. */\n    vPortSetInterruptHandler( mainINTERRUPT_NUMBER, ulExampleInterruptHandler );\n\n    /* Start the scheduler so the created task starts executing. */\n    vTaskStartScheduler();\n\n    /* As normal, the following line should never be reached. */\n    for( ;; );\n}\n</code></pre> <p>Listing 7.18 The implementation of main() for Example 7.3</p> <p>\u5f53\u6267\u884c\u793a\u4f8b 7.3 \u65f6\uff0c\u4ea7\u751f\u7684\u8f93\u51fa\u5982\u56fe 7.10 \u6240\u793a\u3002\u5b88\u62a4\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u751f\u6210\u8f6f\u4ef6\u4e2d\u65ad\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff0c\u56e0\u6b64\u4e00\u65e6\u4e2d\u65ad\u88ab\u751f\u6210\uff0c\u5b88\u62a4\u4efb\u52a1\u5c31\u4f1a\u6267\u884c <code>vDeferredHandlingFunction()</code>\u3002\u8fd9\u5bfc\u81f4 <code>vDeferredHandlingFunction()</code> \u8f93\u51fa\u7684\u6d88\u606f\u51fa\u73b0\u5728\u5468\u671f\u6027\u4efb\u52a1\u8f93\u51fa\u7684\u4e24\u6761\u6d88\u606f\u4e4b\u95f4\uff0c\u5c31\u50cf\u4f7f\u7528\u4fe1\u53f7\u91cf\u89e3\u9664\u5bf9\u4e13\u7528\u5ef6\u8fdf\u4e2d\u65ad\u5904\u7406\u4efb\u52a1\u7684\u963b\u585e\u4e00\u6837\u3002\u56fe 7.11 \u63d0\u4f9b\u4e86\u8fdb\u4e00\u6b65\u7684\u89e3\u91ca\u3002</p> <p> </p> <p> Figure 7.10 The output produced when Example 7.3 is executed</p> <p> Figure 7.11 The sequence of execution when Example 7.3 is executed</p>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#77","title":"7.7 \u5728\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u4f7f\u7528\u961f\u5217","text":"<p>\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u548c\u8ba1\u6570\u4fe1\u53f7\u91cf\u7528\u4e8e\u4f20\u9012\u4e8b\u4ef6\u3002\u961f\u5217\u7528\u4e8e\u4f20\u9012\u4e8b\u4ef6\u548c\u4f20\u8f93\u6570\u636e\u3002</p> <p><code>xQueueSendToFrontFromISR()</code> \u662f <code>xQueueSendToFront()</code> \u7684\u5b89\u5168\u7248\u672c\uff0c\u53ef\u5728\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u4f7f\u7528\uff0c<code>xQueueSendToBackFromISR()</code> \u662f <code>xQueueSendToBack()</code> \u7684\u5b89\u5168\u7248\u672c\uff0c\u53ef\u5728\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u4f7f\u7528\uff0c<code>xQueueReceiveFromISR()</code> \u662f <code>xQueueReceive()</code> \u7684\u5b89\u5168\u7248\u672c\uff0c\u53ef\u5728\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u4f7f\u7528\u3002</p>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#771-xqueuesendtofrontfromisr-xqueuesendtobackfromisr-api","title":"7.7.1 xQueueSendToFrontFromISR() \u548c xQueueSendToBackFromISR() API \u51fd\u6570","text":"<pre><code>BaseType_t xQueueSendToFrontFromISR( QueueHandle_t xQueue,\n                                     const void *pvItemToQueue\n                                     BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre> <p>Listing 7.19 The xQueueSendToFrontFromISR() API function prototype</p> <p></p> <pre><code>BaseType_t xQueueSendToBackFromISR( QueueHandle_t xQueue,\n                                    const void *pvItemToQueue\n                                    BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre> <p>Listing 7.20 The xQueueSendToBackFromISR() API function prototype</p> <p><code>xQueueSendFromISR()</code> \u548c <code>xQueueSendToBackFromISR()</code> \u5728\u529f\u80fd\u4e0a\u662f\u7b49\u6548\u7684\u3002</p> <p>xQueueSendToFrontFromISR() \u548c xQueueSendToBackFromISR() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>xQueue</code></li> </ul> <p>\u6b63\u5728\u5411\u5176\u53d1\u9001\u6570\u636e\uff08\u5199\u5165\uff09\u7684\u961f\u5217\u7684\u53e5\u67c4\u3002   \u961f\u5217\u53e5\u67c4\u662f\u901a\u8fc7\u7528\u4e8e\u521b\u5efa\u961f\u5217\u7684 <code>xQueueCreate()</code> \u8c03\u7528\u8fd4\u56de\u7684\u3002</p> <ul> <li><code>pvItemToQueue</code></li> </ul> <p>\u6307\u5411\u8981\u653e\u5165\u961f\u5217\u4e2d\u7684\u9879\u7684\u6307\u9488\u3002</p> <p>\u961f\u5217\u5c06\u8981\u5bb9\u7eb3\u7684\u6bcf\u4e2a\u9879\u76ee\u7684\u5927\u5c0f\u662f\u5728\u521b\u5efa\u961f\u5217\u65f6\u5b9a\u4e49\u7684\uff0c\u56e0\u6b64\u8fd9\u4e9b\u5b57\u8282\u5c06\u4ece <code>pvItemToQueue</code> \u590d\u5236\u5230\u961f\u5217\u5b58\u50a8\u533a\u3002</p> <ul> <li><code>pxHigherPriorityTaskWoken</code></li> </ul> <p>\u53ef\u80fd\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u4efb\u52a1\u88ab\u963b\u585e\u5728\u961f\u5217\u4e0a\uff0c\u7b49\u5f85\u6570\u636e\u53d8\u4e3a\u53ef\u7528\u3002\u8c03\u7528 <code>xQueueSendToFrontFromISR()</code> \u6216 <code>xQueueSendToBackFromISR()</code> \u53ef\u4ee5\u4f7f\u6570\u636e\u53d8\u4e3a\u53ef\u7528\uff0c\u4ece\u800c\u5bfc\u81f4\u8fd9\u6837\u7684\u4efb\u52a1\u79bb\u5f00\u963b\u585e\u72b6\u6001\u3002\u5982\u679c\u8c03\u7528 API \u51fd\u6570\u5bfc\u81f4\u4efb\u52a1\u79bb\u5f00\u963b\u585e\u72b6\u6001\uff0c\u5e76\u4e14\u89e3\u9664\u963b\u585e\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5f53\u524d\u6267\u884c\u4efb\u52a1\uff08\u88ab\u4e2d\u65ad\u7684\u4efb\u52a1\uff09\u7684\u4f18\u5148\u7ea7\uff0c\u5219\u5728\u5185\u90e8\uff0cAPI \u51fd\u6570\u5c06 <code>*pxHigherPriorityTaskWoken</code> \u8bbe\u7f6e\u4e3a <code>pdTRUE</code>\u3002</p> <p>\u5982\u679c <code>xQueueSendToFrontFromISR()</code> \u6216 <code>xQueueSendToBackFromISR()</code> \u5c06\u6b64\u503c\u8bbe\u7f6e\u4e3a <code>pdTRUE</code>\uff0c\u5219\u5e94\u5728\u4e2d\u65ad\u9000\u51fa\u4e4b\u524d\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002\u8fd9\u5c06\u786e\u4fdd\u4e2d\u65ad\u76f4\u63a5\u8fd4\u56de\u5230\u6700\u9ad8\u4f18\u5148\u7ea7\u7684\u5c31\u7eea\u72b6\u6001\u4efb\u52a1\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u6709\u4e24\u79cd\u53ef\u80fd\u7684\u8fd4\u56de\u503c\uff1a</p> <ul> <li> <p><code>pdPASS</code></p> <p>\u4ec5\u5f53\u6570\u636e\u5df2\u6210\u529f\u53d1\u9001\u5230\u961f\u5217\u65f6\uff0c\u624d\u4f1a\u8fd4\u56de <code>pdPASS</code>\u3002</p> </li> <li> <p><code>errQUEUE_FULL</code></p> <p>\u5982\u679c\u7531\u4e8e\u961f\u5217\u5df2\u6ee1\u800c\u65e0\u6cd5\u5c06\u6570\u636e\u53d1\u9001\u5230\u961f\u5217\uff0c\u5219\u8fd4\u56de <code>errQUEUE_FULL</code>\u3002</p> </li> </ul>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#772-isr","title":"7.7.2 \u4ece ISR \u4f7f\u7528\u961f\u5217\u65f6\u7684\u6ce8\u610f\u4e8b\u9879","text":"<p>\u961f\u5217\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5355\u65b9\u4fbf\u7684\u65b9\u5f0f\u5c06\u6570\u636e\u4ece\u4e2d\u65ad\u4f20\u9012\u5230\u4efb\u52a1\uff0c\u4f46\u5982\u679c\u6570\u636e\u4ee5\u9ad8\u9891\u7387\u5230\u8fbe\uff0c\u5219\u4f7f\u7528\u961f\u5217\u6548\u7387\u4e0d\u9ad8\u3002</p> <p>FreeRTOS \u4e0b\u8f7d\u4e2d\u7684\u8bb8\u591a\u6f14\u793a\u5e94\u7528\u7a0b\u5e8f\u5305\u62ec\u4e00\u4e2a\u7b80\u5355\u7684 UART \u9a71\u52a8\u7a0b\u5e8f\uff0c\u8be5\u9a71\u52a8\u7a0b\u5e8f\u4f7f\u7528\u961f\u5217\u5c06\u5b57\u7b26\u4ece UART \u7684\u63a5\u6536 ISR \u4f20\u9012\u51fa\u53bb\u3002\u5728\u8fd9\u4e9b\u6f14\u793a\u4e2d\uff0c\u51fa\u4e8e\u4e24\u4e2a\u539f\u56e0\u4f7f\u7528\u961f\u5217\uff1a\u6f14\u793a\u5982\u4f55\u4ece ISR \u4f7f\u7528\u961f\u5217\uff0c\u4ee5\u53ca\u6545\u610f\u589e\u52a0\u7cfb\u7edf\u8d1f\u8f7d\u4ee5\u6d4b\u8bd5 FreeRTOS \u79fb\u690d\u3002\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u7528\u961f\u5217\u7684 ISR \u7edd\u5bf9\u4e0d\u662f\u4e3a\u4e86\u8868\u793a\u9ad8\u6548\u7684\u8bbe\u8ba1\uff0c\u9664\u975e\u6570\u636e\u4ee5\u8f83\u6162\u7684\u901f\u5ea6\u5230\u8fbe\uff0c\u5426\u5219\u4e0d\u5efa\u8bae\u5728\u751f\u4ea7\u4ee3\u7801\u4e2d\u590d\u5236\u8fd9\u79cd\u6280\u672f\u3002\u9002\u5408\u751f\u4ea7\u4ee3\u7801\u7684\u66f4\u9ad8\u6548\u7684\u6280\u672f\u5305\u62ec\uff1a</p> <ul> <li>\u4f7f\u7528\u76f4\u63a5\u5185\u5b58\u8bbf\u95ee\uff08DMA\uff09\u786c\u4ef6\u63a5\u6536\u548c\u7f13\u51b2\u5b57\u7b26\u3002\u6b64\u65b9\u6cd5\u51e0\u4e4e\u6ca1\u6709\u8f6f\u4ef6\u5f00\u9500\u3002\u7136\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u76f4\u63a5\u4efb\u52a1\u901a\u77e5\u6765\u89e3\u9664\u5bf9\u5904\u7406\u7f13\u51b2\u533a\u7684\u4efb\u52a1\u7684\u963b\u585e\uff0c\u4ec5\u5728\u68c0\u6d4b\u5230\u4f20\u8f93\u4e2d\u65ad\u65f6\u624d\u8fdb\u884c\u5904\u7406\u3002</li> </ul> <p>[^20]: \u76f4\u63a5\u4efb\u52a1\u901a\u77e5\u63d0\u4f9b\u4e86\u4ece ISR \u4e2d\u89e3\u9664\u5bf9\u4efb\u52a1\u7684\u963b\u585e\u7684\u6700\u6709\u6548\u65b9\u6cd5\u3002\u76f4\u63a5\u4efb\u52a1\u901a\u77e5\u5c06\u5728\u7b2c 10 \u7ae0\u4e2d\u4ecb\u7ecd\u3002</p> <ul> <li>\u5c06\u6bcf\u4e2a\u63a5\u6536\u5230\u7684\u5b57\u7b26\u590d\u5236\u5230\u7ebf\u7a0b\u5b89\u5168\u7684 RAM \u7f13\u51b2\u533a[^21]\u3002\u540c\u6837\uff0c\u53ef\u4ee5\u4f7f\u7528\u76f4\u63a5\u4efb\u52a1\u901a\u77e5\u6765\u89e3\u9664\u5bf9\u5904\u7406\u7f13\u51b2\u533a\u7684\u4efb\u52a1\u7684\u963b\u585e\uff0c\u5904\u7406\u7f13\u51b2\u533a\u5728\u63a5\u6536\u5230\u5b8c\u6574\u6d88\u606f\u6216\u68c0\u6d4b\u5230\u4f20\u8f93\u4e2d\u65ad\u540e\u8fdb\u884c\u5904\u7406\u3002</li> </ul> <p>[^21]: FreeRTOS+TCP \u63d0\u4f9b\u7684\u201c\u6d41\u7f13\u51b2\u533a\u201d\uff08https://www.FreeRTOS.org/tcp\uff09\u53ef\u7528\u4e8e\u6b64\u76ee\u7684\u3002</p> <ul> <li>\u76f4\u63a5\u5728 ISR \u4e2d\u5904\u7406\u63a5\u6536\u5230\u7684\u5b57\u7b26\uff0c\u7136\u540e\u4f7f\u7528\u961f\u5217\u5c06\u5904\u7406\u7ed3\u679c\uff08\u800c\u4e0d\u662f\u539f\u59cb\u6570\u636e\uff09\u53d1\u9001\u5230\u4efb\u52a1\u3002\u8fd9\u5728\u56fe 5.4 \u4e2d\u5df2\u7ecf\u6f14\u793a\u8fc7\u3002</li> </ul>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#_4","title":"7 \u4e2d\u65ad\u7ba1\u7406","text":"<p>Example 7.4 Sending and receiving on a queue from within an interrupt</p> <p>\u6b64\u793a\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u5728\u540c\u4e00\u4e2d\u65ad\u4e2d\u4f7f\u7528 <code>xQueueSendToBackFromISR()</code> \u548c <code>xQueueReceiveFromISR()</code>\u3002\u4e3a\u4e86\u65b9\u4fbf\uff0c\u4e2d\u65ad\u7531\u8f6f\u4ef6\u751f\u6210\u3002</p> <p>\u521b\u5efa\u4e86\u4e00\u4e2a\u5468\u671f\u6027\u4efb\u52a1\uff0c\u8be5\u4efb\u52a1\u6bcf 200 \u6beb\u79d2\u5411\u961f\u5217\u53d1\u9001\u4e94\u4e2a\u6570\u5b57\u3002\u4ec5\u5728\u53d1\u9001\u5b8c\u6240\u6709\u4e94\u4e2a\u503c\u540e\u624d\u751f\u6210\u8f6f\u4ef6\u4e2d\u65ad\u3002\u4efb\u52a1\u5b9e\u73b0\u5982\u56fe 7.21 \u6240\u793a\u3002</p> <p></p> <pre><code>static void vIntegerGenerator( void *pvParameters )\n{\n    TickType_t xLastExecutionTime;\n    uint32_t ulValueToSend = 0;\n    int i;\n\n    /* Initialize the variable used by the call to vTaskDelayUntil(). */\n    xLastExecutionTime = xTaskGetTickCount();\n\n    for( ;; )\n    {\n        /* This is a periodic task. Block until it is time to run again. The\n           task will execute every 200ms. */\n        vTaskDelayUntil( &amp;xLastExecutionTime, pdMS_TO_TICKS( 200 ) );\n\n        /* Send five numbers to the queue, each value one higher than the\n           previous value. The numbers are read from the queue by the interrupt\n           service routine. The interrupt service routine always empties the\n           queue, so this task is guaranteed to be able to write all five\n           values without needing to specify a block time. */\n        for( i = 0; i &lt; 5; i++ )\n        {\n            xQueueSendToBack( xIntegerQueue, &amp;ulValueToSend, 0 );\n            ulValueToSend++;\n        }\n\n        /* Generate the interrupt so the interrupt service routine can read the\n           values from the queue. The syntax used to generate a software\n           interrupt is dependent on the FreeRTOS port being used. The syntax\n           used below can only be used with the FreeRTOS Windows port, in which\n           such interrupts are only simulated. */\n        vPrintString( \"Generator task - About to generate an interrupt.\\r\\n\" );\n        vPortGenerateSimulatedInterrupt( mainINTERRUPT_NUMBER );\n        vPrintString( \"Generator task - Interrupt generated.\\r\\n\\r\\n\\r\\n\" );\n    }\n}\n</code></pre> <p>Listing 7.21 The implementation of the task that writes to the queue in Example 7.4</p> <p>\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u8c03\u7528 <code>xQueueReceiveFromISR()</code> \u76f4\u5230\u6240\u6709\u5199\u5165\u5468\u671f\u6027\u4efb\u52a1\u7684\u503c\u90fd\u88ab\u8bfb\u53d6\uff0c\u961f\u5217\u4e3a\u7a7a\u3002\u63a5\u6536\u5230\u7684\u503c\u7684\u6700\u540e\u4e24\u4f4d\u7528\u4e8e\u4f5c\u4e3a\u5b57\u7b26\u4e32\u6570\u7ec4\u7684\u7d22\u5f15\u3002\u7136\u540e\u4f7f\u7528\u5bf9 <code>xQueueSendFromISR()</code> \u7684\u8c03\u7528\u5c06\u6307\u5411\u76f8\u5e94\u7d22\u5f15\u4f4d\u7f6e\u7684\u5b57\u7b26\u4e32\u7684\u6307\u9488\u53d1\u9001\u5230\u53e6\u4e00\u4e2a\u961f\u5217\u3002\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u7684\u5b9e\u73b0\u5982\u56fe 7.22 \u6240\u793a\u3002</p> <p></p> <pre><code>static uint32_t ulExampleInterruptHandler( void )\n{\n    BaseType_t xHigherPriorityTaskWoken;\n    uint32_t ulReceivedNumber;\n\n    /* The strings are declared static const to ensure they are not allocated\n       on the interrupt service routine's stack, and so exist even when the\n       interrupt service routine is not executing. */\n\n    static const char *pcStrings[] =\n    {\n        \"String 0\\r\\n\",\n        \"String 1\\r\\n\",\n        \"String 2\\r\\n\",\n        \"String 3\\r\\n\"\n    };\n\n    /* As always, xHigherPriorityTaskWoken is initialized to pdFALSE to be\n       able to detect it getting set to pdTRUE inside an interrupt safe API\n       function.  Note that as an interrupt safe API function can only set\n       xHigherPriorityTaskWoken to pdTRUE, it is safe to use the same\n       xHigherPriorityTaskWoken variable in both the call to\n       xQueueReceiveFromISR() and the call to xQueueSendToBackFromISR(). */\n    xHigherPriorityTaskWoken = pdFALSE;\n\n    /* Read from the queue until the queue is empty. */\n    while( xQueueReceiveFromISR( xIntegerQueue,\n                                 &amp;ulReceivedNumber,\n                                 &amp;xHigherPriorityTaskWoken ) != errQUEUE_EMPTY )\n    {\n        /* Truncate the received value to the last two bits (values 0 to 3\n           inclusive), then use the truncated value as an index into the\n           pcStrings[] array to select a string (char *) to send on the other\n           queue. */\n        ulReceivedNumber &amp;= 0x03;\n        xQueueSendToBackFromISR( xStringQueue,\n                                 &amp;pcStrings[ ulReceivedNumber ],\n                                 &amp;xHigherPriorityTaskWoken );\n    }\n\n    /* If receiving from xIntegerQueue caused a task to leave the Blocked\n       state, and if the priority of the task that left the Blocked state is\n       higher than the priority of the task in the Running state, then\n       xHigherPriorityTaskWoken will have been set to pdTRUE inside\n       xQueueReceiveFromISR().\n\n       If sending to xStringQueue caused a task to leave the Blocked state, and\n       if the priority of the task that left the Blocked state is higher than\n       the priority of the task in the Running state, then\n       xHigherPriorityTaskWoken will have been set to pdTRUE inside\n       xQueueSendToBackFromISR().\n\n       xHigherPriorityTaskWoken is used as the parameter to portYIELD_FROM_ISR().\n       If xHigherPriorityTaskWoken equals pdTRUE then calling portYIELD_FROM_ISR()\n       will request a context switch. If xHigherPriorityTaskWoken is still pdFALSE then calling portYIELD_FROM_ISR() will have no effect.\n\n       The implementation of portYIELD_FROM_ISR() used by the Windows port\n       includes a return statement, which is why this function does not\n       explicitly return a value. */\n    portYIELD_FROM_ISR( xHigherPriorityTaskWoken );\n}\n</code></pre> <p>Listing 7.22 The implementation of the interrupt service routine used by Example 7.4</p> <p>\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u63a5\u6536\u5b57\u7b26\u6307\u9488\u7684\u4efb\u52a1\u5728\u6d88\u606f\u5230\u8fbe\u65f6\u5728\u961f\u5217\u4e0a\u963b\u585e\uff0c\u6253\u5370\u51fa\u6bcf\u4e2a\u63a5\u6536\u5230\u7684\u5b57\u7b26\u4e32\u3002\u5176\u5b9e\u73b0\u5982\u56fe 7.23 \u6240\u793a\u3002</p> <p></p> <pre><code>static void vStringPrinter( void *pvParameters )\n{\n    char *pcString;\n\n    for( ;; )\n    {\n        /* Block on the queue to wait for data to arrive. */\n        xQueueReceive( xStringQueue, &amp;pcString, portMAX_DELAY );\n\n        /* Print out the string received. */\n        vPrintString( pcString );\n    }\n}\n</code></pre> <p>Listing 7.23 The task that prints out the strings received from the interrupt service routine in Example 7.4</p> <p>\u4e0e\u5f80\u5e38\u4e00\u6837\uff0c<code>main()</code> \u521b\u5efa\u6240\u9700\u7684\u961f\u5217\u548c\u4efb\u52a1\uff0c\u7136\u540e\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u3002\u5176\u5b9e\u73b0\u5982\u56fe 7.24 \u6240\u793a\u3002</p> <p></p> <pre><code>int main( void )\n{\n    /* Before a queue can be used it must first be created. Create both queues\n       used by this example. One queue can hold variables of type uint32_t, the\n       other queue can hold variables of type char*. Both queues can hold a\n       maximum of 10 items. A real application should check the return values\n       to ensure the queues have been successfully created. */\n    xIntegerQueue = xQueueCreate( 10, sizeof( uint32_t ) );\n    xStringQueue = xQueueCreate( 10, sizeof( char * ) );\n\n    /* Create the task that uses a queue to pass integers to the interrupt\n       service routine. The task is created at priority 1. */\n    xTaskCreate( vIntegerGenerator, \"IntGen\", 1000, NULL, 1, NULL );\n\n    /* Create the task that prints out the strings sent to it from the\n       interrupt service routine. This task is created at the higher\n       priority of 2. */\n    xTaskCreate( vStringPrinter, \"String\", 1000, NULL, 2, NULL );\n\n    /* Install the handler for the software interrupt. The syntax necessary to\n       do this is dependent on the FreeRTOS port being used. The syntax shown\n       here can only be used with the FreeRTOS Windows port, where such\n       interrupts are only simulated. */\n    vPortSetInterruptHandler( mainINTERRUPT_NUMBER, ulExampleInterruptHandler );\n\n    /* Start the scheduler so the created tasks start executing. */\n    vTaskStartScheduler();\n\n    /* If all is well then main() will never reach here as the scheduler will\n       now be running the tasks. If main() does reach here then it is likely\n       that there was insufficient heap memory available for the idle task\n       to be created. Chapter 2 provides more information on heap memory\n       management. */\n    for( ;; );\n}\n</code></pre> <p>Listing 7.24 The main() function for Example 7.4</p> <p>\u5f53\u6267\u884c\u793a\u4f8b 7.4 \u65f6\uff0c\u4ea7\u751f\u7684\u8f93\u51fa\u5982\u56fe 7.12 \u6240\u793a\u3002\u5982\u6240\u89c1\uff0c\u4e2d\u65ad\u63a5\u6536\u5230\u6240\u6709\u4e94\u4e2a\u6574\u6570\uff0c\u5e76\u54cd\u5e94\u4ea7\u751f\u4e94\u4e2a\u5b57\u7b26\u4e32\u3002\u56fe 7.13 \u5bf9\u6267\u884c\u793a\u4f8b 7.4 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa\u8fdb\u884c\u4e86\u8fdb\u4e00\u6b65\u7684\u89e3\u91ca\u3002</p> <p> </p> <p> Figure 7.12 The output produced when Example 7.4 is executed</p> <p> Figure 7.13 The sequence of execution produced by Example 7.4</p>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#78","title":"7.8 \u4e2d\u65ad\u5d4c\u5957","text":"<p>\u4efb\u52a1\u4f18\u5148\u7ea7\u548c\u4e2d\u65ad\u4f18\u5148\u7ea7\u4e4b\u95f4\u7684\u6df7\u6dc6\u662f\u5f88\u5e38\u89c1\u7684\u3002\u672c\u8282\u8ba8\u8bba\u4e2d\u65ad\u4f18\u5148\u7ea7\uff0c\u5373\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\uff08ISR\uff09\u76f8\u5bf9\u4e8e\u5f7c\u6b64\u7684\u6267\u884c\u4f18\u5148\u7ea7\u3002\u5206\u914d\u7ed9\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u4e0e\u4e2d\u65ad\u5206\u914d\u7684\u4f18\u5148\u7ea7\u65e0\u5173\u3002\u786c\u4ef6\u51b3\u5b9a ISR \u4f55\u65f6\u6267\u884c\uff0c\u800c\u8f6f\u4ef6\u51b3\u5b9a\u4efb\u52a1\u4f55\u65f6\u6267\u884c\u3002ISR \u662f\u54cd\u5e94\u786c\u4ef6\u4e2d\u65ad\u6267\u884c\u7684\uff0c\u5b83\u5c06\u4e2d\u65ad\u4e00\u4e2a\u4efb\u52a1\uff0c\u4f46\u4e00\u4e2a\u4efb\u52a1\u65e0\u6cd5\u62a2\u5360 ISR\u3002</p> <p>\u652f\u6301\u4e2d\u65ad\u5d4c\u5957\u7684\u79fb\u690d\u9700\u8981\u5728 FreeRTOSConfig.h \u4e2d\u5b9a\u4e49\u4e00\u4e2a\u6216\u4e24\u4e2a\u5e38\u91cf\u3002<code>configMAX_SYSCALL_INTERRUPT_PRIORITY</code> \u548c <code>configMAX_API_CALL_INTERRUPT_PRIORITY</code> \u90fd\u5b9a\u4e49\u4e86\u76f8\u540c\u7684\u5c5e\u6027\u3002\u8f83\u65e7\u7684 FreeRTOS \u79fb\u690d\u4f7f\u7528 <code>configMAX_SYSCALL_INTERRUPT_PRIORITY</code>\uff0c\u8f83\u65b0\u7684 FreeRTOS \u79fb\u690d\u4f7f\u7528 <code>configMAX_API_CALL_INTERRUPT_PRIORITY</code>\u3002</p> <p>\u63a7\u5236\u4e2d\u65ad\u5d4c\u5957\u7684\u5e38\u91cf</p> <ul> <li><code>configMAX_SYSCALL_INTERRUPT_PRIORITY</code> \u6216 <code>configMAX_API_CALL_INTERRUPT_PRIORITY</code></li> </ul> <p>\u8bbe\u7f6e\u53ef\u4ee5\u4ece\u4e2d\u65ad\u5b89\u5168 FreeRTOS API \u51fd\u6570\u8c03\u7528\u7684\u6700\u9ad8\u4e2d\u65ad\u4f18\u5148\u7ea7\u3002</p> <ul> <li><code>configKERNEL_INTERRUPT_PRIORITY</code></li> </ul> <p>\u8bbe\u7f6e\u6ef4\u7b54\u4e2d\u65ad\u4f7f\u7528\u7684\u4e2d\u65ad\u4f18\u5148\u7ea7\uff0c\u5fc5\u987b\u59cb\u7ec8\u8bbe\u7f6e\u4e3a\u6700\u4f4e\u7684\u4e2d\u65ad\u4f18\u5148\u7ea7\u3002</p> <p>\u5982\u679c\u6240\u4f7f\u7528\u7684 FreeRTOS \u79fb\u690d\u4e0d\u4f7f\u7528 <code>configMAX_SYSCALL_INTERRUPT_PRIORITY</code> \u5e38\u91cf\uff0c\u5219\u4efb\u4f55\u4f7f\u7528\u4e2d\u65ad\u5b89\u5168 FreeRTOS API \u51fd\u6570\u7684\u4e2d\u65ad\u4e5f\u5fc5\u987b\u5728 <code>configKERNEL_INTERRUPT_PRIORITY</code> \u5b9a\u4e49\u7684\u4f18\u5148\u7ea7\u4e0b\u6267\u884c\u3002</p> <p>\u6bcf\u4e2a\u4e2d\u65ad\u6e90\u90fd\u6709\u4e00\u4e2a\u6570\u5b57\u4f18\u5148\u7ea7\u548c\u4e00\u4e2a\u903b\u8f91\u4f18\u5148\u7ea7\uff1a</p> <ul> <li>\u6570\u5b57\u4f18\u5148\u7ea7</li> </ul> <p>\u6570\u5b57\u4f18\u5148\u7ea7\u5c31\u662f\u5206\u914d\u7ed9\u4e2d\u65ad\u4f18\u5148\u7ea7\u7684\u6570\u5b57\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4e2d\u65ad\u88ab\u5206\u914d\u4f18\u5148\u7ea7 7\uff0c\u5219\u5176\u6570\u5b57\u4f18\u5148\u7ea7\u5c31\u662f 7\u3002\u540c\u6837\uff0c\u5982\u679c\u4e2d\u65ad\u88ab\u5206\u914d\u4f18\u5148\u7ea7 200\uff0c\u5219\u5176\u6570\u5b57\u4f18\u5148\u7ea7\u5c31\u662f 200\u3002</p> <ul> <li>\u903b\u8f91\u4f18\u5148\u7ea7</li> </ul> <p>\u4e2d\u65ad\u7684\u903b\u8f91\u4f18\u5148\u7ea7\u63cf\u8ff0\u4e86\u8be5\u4e2d\u65ad\u76f8\u5bf9\u4e8e\u5176\u4ed6\u4e2d\u65ad\u7684\u4f18\u5148\u7ea7\u3002</p> <p>\u5982\u679c\u4e24\u4e2a\u4f18\u5148\u7ea7\u4e0d\u540c\u7684\u4e2d\u65ad\u540c\u65f6\u53d1\u751f\uff0c\u5219\u5904\u7406\u5668\u5c06\u6267\u884c\u5177\u6709\u66f4\u9ad8\u903b\u8f91\u4f18\u5148\u7ea7\u7684\u4e2d\u65ad\u7684 ISR\uff0c\u7136\u540e\u624d\u4f1a\u6267\u884c\u5177\u6709\u8f83\u4f4e\u903b\u8f91\u4f18\u5148\u7ea7\u7684\u4e2d\u65ad\u7684 ISR\u3002</p> <p>\u4e00\u4e2a\u4e2d\u65ad\u53ef\u4ee5\u6253\u65ad\uff08\u5d4c\u5957\uff09\u4efb\u4f55\u5177\u6709\u8f83\u4f4e\u903b\u8f91\u4f18\u5148\u7ea7\u7684\u4e2d\u65ad\uff0c\u4f46\u4e0d\u80fd\u6253\u65ad\uff08\u5d4c\u5957\uff09\u4efb\u4f55\u5177\u6709\u76f8\u7b49\u6216\u66f4\u9ad8\u903b\u8f91\u4f18\u5148\u7ea7\u7684\u4e2d\u65ad\u3002</p> <p>\u4e2d\u65ad\u7684\u6570\u5b57\u4f18\u5148\u7ea7\u4e0e\u903b\u8f91\u4f18\u5148\u7ea7\u4e4b\u95f4\u7684\u5173\u7cfb\u53d6\u51b3\u4e8e\u5904\u7406\u5668\u4f53\u7cfb\u7ed3\u6784\uff1b\u5728\u67d0\u4e9b\u5904\u7406\u5668\u4e0a\uff0c\u5206\u914d\u7ed9\u4e2d\u65ad\u7684\u6570\u5b57\u4f18\u5148\u7ea7\u8d8a\u9ad8\uff0c\u8be5\u4e2d\u65ad\u7684\u903b\u8f91\u4f18\u5148\u7ea7\u5c31\u8d8a\u9ad8\uff0c\u800c\u5728\u5176\u4ed6\u5904\u7406\u5668\u4f53\u7cfb\u7ed3\u6784\u4e0a\u5219\u76f8\u53cd\u3002</p> <p>\u901a\u8fc7\u5c06 <code>configMAX_SYSCALL_INTERRUPT_PRIORITY</code> \u8bbe\u7f6e\u4e3a\u9ad8\u4e8e <code>configKERNEL_INTERRUPT_PRIORITY</code> \u7684\u903b\u8f91\u4e2d\u65ad\u4f18\u5148\u7ea7\uff0c\u53ef\u4ee5\u521b\u5efa\u5b8c\u6574\u7684\u4e2d\u65ad\u5d4c\u5957\u6a21\u578b\u3002\u8fd9\u5728\u56fe 7.14 \u4e2d\u5f97\u5230\u4e86\u8bc1\u660e\uff0c\u8be5\u56fe\u663e\u793a\u4e86\u4ee5\u4e0b\u573a\u666f\uff1a</p> <ul> <li>\u5904\u7406\u5668\u5177\u6709\u4e03\u4e2a\u552f\u4e00\u7684\u4e2d\u65ad\u4f18\u5148\u7ea7\u3002</li> <li>\u5206\u914d\u6570\u5b57\u4f18\u5148\u7ea7 7 \u7684\u4e2d\u65ad\u7684\u903b\u8f91\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5206\u914d\u6570\u5b57\u4f18\u5148\u7ea7 1 \u7684\u4e2d\u65ad\u3002</li> <li><code>configKERNEL_INTERRUPT_PRIORITY</code> \u8bbe\u7f6e\u4e3a 1\u3002</li> <li><code>configMAX_SYSCALL_INTERRUPT_PRIORITY</code> \u8bbe\u7f6e\u4e3a 3\u3002</li> </ul> <p></p> <p> Figure 7.14 Constants affecting interrupt nesting behavior</p> <p>\u56fe 7.14 \u8bf4\u660e\uff1a</p> <ul> <li> <p>\u4f7f\u7528\u4f18\u5148\u7ea7 1 \u5230 3\uff08\u5305\u62ec 3\uff09\u7684\u4e2d\u65ad\uff0c\u5728\u5185\u6838\u6216\u5e94\u7528\u7a0b\u5e8f\u5904\u4e8e\u5173\u952e\u6bb5\u65f6\u88ab\u7981\u6b62\u6267\u884c\u3002\u4ee5\u8fd9\u4e9b\u4f18\u5148\u7ea7\u8fd0\u884c\u7684 ISR \u53ef\u4ee5\u4f7f\u7528\u4e2d\u65ad\u5b89\u5168\u7684 FreeRTOS API \u51fd\u6570\u3002\u5173\u952e\u6bb5\u5728\u7b2c 8 \u7ae0\u4e2d\u63cf\u8ff0\u3002</p> </li> <li> <p>\u4f7f\u7528\u4f18\u5148\u7ea7 4 \u6216\u66f4\u9ad8\u7684\u4e2d\u65ad\u4e0d\u53d7\u5173\u952e\u6bb5\u7684\u5f71\u54cd\uff0c\u56e0\u6b64\u8c03\u5ea6\u7a0b\u5e8f\u6240\u505a\u7684\u4efb\u4f55\u4e8b\u60c5\u90fd\u4e0d\u4f1a\u963b\u6b62\u8fd9\u4e9b\u4e2d\u65ad\u7acb\u5373\u6267\u884c\u2014\u2014\u5728\u786c\u4ef6\u672c\u8eab\u7684\u9650\u5236\u5185\u3002\u4ee5\u8fd9\u4e9b\u4f18\u5148\u7ea7\u6267\u884c\u7684 ISR \u4e0d\u80fd\u4f7f\u7528\u4efb\u4f55 FreeRTOS API \u51fd\u6570\u3002</p> </li> <li> <p>\u901a\u5e38\uff0c\u9700\u8981\u975e\u5e38\u4e25\u683c\u7684\u65f6\u95f4\u7cbe\u5ea6\u7684\u529f\u80fd\uff08\u4f8b\u5982\u7535\u673a\u63a7\u5236\uff09\u5c06\u4f7f\u7528\u9ad8\u4e8e <code>configMAX_SYSCALL_INTERRUPT_PRIORITY</code> \u7684\u4f18\u5148\u7ea7\uff0c\u4ee5\u786e\u4fdd\u8c03\u5ea6\u7a0b\u5e8f\u4e0d\u4f1a\u7ed9\u4e2d\u65ad\u54cd\u5e94\u65f6\u95f4\u5f15\u5165\u6296\u52a8\u3002</p> </li> </ul>"},{"location":"ch07-%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#781-arm-cortex-m22-arm-gic","title":"7.8.1 \u9488\u5bf9 ARM Cortex-M[^22] \u548c ARM GIC \u7528\u6237\u7684\u8bf4\u660e","text":"<p>[^22]: \u672c\u8282\u4ec5\u90e8\u5206\u9002\u7528\u4e8e Cortex-M0 \u548c Cortex-M0+ \u5185\u6838\u3002</p> <p>Cortex-M \u5904\u7406\u5668\u4e0a\u7684\u4e2d\u65ad\u914d\u7f6e\u4ee4\u4eba\u56f0\u60d1\uff0c\u5bb9\u6613\u51fa\u9519\u3002\u4e3a\u4e86\u5e2e\u52a9\u60a8\u7684\u5f00\u53d1\uff0cFreeRTOS Cortex-M \u79fb\u690d\u4f1a\u81ea\u52a8\u68c0\u67e5\u4e2d\u65ad\u914d\u7f6e\uff0c\u4f46\u4ec5\u5728\u5b9a\u4e49\u4e86 <code>configASSERT()</code> \u7684\u60c5\u51b5\u4e0b\u3002<code>configASSERT()</code> \u5728 11.2 \u8282\u4e2d\u63cf\u8ff0\u3002</p> <p>ARM Cortex \u5185\u6838\u548c ARM \u901a\u7528\u4e2d\u65ad\u63a7\u5236\u5668\uff08GIC\uff09\u4f7f\u7528\u6570\u5b57\u4e0a\u8f83\u4f4e\u7684\u4f18\u5148\u7ea7\u7f16\u53f7\u6765\u8868\u793a\u903b\u8f91\u4e0a\u8f83\u9ad8\u7684\u4f18\u5148\u7ea7\u4e2d\u65ad\u3002\u8fd9\u53ef\u80fd\u770b\u8d77\u6765\u8fdd\u53cd\u76f4\u89c9\uff0c\u5e76\u4e14\u5f88\u5bb9\u6613\u5fd8\u8bb0\u3002\u5982\u679c\u60a8\u5e0c\u671b\u5206\u914d\u7ed9\u4e2d\u65ad\u4e00\u4e2a\u903b\u8f91\u4e0a\u8f83\u4f4e\u7684\u4f18\u5148\u7ea7\uff0c\u5219\u5fc5\u987b\u5206\u914d\u7ed9\u5b83\u4e00\u4e2a\u6570\u5b57\u4e0a\u8f83\u9ad8\u7684\u503c\u3002\u5982\u679c\u60a8\u5e0c\u671b\u5206\u914d\u7ed9\u4e2d\u65ad\u4e00\u4e2a\u903b\u8f91\u4e0a\u8f83\u9ad8\u7684\u4f18\u5148\u7ea7\uff0c\u5219\u5fc5\u987b\u5206\u914d\u7ed9\u5b83\u4e00\u4e2a\u6570\u5b57\u4e0a\u8f83\u4f4e\u7684\u503c\u3002</p> <p>Cortex-M \u4e2d\u65ad\u63a7\u5236\u5668\u5141\u8bb8\u4f7f\u7528\u6700\u591a\u516b\u4f4d\u6765\u6307\u5b9a\u6bcf\u4e2a\u4e2d\u65ad\u7684\u4f18\u5148\u7ea7\uff0c\u56e0\u6b64\u6700\u4f4e\u4f18\u5148\u7ea7\u4e3a 255\u3002\u96f6\u662f\u6700\u9ad8\u4f18\u5148\u7ea7\u3002\u7136\u800c\uff0cCortex-M \u5fae\u63a7\u5236\u5668\u901a\u5e38\u4ec5\u5b9e\u73b0\u516b\u4f4d\u4e2d\u7684\u4e00\u90e8\u5206\u3002\u5b9e\u9645\u5b9e\u73b0\u7684\u4f4d\u6570\u53d6\u51b3\u4e8e\u5fae\u63a7\u5236\u5668\u7cfb\u5217\u3002</p> <p>\u5f53\u4ec5\u5b9e\u73b0\u516b\u4f4d\u4e2d\u7684\u4e00\u90e8\u5206\u65f6\uff0c\u4ec5\u9ad8\u4f4d\u5b57\u8282\u7684\u6700\u9ad8\u6709\u6548\u4f4d\u53ef\u4ee5\u4f7f\u7528\u2014\u2014\u5c06\u6700\u4f4e\u6709\u6548\u4f4d\u8bbe\u7f6e\u4e3a\u672a\u5b9e\u73b0\u3002\u672a\u5b9e\u73b0\u7684\u4f4d\u53ef\u4ee5\u53d6\u4efb\u4f55\u503c\uff0c\u4f46\u901a\u5e38\u8bbe\u7f6e\u4e3a 1\u3002\u8fd9\u5728\u56fe 7.15 \u4e2d\u5f97\u5230\u4e86\u8bc1\u660e\uff0c\u8be5\u56fe\u663e\u793a\u4e86\u4f18\u5148\u7ea7\u4e3a\u4e8c\u8fdb\u5236 101 \u7684\u503c\u662f\u5982\u4f55\u5b58\u50a8\u5728\u5b9e\u73b0\u4e86\u56db\u4e2a\u4f18\u5148\u7ea7\u4f4d\u7684 Cortex-M \u5fae\u63a7\u5236\u5668\u4e2d\u7684\u3002</p> <p></p> <p> Figure 7.15 How a priority of binary 101 is stored by a Cortex-M microcontroller that implements four priority bits</p> <p>\u5728\u56fe 7.15 \u4e2d\uff0c\u4e8c\u8fdb\u5236\u503c 101 \u5df2\u88ab\u79fb\u5165\u6700\u9ad8\u6709\u6548\u7684\u56db\u4e2a\u4f4d\uff0c\u56e0\u4e3a\u6700\u4f4e\u6709\u6548\u7684\u56db\u4e2a\u4f4d\u672a\u5b9e\u73b0\u3002\u672a\u5b9e\u73b0\u7684\u4f4d\u88ab\u8bbe\u7f6e\u4e3a 1\u3002</p> <p>\u67d0\u4e9b\u5e93\u51fd\u6570\u671f\u671b\u5728\u5c06\u4f18\u5148\u7ea7\u503c\u5199\u5165 Cortex-M \u5bc4\u5b58\u5668\u4e4b\u524d\uff0c\u5c06\u5176\u79fb\u4f4d\u5230\u5b9e\u73b0\u7684\uff08\u6700\u9ad8\u6709\u6548\uff09\u4f4d\u4e2d\u3002\u5f53\u4f7f\u7528\u6b64\u7c7b\u51fd\u6570\u65f6\uff0c\u56fe 7.15 \u4e2d\u7684\u4f18\u5148\u7ea7\u53ef\u4ee5\u6307\u5b9a\u4e3a\u5341\u8fdb\u5236 95\u3002\u5341\u8fdb\u5236 95 \u662f\u5c06\u4e8c\u8fdb\u5236 101 \u5411\u4e0a\u79fb\u4f4d\u56db\u4f4d\u4ee5\u5f62\u6210\u4e8c\u8fdb\u5236 101nnnn\uff08\u5176\u4e2d\u201cn\u201d\u662f\u672a\u5b9e\u73b0\u7684\u4f4d\uff09\uff0c\u5e76\u5c06\u672a\u5b9e\u73b0\u7684\u4f4d\u8bbe\u7f6e\u4e3a 1 \u4ee5\u5f62\u6210\u4e8c\u8fdb\u5236 1011111\u3002</p> <p>\u67d0\u4e9b\u5e93\u51fd\u6570\u671f\u671b\u5728\u5c06\u4f18\u5148\u7ea7\u503c\u5199\u5165 Cortex-M \u5bc4\u5b58\u5668\u4e4b\u524d\uff0c\u5c06\u5176\u79fb\u4f4d\u5230\u5b9e\u73b0\u7684\uff08\u6700\u9ad8\u6709\u6548\uff09\u4f4d\u4e2d\u3002\u5f53\u4f7f\u7528\u6b64\u7c7b\u51fd\u6570\u65f6\uff0c\u56fe 7.15 \u4e2d\u7684\u4f18\u5148\u7ea7\u5fc5\u987b\u6307\u5b9a\u4e3a\u5341\u8fdb\u5236 5\u3002\u5341\u8fdb\u5236 5 \u662f\u4e8c\u8fdb\u5236 101 \u7684\u79fb\u4f4d\u503c\uff0c\u6ca1\u6709\u4efb\u4f55\u79fb\u4f4d\u3002</p> <p><code>configMAX_SYSCALL_INTERRUPT_PRIORITY</code> \u548c <code>configKERNEL_INTERRUPT_PRIORITY</code> \u5fc5\u987b\u4ee5\u5141\u8bb8\u76f4\u63a5\u5199\u5165 Cortex-M \u5bc4\u5b58\u5668\u7684\u65b9\u5f0f\u8fdb\u884c\u6307\u5b9a\uff0c\u56e0\u6b64\u5728\u4f18\u5148\u7ea7\u503c\u79fb\u4f4d\u5230\u5b9e\u73b0\u7684\u4f4d\u4e4b\u540e\u3002</p> <p><code>configKERNEL_INTERRUPT_PRIORITY</code> \u5fc5\u987b\u59cb\u7ec8\u8bbe\u7f6e\u4e3a\u6700\u4f4e\u53ef\u80fd\u7684\u4e2d\u65ad\u4f18\u5148\u7ea7\u3002\u672a\u5b9e\u73b0\u7684\u4f18\u5148\u7ea7\u4f4d\u53ef\u4ee5\u8bbe\u7f6e\u4e3a 1\uff0c\u56e0\u6b64\u8be5\u5e38\u91cf\u53ef\u4ee5\u59cb\u7ec8\u8bbe\u7f6e\u4e3a 255\uff0c\u65e0\u8bba\u5b9e\u9645\u5b9e\u73b0\u4e86\u591a\u5c11\u4e2a\u4f18\u5148\u7ea7\u4f4d\u3002</p> <p>Cortex-M \u4e2d\u65ad\u7684\u9ed8\u8ba4\u4f18\u5148\u7ea7\u4e3a\u96f6\u2014\u2014\u6700\u9ad8\u53ef\u80fd\u7684\u4f18\u5148\u7ea7\u3002\u4f7f\u7528 FreeRTOS API \u7684\u4e2d\u65ad\u7684\u4f18\u5148\u7ea7\u4e0d\u5f97\u7559\u5728\u9ed8\u8ba4\u503c\u3002</p>"},{"location":"ch08-%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/","title":"8 \u8d44\u6e90\u7ba1\u7406","text":""},{"location":"ch08-%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/#81","title":"8.1 \u7ae0\u8282\u7b80\u4ecb\u548c\u8303\u56f4","text":"<p>\u5728\u591a\u4efb\u52a1\u7cfb\u7edf\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u4efb\u52a1\u5f00\u59cb\u8bbf\u95ee\u8d44\u6e90\uff0c\u4f46\u5728\u88ab\u5207\u6362\u51fa\u8fd0\u884c\u72b6\u6001\u4e4b\u524d\u672a\u5b8c\u6210\u8bbf\u95ee\uff0c\u5219\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9519\u8bef\u3002\u5982\u679c\u4efb\u52a1\u5c06\u8d44\u6e90\u7f6e\u4e8e\u4e0d\u4e00\u81f4\u7684\u72b6\u6001\uff0c\u5219\u4efb\u4f55\u5176\u4ed6\u4efb\u52a1\u6216\u4e2d\u65ad\u5bf9\u540c\u4e00\u8d44\u6e90\u7684\u8bbf\u95ee\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u636e\u635f\u574f\u6216\u5176\u4ed6\u7c7b\u4f3c\u95ee\u9898\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e9b\u793a\u4f8b\uff1a</p> <ul> <li>\u8bbf\u95ee\u5916\u8bbe</li> </ul> <p>\u8003\u8651\u4ee5\u4e0b\u573a\u666f\uff0c\u5176\u4e2d\u4e24\u4e2a\u4efb\u52a1\u5c1d\u8bd5\u5199\u5165\u6db2\u6676\u663e\u793a\u5c4f\uff08LCD\uff09\u3002</p> <ol> <li> <p>\u4efb\u52a1 A \u6267\u884c\u5e76\u5f00\u59cb\u5411 LCD \u5199\u5165\u5b57\u7b26\u4e32\u201cHello world\u201d\u3002</p> </li> <li> <p>\u4efb\u52a1 A \u5728\u8f93\u51fa\u5b57\u7b26\u4e32\u7684\u5f00\u5934\u201cHello w\u201d\u540e\u88ab\u4efb\u52a1 B \u62a2\u5360\u3002</p> </li> <li> <p>\u4efb\u52a1 B \u5199\u5165\u201cAbort, Retry, Fail?\u201d\u5230 LCD\uff0c\u7136\u540e\u8fdb\u5165\u963b\u585e\u72b6\u6001\u3002</p> </li> <li> <p>\u4efb\u52a1 A \u4ece\u5176\u88ab\u62a2\u5360\u7684\u70b9\u7ee7\u7eed\uff0c\u5e76\u5b8c\u6210\u5176\u5b57\u7b26\u4e32\u7684\u5269\u4f59\u90e8\u5206\u201corld\u201d\u3002</p> </li> </ol> <p>LCD \u73b0\u5728\u663e\u793a\u635f\u574f\u7684\u5b57\u7b26\u4e32\u201cHello wAbort, Retry, Fail?orld\u201d\u3002</p> <ul> <li>\u8bfb\u3001\u4fee\u6539\u3001\u5199\u64cd\u4f5c</li> </ul> <p>\u793a\u4f8b\u4ee3\u7801\u663e\u793a\u4e86 C \u4ee3\u7801\u884c\u53ca\u5176\u901a\u5e38\u88ab\u7ffb\u8bd1\u4e3a\u6c47\u7f16\u4ee3\u7801\u7684\u65b9\u5f0f\u3002\u53ef\u4ee5\u770b\u51fa\uff0cPORTA \u7684\u503c\u9996\u5148\u4ece\u5185\u5b58\u8bfb\u53d6\u5230\u5bc4\u5b58\u5668\u4e2d\uff0c\u5728\u5bc4\u5b58\u5668\u4e2d\u4fee\u6539\uff0c\u7136\u540e\u5199\u56de\u5185\u5b58\u3002\u8fd9\u79f0\u4e3a\u8bfb\u3001\u4fee\u6539\u3001\u5199\u64cd\u4f5c\u3002</p> <p></p> <p>```c    / The C code being compiled. /    PORTA |= 0x01;</p> <p>/ The assembly code produced when the C code is compiled. /    LOAD  R1,[#PORTA] ; Read a value from PORTA into R1    MOVE  R2,#0x01    ; Move the absolute constant 1 into R2    OR    R1,R2       ; Bitwise OR R1 (PORTA) with R2 (constant 1)    STORE R1,[#PORTA] ; Store the new value back to PORTA    ```    Listing 8.1 An example read, modify, write sequence</p> <p>\u8fd9\u662f\u4e00\u4e2a\u201c\u975e\u539f\u5b50\u201d\u64cd\u4f5c\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u591a\u4e2a\u6307\u4ee4\u624d\u80fd\u5b8c\u6210\uff0c\u5e76\u4e14\u53ef\u4ee5\u88ab\u4e2d\u65ad\u3002\u8003\u8651\u4ee5\u4e0b\u573a\u666f\uff0c\u5176\u4e2d\u4e24\u4e2a\u4efb\u52a1\u5c1d\u8bd5\u66f4\u65b0\u540d\u4e3a PORTA \u7684\u5185\u5b58\u6620\u5c04\u5bc4\u5b58\u5668\u3002</p> <ol> <li> <p>\u4efb\u52a1 A \u5c06 PORTA \u7684\u503c\u52a0\u8f7d\u5230\u5bc4\u5b58\u5668\u4e2d\u2014\u2014\u64cd\u4f5c\u7684\u8bfb\u53d6\u90e8\u5206\u3002</p> </li> <li> <p>\u4efb\u52a1 A \u5728\u5b8c\u6210\u4fee\u6539\u548c\u5199\u5165\u540c\u4e00\u64cd\u4f5c\u7684\u8fc7\u7a0b\u4e2d\u88ab\u4efb\u52a1 B \u62a2\u5360\u3002</p> </li> <li> <p>\u4efb\u52a1 B \u66f4\u65b0 PORTA \u7684\u503c\uff0c\u7136\u540e\u8fdb\u5165\u963b\u585e\u72b6\u6001\u3002</p> </li> <li> <p>\u4efb\u52a1 A \u4ece\u5176\u88ab\u62a2\u5360\u7684\u70b9\u7ee7\u7eed\u3002\u5b83\u4fee\u6539\u5df2\u5728\u5bc4\u5b58\u5668\u4e2d\u6301\u6709\u7684 PORTA \u503c\u7684\u526f\u672c\uff0c\u7136\u540e\u5c06\u66f4\u65b0\u7684\u503c\u5199\u56de PORTA\u3002</p> </li> </ol> <p>\u5728\u6b64\u573a\u666f\u4e2d\uff0c\u4efb\u52a1 A \u66f4\u65b0\u5e76\u5199\u56de\u4e86\u8fc7\u65f6\u7684 PORTA \u503c\u3002\u4efb\u52a1 B \u5728\u4efb\u52a1 A \u83b7\u53d6 PORTA \u503c\u7684\u526f\u672c\u540e\u4fee\u6539\u4e86 PORTA\uff0c\u5e76\u5728\u4efb\u52a1 A \u5c06\u5176\u4fee\u6539\u503c\u5199\u56de PORTA \u5bc4\u5b58\u5668\u4e4b\u524d\u3002 \u5f53\u4efb\u52a1 A \u5199\u5165 PORTA \u65f6\uff0c\u5b83\u8986\u76d6\u4e86\u4efb\u52a1 B \u5df2\u7ecf\u6267\u884c\u7684\u4fee\u6539\uff0c\u4ece\u800c\u6709\u6548\u5730\u635f\u574f\u4e86 PORTA \u5bc4\u5b58\u5668\u503c\u3002</p> <p>\u6b64\u793a\u4f8b\u4f7f\u7528\u5916\u8bbe\u5bc4\u5b58\u5668\uff0c\u4f46\u5728\u5bf9\u53d8\u91cf\u6267\u884c\u8bfb\u3001\u4fee\u6539\u3001\u5199\u64cd\u4f5c\u65f6\u4e5f\u9002\u7528\u76f8\u540c\u7684\u539f\u7406\u3002</p> <ul> <li>\u5bf9\u53d8\u91cf\u7684\u975e\u539f\u5b50\u8bbf\u95ee</li> </ul> <p>\u66f4\u65b0\u7ed3\u6784\u7684\u591a\u4e2a\u6210\u5458\uff0c\u6216\u66f4\u65b0\u5927\u4e8e\u67b6\u6784\u81ea\u7136\u5b57\u5927\u5c0f\u7684\u53d8\u91cf\uff08\u4f8b\u5982\uff0c\u5728 16 \u4f4d\u673a\u5668\u4e0a\u66f4\u65b0 32 \u4f4d\u53d8\u91cf\uff09\uff0c\u90fd\u662f\u975e\u539f\u5b50\u64cd\u4f5c\u7684\u793a\u4f8b\u3002\u5982\u679c\u5b83\u4eec\u88ab\u4e2d\u65ad\uff0c\u5219\u53ef\u80fd\u5bfc\u81f4\u6570\u636e\u4e22\u5931\u6216\u635f\u574f\u3002</p> <ul> <li>\u51fd\u6570\u53ef\u91cd\u5165\u6027</li> </ul> <p>\u5982\u679c\u53ef\u4ee5\u4ece\u4e00\u4e2a\u4ee5\u4e0a\u7684\u4efb\u52a1\uff0c\u6216\u4ece\u4efb\u52a1\u548c\u4e2d\u65ad\u4e24\u8005\u4e2d\u5b89\u5168\u5730\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\uff0c\u5219\u79f0\u8be5\u51fd\u6570\u662f\u201c\u53ef\u91cd\u5165\u7684\u201d\u3002\u53ef\u91cd\u5165\u51fd\u6570\u88ab\u79f0\u4e3a\u201c\u7ebf\u7a0b\u5b89\u5168\u201d\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u88ab\u591a\u4e2a\u6267\u884c\u7ebf\u7a0b\u8bbf\u95ee\uff0c\u800c\u4e0d\u4f1a\u5bfc\u81f4\u6570\u636e\u6216\u903b\u8f91\u64cd\u4f5c\u635f\u574f\u7684\u98ce\u9669\u3002</p> <p>\u6bcf\u4e2a\u4efb\u52a1\u7ef4\u62a4\u81ea\u5df1\u7684\u5806\u6808\u548c\u4e00\u7ec4\u5904\u7406\u5668\uff08\u786c\u4ef6\uff09\u5bc4\u5b58\u5668\u503c\u3002\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u4e0d\u8bbf\u95ee\u9664\u5806\u6808\u4e0a\u5b58\u50a8\u7684\u6570\u636e\u6216\u4fdd\u5b58\u5728\u5bc4\u5b58\u5668\u4e2d\u7684\u6570\u636e\u4e4b\u5916\u7684\u4efb\u4f55\u6570\u636e\uff0c\u5219\u8be5\u51fd\u6570\u662f\u53ef\u91cd\u5165\u7684\uff0c\u5e76\u4e14\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002\u5217\u8868 8.2 \u662f\u53ef\u91cd\u5165\u51fd\u6570\u7684\u793a\u4f8b\u3002\u5217\u8868 8.3 \u662f\u4e0d\u53ef\u91cd\u5165\u51fd\u6570\u7684\u793a\u4f8b\u3002</p> <p>\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528 newlib C \u5e93\uff0c\u5219\u5fc5\u987b\u5728 FreeRTOSConfig.h \u4e2d\u5c06 <code>configUSE_NEWLIB_REENTRANT</code> \u8bbe\u7f6e\u4e3a 1\uff0c\u4ee5\u786e\u4fdd\u6b63\u786e\u5206\u914d newlib \u6240\u9700\u7684\u7ebf\u7a0b\u672c\u5730\u5b58\u50a8\u3002</p> <p>\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528 picolibc C \u5e93\uff0c\u5219\u5fc5\u987b\u5728 FreeRTOSConfig.h \u4e2d\u5c06 <code>configUSE_PICOLIBC_TLS</code> \u8bbe\u7f6e\u4e3a 1\uff0c\u4ee5\u786e\u4fdd\u6b63\u786e\u5206\u914d picolibc \u6240\u9700\u7684\u7ebf\u7a0b\u672c\u5730\u5b58\u50a8\u3002</p> <p>\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u4efb\u4f55\u5176\u4ed6 C \u5e93\u5e76\u4e14\u9700\u8981\u7ebf\u7a0b\u672c\u5730\u5b58\u50a8\uff08TLS\uff09\uff0c\u5219\u5fc5\u987b\u5728 FreeRTOSConfig.h \u4e2d\u5c06 <code>configUSE_C_RUNTIME_TLS_SUPPORT</code> \u8bbe\u7f6e\u4e3a 1\uff0c\u5e76\u4e14\u5fc5\u987b\u5b9e\u73b0\u4ee5\u4e0b\u5b8f-   - <code>configTLS_BLOCK_TYPE</code> - \u6bcf\u4e2a\u4efb\u52a1 TLS \u5757\u7684\u7c7b\u578b\u3002   - <code>configINIT_TLS_BLOCK</code> - \u521d\u59cb\u5316\u6bcf\u4e2a\u4efb\u52a1 TLS \u5757\u3002   - <code>configSET_TLS_BLOCK</code> - \u66f4\u65b0\u5f53\u524d TLS \u5757\u3002\u5728\u4e0a\u4e0b\u6587\u5207\u6362\u671f\u95f4\u8c03\u7528\uff0c\u4ee5\u786e\u4fdd\u4f7f\u7528\u6b63\u786e\u7684 TLS \u5757\u3002   - <code>configDEINIT_TLS_BLOCK</code> - \u91ca\u653e TLS \u5757\u3002</p> <p></p> <p>```c   / A parameter is passed into the function. This will either be passed on the       stack, or in a processor register. Either way is safe as each task or       interrupt that calls the function maintains its own stack and its own set       of register values, so each task or interrupt that calls the function will       have its own copy of lVar1. /   long lAddOneHundred( long lVar1 )   {       / This function scope variable will also be allocated to the stack or a           register, depending on the compiler and optimization level. Each task          or interrupt that calls this function will have its own copy of lVar2. /       long lVar2;</p> <pre><code>  lVar2 = lVar1 + 100;\n  return lVar2;\n</code></pre> <p>}   ```   Listing 8.2 An example of a reentrant function</p> <p></p> <p>```c   / In this case lVar1 is a global variable, so every task that calls      lNonsenseFunction will access the same single copy of the variable. /   long lVar1;</p> <p>long lNonsenseFunction( void )   {       / lState is static, so is not allocated on the stack. Each task that          calls this function will access the same single copy of the variable. /       static long lState = 0;       long lReturn;</p> <pre><code>  switch( lState )\n  {\n      case 0 : lReturn = lVar1 + 10;\n               lState = 1;\n               break;\n\n      case 1 : lReturn = lVar1 + 20;\n               lState = 0;\n               break;\n  }\n</code></pre> <p>}   ```   Listing 8.3 An example of a function that is not reentrant</p>"},{"location":"ch08-%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/#811","title":"8.1.1 \u4e92\u65a5","text":"<p>\u4e3a\u4e86\u786e\u4fdd\u59cb\u7ec8\u4fdd\u6301\u6570\u636e\u4e00\u81f4\u6027\uff0c\u5fc5\u987b\u4f7f\u7528\u201c\u4e92\u65a5\u201d\u6280\u672f\u6765\u7ba1\u7406\u4efb\u52a1\u4e4b\u95f4\u6216\u4efb\u52a1\u4e0e\u4e2d\u65ad\u4e4b\u95f4\u5171\u4eab\u8d44\u6e90\u7684\u8bbf\u95ee\u3002\u76ee\u6807\u662f\u786e\u4fdd\u4e00\u65e6\u4efb\u52a1\u5f00\u59cb\u8bbf\u95ee\u4e00\u4e2a\u975e\u53ef\u91cd\u5165\u4e14\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\u5171\u4eab\u8d44\u6e90\uff0c\u8be5\u4efb\u52a1\u5728\u8d44\u6e90\u6062\u590d\u5230\u4e00\u81f4\u72b6\u6001\u4e4b\u524d\u5bf9\u8d44\u6e90\u5177\u6709\u72ec\u5360\u8bbf\u95ee\u6743\u3002</p> <p>FreeRTOS \u63d0\u4f9b\u4e86\u51e0\u79cd\u529f\u80fd\u53ef\u7528\u4e8e\u5b9e\u73b0\u4e92\u65a5\uff0c\u4f46\u6700\u4f73\u7684\u4e92\u65a5\u65b9\u6cd5\u662f\uff08\u5c3d\u53ef\u80fd\u5730\uff0c\u56e0\u4e3a\u901a\u5e38\u4e0d\u5b9e\u7528\uff09\u8bbe\u8ba1\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f7f\u8d44\u6e90\u4e0d\u88ab\u5171\u4eab\uff0c\u6bcf\u4e2a\u8d44\u6e90\u4ec5\u7531\u5355\u4e2a\u4efb\u52a1\u8bbf\u95ee\u3002</p>"},{"location":"ch08-%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/#812","title":"8.1.2 \u8303\u56f4","text":"<p>\u672c\u7ae0\u6db5\u76d6\uff1a</p> <ul> <li>\u4f55\u65f6\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u9700\u8981\u8d44\u6e90\u7ba1\u7406\u548c\u63a7\u5236\u3002</li> <li>\u4ec0\u4e48\u662f\u5173\u952e\u6bb5\u3002</li> <li>\u4ec0\u4e48\u662f\u4e92\u65a5\u3002</li> <li>\u4ec0\u4e48\u662f\u6302\u8d77\u8c03\u5ea6\u7a0b\u5e8f\u3002</li> <li>\u5982\u4f55\u4f7f\u7528\u4e92\u65a5\u91cf\u3002</li> <li>\u5982\u4f55\u521b\u5efa\u548c\u4f7f\u7528\u5b88\u95e8\u4eba\u4efb\u52a1\u3002</li> <li>\u4ec0\u4e48\u662f\u4f18\u5148\u7ea7\u53cd\u8f6c\uff0c\u4ee5\u53ca\u4f18\u5148\u7ea7\u7ee7\u627f\u5982\u4f55\u51cf\u5c11\u5176\u5f71\u54cd\uff08\u4f46\u4e0d\u80fd\u6d88\u9664\uff09\u3002</li> </ul>"},{"location":"ch08-%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/#82","title":"8.2 \u5173\u952e\u6bb5\u548c\u6302\u8d77\u8c03\u5ea6\u7a0b\u5e8f","text":""},{"location":"ch08-%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/#821","title":"8.2.1 \u57fa\u672c\u5173\u952e\u6bb5","text":"<p>\u57fa\u672c\u5173\u952e\u6bb5\u662f\u7531\u8c03\u7528\u5b8f <code>taskENTER_CRITICAL()</code> \u548c <code>taskEXIT_CRITICAL()</code> \u5305\u56f4\u7684\u4ee3\u7801\u533a\u57df\u3002 \u5206\u522b\u3002\u5173\u952e\u6bb5\u4e5f\u79f0\u4e3a\u5173\u952e\u533a\u57df\u3002</p> <p><code>taskENTER_CRITICAL()</code> \u548c <code>taskEXIT_CRITICAL()</code> \u4e0d\u5e26\u4efb\u4f55\u53c2\u6570\uff0c \u6216\u8fd4\u56de\u503c^23\u3002\u5b83\u4eec\u7684\u7528\u6cd5\u5728\u6e05\u5355 8.4 \u4e2d\u8fdb\u884c\u4e86\u6f14\u793a\u3002</p> <p></p> <pre><code>/* Ensure access to the PORTA register cannot be interrupted by placing\n   it within a critical section. Enter the critical section. */\ntaskENTER_CRITICAL();\n\n/* A switch to another task cannot occur between the call to\n   taskENTER_CRITICAL() and the call to taskEXIT_CRITICAL(). Interrupts may\n   still execute on FreeRTOS ports that allow interrupt nesting, but only\n   interrupts whose logical priority is above the value assigned to the\n   configMAX_SYSCALL_INTERRUPT_PRIORITY constant \u2013 and those interrupts are\n   not permitted to call FreeRTOS API functions. */\nPORTA |= 0x01;\n\n/* Access to PORTA has finished, so it is safe to exit the critical section. */\ntaskEXIT_CRITICAL();\n</code></pre> <p>Listing 8.4 Using a critical section to guard access to a register</p> <p>\u672c\u4e66\u9644\u5e26\u7684\u793a\u4f8b\u9879\u76ee\u4f7f\u7528\u540d\u4e3a <code>vPrintString()</code> \u7684\u51fd\u6570\u5c06\u5b57\u7b26\u4e32\u5199\u5165\u6807\u51c6\u8f93\u51fa\uff0c\u5f53\u4f7f\u7528 FreeRTOS Windows \u79fb\u690d\u65f6\uff0c\u5b83\u662f\u7ec8\u7aef\u7a97\u53e3\u3002 <code>vPrintString()</code> \u4ece\u8bb8\u591a\u4e0d\u540c\u7684\u4efb\u52a1\u4e2d\u8c03\u7528\uff1b\u56e0\u6b64\uff0c\u7406\u8bba\u4e0a\uff0c\u5b83\u7684\u5b9e\u73b0\u53ef\u4ee5\u50cf\u5728\u5217\u8868 8.5 \u4e2d\u6240\u793a\u7684\u90a3\u6837\uff0c\u4f7f\u7528\u5173\u952e\u6bb5\u6765\u4fdd\u62a4\u5bf9\u6807\u51c6\u8f93\u51fa\u7684\u8bbf\u95ee\u3002</p> <p></p> <pre><code>void vPrintString( const char *pcString )\n{\n    /* Write the string to stdout, using a critical section as a crude method of\n       mutual exclusion. */\n    taskENTER_CRITICAL();\n    {\n        printf( \"%s\", pcString );\n        fflush( stdout );\n    }\n    taskEXIT_CRITICAL();\n}\n</code></pre> <p>Listing 8.5 A possible implementation of vPrintString()</p> <p>\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5b9e\u73b0\u7684\u5173\u952e\u6bb5\u662f\u63d0\u4f9b\u4e92\u65a5\u7684\u975e\u5e38\u7c97\u7565\u7684\u65b9\u6cd5\u3002\u5b83\u4eec\u901a\u8fc7\u7981\u7528\u4e2d\u65ad\u6765\u5de5\u4f5c\uff0c\u8981\u4e48\u5b8c\u5168\u7981\u7528\uff0c\u8981\u4e48\u6839\u636e\u6240\u4f7f\u7528\u7684 FreeRTOS \u7aef\u53e3\uff0c\u7981\u7528\u9ad8\u4e8e\u5206\u914d\u7ed9\u7684\u503c\u7684\u4e2d\u65ad <code>configMAX_SYSCALL_INTERRUPT_PRIORITY</code> \u5e38\u91cf - \u800c\u4e14\u4e0d\u5141\u8bb8\u8fd9\u4e9b\u4e2d\u65ad\u8c03\u7528 FreeRTOS API \u51fd\u6570\u3002\u62a2\u5360\u5f0f\u4e0a\u4e0b\u6587\u5207\u6362\u53ea\u80fd\u5728\u4e2d\u65ad\u5185\u90e8\u53d1\u751f\uff0c\u56e0\u6b64\uff0c\u53ea\u8981\u4e2d\u65ad\u4fdd\u6301\u7981\u7528\uff0c\u8c03\u7528 <code>taskENTER_CRITICAL()</code> \u7684\u4efb\u52a1\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u4fdd\u6301\u5728\u8fd0\u884c\u72b6\u6001\uff0c\u76f4\u5230\u9000\u51fa\u5173\u952e\u6bb5\u3002</p> <p>\u5fc5\u987b\u5c06\u57fa\u672c\u5173\u952e\u6bb5\u4fdd\u6301\u5f97\u975e\u5e38\u77ed\uff0c\u5426\u5219\u5b83\u4eec\u4f1a\u5bf9\u4e2d\u65ad\u54cd\u5e94\u65f6\u95f4\u4ea7\u751f\u4e0d\u5229\u5f71\u54cd\u3002\u5bf9\u6bcf\u4e2a <code>taskENTER_CRITICAL()</code> \u7684\u8c03\u7528\u5fc5\u987b\u4e0e\u5bf9 <code>taskEXIT_CRITICAL()</code> \u7684\u8c03\u7528\u7d27\u5bc6\u914d\u5bf9\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6807\u51c6\u8f93\u51fa\uff08stdout \u6216\u8ba1\u7b97\u673a\u5199\u5165\u5176\u8f93\u51fa\u6570\u636e\u7684\u6d41\uff09\u4e0d\u5e94\u4f7f\u7528\u5173\u952e\u6bb5\u4fdd\u62a4\uff08\u5982\u5217\u8868 8.5 \u6240\u793a\uff09\uff0c\u56e0\u4e3a\u5199\u5165\u7ec8\u7aef\u53ef\u80fd\u662f\u4e00\u4e2a\u76f8\u5bf9\u8f83\u957f\u7684\u64cd\u4f5c\u3002\u672c\u7ae0\u4e2d\u7684\u793a\u4f8b\u63a2\u8ba8\u4e86\u66ff\u4ee3\u89e3\u51b3\u65b9\u6848\u3002</p> <p>\u5173\u952e\u6bb5\u53ef\u4ee5\u5b89\u5168\u5730\u5d4c\u5957\uff0c\u56e0\u4e3a\u5185\u6838\u4f1a\u4fdd\u6301\u5d4c\u5957\u6df1\u5ea6\u7684\u8ba1\u6570\u3002\u5173\u952e\u6bb5\u5c06\u5728\u5d4c\u5957\u6df1\u5ea6\u8fd4\u56de\u4e3a\u96f6\u65f6\u9000\u51fa\uff0c\u5373\u5bf9\u6bcf\u4e2a\u5148\u524d\u8c03\u7528\u7684 <code>taskEXIT_CRITICAL()</code> \u6267\u884c\u4e00\u6b21\u8c03\u7528 <code>taskENTER_CRITICAL()</code>\u3002</p> <p>\u8c03\u7528 <code>taskENTER_CRITICAL()</code> \u548c <code>taskEXIT_CRITICAL()</code> \u662f\u4efb\u52a1\u4ee5\u5408\u6cd5\u65b9\u5f0f\u66f4\u6539 FreeRTOS \u6b63\u5728\u8fd0\u884c\u7684\u5904\u7406\u5668\u7684\u4e2d\u65ad\u4f7f\u80fd\u72b6\u6001\u7684\u552f\u4e00\u65b9\u6cd5\u3002\u901a\u8fc7\u5176\u4ed6\u65b9\u5f0f\u66f4\u6539\u4e2d\u65ad\u4f7f\u80fd\u72b6\u6001\u5c06\u4f7f\u5b8f\u7684\u5d4c\u5957\u8ba1\u6570\u65e0\u6548\u3002</p> <p><code>taskENTER_CRITICAL()</code> \u548c <code>taskEXIT_CRITICAL()</code> \u4e0d\u4ee5 'FromISR' \u7ed3\u5c3e\uff0c\u56e0\u6b64 \u4e0d\u5f97\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u8c03\u7528\u3002 <code>taskENTER_CRITICAL_FROM_ISR()</code> \u662f\u4e00\u4e2a\u4e2d\u65ad\u5b89\u5168\u7248\u672c\u7684 <code>taskENTER_CRITICAL()</code>\uff0c\u800c <code>taskEXIT_CRITICAL_FROM_ISR()</code> \u662f\u4e00\u4e2a\u4e2d\u65ad\u5b89\u5168\u7248\u672c\u7684 <code>taskEXIT_CRITICAL()</code>\u3002\u4e2d\u65ad\u5b89\u5168\u7248\u672c\u4ec5\u5728\u5141\u8bb8\u4e2d\u65ad\u5d4c\u5957\u7684 FreeRTOS \u7aef\u53e3\u4e2d\u63d0\u4f9b\u2014\u2014\u5728\u4e0d\u5141\u8bb8\u4e2d\u65ad\u5d4c\u5957\u7684\u7aef\u53e3\u4e2d\uff0c\u5b83\u4eec\u5c06\u662f\u591a\u4f59\u7684\u3002</p> <p><code>taskENTER_CRITICAL_FROM_ISR()</code> \u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u8be5\u503c\u5fc5\u987b\u4f20\u9012\u7ed9\u5339\u914d\u7684 <code>taskEXIT_CRITICAL_FROM_ISR()</code> \u8c03\u7528\u3002\u8fd9\u5728\u6e05\u5355 8.6 \u4e2d\u8fdb\u884c\u4e86\u6f14\u793a\u3002</p> <p></p> <pre><code>void vAnInterruptServiceRoutine( void )\n{\n    /* Declare a variable in which the return value from \n       taskENTER_CRITICAL_FROM_ISR() will be saved. */\n    UBaseType_t uxSavedInterruptStatus;\n\n    /* This part of the ISR can be interrupted by any higher priority \n       interrupt. */\n\n    /* Use taskENTER_CRITICAL_FROM_ISR() to protect a region of this ISR.\n       Save the value returned from taskENTER_CRITICAL_FROM_ISR() so it can \n       be passed into the matching call to taskEXIT_CRITICAL_FROM_ISR(). */\n    uxSavedInterruptStatus = taskENTER_CRITICAL_FROM_ISR();\n\n    /* This part of the ISR is between the call to \n       taskENTER_CRITICAL_FROM_ISR() and taskEXIT_CRITICAL_FROM_ISR(), so can \n       only be interrupted by interrupts that have a priority above that set \n       by the configMAX_SYSCALL_INTERRUPT_PRIORITY constant. */\n\n    /* Exit the critical section again by calling taskEXIT_CRITICAL_FROM_ISR(),\n       passing in the value returned by the matching call to \n       taskENTER_CRITICAL_FROM_ISR(). */\n    taskEXIT_CRITICAL_FROM_ISR( uxSavedInterruptStatus );\n\n    /* This part of the ISR can be interrupted by any higher priority \n       interrupt. */\n}\n</code></pre> <p>Listing 8.6 Using a critical section in an interrupt service routine</p> <p>\u5728\u6267\u884c\u4fdd\u62a4\u5173\u952e\u6bb5\u7684\u4ee3\u7801\u6240\u9700\u7684\u65f6\u95f4\u6bd4\u6267\u884c\u5b9e\u9645\u53d7\u4fdd\u62a4\u7684\u4ee3\u7801\u6240\u9700\u7684\u65f6\u95f4\u66f4\u957f\u7684\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u66f4\u591a\u7684\u5904\u7406\u65f6\u95f4\u6765\u6267\u884c\u8fdb\u5165\u548c\u9000\u51fa\u5173\u952e\u6bb5\u7684\u4ee3\u7801\u662f\u6d6a\u8d39\u7684\u3002\u57fa\u672c\u5173\u952e\u6bb5\u7684\u8fdb\u5165\u548c\u9000\u51fa\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u5e76\u4e14\u59cb\u7ec8\u662f\u786e\u5b9a\u6027\u7684\uff0c\u56e0\u6b64\u5728\u4fdd\u62a4\u7684\u4ee3\u7801\u533a\u57df\u975e\u5e38\u5c0f\u65f6\uff0c\u5b83\u4eec\u7684\u4f7f\u7528\u662f\u7406\u60f3\u7684\u3002</p>"},{"location":"ch08-%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/#822","title":"8.2.2 \u6302\u8d77\uff08\u6216\u9501\u5b9a\uff09\u8c03\u5ea6\u7a0b\u5e8f","text":"<p>\u5173\u952e\u6bb5\u8fd8\u53ef\u4ee5\u901a\u8fc7\u6302\u8d77\u8c03\u5ea6\u7a0b\u5e8f\u6765\u521b\u5efa\u3002 \u6302\u8d77\u8c03\u5ea6\u7a0b\u5e8f\u6709\u65f6\u4e5f\u79f0\u4e3a\u201c\u9501\u5b9a\u201d\u8c03\u5ea6\u7a0b\u5e8f\u3002</p> <p>\u57fa\u672c\u5173\u952e\u6bb5\u4fdd\u62a4\u7684\u4ee3\u7801\u533a\u57df\u4e0d\u53d7\u5176\u4ed6\u4efb\u52a1\u548c\u4e2d\u65ad\u7684\u8bbf\u95ee\uff0c\u4f46\u901a\u8fc7\u6302\u8d77\u8c03\u5ea6\u7a0b\u5e8f\u5b9e\u73b0\u7684\u5173\u952e\u6bb5\u4ec5\u4fdd\u62a4\u4ee3\u7801\u533a\u57df\u4e0d\u53d7\u5176\u4ed6\u4efb\u52a1\u7684\u8bbf\u95ee\uff0c\u56e0\u4e3a\u4e2d\u65ad\u4fdd\u6301\u542f\u7528\u3002</p> <p>\u53ef\u4ee5\u901a\u8fc7\u6302\u8d77\u8c03\u5ea6\u7a0b\u5e8f\u6765\u5b9e\u73b0\u7684\u5173\u952e\u6bb5\uff0c\u5982\u679c\u4ec5\u4ec5\u901a\u8fc7\u7981\u7528\u4e2d\u65ad\u6765\u5b9e\u73b0\u5219\u592a\u957f\uff0c\u4f46\u5728\u6302\u8d77\u8c03\u5ea6\u7a0b\u5e8f\u65f6\u7684\u4e2d\u65ad\u6d3b\u52a8\u53ef\u80fd\u4f1a\u4f7f\u8c03\u5ea6\u7a0b\u5e8f\u6062\u590d\uff08\u6216\u201c\u53d6\u6d88\u6302\u8d77\u201d\uff09\u6210\u4e3a\u4e00\u4e2a\u76f8\u5bf9\u8f83\u957f\u7684\u64cd\u4f5c\uff0c\u56e0\u6b64\u5fc5\u987b\u8003\u8651\u5728\u6bcf\u79cd\u60c5\u51b5\u4e0b\u4f7f\u7528\u54ea\u79cd\u65b9\u6cd5\u3002</p>"},{"location":"ch08-%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/#823-vtasksuspendall-api","title":"8.2.3 vTaskSuspendAll() API \u51fd\u6570","text":"<pre><code>void vTaskSuspendAll( void );\n</code></pre> <p>Listing 8.7 The vTaskSuspendAll() API function prototype</p> <p>\u901a\u8fc7\u8c03\u7528 <code>vTaskSuspendAll()</code> \u6302\u8d77\u8c03\u5ea6\u7a0b\u5e8f\u3002\u6302\u8d77\u8c03\u5ea6\u7a0b\u5e8f\u4f1a\u963b\u6b62\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u4f46\u4f1a\u4fdd\u6301\u4e2d\u65ad\u542f\u7528\u3002\u5982\u679c\u5728\u6302\u8d77\u8c03\u5ea6\u7a0b\u5e8f\u65f6\u53d1\u751f\u4e2d\u65ad\u8bf7\u6c42\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u5219\u8be5\u8bf7\u6c42\u5c06\u88ab\u6302\u8d77\uff0c\u4ec5\u5728\u8c03\u5ea6\u7a0b\u5e8f\u6062\u590d\uff08\u53d6\u6d88\u6302\u8d77\uff09\u65f6\u6267\u884c\u3002</p> <p>\u5728\u6302\u8d77\u8c03\u5ea6\u7a0b\u5e8f\u65f6\uff0c\u4e0d\u5f97\u8c03\u7528 FreeRTOS API \u51fd\u6570\u3002</p>"},{"location":"ch08-%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/#824-xtaskresumeall-api","title":"8.2.4 xTaskResumeAll() API \u51fd\u6570","text":"<pre><code>BaseType_t xTaskResumeAll( void );\n</code></pre> <p>Listing 8.8 The xTaskResumeAll() API function prototype</p> <p>\u901a\u8fc7\u8c03\u7528 <code>xTaskResumeAll()</code> \u6062\u590d\uff08\u53d6\u6d88\u6302\u8d77\uff09\u8c03\u5ea6\u7a0b\u5e8f\u3002</p> <p>xTaskResumeAll() \u8fd4\u56de\u503c</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u6302\u8d77\u8c03\u5ea6\u7a0b\u5e8f\u65f6\u8bf7\u6c42\u7684\u4e0a\u4e0b\u6587\u5207\u6362\u5c06\u88ab\u6302\u8d77\uff0c\u4ec5\u5728\u8c03\u5ea6\u7a0b\u5e8f\u6062\u590d\u65f6\u6267\u884c\u3002\u5982\u679c\u5728 <code>xTaskResumeAll()</code> \u8fd4\u56de\u4e4b\u524d\u6267\u884c\u4e86\u6302\u8d77\u7684\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u5219\u8fd4\u56de <code>pdTRUE</code>\u3002\u5426\u5219\u8fd4\u56de <code>pdFALSE</code>\u3002</p> <p>\u5bf9 <code>vTaskSuspendAll()</code> \u548c <code>xTaskResumeAll()</code> \u7684\u8c03\u7528\u53ef\u4ee5\u5b89\u5168\u5730\u5d4c\u5957\uff0c\u56e0\u4e3a\u5185\u6838\u4f1a\u4fdd\u6301\u5d4c\u5957\u6df1\u5ea6\u7684\u8ba1\u6570\u3002\u8c03\u5ea6\u7a0b\u5e8f\u5c06\u5728\u5d4c\u5957\u6df1\u5ea6\u8fd4\u56de\u4e3a\u96f6\u65f6\u6062\u590d\u2014\u2014\u5373\u5bf9\u6bcf\u4e2a\u5148\u524d\u8c03\u7528\u7684 <code>xTaskResumeAll()</code> \u6267\u884c\u4e00\u6b21\u8c03\u7528 <code>vTaskSuspendAll()</code>\u3002</p> <p>\u6e05\u5355 8.9 \u663e\u793a\u4e86 <code>vPrintString()</code> \u7684\u5b9e\u9645\u5b9e\u73b0\uff0c\u5b83\u6302\u8d77\u8c03\u5ea6\u7a0b\u5e8f\u4ee5\u4fdd\u62a4\u5bf9\u7ec8\u7aef\u8f93\u51fa\u7684\u8bbf\u95ee\u3002</p> <p></p> <pre><code>void vPrintString( const char *pcString )\n{\n    /* Write the string to stdout, suspending the scheduler as a method of \n       mutual exclusion. */\n    vTaskSuspendScheduler();\n    {\n        printf( \"%s\", pcString );\n        fflush( stdout );\n    }\n    xTaskResumeScheduler();\n}\n</code></pre> <p>Listing 8.9 The implementation of vPrintString()</p>"},{"location":"ch08-%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/#83","title":"8.3 \u4e92\u65a5\u91cf\uff08\u548c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\uff09","text":"<p>\u4e92\u65a5\u91cf\u662f\u4e00\u79cd\u7279\u6b8a\u7c7b\u578b\u7684\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\uff0c\u7528\u4e8e\u63a7\u5236\u5bf9\u4e24\u4e2a\u6216\u591a\u4e2a\u4efb\u52a1\u5171\u4eab\u7684\u8d44\u6e90\u7684\u8bbf\u95ee\u3002\u5355\u8bcd MUTEX \u6e90\u81ea\u201cMUTual EXclusion\u201d\u3002\u5fc5\u987b\u5728 FreeRTOSConfig.h \u4e2d\u5c06 <code>configUSE_MUTEXES</code> \u8bbe\u7f6e\u4e3a 1 \u624d\u80fd\u4f7f\u7528\u4e92\u65a5\u91cf\u3002</p> <p>\u5728\u4e92\u65a5\u573a\u666f\u4e2d\uff0c\u4e92\u65a5\u91cf\u53ef\u4ee5\u88ab\u89c6\u4e3a\u4e0e\u5171\u4eab\u8d44\u6e90\u5173\u8054\u7684\u4ee4\u724c\u3002\u8981\u5408\u6cd5\u8bbf\u95ee\u8be5\u8d44\u6e90\uff0c\u4efb\u52a1\u5fc5\u987b\u9996\u5148\u6210\u529f\u201c\u83b7\u53d6\u201d\u4ee4\u724c\uff08\u6210\u4e3a\u4ee4\u724c\u6301\u6709\u8005\uff09\u3002\u5f53\u4ee4\u724c\u6301\u6709\u8005\u5b8c\u6210\u5bf9\u8d44\u6e90\u7684\u8bbf\u95ee\u540e\uff0c\u5fc5\u987b\u201c\u5f52\u8fd8\u201d\u4ee4\u724c\u3002\u53ea\u6709\u5f53\u4ee4\u724c\u88ab\u5f52\u8fd8\u65f6\uff0c\u53e6\u4e00\u4e2a\u4efb\u52a1\u624d\u80fd\u6210\u529f\u83b7\u53d6\u4ee4\u724c\uff0c\u7136\u540e\u5b89\u5168\u5730\u8bbf\u95ee\u540c\u4e00\u5171\u4eab\u8d44\u6e90\u3002\u9664\u975e\u6301\u6709\u4ee4\u724c\uff0c\u5426\u5219\u4e0d\u5141\u8bb8\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\u3002\u8be5\u673a\u5236\u5982\u56fe 8.1 \u6240\u793a\u3002</p> <p>\u5c3d\u7ba1\u4e92\u65a5\u91cf\u548c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u5177\u6709\u8bb8\u591a\u76f8\u4f3c\u7279\u5f81\uff0c\u4f46\u56fe 8.1 \u4e2d\u6240\u793a\u7684\u573a\u666f\uff08\u4f7f\u7528\u4e92\u65a5\u91cf\u8fdb\u884c\u4e92\u65a5\uff09\u4e0e\u56fe 7.6 \u4e2d\u6240\u793a\u7684\u573a\u666f\u5b8c\u5168\u4e0d\u540c\uff08\u5728\u8be5\u573a\u666f\u4e2d\uff0c\u4f7f\u7528\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u8fdb\u884c\u540c\u6b65\uff09\u3002\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u83b7\u53d6\u4fe1\u53f7\u91cf\u540e\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1a</p> <ul> <li>\u7528\u4e8e\u4e92\u65a5\u7684\u4fe1\u53f7\u91cf\u5fc5\u987b\u59cb\u7ec8\u88ab\u8fd4\u56de\u3002</li> <li>\u7528\u4e8e\u540c\u6b65\u7684\u4fe1\u53f7\u91cf\u901a\u5e38\u4f1a\u88ab\u4e22\u5f03\u800c\u4e0d\u88ab\u8fd4\u56de\u3002</li> </ul> <p></p> <p> Figure 8.1 Mutual exclusion implemented using a mutex</p> <p>\u8be5\u673a\u5236\u5b8c\u5168\u4f9d\u8d56\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u8005\u7684\u7eaa\u5f8b\u3002\u4efb\u52a1\u5728\u4efb\u4f55\u65f6\u5019\u90fd\u53ef\u4ee5\u8bbf\u95ee\u8d44\u6e90\uff0c\u4f46\u6bcf\u4e2a\u4efb\u52a1\u90fd\u201c\u540c\u610f\u201d\u8fd9\u6837\u505a\uff0c\u524d\u63d0\u662f\u5b83\u80fd\u591f\u6210\u4e3a\u4e92\u65a5\u91cf\u6301\u6709\u8005\u3002</p>"},{"location":"ch08-%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/#831-xsemaphorecreatemutex-api","title":"8.3.1 xSemaphoreCreateMutex() API \u51fd\u6570","text":"<p>FreeRTOS \u8fd8\u5305\u62ec <code>xSemaphoreCreateMutexStatic()</code> \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u9759\u6001\u5206\u914d\u521b\u5efa\u4e92\u65a5\u91cf\u6240\u9700\u7684\u5185\u5b58\uff1a\u4e92\u65a5\u91cf\u662f\u4e00\u79cd\u4fe1\u53f7\u91cf\u3002\u6240\u6709\u5404\u79cd\u7c7b\u578b\u7684 FreeRTOS \u4fe1\u53f7\u91cf\u7684\u53e5\u67c4\u90fd\u5b58\u50a8\u5728 <code>SemaphoreHandle_t</code> \u7c7b\u578b\u7684\u53d8\u91cf\u4e2d\u3002</p> <p>\u5728\u4f7f\u7528\u4e92\u65a5\u91cf\u4e4b\u524d\uff0c\u5fc5\u987b\u5148\u521b\u5efa\u5b83\u3002\u8981\u521b\u5efa\u4e92\u65a5\u91cf\u7c7b\u578b\u7684\u4fe1\u53f7\u91cf\uff0c\u8bf7\u4f7f\u7528 <code>xSemaphoreCreateMutex()</code> API \u51fd\u6570\u3002</p> <p></p> <pre><code>SemaphoreHandle_t xSemaphoreCreateMutex( void );\n</code></pre> <p>Listing 8.10 The xSemaphoreCreateMutex() API function prototype</p> <p>xSemaphoreCreateMutex() \u8fd4\u56de\u503c</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u5982\u679c\u8fd4\u56de NULL\uff0c\u5219\u65e0\u6cd5\u521b\u5efa\u4e92\u65a5\u91cf\uff0c\u56e0\u4e3a\u53ef\u7528\u4e8e FreeRTOS \u5206\u914d\u4e92\u65a5\u91cf\u6570\u636e\u7ed3\u6784\u7684\u5806\u5185\u5b58\u4e0d\u8db3\u3002\u7b2c 3 \u7ae0\u63d0\u4f9b\u4e86\u6709\u5173\u5806\u5185\u5b58\u7ba1\u7406\u7684\u66f4\u591a\u4fe1\u606f\u3002</p> <p>\u975e NULL \u8fd4\u56de\u503c\u8868\u793a\u4e92\u65a5\u91cf\u5df2\u6210\u529f\u521b\u5efa\u3002\u8fd4\u56de\u7684\u503c\u5e94\u5b58\u50a8\u4e3a\u521b\u5efa\u7684\u4e92\u65a5\u91cf\u7684\u53e5\u67c4\u3002</p>"},{"location":"ch08-%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/#_1","title":"8 \u8d44\u6e90\u7ba1\u7406","text":"<p>Example 8.1 Rewriting vPrintString() to use a semaphore</p> <p>\u6b64\u793a\u4f8b\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a <code>prvNewPrintString()</code> \u7684\u65b0\u7248\u672c <code>vPrintString()</code>\uff0c\u7136\u540e\u4ece\u591a\u4e2a\u4efb\u52a1\u8c03\u7528\u65b0\u51fd\u6570\u3002 <code>prvNewPrintString()</code> \u5728\u529f\u80fd\u4e0a\u4e0e <code>vPrintString()</code> \u76f8\u540c\uff0c\u4f46\u901a\u8fc7\u4e92\u65a5\u91cf\u63a7\u5236\u5bf9\u6807\u51c6\u8f93\u51fa\u7684\u8bbf\u95ee\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u9501\u5b9a \u8c03\u5ea6\u7a0b\u5e8f\u3002 <code>prvNewPrintString()</code> \u7684\u5b9e\u73b0\u5982\u6e05\u5355 8.11 \u6240\u793a\u3002</p> <p></p> <pre><code>static void prvNewPrintString( const char *pcString )\n{\n    /* The mutex is created before the scheduler is started, so already exists\n       by the time this task executes.\n\n       Attempt to take the mutex, blocking indefinitely to wait for the mutex\n       if it is not available straight away. The call to xSemaphoreTake() will\n       only return when the mutex has been successfully obtained, so there is \n       no need to check the function return value. If any other delay period \n       was used then the code must check that xSemaphoreTake() returns pdTRUE \n       before accessing the shared resource (which in this case is standard \n       out). As noted earlier in this book, indefinite time outs are not \n       recommended for production code. */\n    xSemaphoreTake( xMutex, portMAX_DELAY );\n    {\n        /* The following line will only execute once the mutex has been \n           successfully obtained. Standard out can be accessed freely now as \n           only one task can have the mutex at any one time. */\n        printf( \"%s\", pcString );\n        fflush( stdout );\n\n        /* The mutex MUST be given back! */\n    }\n    xSemaphoreGive( xMutex );\n}\n</code></pre> <p>Listing 8.11 The implementation of prvNewPrintString()</p> <p><code>prvNewPrintString()</code> \u88ab\u4e24\u4e2a\u7531 <code>prvPrintTask()</code> \u5b9e\u73b0\u7684\u4efb\u52a1\u5b9e\u4f8b\u91cd\u590d\u8c03\u7528\u3002\u6bcf\u6b21\u8c03\u7528\u4e4b\u95f4\u4f7f\u7528\u968f\u673a\u5ef6\u8fdf\u65f6\u95f4\u3002\u4efb\u52a1\u53c2\u6570\u7528\u4e8e\u5c06\u552f\u4e00\u5b57\u7b26\u4e32\u4f20\u9012\u5230\u4efb\u52a1\u7684\u6bcf\u4e2a\u5b9e\u4f8b\u3002 <code>prvPrintTask()</code> \u7684\u5b9e\u73b0\u5982\u6e05\u5355 8.12 \u6240\u793a\u3002</p> <p></p> <pre><code>static void prvPrintTask( void *pvParameters )\n{\n    char *pcStringToPrint;\n    const TickType_t xMaxBlockTimeTicks = 0x20;\n\n    /* Two instances of this task are created. The string printed by the task \n       is passed into the task using the task's parameter. The parameter is \n       cast to the required type. */\n    pcStringToPrint = ( char * ) pvParameters;\n\n    for( ;; )\n    {\n        /* Print out the string using the newly defined function. */\n        prvNewPrintString( pcStringToPrint );\n\n        /* Wait a pseudo random time. Note that rand() is not necessarily\n           reentrant, but in this case it does not really matter as the code \n           does not care what value is returned. In a more secure application \n           a version of rand() that is known to be reentrant should be used - \n           or calls to rand() should be protected using a critical section. */\n        vTaskDelay( ( rand() % xMaxBlockTimeTicks ) );\n    }\n}\n</code></pre> <p>Listing 8.12 The implementation of prvPrintTask() for Example 8.1</p> <p>\u4e0e\u5f80\u5e38\u4e00\u6837\uff0c<code>main()</code> \u53ea\u662f\u521b\u5efa\u4e92\u65a5\u91cf\uff0c\u521b\u5efa\u4efb\u52a1\uff0c\u7136\u540e\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u3002\u5176\u5b9e\u73b0\u5982\u6e05\u5355 8.13 \u6240\u793a\u3002</p> <p><code>prvPrintTask()</code> \u7684\u4e24\u4e2a\u5b9e\u4f8b\u4ee5\u4e0d\u540c\u7684\u4f18\u5148\u7ea7\u521b\u5efa\uff0c\u56e0\u6b64\u4f4e\u4f18\u5148\u7ea7\u4efb\u52a1\u6709\u65f6\u4f1a\u88ab\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u62a2\u5360\u3002\u7531\u4e8e\u4f7f\u7528\u4e92\u65a5\u91cf\u786e\u4fdd\u6bcf\u4e2a\u4efb\u52a1\u83b7\u5f97\u5bf9\u7ec8\u7aef\u7684\u4e92\u65a5\u8bbf\u95ee\uff0c\u5373\u4f7f\u53d1\u751f\u62a2\u5360\uff0c\u663e\u793a\u7684\u5b57\u7b26\u4e32\u4e5f\u5c06\u662f\u6b63\u786e\u7684\uff0c\u7edd\u4e0d\u4f1a\u635f\u574f\u3002\u901a\u8fc7\u51cf\u5c11\u4efb\u52a1\u5728\u963b\u585e\u72b6\u6001\u4e2d\u82b1\u8d39\u7684\u6700\u5927\u65f6\u95f4\uff08\u7531 <code>xMaxBlockTimeTicks</code> \u5e38\u91cf\u8bbe\u7f6e\uff09\uff0c\u53ef\u4ee5\u589e\u52a0\u62a2\u5360\u7684\u9891\u7387\u3002</p> <p>\u4e0e\u5728 FreeRTOS Windows \u79fb\u690d\u4e2d\u4e00\u8d77\u4f7f\u7528\u65f6\uff0c\u4f7f\u7528\u793a\u4f8b 8.1 \u7684\u7279\u5b9a\u6ce8\u610f\u4e8b\u9879\uff1a</p> <ul> <li> <p>\u8c03\u7528 <code>printf()</code> \u4f1a\u751f\u6210 Windows \u7cfb\u7edf\u8c03\u7528\u3002 Windows \u7cfb\u7edf\u8c03\u7528\u4e0d\u5728 FreeRTOS \u7684\u63a7\u5236\u4e4b\u4e0b\uff0c\u53ef\u80fd\u4f1a\u5f15\u5165\u4e0d\u7a33\u5b9a\u6027\u3002</p> </li> <li> <p>Windows \u7cfb\u7edf\u8c03\u7528\u7684\u6267\u884c\u65b9\u5f0f\u610f\u5473\u7740\u5373\u4f7f\u5728\u4e0d\u4f7f\u7528\u4e92\u65a5\u91cf\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u5f88\u5c11\u4f1a\u770b\u5230\u635f\u574f\u7684\u5b57\u7b26\u4e32\u3002</p> </li> </ul> <p></p> <pre><code>int main( void )\n{\n    /* Before a semaphore is used it must be explicitly created. In this\n       example a mutex type semaphore is created. */\n    xMutex = xSemaphoreCreateMutex();\n\n    /* Check the semaphore was created successfully before creating the\n       tasks. */\n    if( xMutex != NULL )\n    {\n        /* Create two instances of the tasks that write to stdout. The string\n           they write is passed in to the task as the task's parameter. The \n           tasks are created at different priorities so some pre-emption will \n           occur. */\n        xTaskCreate( prvPrintTask, \"Print1\", 1000,\n                     \"Task 1 ***************************************\\r\\n\",\n                     1, NULL );\n\n        xTaskCreate( prvPrintTask, \"Print2\", 1000,\n                     \"Task 2 ---------------------------------------\\r\\n\", \n                     2, NULL );\n\n        /* Start the scheduler so the created tasks start executing. */\n        vTaskStartScheduler();\n    }\n\n    /* If all is well then main() will never reach here as the scheduler will\n       now be running the tasks. If main() does reach here then it is likely \n       that there was insufficient heap memory available for the idle task to \n       be created.  Chapter 3 provides more information on heap memory \n       management. */\n    for( ;; );\n}\n</code></pre> <p>Listing 8.13 The implementation of main() for Example 8.1</p> <p>\u6267\u884c\u793a\u4f8b 8.1 \u65f6\u751f\u6210\u7684\u8f93\u51fa\u5982\u56fe 8.2 \u6240\u793a\u3002\u56fe 8.3 \u63cf\u8ff0\u4e86\u53ef\u80fd\u7684\u6267\u884c\u987a\u5e8f\u3002</p> <p></p> <p> Figure 8.2 The output produced when Example 8.1 is executed</p> <p>\u56fe 8.2 \u663e\u793a\uff0c\u6b63\u5982\u9884\u671f\u7684\u90a3\u6837\uff0c\u663e\u793a\u7684\u5b57\u7b26\u4e32\u6ca1\u6709\u635f\u574f\u3002\u968f\u673a\u6392\u5e8f\u662f\u4efb\u52a1\u4f7f\u7528\u7684\u968f\u673a\u5ef6\u8fdf\u65f6\u95f4\u7684\u7ed3\u679c\u3002</p> <p></p> <p> Figure 8.3 A possible sequence of execution for Example 8.1</p>"},{"location":"ch08-%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/#832","title":"8.3.2 \u4f18\u5148\u7ea7\u53cd\u8f6c","text":"<p>\u56fe 8.3 \u6f14\u793a\u4e86\u4f7f\u7528\u4e92\u65a5\u91cf\u63d0\u4f9b\u4e92\u65a5\u7684\u6f5c\u5728\u9677\u9631\u3002\u6240\u793a\u7684\u6267\u884c\u987a\u5e8f\u663e\u793a\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1 2 \u4e0d\u5f97\u4e0d\u7b49\u5f85\u4f4e\u4f18\u5148\u7ea7\u4efb\u52a1 1 \u91ca\u653e\u4e92\u65a5\u91cf\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u7531\u4e8e\u4f4e\u4f18\u5148\u7ea7\u4efb\u52a1\u800c\u88ab\u5ef6\u8fdf\uff0c\u8fd9\u79cd\u4e0d\u826f\u884c\u4e3a\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u53ef\u4ee5\u7406\u89e3\u7684\u2014\u2014\u5373\u4f7f\u4f4e\u4f18\u5148\u7ea7\u4efb\u52a1\u65e0\u6cd5\u6267\u884c\uff0c\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u4e5f\u5728\u7b49\u5f85\u4e92\u65a5\u91cf\u3002\u8fd9\u79cd\u60c5\u51b5\u901a\u5e38\u88ab\u79f0\u4e3a_\u65e0\u754c\u4f18\u5148\u7ea7\u53cd\u8f6c_\uff0c\u56e0\u4e3a\u4e2d\u7b49\u4f18\u5148\u7ea7\u4efb\u52a1\u53ef\u80fd\u4f1a\u65e0\u9650\u671f\u5730\u963b\u585e\u4f4e\u4f18\u5148\u7ea7\u548c\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u3002 \u6700\u574f\u7684\u60c5\u51b5\u5982\u56fe 8.4 \u6240\u793a\u3002</p> <p></p> <p> Figure 8.4 A worst case priority inversion scenario</p> <p>\u4f18\u5148\u7ea7\u53cd\u8f6c\u53ef\u80fd\u662f\u4e00\u4e2a\u91cd\u5927\u95ee\u9898\uff0c\u4f46\u5728\u5c0f\u578b\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u8003\u8651\u5728\u7cfb\u7edf\u8bbe\u8ba1\u65f6\u907f\u514d\u5b83\u3002</p>"},{"location":"ch08-%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/#833","title":"8.3.3 \u4f18\u5148\u7ea7\u7ee7\u627f","text":"<p>FreeRTOS \u4e92\u65a5\u91cf\u548c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u975e\u5e38\u76f8\u4f3c\u2014\u2014\u533a\u522b\u5728\u4e8e\u4e92\u65a5\u91cf\u5305\u62ec\u57fa\u672c\u7684\u201c\u4f18\u5148\u7ea7\u7ee7\u627f\u201d\u673a\u5236\uff0c \u800c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u5219\u6ca1\u6709\u3002\u4f18\u5148\u7ea7\u7ee7\u627f\u662f\u4e00\u79cd\u6700\u5c0f\u5316\u4f18\u5148\u7ea7\u53cd\u8f6c\u8d1f\u9762\u5f71\u54cd\u7684\u65b9\u6848\u3002\u5b83\u5e76\u4e0d\u80fd\u201c\u4fee\u590d\u201d \u4f18\u5148\u7ea7\u53cd\u8f6c\uff0c\u800c\u53ea\u662f\u901a\u8fc7\u786e\u4fdd\u53cd\u8f6c\u59cb\u7ec8\u662f\u6709\u65f6\u95f4\u9650\u5236\u7684\uff0c\u4ece\u800c\u51cf\u8f7b\u5176\u5f71\u54cd\u3002\u7136\u800c\uff0c\u4f18\u5148\u7ea7\u7ee7\u627f \u4f7f\u7cfb\u7edf\u65f6\u5e8f\u5206\u6790\u53d8\u5f97\u590d\u6742\uff0c\u4f9d\u8d56\u4e8e\u5b83\u4ee5\u6b63\u786e\u7684\u65b9\u5f0f\u64cd\u4f5c\u5e76\u4e0d\u662f\u4e00\u4e2a\u597d\u4e60\u60ef\u3002</p> <p>\u4f18\u5148\u7ea7\u7ee7\u627f\u901a\u8fc7\u6682\u65f6\u63d0\u9ad8\u4e92\u65a5\u91cf\u6301\u6709\u8005\u7684\u4f18\u5148\u7ea7\u5230\u5c1d\u8bd5\u83b7\u53d6\u540c\u4e00\u4e92\u65a5\u91cf\u7684\u6700\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u6765\u5de5\u4f5c\u3002\u6301\u6709\u4e92\u65a5\u91cf\u7684\u4f4e\u4f18\u5148\u7ea7\u4efb\u52a1\u201c\u7ee7\u627f\u201d\u7b49\u5f85\u8be5\u4e92\u65a5\u91cf\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002\u8fd9\u5728\u56fe 8.5 \u4e2d\u5f97\u5230\u4e86\u8bc1\u660e\u3002\u4e92\u65a5\u91cf\u6301\u6709\u8005\u7684\u4f18\u5148\u7ea7\u5728\u5176\u5f52\u8fd8\u4e92\u65a5\u91cf\u65f6\u81ea\u52a8\u91cd\u7f6e\u4e3a\u5176\u539f\u59cb\u503c\u3002</p> <p></p> <p> Figure 8.5 Priority inheritance minimizing the effect of priority inversion</p> <p>\u6b63\u5982\u521a\u624d\u770b\u5230\u7684\uff0c\u4f18\u5148\u7ea7\u7ee7\u627f\u529f\u80fd\u5f71\u54cd\u4f7f\u7528\u4e92\u65a5\u91cf\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002\u56e0\u6b64\uff0c\u4e92\u65a5\u91cf\u4e0d\u5f97\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u4f7f\u7528\u3002</p> <p>FreeRTOS \u5b9e\u73b0\u4e86\u4e00\u79cd\u57fa\u672c\u7684\u4f18\u5148\u7ea7\u7ee7\u627f\u673a\u5236\uff0c\u65e8\u5728\u4f18\u5316\u7a7a\u95f4\u548c\u6267\u884c\u5468\u671f\u3002\u5b8c\u6574\u7684\u4f18\u5148\u7ea7\u7ee7\u627f\u673a\u5236\u9700\u8981\u66f4\u591a\u7684\u6570\u636e\u548c\u5904\u7406\u5668\u5468\u671f\u6765\u786e\u5b9a\u4efb\u4f55\u65f6\u523b\u7684\u7ee7\u627f\u4f18\u5148\u7ea7\uff0c\u7279\u522b\u662f\u5f53\u4e00\u4e2a\u4efb\u52a1\u540c\u65f6\u6301\u6709\u591a\u4e2a\u4e92\u65a5\u91cf\u65f6\u3002</p> <p>\u4f18\u5148\u7ea7\u7ee7\u627f\u673a\u5236\u7684\u7279\u5b9a\u884c\u4e3a\uff1a * \u5982\u679c\u4efb\u52a1\u5728\u91ca\u653e\u5176\u6301\u6709\u7684\u4e92\u65a5\u91cf\u4e4b\u524d\u83b7\u53d6\u4e86\u53e6\u4e00\u4e2a\u4e92\u65a5\u91cf\uff0c\u5219\u5176\u7ee7\u627f\u7684\u4f18\u5148\u7ea7\u53ef\u80fd\u4f1a\u8fdb\u4e00\u6b65\u63d0\u9ad8\u3002 * \u65e0\u8bba\u4e92\u65a5\u91cf\u4ee5\u4f55\u79cd\u987a\u5e8f\u91ca\u653e\uff0c\u4efb\u52a1\u5728\u91ca\u653e\u5176\u6301\u6709\u7684\u6240\u6709\u4e92\u65a5\u91cf\u4e4b\u524d\uff0c\u90fd\u4f1a\u4fdd\u6301\u5176\u6700\u9ad8\u7684\u7ee7\u627f\u4f18\u5148\u7ea7\u3002 * \u5982\u679c\u6301\u6709\u591a\u4e2a\u4e92\u65a5\u91cf\uff0c\u5219\u4efb\u52a1\u5c06\u4fdd\u6301\u6700\u9ad8\u7684\u7ee7\u627f\u4f18\u5148\u7ea7\uff0c\u65e0\u8bba\u7b49\u5f85\u4efb\u4f55\u5df2\u6301\u6709\u4e92\u65a5\u91cf\u7684\u4efb\u52a1\u5b8c\u6210\u5176\u7b49\u5f85\uff08\u8d85\u65f6\uff09\u3002</p>"},{"location":"ch08-%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/#834","title":"8.3.4 \u6b7b\u9501\uff08\u6216\u81f4\u547d\u62e5\u585e\uff09","text":"<p>\u201c\u6b7b\u9501\u201d\u662f\u4f7f\u7528\u4e92\u65a5\u91cf\u8fdb\u884c\u4e92\u65a5\u7684\u53e6\u4e00\u4e2a\u6f5c\u5728\u9677\u9631\u3002\u6b7b\u9501\u6709\u65f6\u4e5f\u88ab\u79f0\u4e3a\u66f4\u620f\u5267\u5316\u7684\u540d\u5b57\u201c\u81f4\u547d\u62e5\u585e\u201d\u3002</p> <p>\u5f53\u4e24\u4e2a\u4efb\u52a1\u90fd\u5728\u7b49\u5f85\u5bf9\u65b9\u6301\u6709\u7684\u8d44\u6e90\u800c\u65e0\u6cd5\u7ee7\u7eed\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u6b7b\u9501\u3002\u8003\u8651\u4ee5\u4e0b\u573a\u666f\uff0c\u5176\u4e2d\u4efb\u52a1 A \u548c\u4efb\u52a1 B \u90fd\u9700\u8981\u83b7\u53d6\u4e92\u65a5\u91cf X \u548c \u4e92\u65a5\u91cf Y \u624d\u80fd\u6267\u884c\u64cd\u4f5c\uff1a</p> <ol> <li> <p>\u4efb\u52a1 A \u6267\u884c\u5e76\u6210\u529f\u83b7\u53d6\u4e92\u65a5\u91cf X\u3002</p> </li> <li> <p>\u4efb\u52a1 A \u88ab\u4efb\u52a1 B \u62a2\u5360\u3002</p> </li> <li> <p>\u4efb\u52a1 B \u6210\u529f\u83b7\u53d6\u4e92\u65a5\u91cf Y\uff0c\u7136\u540e\u5c1d\u8bd5\u83b7\u53d6\u4e92\u65a5\u91cf X\u2014\u2014\u4f46\u4e92\u65a5\u91cf X \u88ab\u4efb\u52a1 A \u6301\u6709\uff0c\u56e0\u6b64\u4efb\u52a1 B \u65e0\u6cd5\u83b7\u53d6\u4e92\u65a5\u91cf X\u3002    \u4efb\u52a1 B \u9009\u62e9\u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u7b49\u5f85\u4e92\u65a5\u91cf X \u88ab\u91ca\u653e\u3002</p> </li> <li> <p>\u4efb\u52a1 A \u7ee7\u7eed\u6267\u884c\u3002\u5b83\u5c1d\u8bd5\u83b7\u53d6\u4e92\u65a5\u91cf Y\u2014\u2014\u4f46\u4e92\u65a5\u91cf Y \u88ab\u4efb\u52a1 B \u6301\u6709\uff0c\u56e0\u6b64\u4efb\u52a1 A \u65e0\u6cd5\u83b7\u53d6\u4e92\u65a5\u91cf Y\u3002\u4efb\u52a1 A \u9009\u62e9\u8fdb\u5165    \u963b\u585e\u72b6\u6001\uff0c\u7b49\u5f85\u4e92\u65a5\u91cf Y \u88ab\u91ca\u653e\u3002</p> </li> </ol> <p>\u5728\u6b64\u573a\u666f\u7684\u7ed3\u5c3e\uff0c\u4efb\u52a1 A \u6b63\u5728\u7b49\u5f85\u4efb\u52a1 B \u6301\u6709\u7684\u4e92\u65a5\u91cf\uff0c\u800c\u4efb\u52a1 B \u6b63\u5728\u7b49\u5f85\u4efb\u52a1 A \u6301\u6709\u7684\u4e92\u65a5\u91cf\u3002\u53d1\u751f\u4e86\u6b7b\u9501\uff0c\u56e0\u4e3a\u4e24\u4e2a\u4efb\u52a1\u90fd\u5904\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u7b49\u5f85\u5bf9\u65b9\u91ca\u653e\u4e92\u65a5\u91cf\u3002</p> <p>\u4e0e\u4f18\u5148\u7ea7\u53cd\u8f6c\u4e00\u6837\uff0c\u907f\u514d\u6b7b\u9501\u7684\u6700\u4f73\u65b9\u6cd5\u662f\u5728\u8bbe\u8ba1\u65f6\u8003\u8651\u5230\u5b83\uff0c\u5e76\u8bbe\u8ba1\u7cfb\u7edf\u4ee5\u786e\u4fdd\u65e0\u6cd5\u53d1\u751f\u6b7b\u9501\u3002\u7279\u522b\u662f\uff0c\u6b63\u5982\u672c\u4e66\u4e4b\u524d\u6240\u8ff0\uff0c\u4efb\u52a1\u65e0\u9650\u671f\u7b49\u5f85\u83b7\u53d6\u4e92\u65a5\u91cf\u901a\u5e38\u662f\u4e0d\u597d\u7684\u505a\u6cd5\uff08\u6ca1\u6709\u8d85\u65f6\uff09\u3002\u76f8\u53cd\uff0c\u4f7f\u7528\u8d85\u65f6\u7a0d\u957f\u4e8e\u9884\u671f\u83b7\u53d6\u4e92\u65a5\u91cf\u7684\u6700\u957f\u65f6\u95f4\u2014\u2014\u7136\u540e\u5728\u8be5\u65f6\u95f4\u5185\u672a\u80fd\u83b7\u53d6\u4e92\u65a5\u91cf\u5c06\u662f\u8bbe\u8ba1\u9519\u8bef\u7684\u75c7\u72b6\uff0c\u8fd9\u53ef\u80fd\u662f\u6b7b\u9501\u3002</p> <p>\u5728\u5b9e\u8df5\u4e2d\uff0c\u6b7b\u9501\u5728\u5c0f\u578b\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u4e0d\u662f\u4e00\u4e2a\u5927\u95ee\u9898\uff0c\u56e0\u4e3a\u7cfb\u7edf\u8bbe\u8ba1\u8005\u53ef\u4ee5\u5f88\u597d\u5730\u7406\u89e3\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u56e0\u6b64\u53ef\u4ee5\u8bc6\u522b\u548c\u6d88\u9664\u53ef\u80fd\u53d1\u751f\u7684\u533a\u57df\u3002</p>"},{"location":"ch08-%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/#835","title":"8.3.5 \u9012\u5f52\u4e92\u65a5\u91cf","text":"<p>\u4efb\u52a1\u4e5f\u53ef\u80fd\u4e0e\u81ea\u5df1\u53d1\u751f\u6b7b\u9501\u3002\u5982\u679c\u4efb\u52a1\u5c1d\u8bd5\u591a\u6b21\u83b7\u53d6\u540c\u4e00\u4e92\u65a5\u91cf\u800c\u4e0d\u5148\u91ca\u653e\u4e92\u65a5\u91cf\uff0c\u5c31\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\u8003\u8651\u4ee5\u4e0b\u573a\u666f\uff1a</p> <ol> <li> <p>\u4efb\u52a1\u6210\u529f\u83b7\u53d6\u4e92\u65a5\u91cf\u3002</p> </li> <li> <p>\u5728\u6301\u6709\u4e92\u65a5\u91cf\u7684\u540c\u65f6\uff0c\u4efb\u52a1\u8c03\u7528\u5e93\u51fd\u6570\u3002</p> </li> <li> <p>\u5e93\u51fd\u6570\u7684\u5b9e\u73b0\u5c1d\u8bd5\u83b7\u53d6\u540c\u4e00\u4e92\u65a5\u91cf\uff0c\u5e76\u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u7b49\u5f85\u4e92\u65a5\u91cf\u53d8\u4e3a\u53ef\u7528\u3002</p> </li> </ol> <p>\u5728\u6b64\u573a\u666f\u7684\u7ed3\u5c3e\uff0c\u4efb\u52a1\u5904\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u7b49\u5f85\u4e92\u65a5\u91cf\u88ab\u91ca\u653e\uff0c\u4f46\u4efb\u52a1\u5df2\u7ecf\u662f\u4e92\u65a5\u91cf\u7684\u6301\u6709\u8005\u3002\u53d1\u751f\u4e86\u6b7b\u9501\uff0c\u56e0\u4e3a\u4efb\u52a1\u5904\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u7b49\u5f85\u81ea\u5df1\u3002</p> <p>\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u9012\u5f52\u4e92\u65a5\u91cf\u4ee3\u66ff\u6807\u51c6\u4e92\u65a5\u91cf\u6765\u907f\u514d\u8fd9\u79cd\u6b7b\u9501\u3002\u9012\u5f52\u4e92\u65a5\u91cf\u53ef\u4ee5\u88ab\u540c\u4e00\u4efb\u52a1\u201c\u83b7\u53d6\u201d\u591a\u6b21\uff0c\u53ea\u6709\u5728\u5bf9\u9012\u5f52\u4e92\u65a5\u91cf\u7684\u6bcf\u6b21\u8c03\u7528\u201c\u91ca\u653e\u201d\u4e4b\u540e\uff0c\u5b83\u624d\u4f1a\u88ab\u91ca\u653e\u3002</p> <p>\u6807\u51c6\u4e92\u65a5\u91cf\u548c\u9012\u5f52\u4e92\u65a5\u91cf\u7684\u521b\u5efa\u548c\u4f7f\u7528\u65b9\u5f0f\u7c7b\u4f3c\uff1a</p> <ul> <li> <p>\u6807\u51c6\u4e92\u65a5\u91cf\u662f\u4f7f\u7528 <code>xSemaphoreCreateMutex()</code> \u521b\u5efa\u7684\u3002   \u9012\u5f52\u4e92\u65a5\u91cf\u662f\u4f7f\u7528   <code>xSemaphoreCreateRecursiveMutex()</code> \u521b\u5efa\u7684\u3002\u8fd9\u4e24\u4e2a API \u51fd\u6570\u5177\u6709\u76f8\u540c\u7684\u539f\u578b\u3002</p> </li> <li> <p>\u6807\u51c6\u4e92\u65a5\u91cf\u662f\u4f7f\u7528 <code>xSemaphoreTake()</code> \u201c\u83b7\u53d6\u201d\u7684\u3002\u9012\u5f52\u4e92\u65a5\u91cf\u662f\u4f7f\u7528 <code>xSemaphoreTakeRecursive()</code> \u201c\u83b7\u53d6\u201d\u7684\u3002\u8fd9\u4e24\u4e2a API \u51fd\u6570\u5177\u6709\u76f8\u540c\u7684\u539f\u578b\u3002</p> </li> <li> <p>\u6807\u51c6\u4e92\u65a5\u91cf\u662f\u4f7f\u7528 <code>xSemaphoreGive()</code> \u201c\u91ca\u653e\u201d\u7684\u3002\u9012\u5f52\u4e92\u65a5\u91cf\u662f\u4f7f\u7528 <code>xSemaphoreGiveRecursive()</code> \u201c\u91ca\u653e\u201d\u7684\u3002\u8fd9\u4e24\u4e2a API \u51fd\u6570\u5177\u6709\u76f8\u540c\u7684\u539f\u578b\u3002</p> </li> </ul> <p>\u6e05\u5355 8.14 \u6f14\u793a\u4e86\u5982\u4f55\u521b\u5efa\u548c\u4f7f\u7528\u9012\u5f52\u4e92\u65a5\u91cf\u3002</p> <p></p> <pre><code>/* Recursive mutexes are variables of type SemaphoreHandle_t. */\nSemaphoreHandle_t xRecursiveMutex;\n\n/* The implementation of a task that creates and uses a recursive mutex. */\nvoid vTaskFunction( void *pvParameters )\n{\n    const TickType_t xMaxBlock20ms = pdMS_TO_TICKS( 20 );\n\n    /* Before a recursive mutex is used it must be explicitly created. */\n    xRecursiveMutex = xSemaphoreCreateRecursiveMutex();\n\n    /* Check the semaphore was created successfully. configASSERT() is \n       described in section 11.2. */\n    configASSERT( xRecursiveMutex );\n\n    /* As per most tasks, this task is implemented as an infinite loop. */\n    for( ;; )\n    {\n        /* ... */\n\n        /* Take the recursive mutex. */\n        if( xSemaphoreTakeRecursive( xRecursiveMutex, xMaxBlock20ms ) == pdPASS )\n        {\n            /* The recursive mutex was successfully obtained. The task can now\n               access the resource the mutex is protecting. At this point the \n               recursive call count (which is the number of nested calls to \n               xSemaphoreTakeRecursive()) is 1, as the recursive mutex has \n               only been taken once. */\n\n            /* While it already holds the recursive mutex, the task takes the \n               mutex again. In a real application, this is only likely to occur\n               inside a sub-function called by this task, as there is no \n               practical reason to knowingly take the same mutex more than \n               once. The calling task is already the mutex holder, so the \n               second call to xSemaphoreTakeRecursive() does nothing more than\n               increment the recursive call count to 2. */\n            xSemaphoreTakeRecursive( xRecursiveMutex, xMaxBlock20ms );\n\n            /* ... */\n\n            /* The task returns the mutex after it has finished accessing the\n               resource the mutex is protecting. At this point the recursive \n               call count is 2, so this first call to xSemaphoreGiveRecursive()\n               does not return the mutex. Instead, it simply decrements the \n               recursive call count back to 1. */\n            xSemaphoreGiveRecursive( xRecursiveMutex );\n\n            /* The next call to xSemaphoreGiveRecursive() decrements the \n               recursive call count to 0, so this time the recursive mutex is \n               returned. */\n            xSemaphoreGiveRecursive( xRecursiveMutex );\n\n            /* Now one call to xSemaphoreGiveRecursive() has been executed for\n               every proceeding call to xSemaphoreTakeRecursive(), so the task\n               is no longer the mutex holder. */\n        }\n    }\n}\n</code></pre> <p>Listing 8.14 Creating and using a recursive mutex</p>"},{"location":"ch08-%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/#836","title":"8.3.6\u4e92\u65a5\u91cf\u548c\u4efb\u52a1\u8c03\u5ea6","text":"<p>\u5982\u679c\u4e24\u4e2a\u4e0d\u540c\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\u4f7f\u7528\u540c\u4e00\u4e92\u65a5\u91cf\uff0c\u5219 FreeRTOS \u8c03\u5ea6\u7b56\u7565\u4f1a\u6e05\u695a\u5730\u786e\u5b9a\u4efb\u52a1\u7684\u6267\u884c\u987a\u5e8f\uff1b \u80fd\u591f\u8fd0\u884c\u7684\u6700\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u5c06\u88ab\u9009\u62e9\u4e3a\u8fdb\u5165\u8fd0\u884c\u72b6\u6001\u7684\u4efb\u52a1\u3002\u4f8b\u5982\uff0c\u5982\u679c\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u5904\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u7b49\u5f85\u4f4e\u4f18\u5148\u7ea7\u4efb\u52a1\u6301\u6709\u7684\u4e92\u65a5\u91cf\uff0c\u5219\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u5c06\u5728\u4f4e\u4f18\u5148\u7ea7\u4efb\u52a1\u8fd4\u56de\u4e92\u65a5\u91cf\u540e\u62a2\u5360\u4f4e\u4f18\u5148\u7ea7\u4efb\u52a1\u3002\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u5c06\u6210\u4e3a\u4e92\u65a5\u91cf\u6301\u6709\u8005\u3002\u6b64\u573a\u666f\u5df2\u5728\u56fe 8.5 \u4e2d\u770b\u5230\u3002</p> <p>\u4f46\u662f\uff0c\u5f53\u4efb\u52a1\u5177\u6709\u76f8\u540c\u4f18\u5148\u7ea7\u65f6\uff0c\u5047\u8bbe\u5b83\u4eec\u7684\u6267\u884c\u987a\u5e8f\u662f\u9519\u8bef\u7684\u3002\u5982\u679c\u4efb\u52a1 1 \u548c\u4efb\u52a1 2 \u5177\u6709\u76f8\u540c\u7684\u4f18\u5148\u7ea7\uff0c\u5e76\u4e14\u4efb\u52a1 1 \u6b63\u5728\u963b\u585e\u72b6\u6001\uff0c\u7b49\u5f85\u4efb\u52a1 2 \u6301\u6709\u7684\u4e92\u65a5\u91cf\uff0c\u5219\u5728\u4efb\u52a1 2\u201c\u7ed9\u4e88\u201d\u4e92\u65a5\u91cf\u65f6\uff0c\u4efb\u52a1 1 \u4e0d\u4f1a\u62a2\u5360\u4efb\u52a1 2\u3002\u76f8\u53cd\uff0c\u4efb\u52a1 2 \u5c06\u4fdd\u6301\u5728\u8fd0\u884c\u72b6\u6001\uff0c\u4efb\u52a1 1 \u5c06\u7b80\u5355\u5730\u4ece\u963b\u585e\u72b6\u6001\u8f6c\u79fb\u5230\u5c31\u7eea\u72b6\u6001\u3002\u6b64\u573a\u666f\u5982\u56fe 8.6 \u6240\u793a\uff0c\u5782\u76f4\u7ebf\u6807\u8bb0\u4e86\u6ef4\u7b54\u4e2d\u65ad\u53d1\u751f\u7684\u65f6\u95f4\u3002</p> <p></p> <p> Figure 8.6 A possible sequence of execution when tasks that have the same priority use the same mutex</p> <p>\u5728\u56fe 8.6 \u4e2d\u6240\u793a\u7684\u573a\u666f\u4e2d\uff0c\u7531\u4e8e\uff1a</p> <ul> <li> <p>\u4efb\u52a1 1 \u548c\u4efb\u52a1 2 \u5177\u6709\u76f8\u540c\u7684\u4f18\u5148\u7ea7\uff0c\u56e0\u6b64\uff0c\u9664\u975e\u4efb\u52a1 2 \u8fdb\u5165   \u963b\u585e\u72b6\u6001\uff0c\u5426\u5219\u5728\u4e0b\u4e00\u4e2a\u6ef4\u7b54\u4e2d\u65ad\u4e4b\u524d\uff0c\u4efb\u52a1 1 \u4e0d\u4f1a\u88ab\u5207\u6362\u4e3a\u8fd0\u884c\u72b6\u6001\uff08\u5047\u8bbe\u5728 FreeRTOSConfig.h \u4e2d\u5c06 <code>configUSE_TIME_SLICING</code> \u8bbe\u7f6e\u4e3a 1\uff09\u3002</p> </li> <li> <p>\u5982\u679c\u4efb\u52a1\u5728\u7d27\u5bc6\u5faa\u73af\u4e2d\u4f7f\u7528\u4e92\u65a5\u91cf\uff0c\u5e76\u4e14\u6bcf\u6b21\u4efb\u52a1\u201c\u7ed9\u4e88\u201d\u4e92\u65a5\u91cf\u65f6\u53d1\u751f\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u5219\u4efb\u52a1\u5c06\u4ec5\u5728\u8fd0\u884c\u72b6\u6001\u4e2d\u4fdd\u6301\u5f88\u77ed\u7684\u65f6\u95f4\u3002\u5982\u679c\u4e24\u4e2a\u6216\u591a\u4e2a\u4efb\u52a1\u5728\u7d27\u5bc6\u5faa\u73af\u4e2d\u4f7f\u7528\u76f8\u540c\u7684\u4e92\u65a5\u91cf\uff0c\u5219\u5904\u7406\u65f6\u95f4\u5c06\u901a\u8fc7\u5728\u4efb\u52a1\u4e4b\u95f4\u5feb\u901f\u5207\u6362\u800c\u6d6a\u8d39\u3002</p> </li> </ul> <p>\u5982\u679c\u591a\u4e2a\u4efb\u52a1\u4ee5\u76f8\u540c\u7684\u4f18\u5148\u7ea7\u5728\u7d27\u5bc6\u5faa\u73af\u4e2d\u4f7f\u7528\u4e92\u65a5\u91cf\uff0c\u5219\u5fc5\u987b\u5c0f\u5fc3\u786e\u4fdd\u4efb\u52a1\u83b7\u5f97\u5927\u81f4\u76f8\u7b49\u7684\u5904\u7406\u65f6\u95f4\u3002\u4efb\u52a1\u53ef\u80fd\u65e0\u6cd5\u83b7\u5f97\u76f8\u7b49\u7684\u5904\u7406\u65f6\u95f4\u7684\u539f\u56e0\u5982\u56fe 8.7 \u6240\u793a\uff0c\u8be5\u56fe\u663e\u793a\u4e86\u5982\u679c\u521b\u5efa\u4e86\u4e24\u4e2a\u5177\u6709\u76f8\u540c\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\u5b9e\u4f8b\uff0c\u53ef\u80fd\u53d1\u751f\u7684\u6267\u884c\u987a\u5e8f\u3002</p> <p></p> <pre><code>/* The implementation of a task that uses a mutex in a tight loop. The task \n   creates a text string in a local buffer, then writes the string to a display.\n   Access to the display is protected by a mutex. */\n\nvoid vATask( void *pvParameter )\n{\n    extern SemaphoreHandle_t xMutex;\n    char cTextBuffer[ 128 ];\n\n    for( ;; )\n    {\n        /* Generate the text string \u2013 this is a fast operation. */\n        vGenerateTextInALocalBuffer( cTextBuffer );\n\n        /* Obtain the mutex that is protecting access to the display. */\n        xSemaphoreTake( xMutex, portMAX_DELAY );\n\n        /* Write the generated text to the display\u2013this is a slow operation. */\n        vCopyTextToFrameBuffer( cTextBuffer );\n\n        /* The text has been written to the display, so return the mutex. */\n        xSemaphoreGive( xMutex );\n    }\n}\n</code></pre> <p>Listing 8.15 A task that uses a mutex in a tight loop</p> <p>\u6e05\u5355 8.15 \u4e2d\u7684\u6ce8\u91ca\u6307\u51fa\uff0c\u521b\u5efa\u5b57\u7b26\u4e32\u662f\u4e00\u4e2a\u5feb\u901f\u7684\u64cd\u4f5c\uff0c\u800c\u66f4\u65b0\u663e\u793a\u662f\u4e00\u4e2a\u7f13\u6162\u7684\u64cd\u4f5c\u3002\u56e0\u6b64\uff0c\u7531\u4e8e\u5728\u66f4\u65b0\u663e\u793a\u65f6\u6301\u6709\u4e92\u65a5\u91cf\uff0c\u56e0\u6b64\u4efb\u52a1\u5c06\u5728\u5176\u8fd0\u884c\u65f6\u95f4\u7684\u5927\u90e8\u5206\u65f6\u95f4\u5185\u6301\u6709\u4e92\u65a5\u91cf\u3002</p> <p>\u5728\u56fe 8.7 \u4e2d\uff0c\u5782\u76f4\u7ebf\u6807\u8bb0\u4e86\u6ef4\u7b54\u4e2d\u65ad\u53d1\u751f\u7684\u65f6\u95f4\u3002</p> <p></p> <p> Figure 8.7 A sequence of execution that could occur if two instances of the task shown by Listing 8.15 are created at the same priority</p> <p>\u56fe 8.7 \u4e2d\u7684\u6b65\u9aa4 7 \u663e\u793a\u4efb\u52a1 1 \u91cd\u65b0\u8fdb\u5165\u963b\u585e\u72b6\u6001\u2014\u2014\u8fd9\u53d1\u751f\u5728 <code>xSemaphoreTake()</code> API \u51fd\u6570\u5185\u90e8\u3002</p> <p>\u56fe 8.7 \u6f14\u793a\u4e86\u5982\u679c\u4e24\u4e2a\u5177\u6709\u76f8\u540c\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\u5b9e\u4f8b\u5728\u7d27\u5bc6\u5faa\u73af\u4e2d\u4f7f\u7528\u4e92\u65a5\u91cf\uff0c\u5219\u53ef\u80fd\u53d1\u751f\u7684\u6267\u884c\u987a\u5e8f\u3002</p> <p>\u901a\u8fc7\u5728\u5bf9 <code>xSemaphoreGive()</code> \u7684\u8c03\u7528\u540e\u6dfb\u52a0\u5bf9 <code>taskYIELD()</code> \u7684\u8c03\u7528\uff0c\u53ef\u4ee5\u907f\u514d\u56fe 8.7 \u4e2d\u6240\u793a\u7684\u573a\u666f\u3002\u8fd9\u5728\u6e05\u5355 8.16 \u4e2d\u5f97\u5230\u4e86\u8bc1\u660e\uff0c\u5176\u4e2d\u5728\u4efb\u52a1\u6301\u6709\u4e92\u65a5\u91cf\u65f6\uff0c\u5982\u679c\u6ef4\u7b54\u8ba1\u6570\u53d1\u751f\u53d8\u5316\uff0c\u5219\u8c03\u7528 <code>taskYIELD()</code>\u3002</p> <p></p> <pre><code>void vFunction( void *pvParameter )\n{\n    extern SemaphoreHandle_t xMutex;\n    char cTextBuffer[ 128 ];\n    TickType_t xTimeAtWhichMutexWasTaken;\n\n    for( ;; )\n    {\n        /* Generate the text string \u2013 this is a fast operation. */\n        vGenerateTextInALocalBuffer( cTextBuffer );\n\n        /* Obtain the mutex that is protecting access to the display. */\n        xSemaphoreTake( xMutex, portMAX_DELAY );\n\n        /* Record the time at which the mutex was taken. */\n        xTimeAtWhichMutexWasTaken = xTaskGetTickCount();\n\n        /* Write the generated text to the display\u2013this is a slow operation. */\n        vCopyTextToFrameBuffer( cTextBuffer );\n\n        /* The text has been written to the display, so return the mutex. */\n        xSemaphoreGive( xMutex );\n\n        /* If taskYIELD() was called on each iteration then this task would\n           only ever remain in the Running state for a short period of time, \n           and processing time would be wasted by rapidly switching between \n           tasks. Therefore, only call taskYIELD() if the tick count changed \n           while the mutex was held. */\n        if( xTaskGetTickCount() != xTimeAtWhichMutexWasTaken )\n        {\n            taskYIELD();\n        }\n    }\n}\n</code></pre> <p>Listing 8.16 Ensuring tasks that use a mutex in a loop receive a more equal amount of processing time, while also ensuring processing time is not wasted by switching between tasks too rapidly</p>"},{"location":"ch08-%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/#84","title":"8.4 \u5b88\u95e8\u4eba\u4efb\u52a1","text":"<p>\u5b88\u95e8\u4eba\u4efb\u52a1\u63d0\u4f9b\u4e86\u4e00\u79cd\u5b9e\u73b0\u4e92\u65a5\u7684\u5e72\u51c0\u65b9\u6cd5\uff0c\u800c\u4e0d\u4f1a\u51fa\u73b0\u4f18\u5148\u7ea7\u53cd\u8f6c\u6216\u6b7b\u9501\u7684\u98ce\u9669\u3002</p> <p>\u5b88\u95e8\u4eba\u4efb\u52a1\u662f\u4e00\u4e2a\u5bf9\u8d44\u6e90\u62e5\u6709\u552f\u4e00\u6240\u6709\u6743\u7684\u4efb\u52a1\u3002\u53ea\u6709\u5b88\u95e8\u4eba\u4efb\u52a1\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u8be5\u8d44\u6e90\u2014\u2014\u4efb\u4f55\u5176\u4ed6\u9700\u8981\u8bbf\u95ee\u8be5\u8d44\u6e90\u7684\u4efb\u52a1\u53ea\u80fd\u901a\u8fc7\u4f7f\u7528\u5b88\u95e8\u4eba\u7684\u670d\u52a1\u6765\u95f4\u63a5\u8bbf\u95ee\u8be5\u8d44\u6e90\u3002</p>"},{"location":"ch08-%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/#841-vprintstring","title":"8.4.1 \u91cd\u5199 vPrintString() \u4ee5\u4f7f\u7528\u5b88\u95e8\u4eba\u4efb\u52a1","text":"<p>\u793a\u4f8b 8.2 \u63d0\u4f9b\u4e86 <code>vPrintString()</code> \u7684\u53e6\u4e00\u79cd\u66ff\u4ee3\u5b9e\u73b0\u3002\u8fd9\u4e00\u6b21\uff0c\u4f7f\u7528\u5b88\u95e8\u4eba\u4efb\u52a1\u6765\u7ba1\u7406\u5bf9\u6807\u51c6\u8f93\u51fa\u7684\u8bbf\u95ee\u3002\u5f53\u4efb\u52a1\u60f3\u8981\u5411\u6807\u51c6\u8f93\u51fa\u5199\u5165\u6d88\u606f\u65f6\uff0c\u5b83\u4e0d\u4f1a\u76f4\u63a5\u8c03\u7528\u6253\u5370\u51fd\u6570\uff0c\u800c\u662f\u5c06\u6d88\u606f\u53d1\u9001\u5230\u5b88\u95e8\u4eba\u3002</p> <p>\u5b88\u95e8\u4eba\u4efb\u52a1\u4f7f\u7528 FreeRTOS \u961f\u5217\u5bf9\u6807\u51c6\u8f93\u51fa\u7684\u8bbf\u95ee\u8fdb\u884c\u5e8f\u5217\u5316\u3002\u4efb\u52a1\u7684\u5185\u90e8\u5b9e\u73b0\u4e0d\u5fc5\u8003\u8651\u4e92\u65a5\uff0c\u56e0\u4e3a\u5b83\u662f\u552f\u4e00\u88ab\u5141\u8bb8\u76f4\u63a5\u8bbf\u95ee\u6807\u51c6\u8f93\u51fa\u7684\u4efb\u52a1\u3002</p> <p>\u5b88\u95e8\u4eba\u4efb\u52a1\u5927\u90e8\u5206\u65f6\u95f4\u5904\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u7b49\u5f85\u961f\u5217\u4e2d\u7684\u6d88\u606f\u5230\u8fbe\u3002\u5f53\u6d88\u606f\u5230\u8fbe\u65f6\uff0c\u5b88\u95e8\u4eba\u53ea\u9700\u5c06\u6d88\u606f\u5199\u5165\u6807\u51c6\u8f93\u51fa\uff0c\u7136\u540e\u8fd4\u56de\u963b\u585e\u72b6\u6001\uff0c\u7b49\u5f85\u4e0b\u4e00\u6761\u6d88\u606f\u3002\u5b88\u95e8\u4eba\u4efb\u52a1\u7684\u5b9e\u73b0\u5982\u6e05\u5355 8.18 \u6240\u793a\u3002</p> <p>\u4e2d\u65ad\u53ef\u4ee5\u53d1\u9001\u5230\u961f\u5217\uff0c\u56e0\u6b64\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e5f\u53ef\u4ee5\u5b89\u5168\u5730\u4f7f\u7528\u5b88\u95e8\u4eba\u7684\u670d\u52a1\u5c06\u6d88\u606f\u5199\u5165\u7ec8\u7aef\u3002\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u4f7f\u7528\u6ef4\u7b54\u94a9\u5b50\u51fd\u6570\u6bcf 200 \u6b21\u6ef4\u7b54\u5199\u51fa\u4e00\u6b21\u6d88\u606f\u3002</p> <p>\u6ef4\u7b54\u94a9\u5b50\uff08\u6216\u6ef4\u7b54\u56de\u8c03\uff09\u662f\u5728\u6bcf\u6b21\u6ef4\u7b54\u4e2d\u65ad\u671f\u95f4\u7531\u5185\u6838\u8c03\u7528\u7684\u51fd\u6570\u3002\u8981\u4f7f\u7528\u6ef4\u7b54\u94a9\u5b50\u51fd\u6570\uff1a</p> <ol> <li> <p>\u5728 FreeRTOSConfig.h \u4e2d\u5c06 <code>configUSE_TICK_HOOK</code> \u8bbe\u7f6e\u4e3a 1\u3002</p> </li> <li> <p>\u63d0\u4f9b\u94a9\u5b50\u51fd\u6570\u7684\u5b9e\u73b0\uff0c\u4f7f\u7528\u4e0e\u6e05\u5355 8.17 \u4e2d\u6240\u793a\u5b8c\u5168\u76f8\u540c\u7684\u51fd\u6570\u540d\u79f0\u548c\u539f\u578b\u3002</p> </li> </ol> <p></p> <pre><code>void vApplicationTickHook( void );\n</code></pre> <p>Listing 8.17 The name and prototype for a tick hook function</p> <p>\u6ef4\u7b54\u94a9\u5b50\u51fd\u6570\u5728\u6ef4\u7b54\u4e2d\u65ad\u7684\u4e0a\u4e0b\u6587\u4e2d\u6267\u884c\uff0c\u56e0\u6b64\u5fc5\u987b\u975e\u5e38\u7b80\u77ed\uff0c\u5fc5\u987b\u4f7f\u7528\u9002\u5ea6\u7684\u5806\u6808\u7a7a\u95f4\uff0c\u5e76\u4e14\u4e0d\u5f97\u8c03\u7528\u4efb\u4f55\u4e0d\u4ee5 'FromISR()' \u7ed3\u5c3e\u7684 FreeRTOS API \u51fd\u6570\u3002</p> <p>\u8c03\u5ea6\u7a0b\u5e8f\u5c06\u59cb\u7ec8\u5728\u6ef4\u7b54\u94a9\u5b50\u51fd\u6570\u4e4b\u540e\u7acb\u5373\u6267\u884c\uff0c\u56e0\u6b64\u4ece\u6ef4\u7b54\u94a9\u5b50\u4e2d\u8c03\u7528\u7684\u4e2d\u65ad\u5b89\u5168 FreeRTOS API \u51fd\u6570\u4e0d\u9700\u8981\u4f7f\u7528\u5176 <code>pxHigherPriorityTaskWoken</code> \u53c2\u6570\uff0c\u5e76\u4e14\u8be5\u53c2\u6570\u53ef\u4ee5\u8bbe\u7f6e\u4e3a NULL\u3002</p> <p></p> <pre><code>static void prvStdioGatekeeperTask( void *pvParameters )\n{\n    char *pcMessageToPrint;\n\n    /* This is the only task that is allowed to write to standard out. Any\n       other task wanting to write a string to the output does not access \n       standard out directly, but instead sends the string to this task. As \n       only this task accesses standard out there are no mutual exclusion or \n       serialization issues to consider within the implementation of the task \n       itself. */\n    for( ;; )\n    {\n        /* Wait for a message to arrive. An indefinite block time is specified\n           so there is no need to check the return value \u2013 the function will \n           only return when a message has been successfully received. */\n        xQueueReceive( xPrintQueue, &amp;pcMessageToPrint, portMAX_DELAY );\n\n        /* Output the received string. */\n        printf( \"%s\", pcMessageToPrint );\n        fflush( stdout );\n\n        /* Loop back to wait for the next message. */\n    }\n}\n</code></pre> <p>Listing 8.18 The gatekeeper task</p>"},{"location":"ch08-%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/#_2","title":"8 \u8d44\u6e90\u7ba1\u7406","text":"<p>Example 8.2 The alternative implementation for print task</p> <p>\u5199\u5165\u961f\u5217\u7684\u4efb\u52a1\u5982\u6e05\u5355 8.19 \u6240\u793a\u3002\u4e0e\u4e4b\u524d\u4e00\u6837\uff0c\u521b\u5efa\u4e86\u4efb\u52a1\u7684\u4e24\u4e2a\u5355\u72ec\u5b9e\u4f8b\uff0c\u5e76\u4e14\u4efb\u52a1\u53c2\u6570\u7528\u4e8e\u5c06\u7d22\u5f15\u4f20\u9012\u5230\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u3002</p> <p></p> <pre><code>static void prvPrintTask( void *pvParameters )\n{\n    int iIndexToString;\n    const TickType_t xMaxBlockTimeTicks = 0x20;\n\n    /* Two instances of this task are created. The task parameter is used to \n       pass an index into an array of strings into the task. Cast this to the\n       required type. */\n    iIndexToString = ( int ) pvParameters;\n\n    for( ;; )\n    {\n        /* Print out the string, not directly, but instead by passing a pointer\n           to the string to the gatekeeper task via a queue. The queue is \n           created before the scheduler is started so will already exist by the\n           time this task executes for the first time. A block time is not \n           specified because there should always be space in the queue. */\n        xQueueSendToBack( xPrintQueue, &amp;( pcStringsToPrint[ iIndexToString ]), 0 );\n\n        /* Wait a pseudo random time. Note that rand() is not necessarily\n           reentrant, but in this case it does not really matter as the code \n           does not care what value is returned. In a more secure application \n           a version of rand() that is known to be reentrant should be used - \n           or calls to rand() should be protected using a critical section. */\n        vTaskDelay( ( rand() % xMaxBlockTimeTicks ) );\n    }\n}\n</code></pre> <p>Listing 8.19 The print task implementation for Example 8.2</p> <p>\u6ef4\u7b54\u94a9\u5b50\u51fd\u6570\u8ba1\u7b97\u5176\u88ab\u8c03\u7528\u7684\u6b21\u6570\uff0c\u6bcf\u5f53\u8ba1\u6570\u8fbe\u5230 200 \u65f6\uff0c\u5c31\u5c06\u5176\u6d88\u606f\u53d1\u9001\u5230\u5b88\u95e8\u4eba\u4efb\u52a1\u3002\u51fa\u4e8e\u6f14\u793a\u76ee\u7684\uff0c\u6ef4\u7b54\u94a9\u5b50\u5c06\u6d88\u606f\u5199\u5165\u961f\u5217\u7684\u524d\u9762\uff0c\u800c\u4efb\u52a1\u5219\u5199\u5165\u961f\u5217\u7684\u540e\u9762\u3002\u6ef4\u7b54\u94a9\u5b50\u5b9e\u73b0\u5982\u6e05\u5355 8.20 \u6240\u793a\u3002</p> <p></p> <pre><code>void vApplicationTickHook( void )\n{\n    static int iCount = 0;\n\n    /* Print out a message every 200 ticks. The message is not written out\n       directly, but sent to the gatekeeper task. */\n    iCount++;\n\n    if( iCount &gt;= 200 )\n    {\n        /* As xQueueSendToFrontFromISR() is being called from the tick hook, it\n           is not necessary to use the xHigherPriorityTaskWoken parameter (the \n           third parameter), and the parameter is set to NULL. */\n        xQueueSendToFrontFromISR( xPrintQueue, \n                                  &amp;( pcStringsToPrint[ 2 ] ), \n                                  NULL );\n\n        /* Reset the count ready to print out the string again in 200 ticks\n           time. */\n        iCount = 0;\n    }\n}\n</code></pre> <p>Listing 8.20 The tick hook implementation</p> <p>\u4e0e\u5f80\u5e38\u4e00\u6837\uff0c<code>main()</code> \u521b\u5efa\u793a\u4f8b\u6240\u9700\u7684\u961f\u5217\u548c\u4efb\u52a1\uff0c\u7136\u540e\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u3002 <code>main()</code> \u7684\u5b9e\u73b0\u5982\u6e05\u5355 8.21 \u6240\u793a\u3002</p> <pre><code>/* Define the strings that the tasks and interrupt will print out via the\n   gatekeeper. */\nstatic char *pcStringsToPrint[] =\n{\n    \"Task 1 ****************************************************\\r\\n\",\n    \"Task 2 ----------------------------------------------------\\r\\n\",\n    \"Message printed from the tick hook interrupt ##############\\r\\n\"\n};\n\n/*-----------------------------------------------------------*/\n\n/* Declare a variable of type QueueHandle_t. The queue is used to send messages\n   from the print tasks and the tick interrupt to the gatekeeper task. */\nQueueHandle_t xPrintQueue;\n\n/*-----------------------------------------------------------*/\n\nint main( void )\n{\n    /* Before a queue is used it must be explicitly created. The queue is \n       created to hold a maximum of 5 character pointers. */\n    xPrintQueue = xQueueCreate( 5, sizeof( char * ) );\n\n    /* Check the queue was created successfully. */\n    if( xPrintQueue != NULL )\n    {\n        /* Create two instances of the tasks that send messages to the \n           gatekeeper. The index to the string the task uses is passed to the \n           task via the task parameter (the 4th parameter to xTaskCreate()). \n           The tasks are created at different priorities so the higher priority\n           task will occasionally preempt the lower priority task. */\n        xTaskCreate( prvPrintTask, \"Print1\", 1000, ( void * ) 0, 1, NULL );\n        xTaskCreate( prvPrintTask, \"Print2\", 1000, ( void * ) 1, 2, NULL );\n\n        /* Create the gatekeeper task. This is the only task that is permitted\n           to directly access standard out. */\n        xTaskCreate( prvStdioGatekeeperTask, \"Gatekeeper\", 1000, NULL, 0, NULL );\n\n        /* Start the scheduler so the created tasks start executing. */\n        vTaskStartScheduler();\n    }\n\n    /* If all is well then main() will never reach here as the scheduler will \n       now be running the tasks. If main() does reach here then it is likely \n       that there was insufficient heap memory available for the idle task to \n       be created. Chapter 3 provides more information on heap memory \n       management. */\n    for( ;; );\n}\n</code></pre> <p></p> <p>Listing 8.21 The implementation of main() for Example 8.2</p> <p>\u6267\u884c\u793a\u4f8b 8.2 \u65f6\u751f\u6210\u7684\u8f93\u51fa\u5982\u56fe 8.8 \u6240\u793a\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u6765\u81ea\u4efb\u52a1\u7684\u5b57\u7b26\u4e32\u548c\u6765\u81ea\u4e2d\u65ad\u7684\u5b57\u7b26\u4e32\u90fd\u6b63\u786e\u6253\u5370\uff0c\u6ca1\u6709\u635f\u574f\u3002</p> <p></p> <p> Figure 8.8 The output produced when Example 8.2 is executed</p> <p>\u5b88\u95e8\u4eba\u4efb\u52a1\u88ab\u5206\u914d\u4e86\u4f4e\u4e8e\u6253\u5370\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u2014\u2014\u56e0\u6b64\uff0c\u53d1\u9001\u5230\u5b88\u95e8\u4eba\u7684\u6d88\u606f\u5c06\u4fdd\u7559\u5728\u961f\u5217\u4e2d\uff0c\u76f4\u5230\u4e24\u4e2a\u6253\u5370\u4efb\u52a1\u90fd\u5904\u4e8e\u963b\u585e\u72b6\u6001\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5c06\u5b88\u95e8\u4eba\u5206\u914d\u66f4\u9ad8\u7684\u4f18\u5148\u7ea7\u662f\u5408\u9002\u7684\uff0c\u56e0\u6b64\u6d88\u606f\u4f1a\u7acb\u5373\u5904\u7406\u2014\u2014\u4f46\u8fd9\u6837\u505a\u7684\u4ee3\u4ef7\u662f\uff0c\u5b88\u95e8\u4eba\u5728\u5b8c\u6210\u5bf9\u53d7\u4fdd\u62a4\u8d44\u6e90\u7684\u8bbf\u95ee\u4e4b\u524d\uff0c\u4f1a\u5ef6\u8fdf\u8f83\u4f4e\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\u3002</p>"},{"location":"ch09-%E4%BA%8B%E4%BB%B6%E7%BB%84/","title":"9 \u4e8b\u4ef6\u7ec4","text":""},{"location":"ch09-%E4%BA%8B%E4%BB%B6%E7%BB%84/#91","title":"9.1 \u7ae0\u8282\u7b80\u4ecb\u4e0e\u8303\u56f4","text":"<p>\u5982\u524d\u6240\u8ff0\uff0c\u5b9e\u65f6\u5d4c\u5165\u5f0f\u7cfb\u7edf\u5fc5\u987b\u5bf9\u4e8b\u4ef6\u505a\u51fa\u54cd\u5e94\u3002\u524d\u51e0\u7ae0\u4ecb\u7ecd\u4e86 FreeRTOS \u7684\u4e00\u4e9b\u7279\u6027\uff0c\u53ef\u4ee5\u5c06\u4e8b\u4ef6\u4f20\u9012\u7ed9\u4efb\u52a1\u3002\u4f8b\u5982\u4fe1\u53f7\u91cf\u548c\u961f\u5217\uff0c\u8fd9\u4e9b\u7279\u6027\u5177\u6709\u5982\u4e0b\u5c5e\u6027\uff1a</p> <ul> <li>\u5141\u8bb8\u4efb\u52a1\u5728\u963b\u585e\u72b6\u6001\u4e0b\u7b49\u5f85\u5355\u4e2a\u4e8b\u4ef6\u53d1\u751f\u3002</li> <li>\u4e8b\u4ef6\u53d1\u751f\u65f6\u53ea\u5524\u9192\u4e00\u4e2a\u4efb\u52a1\uff0c\u88ab\u5524\u9192\u7684\u662f\u7b49\u5f85\u8be5\u4e8b\u4ef6\u7684\u6700\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u3002</li> </ul> <p>\u4e8b\u4ef6\u7ec4\u662f FreeRTOS \u7684\u53e6\u4e00\u9879\u7279\u6027\uff0c\u53ef\u4ee5\u5c06\u4e8b\u4ef6\u4f20\u9012\u7ed9\u4efb\u52a1\u3002\u4e0e\u961f\u5217\u548c\u4fe1\u53f7\u91cf\u4e0d\u540c\uff1a</p> <ul> <li>\u4e8b\u4ef6\u7ec4\u5141\u8bb8\u4efb\u52a1\u5728\u963b\u585e\u72b6\u6001\u4e0b\u7b49\u5f85\u4e00\u4e2a\u6216\u591a\u4e2a\u4e8b\u4ef6\u7684\u7ec4\u5408\u53d1\u751f\u3002</li> <li>\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0c\u4e8b\u4ef6\u7ec4\u4f1a\u5524\u9192\u6240\u6709\u7b49\u5f85\u540c\u4e00\u4e8b\u4ef6\u6216\u4e8b\u4ef6\u7ec4\u5408\u7684\u4efb\u52a1\u3002</li> </ul> <p>\u4e8b\u4ef6\u7ec4\u7684\u8fd9\u4e9b\u72ec\u7279\u5c5e\u6027\u4f7f\u5176\u975e\u5e38\u9002\u5408\u7528\u4e8e\u591a\u4efb\u52a1\u540c\u6b65\u3001\u5411\u591a\u4e2a\u4efb\u52a1\u5e7f\u64ad\u4e8b\u4ef6\u3001\u8ba9\u4efb\u52a1\u7b49\u5f85\u4e00\u7ec4\u4e8b\u4ef6\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u53d1\u751f\uff0c\u6216\u7b49\u5f85\u591a\u4e2a\u64cd\u4f5c\u5b8c\u6210\u3002</p> <p>\u4e8b\u4ef6\u7ec4\u8fd8\u53ef\u4ee5\u51cf\u5c11\u5e94\u7528\u7a0b\u5e8f\u7684 RAM \u5360\u7528\uff0c\u56e0\u4e3a\u901a\u5e38\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e8b\u4ef6\u7ec4\u66ff\u4ee3\u591a\u4e2a\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u3002</p> <p>\u4e8b\u4ef6\u7ec4\u529f\u80fd\u662f\u53ef\u9009\u7684\u3002\u8981\u542f\u7528\u4e8b\u4ef6\u7ec4\u529f\u80fd\uff0c\u8bf7\u5c06 FreeRTOS \u6e90\u6587\u4ef6 event_groups.c \u6784\u5efa\u4e3a\u9879\u76ee\u7684\u4e00\u90e8\u5206\u3002</p>"},{"location":"ch09-%E4%BA%8B%E4%BB%B6%E7%BB%84/#911","title":"9.1.1 \u8303\u56f4","text":"<p>\u672c\u7ae0\u65e8\u5728\u5e2e\u52a9\u8bfb\u8005\u6df1\u5165\u7406\u89e3\uff1a</p> <ul> <li>\u4e8b\u4ef6\u7ec4\u7684\u5b9e\u9645\u7528\u9014\u3002</li> <li>\u4e8b\u4ef6\u7ec4\u76f8\u5bf9\u4e8e\u5176\u4ed6 FreeRTOS \u7279\u6027\u7684\u4f18\u7f3a\u70b9\u3002</li> <li>\u5982\u4f55\u8bbe\u7f6e\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u4f4d\u3002</li> <li>\u5982\u4f55\u5728\u963b\u585e\u72b6\u6001\u4e0b\u7b49\u5f85\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u4f4d\u88ab\u8bbe\u7f6e\u3002</li> <li>\u5982\u4f55\u4f7f\u7528\u4e8b\u4ef6\u7ec4\u540c\u6b65\u4e00\u7ec4\u4efb\u52a1\u3002</li> </ul>"},{"location":"ch09-%E4%BA%8B%E4%BB%B6%E7%BB%84/#92","title":"9.2 \u4e8b\u4ef6\u7ec4\u7684\u7279\u6027","text":""},{"location":"ch09-%E4%BA%8B%E4%BB%B6%E7%BB%84/#921","title":"9.2.1 \u4e8b\u4ef6\u7ec4\u3001\u4e8b\u4ef6\u6807\u5fd7\u548c\u4e8b\u4ef6\u4f4d","text":"<p>\u4e8b\u4ef6\u201c\u6807\u5fd7\u201d\u662f\u4e00\u4e2a\u5e03\u5c14\u503c\uff081 \u6216 0\uff09\uff0c\u7528\u4e8e\u6307\u793a\u4e8b\u4ef6\u662f\u5426\u53d1\u751f\u3002\u4e8b\u4ef6\u201c\u7ec4\u201d\u662f\u4e00\u7ec4\u4e8b\u4ef6\u6807\u5fd7\u3002</p> <p>\u4e8b\u4ef6\u6807\u5fd7\u53ea\u80fd\u662f 1 \u6216 0\uff0c\u4e8b\u4ef6\u6807\u5fd7\u7684\u72b6\u6001\u53ef\u4ee5\u5b58\u50a8\u5728\u5355\u4e2a\u4f4d\u4e2d\uff0c\u4e8b\u4ef6\u7ec4\u4e2d\u6240\u6709\u4e8b\u4ef6\u6807\u5fd7\u7684\u72b6\u6001\u53ef\u4ee5\u5b58\u50a8\u5728\u4e00\u4e2a\u53d8\u91cf\u4e2d\uff1b\u4e8b\u4ef6\u7ec4\u4e2d\u6bcf\u4e2a\u4e8b\u4ef6\u6807\u5fd7\u7684\u72b6\u6001\u7531\u4e00\u4e2a\u4f4d\u8868\u793a\uff0c\u8be5\u4f4d\u4f4d\u4e8e <code>EventBits_t</code> \u7c7b\u578b\u7684\u53d8\u91cf\u4e2d\u3002\u56e0\u6b64\uff0c\u4e8b\u4ef6\u6807\u5fd7\u4e5f\u79f0\u4e3a\u4e8b\u4ef6\u201c\u4f4d\u201d\u3002\u5982\u679c <code>EventBits_t</code> \u53d8\u91cf\u4e2d\u7684\u67d0\u4e2a\u4f4d\u88ab\u8bbe\u7f6e\u4e3a 1\uff0c\u5219\u8868\u793a\u8be5\u4f4d\u8868\u793a\u7684\u4e8b\u4ef6\u5df2\u53d1\u751f\u3002\u5982\u679c <code>EventBits_t</code> \u53d8\u91cf\u4e2d\u7684\u67d0\u4e2a\u4f4d\u88ab\u8bbe\u7f6e\u4e3a 0\uff0c\u5219\u8868\u793a\u8be5\u4f4d\u8868\u793a\u7684\u4e8b\u4ef6\u5c1a\u672a\u53d1\u751f\u3002</p> <p>\u56fe 9.1 \u663e\u793a\u4e86\u5355\u4e2a\u4e8b\u4ef6\u6807\u5fd7\u5982\u4f55\u6620\u5c04\u5230 <code>EventBits_t</code> \u7c7b\u578b\u53d8\u91cf\u4e2d\u7684\u5355\u4e2a\u4f4d\u3002</p> <p></p> <p> \u56fe 9.1 \u4e8b\u4ef6\u6807\u5fd7\u5230 EventBits_t \u7c7b\u578b\u53d8\u91cf\u4e2d\u7684\u4f4d\u7f16\u53f7\u6620\u5c04</p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u4e8b\u4ef6\u7ec4\u7684\u503c\u4e3a 0x92\uff08\u4e8c\u8fdb\u5236 1001 0010\uff09\uff0c\u5219\u4ec5\u8bbe\u7f6e\u4e8b\u4ef6\u4f4d 1\u30014 \u548c 7\uff0c\u56e0\u6b64\u4ec5\u8868\u793a\u4f4d 1\u30014 \u548c 7 \u7684\u4e8b\u4ef6\u5df2\u53d1\u751f\u3002\u56fe 9.2 \u663e\u793a\u4e86 <code>EventBits_t</code> \u7c7b\u578b\u7684\u4e00\u4e2a\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u8bbe\u7f6e\u4e86\u4e8b\u4ef6\u4f4d 1\u30014 \u548c 7\uff0c\u6240\u6709\u5176\u4ed6\u4e8b\u4ef6\u4f4d\u6e05\u96f6\uff0c\u4f7f\u4e8b\u4ef6\u7ec4\u7684\u503c\u4e3a 0x92\u3002</p> <p></p> <p> \u56fe 9.2 \u4e8b\u4ef6\u7ec4\uff0c\u5176\u4e2d\u4ec5\u8bbe\u7f6e\u4f4d 1\u30014 \u548c 7\uff0c\u6240\u6709\u5176\u4ed6\u4e8b\u4ef6\u6807\u5fd7\u5747\u6e05\u9664\uff0c\u4f7f\u4e8b\u4ef6\u7ec4\u7684\u503c\u4e3a 0x92</p> <p>\u7531\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u8005\u8d1f\u8d23\u4e3a\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u5355\u4e2a\u4f4d\u5206\u914d\u542b\u4e49\u3002\u4f8b\u5982\uff0c\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u8005\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u4e8b\u4ef6\u7ec4\uff0c\u7136\u540e\uff1a</p> <ul> <li>\u5b9a\u4e49\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u4f4d 0 \u8868\u793a\u201c\u5df2\u4ece\u7f51\u7edc\u63a5\u6536\u5230\u6d88\u606f\u201d\u3002</li> <li>\u5b9a\u4e49\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u4f4d 1 \u8868\u793a\u201c\u6d88\u606f\u51c6\u5907\u597d\u53ef\u4ee5\u53d1\u9001\u5230\u7f51\u7edc\u201d\u3002</li> <li>\u5b9a\u4e49\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u4f4d 2 \u8868\u793a\u201c\u4e2d\u6b62\u5f53\u524d\u7f51\u7edc\u8fde\u63a5\u201d\u3002</li> </ul>"},{"location":"ch09-%E4%BA%8B%E4%BB%B6%E7%BB%84/#922-eventbits_t","title":"9.2.2 \u6709\u5173 EventBits_t \u6570\u636e\u7c7b\u578b\u7684\u66f4\u591a\u4fe1\u606f","text":"<p>\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u4e8b\u4ef6\u4f4d\u6570\u53d6\u51b3\u4e8e FreeRTOSConfig.h \u4e2d\u7684 <code>configTICK_TYPE_WIDTH_IN_BITS</code> \u7f16\u8bd1\u65f6\u914d\u7f6e\u5e38\u91cf[^24]\uff1a</p> <p>[^24]: <code>configTICK_TYPE_WIDTH_IN_BITS</code> \u914d\u7f6e\u7528\u4e8e\u4fdd\u5b58 RTOS \u65f6\u949f\u8ba1\u6570\u7684\u7c7b\u578b\uff0c\u56e0\u6b64\u4f3c\u4e4e\u4e0e\u4e8b\u4ef6\u7ec4\u7279\u6027\u65e0\u5173\u3002\u5b83\u5bf9 <code>EventBits_t</code> \u7c7b\u578b\u7684\u5f71\u54cd\u662f FreeRTOS \u5185\u90e8\u5b9e\u73b0\u7684\u7ed3\u679c\uff0c\u5c3d\u7ba1\u5728 FreeRTOS \u5728\u53ef\u4ee5\u6bd4 32 \u4f4d\u7c7b\u578b\u66f4\u6709\u6548\u5730\u5904\u7406 16 \u4f4d\u7c7b\u578b\u7684\u4f53\u7cfb\u7ed3\u6784\u4e0a\u6267\u884c\u65f6\uff0c\u8bbe\u7f6e <code>configTICK_TYPE_WIDTH_IN_BITS</code> \u4e3a <code>TICK_TYPE_WIDTH_16_BITS</code> \u662f\u53ef\u53d6\u7684\uff0c\u4f46\u4ec5\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u8fdb\u884c\u6b64\u8bbe\u7f6e\u3002</p> <ul> <li>\u5982\u679c <code>configTICK_TYPE_WIDTH_IN_BITS</code> \u4e3a <code>TICK_TYPE_WIDTH_16_BITS</code>\uff0c\u5219\u6bcf\u4e2a\u4e8b\u4ef6\u7ec4\u5305\u542b 8 \u4e2a\u53ef\u7528\u4e8b\u4ef6\u4f4d\u3002</li> <li>\u5982\u679c <code>configTICK_TYPE_WIDTH_IN_BITS</code> \u4e3a <code>TICK_TYPE_WIDTH_32_BITS</code>\uff0c\u5219\u6bcf\u4e2a\u4e8b\u4ef6\u7ec4\u5305\u542b 24 \u4e2a\u53ef\u7528\u4e8b\u4ef6\u4f4d\u3002</li> <li>\u5982\u679c <code>configTICK_TYPE_WIDTH_IN_BITS</code> \u4e3a <code>TICK_TYPE_WIDTH_64_BITS</code>\uff0c\u5219\u6bcf\u4e2a\u4e8b\u4ef6\u7ec4\u5305\u542b 56 \u4e2a\u53ef\u7528\u4e8b\u4ef6\u4f4d\u3002</li> </ul>"},{"location":"ch09-%E4%BA%8B%E4%BB%B6%E7%BB%84/#923","title":"9.2.3 \u591a\u4efb\u52a1\u8bbf\u95ee","text":"<p>\u4e8b\u4ef6\u7ec4\u672c\u8eab\u5c31\u662f\u5bf9\u8c61\uff0c\u53ef\u4ee5\u88ab\u4efb\u4f55\u77e5\u9053\u5176\u5b58\u5728\u7684\u4efb\u52a1\u6216 ISR \u8bbf\u95ee\u3002\u4efb\u4f55\u6570\u91cf\u7684\u4efb\u52a1\u90fd\u53ef\u4ee5\u8bbe\u7f6e\u540c\u4e00\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u4f4d\uff0c\u4efb\u4f55\u6570\u91cf\u7684\u4efb\u52a1\u90fd\u53ef\u4ee5\u4ece\u540c\u4e00\u4e8b\u4ef6\u7ec4\u4e2d\u8bfb\u53d6\u4f4d\u3002</p>"},{"location":"ch09-%E4%BA%8B%E4%BB%B6%E7%BB%84/#924","title":"9.2.4 \u4f7f\u7528\u4e8b\u4ef6\u7ec4\u7684\u5b9e\u9645\u793a\u4f8b","text":"<p>FreeRTOS+TCP TCP/IP \u5806\u6808\u7684\u5b9e\u73b0\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b9e\u9645\u793a\u4f8b\uff0c\u8bf4\u660e\u4e8b\u4ef6\u7ec4\u5982\u4f55\u540c\u65f6\u7b80\u5316\u8bbe\u8ba1\u5e76\u6700\u5c0f\u5316\u8d44\u6e90\u4f7f\u7528\u3002</p> <p>TCP \u5957\u63a5\u5b57\u5fc5\u987b\u5bf9\u8bb8\u591a\u4e0d\u540c\u7684\u4e8b\u4ef6\u505a\u51fa\u54cd\u5e94\u3002\u4e8b\u4ef6\u7684\u793a\u4f8b\u5305\u62ec\u63a5\u53d7\u4e8b\u4ef6\u3001\u7ed1\u5b9a\u4e8b\u4ef6\u3001\u8bfb\u53d6\u4e8b\u4ef6\u548c\u5173\u95ed\u4e8b\u4ef6\u3002\u5957\u63a5\u5b57\u5728\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u53ef\u4ee5\u671f\u5f85\u7684\u4e8b\u4ef6\u53d6\u51b3\u4e8e\u5957\u63a5\u5b57\u7684\u72b6\u6001\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5957\u63a5\u5b57\u5df2\u521b\u5efa\u4f46\u5c1a\u672a\u7ed1\u5b9a\u5230\u5730\u5740\uff0c\u5219\u53ef\u4ee5\u671f\u5f85\u63a5\u6536\u7ed1\u5b9a\u4e8b\u4ef6\uff0c\u4f46\u4e0d\u5e0c\u671b\u63a5\u6536\u8bfb\u53d6\u4e8b\u4ef6\uff08\u5982\u679c\u6ca1\u6709\u5730\u5740\uff0c\u5219\u65e0\u6cd5\u8bfb\u53d6\u6570\u636e\uff09\u3002</p> <p>FreeRTOS+TCP \u5957\u63a5\u5b57\u7684\u72b6\u6001\u4fdd\u5b58\u5728\u4e00\u4e2a\u540d\u4e3a <code>FreeRTOS_Socket_t</code> \u7684\u7ed3\u6784\u4e2d\u3002\u8be5\u7ed3\u6784\u5305\u542b\u4e00\u4e2a\u4e8b\u4ef6\u7ec4\uff0c\u8be5\u4e8b\u4ef6\u7ec4\u4e3a\u5957\u63a5\u5b57\u5fc5\u987b\u5904\u7406\u7684\u6bcf\u4e2a\u4e8b\u4ef6\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u4f4d\u3002\u963b\u585e\u4ee5\u7b49\u5f85\u4e8b\u4ef6\u6216\u4e8b\u4ef6\u7ec4\u7684 FreeRTOS+TCP API \u8c03\u7528\u4ec5\u5728\u4e8b\u4ef6\u7ec4\u4e0a\u963b\u585e\u3002</p> <p>\u4e8b\u4ef6\u7ec4\u8fd8\u5305\u542b\u4e00\u4e2a\u201c\u4e2d\u6b62\u201d\u4f4d\uff0c\u5141\u8bb8\u5728 TCP \u8fde\u63a5\u7684\u4efb\u4f55\u4e8b\u4ef6\u7b49\u5f85\u65f6\u4e2d\u6b62\u8be5\u8fde\u63a5\u3002</p>"},{"location":"ch09-%E4%BA%8B%E4%BB%B6%E7%BB%84/#93","title":"9.3 \u4f7f\u7528\u4e8b\u4ef6\u7ec4\u8fdb\u884c\u4e8b\u4ef6\u7ba1\u7406","text":""},{"location":"ch09-%E4%BA%8B%E4%BB%B6%E7%BB%84/#931-xeventgroupcreate-api","title":"9.3.1 xEventGroupCreate() API \u51fd\u6570","text":"<p>FreeRTOS \u8fd8\u5305\u62ec <code>xEventGroupCreateStatic()</code> \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u9759\u6001\u5206\u914d\u521b\u5efa\u4e8b\u4ef6\u7ec4\u6240\u9700\u7684\u5185\u5b58\uff1a\u5fc5\u987b\u663e\u5f0f\u521b\u5efa\u4e8b\u4ef6\u7ec4\u624d\u80fd\u4f7f\u7528\u5b83\u3002</p> <p>\u4e8b\u4ef6\u7ec4\u901a\u8fc7 <code>EventGroupHandle_t</code> \u7c7b\u578b\u7684\u53d8\u91cf\u8fdb\u884c\u5f15\u7528\u3002<code>xEventGroupCreate()</code> API \u51fd\u6570\u7528\u4e8e\u521b\u5efa\u4e8b\u4ef6\u7ec4\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a <code>EventGroupHandle_t</code> \u6765\u5f15\u7528\u5b83\u6240\u521b\u5efa\u7684\u4e8b\u4ef6\u7ec4\u3002</p> <p></p> <pre><code>EventGroupHandle_t xEventGroupCreate( void );\n</code></pre> <p>\u6e05\u5355 9.1 xEventGroupCreate() API \u51fd\u6570\u539f\u578b</p> <p>xEventGroupCreate() \u8fd4\u56de\u503c</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u5982\u679c\u8fd4\u56de NULL\uff0c\u5219\u8868\u793a\u65e0\u6cd5\u521b\u5efa\u4e8b\u4ef6\u7ec4\uff0c\u56e0\u4e3a\u6ca1\u6709\u8db3\u591f\u7684\u5806\u5185\u5b58\u53ef\u4f9b FreeRTOS \u5206\u914d\u4e8b\u4ef6\u7ec4\u6570\u636e\u7ed3\u6784\u3002\u7b2c 3 \u7ae0\u63d0\u4f9b\u4e86\u6709\u5173\u5806\u5185\u5b58\u7ba1\u7406\u7684\u66f4\u591a\u4fe1\u606f\u3002</p> <p>\u8fd4\u56de\u975e NULL \u503c\u8868\u793a\u4e8b\u4ef6\u7ec4\u5df2\u6210\u529f\u521b\u5efa\u3002\u8fd4\u56de\u7684\u503c\u5e94\u5b58\u50a8\u4e3a\u521b\u5efa\u7684\u4e8b\u4ef6\u7ec4\u7684\u53e5\u67c4\u3002</p>"},{"location":"ch09-%E4%BA%8B%E4%BB%B6%E7%BB%84/#932-xeventgroupsetbits-api","title":"9.3.2 xEventGroupSetBits() API \u51fd\u6570","text":"<p><code>xEventGroupSetBits()</code> API \u51fd\u6570\u8bbe\u7f6e\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u4f4d\uff0c\u901a\u5e38\u7528\u4e8e\u901a\u77e5\u4efb\u52a1\u6240\u8bbe\u7f6e\u7684\u4f4d\u8868\u793a\u7684\u4e8b\u4ef6\u5df2\u53d1\u751f\u3002</p> <p>\u6ce8\u610f\uff1a\u5207\u52ff\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u8c03\u7528 <code>xEventGroupSetBits()</code>\u3002\u5e94\u4f7f\u7528\u4e2d\u65ad\u5b89\u5168\u7248\u672c <code>xEventGroupSetBitsFromISR()</code> \u4ee3\u66ff\u3002</p> <p></p> <pre><code>EventBits_t xEventGroupSetBits( EventGroupHandle_t xEventGroup,\n\nconst EventBits_t uxBitsToSet );\n</code></pre> <p>\u6e05\u5355 9.2 xEventGroupSetBits() API \u51fd\u6570\u539f\u578b</p> <p>xEventGroupSetBits() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>xEventGroup</code></li> </ul> <p>\u6b63\u5728\u8bbe\u7f6e\u4f4d\u7684\u4e8b\u4ef6\u7ec4\u7684\u53e5\u67c4\u3002\u4e8b\u4ef6\u7ec4\u53e5\u67c4\u662f\u901a\u8fc7\u7528\u4e8e\u521b\u5efa\u4e8b\u4ef6\u7ec4\u7684 <code>xEventGroupCreate()</code> \u8c03\u7528\u8fd4\u56de\u7684\u3002</p> <ul> <li><code>uxBitsToSet</code></li> </ul> <p>\u6307\u5b9a\u8981\u5728\u4e8b\u4ef6\u7ec4\u4e2d\u8bbe\u7f6e\u4e3a 1 \u7684\u4e8b\u4ef6\u4f4d\u6216\u4e8b\u4ef6\u4f4d\u7684\u63a9\u7801\u3002\u901a\u8fc7\u5c06\u4e8b\u4ef6\u7ec4\u7684\u73b0\u6709\u503c\u4e0e <code>uxBitsToSet</code> \u4e2d\u4f20\u9012\u7684\u503c\u6309\u4f4d\u6216\uff0c\u66f4\u65b0\u4e8b\u4ef6\u7ec4\u7684\u503c\u3002</p> <p>\u4f8b\u5982\uff0c\u5c06 <code>uxBitsToSet</code> \u8bbe\u7f6e\u4e3a 0x04\uff08\u4e8c\u8fdb\u5236 0100\uff09\u5c06\u5bfc\u81f4\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u4e8b\u4ef6\u4f4d 3 \u88ab\u8bbe\u7f6e\uff08\u5982\u679c\u5c1a\u672a\u8bbe\u7f6e\uff09\uff0c\u800c\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u6240\u6709\u5176\u4ed6\u4e8b\u4ef6\u4f4d\u4fdd\u6301\u4e0d\u53d8\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u8c03\u7528\u65f6 <code>xEventGroupSetBits()</code> \u8fd4\u56de\u65f6\u4e8b\u4ef6\u7ec4\u7684\u503c\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd4\u56de\u7684\u503c\u4e0d\u4e00\u5b9a\u5177\u6709 <code>uxBitsToSet</code> \u6307\u5b9a\u7684\u4f4d\u88ab\u8bbe\u7f6e\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u4f4d\u53ef\u80fd\u5df2\u88ab\u5176\u4ed6\u4efb\u52a1\u6e05\u9664\u3002</p>"},{"location":"ch09-%E4%BA%8B%E4%BB%B6%E7%BB%84/#933-xeventgroupsetbitsfromisr-api","title":"9.3.3 xEventGroupSetBitsFromISR() API \u51fd\u6570","text":"<p><code>xEventGroupSetBitsFromISR()</code> \u662f <code>xEventGroupSetBits()</code> \u7684\u4e2d\u65ad\u5b89\u5168\u7248\u672c\u3002</p> <p>\u7ed9\u4fe1\u53f7\u91cf\u662f\u4e00\u4e2a\u786e\u5b9a\u6027\u7684\u64cd\u4f5c\uff0c\u56e0\u4e3a\u53ef\u4ee5\u9884\u5148\u77e5\u9053\u7ed9\u4fe1\u53f7\u91cf\u6700\u591a\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u4efb\u52a1\u79bb\u5f00\u963b\u585e\u72b6\u6001\u3002\u5f53\u5728\u4e8b\u4ef6\u7ec4\u4e2d\u8bbe\u7f6e\u4f4d\u65f6\uff0c\u65e0\u6cd5\u9884\u5148\u77e5\u9053\u5c06\u6709\u591a\u5c11\u4efb\u52a1\u79bb\u5f00\u963b\u585e\u72b6\u6001\uff0c\u56e0\u6b64\u5728\u4e8b\u4ef6\u7ec4\u4e2d\u8bbe\u7f6e\u4f4d\u4e0d\u662f\u4e00\u4e2a\u786e\u5b9a\u6027\u7684\u64cd\u4f5c\u3002</p> <p>FreeRTOS \u7684\u8bbe\u8ba1\u548c\u5b9e\u73b0\u6807\u51c6\u4e0d\u5141\u8bb8\u5728\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u6216\u5728\u7981\u7528\u4e2d\u65ad\u65f6\u6267\u884c\u975e\u786e\u5b9a\u6027\u64cd\u4f5c\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c<code>xEventGroupSetBitsFromISR()</code> \u4e0d\u76f4\u63a5\u5728\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u8bbe\u7f6e\u4e8b\u4ef6\u4f4d\uff0c\u800c\u662f\u5c06\u64cd\u4f5c\u5ef6\u8fdf\u5230 RTOS \u5b88\u62a4\u4efb\u52a1\u3002</p> <p></p> <pre><code>BaseType_t xEventGroupSetBitsFromISR( EventGroupHandle_t xEventGroup,\n                                      const EventBits_t uxBitsToSet,\n                                      BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre> <p>\u6e05\u5355 9.3 xEventGroupSetBitsFromISR() API \u51fd\u6570\u539f\u578b</p> <p>xEventGroupSetBitsFromISR() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>xEventGroup</code></li> </ul> <p>\u6b63\u5728\u8bbe\u7f6e\u4f4d\u7684\u4e8b\u4ef6\u7ec4\u7684\u53e5\u67c4\u3002\u4e8b\u4ef6\u7ec4\u53e5\u67c4\u662f\u901a\u8fc7\u7528\u4e8e\u521b\u5efa\u4e8b\u4ef6\u7ec4\u7684 <code>xEventGroupCreate()</code> \u8c03\u7528\u8fd4\u56de\u7684\u3002</p> <ul> <li><code>uxBitsToSet</code></li> </ul> <p>\u6307\u5b9a\u8981\u5728\u4e8b\u4ef6\u7ec4\u4e2d\u8bbe\u7f6e\u4e3a 1 \u7684\u4e8b\u4ef6\u4f4d\u6216\u4e8b\u4ef6\u4f4d\u7684\u63a9\u7801\u3002\u901a\u8fc7\u5c06\u4e8b\u4ef6\u7ec4\u7684\u73b0\u6709\u503c\u4e0e <code>uxBitsToSet</code> \u4e2d\u4f20\u9012\u7684\u503c\u6309\u4f4d\u6216\uff0c\u66f4\u65b0\u4e8b\u4ef6\u7ec4\u7684\u503c\u3002</p> <p>\u4f8b\u5982\uff0c\u5c06 <code>uxBitsToSet</code> \u8bbe\u7f6e\u4e3a 0x05\uff08\u4e8c\u8fdb\u5236 0101\uff09\u5c06\u5bfc\u81f4\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u4e8b\u4ef6\u4f4d 2 \u548c\u4e8b\u4ef6\u4f4d 0 \u88ab\u8bbe\u7f6e\uff08\u5982\u679c\u5c1a\u672a\u8bbe\u7f6e\uff09\uff0c\u800c\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u6240\u6709\u5176\u4ed6\u4e8b\u4ef6\u4f4d\u4fdd\u6301\u4e0d\u53d8\u3002</p> <ul> <li><code>pxHigherPriorityTaskWoken</code></li> </ul> <p><code>xEventGroupSetBitsFromISR()</code> \u4e0d\u76f4\u63a5\u5728\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u8bbe\u7f6e\u4e8b\u4ef6\u4f4d\uff0c\u800c\u662f\u901a\u8fc7\u5728\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4e0a\u53d1\u9001\u547d\u4ee4\u5c06\u64cd\u4f5c\u5ef6\u8fdf\u5230 RTOS \u5b88\u62a4\u4efb\u52a1\u3002\u5982\u679c\u5b88\u62a4\u4efb\u52a1\u5904\u4e8e\u963b\u585e\u72b6\u6001\u4ee5\u7b49\u5f85\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4e0a\u7684\u6570\u636e\uff0c\u5219\u5199\u5165\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u5c06\u5bfc\u81f4\u5b88\u62a4\u4efb\u52a1\u79bb\u5f00\u963b\u585e\u72b6\u6001\u3002\u5982\u679c\u5b88\u62a4\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1\uff08\u88ab\u4e2d\u65ad\u7684\u4efb\u52a1\uff09\uff0c\u5219\u5728\u5185\u90e8\uff0c<code>xEventGroupSetBitsFromISR()</code> \u5c06 <code>*pxHigherPriorityTaskWoken</code> \u8bbe\u7f6e\u4e3a <code>pdTRUE</code>\u3002</p> <p>\u5982\u679c <code>xEventGroupSetBitsFromISR()</code> \u5c06\u6b64\u503c\u8bbe\u7f6e\u4e3a <code>pdTRUE</code>\uff0c\u5219\u5728\u9000\u51fa\u4e2d\u65ad\u4e4b\u524d\u5e94\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002\u8fd9\u5c06\u786e\u4fdd\u4e2d\u65ad\u76f4\u63a5\u8fd4\u56de\u5230\u5b88\u62a4\u4efb\u52a1\uff0c\u56e0\u4e3a\u5b88\u62a4\u4efb\u52a1\u5c06\u662f\u6700\u9ad8\u4f18\u5148\u7ea7\u7684\u5c31\u7eea\u72b6\u6001\u4efb\u52a1\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u53ef\u80fd\u6709\u4e24\u4e2a\u8fd4\u56de\u503c\uff1a</p> <ul> <li> <p>\u4ec5\u5f53\u6570\u636e\u6210\u529f\u53d1\u9001\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u65f6\uff0c\u624d\u4f1a\u8fd4\u56de <code>pdPASS</code>\u3002</p> </li> <li> <p>\u5982\u679c\u7531\u4e8e\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u5df2\u6ee1\u800c\u65e0\u6cd5\u5c06\u201c\u8bbe\u7f6e\u4f4d\u201d\u547d\u4ee4\u5199\u5165\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\uff0c\u5219\u8fd4\u56de <code>pdFALSE</code>\u3002</p> </li> </ul>"},{"location":"ch09-%E4%BA%8B%E4%BB%B6%E7%BB%84/#934-xeventgroupwaitbits-api","title":"9.3.4 xEventGroupWaitBits() API \u51fd\u6570","text":"<p><code>xEventGroupWaitBits()</code> API \u51fd\u6570\u5141\u8bb8\u4efb\u52a1\u8bfb\u53d6\u4e8b\u4ef6\u7ec4\u7684\u503c\uff0c\u5e76\u53ef\u9009\u62e9\u5728\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u4e8b\u4ef6\u4f4d\u88ab\u8bbe\u7f6e\u4e4b\u524d\u5904\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u5982\u679c\u4e8b\u4ef6\u4f4d\u5c1a\u672a\u8bbe\u7f6e\u3002</p> <p></p> <pre><code>EventBits_t xEventGroupWaitBits( EventGroupHandle_t xEventGroup,\n                                 const EventBits_t uxBitsToWaitFor,\n                                 const BaseType_t xClearOnExit,\n                                 const BaseType_t xWaitForAllBits,\n                                 TickType_t xTicksToWait );\n</code></pre> <p>\u6e05\u5355 9.4 xEventGroupWaitBits() API \u51fd\u6570\u539f\u578b</p> <p>\u8c03\u5ea6\u7a0b\u5e8f\u7528\u4e8e\u786e\u5b9a\u4efb\u52a1\u4f55\u65f6\u8fdb\u5165\u963b\u585e\u72b6\u6001\u4ee5\u53ca\u4f55\u65f6\u79bb\u5f00\u963b\u585e\u72b6\u6001\u7684\u6761\u4ef6\u79f0\u4e3a\u201c\u89e3\u9664\u963b\u585e\u6761\u4ef6\u201d\u3002\u89e3\u9664\u963b\u585e\u6761\u4ef6\u7531 <code>uxBitsToWaitFor</code> \u548c <code>xWaitForAllBits</code> \u53c2\u6570\u503c\u7684\u7ec4\u5408\u6307\u5b9a\uff1a</p> <ul> <li> <p><code>uxBitsToWaitFor</code> \u6307\u5b9a\u4e8b\u4ef6\u7ec4\u4e2d\u8981\u6d4b\u8bd5\u7684\u4e8b\u4ef6\u4f4d</p> </li> <li> <p><code>xWaitForAllBits</code> \u6307\u5b9a\u662f\u4f7f\u7528\u6309\u4f4d\u6216\u6d4b\u8bd5\u8fd8\u662f\u6309\u4f4d\u4e0e\u6d4b\u8bd5</p> </li> </ul> <p>\u5982\u679c\u5728\u8c03\u7528 <code>xEventGroupWaitBits()</code> \u65f6\u6ee1\u8db3\u5176\u89e3\u9664\u963b\u585e\u6761\u4ef6\uff0c\u5219\u4efb\u52a1\u5c06\u4e0d\u4f1a\u8fdb\u5165\u963b\u585e\u72b6\u6001\u3002</p> <p>\u7b2c 6 \u8868\u63d0\u4f9b\u4e86\u5c06\u5bfc\u81f4\u4efb\u52a1\u8fdb\u5165\u963b\u585e\u72b6\u6001\u6216\u79bb\u5f00\u963b\u585e\u72b6\u6001\u7684\u6761\u4ef6\u793a\u4f8b\u3002\u4ec5\u663e\u793a\u4e8b\u4ef6\u7ec4\u548c uxBitsToWaitFor \u503c\u7684\u6700\u4f4e\u6709\u6548\u56db\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u2014\u2014\u8fd9\u4e24\u4e2a\u503c\u7684\u5176\u4ed6\u4f4d\u5047\u5b9a\u4e3a\u96f6\u3002</p> <p></p> \u73b0\u6709\u4e8b\u4ef6\u7ec4\u503c uxBitsToWaitFor \u503c xWaitForAllBits \u503c \u7ed3\u679c\u884c\u4e3a 0000 0101 pdFALSE \u8c03\u7528\u4efb\u52a1\u5c06\u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u56e0\u4e3a\u4e8b\u4ef6\u7ec4\u4e2d\u672a\u8bbe\u7f6e\u4f4d 0 \u6216\u4f4d 2\uff0c\u5e76\u4e14\u5728\u4e8b\u4ef6\u7ec4\u4e2d\u8bbe\u7f6e\u4f4d 0 \u6216\u4f4d 2 \u65f6\u5c06\u79bb\u5f00\u963b\u585e\u72b6\u6001\u3002 0100 0101 pdTRUE \u8c03\u7528\u4efb\u52a1\u5c06\u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u56e0\u4e3a\u4e8b\u4ef6\u7ec4\u4e2d\u4f4d 0 \u548c\u4f4d 2 \u5e76\u672a\u5168\u90e8\u8bbe\u7f6e\uff0c\u5e76\u4e14\u5728\u4e8b\u4ef6\u7ec4\u4e2d\u540c\u65f6\u8bbe\u7f6e\u4f4d 0 \u548c\u4f4d 2 \u65f6\u5c06\u79bb\u5f00\u963b\u585e\u72b6\u6001\u3002 0100 0110 pdFALSE \u8c03\u7528\u4efb\u52a1\u5c06\u4e0d\u4f1a\u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u56e0\u4e3a xWaitForAllBits \u4e3a pdFALSE\uff0c\u5e76\u4e14 uxBitsToWaitFor \u6307\u5b9a\u7684\u4e24\u4e2a\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u4e00\u4e2a\u4e8b\u4ef6\u4f4d\u5df2\u8bbe\u7f6e\u3002 0100 0110 pdTRUE \u8c03\u7528\u4efb\u52a1\u5c06\u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u56e0\u4e3a xWaitForAllBits \u4e3a pdTRUE\uff0c\u5e76\u4e14 uxBitsToWaitFor \u6307\u5b9a\u7684\u4e24\u4e2a\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u4ec5\u4e00\u4e2a\u4e8b\u4ef6\u4f4d\u5df2\u8bbe\u7f6e\u3002\u5f53\u4e8b\u4ef6\u7ec4\u4e2d\u540c\u65f6\u8bbe\u7f6e\u4f4d 1 \u548c\u4f4d 2 \u65f6\uff0c\u4efb\u52a1\u5c06\u79bb\u5f00\u963b\u585e\u72b6\u6001\u3002 <p>\u8868 6 uxBitsToWaitFor \u548c xWaitForAllBits \u53c2\u6570\u7684\u5f71\u54cd</p> <p>\u8c03\u7528\u4efb\u52a1\u4f7f\u7528 <code>uxBitsToWaitFor</code> \u53c2\u6570\u6307\u5b9a\u8981\u6d4b\u8bd5\u7684\u4f4d\uff0c\u8c03\u7528\u4efb\u52a1\u53ef\u80fd\u9700\u8981\u5728\u89e3\u9664\u963b\u585e\u6761\u4ef6\u6ee1\u8db3\u540e\u5c06\u8fd9\u4e9b\u4f4d\u6e05\u96f6\u3002\u53ef\u4ee5\u4f7f\u7528 <code>xEventGroupClearBits()</code> API \u51fd\u6570\u6e05\u9664\u4e8b\u4ef6\u4f4d\uff0c\u4f46\u5982\u679c\u4f7f\u7528\u8be5\u51fd\u6570\u624b\u52a8\u6e05\u9664\u4e8b\u4ef6\u4f4d\uff0c\u5219\u4f1a\u5bfc\u81f4\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u4e2d\u7684\u7ade\u4e89\u6761\u4ef6\uff0c\u5982\u679c\uff1a</p> <ul> <li>\u6709\u591a\u4e2a\u4efb\u52a1\u4f7f\u7528\u540c\u4e00\u4e8b\u4ef6\u7ec4\u3002</li> <li>\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u4f4d\u7531\u5176\u4ed6\u4efb\u52a1\u6216\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u8bbe\u7f6e\u3002</li> </ul> <p>\u63d0\u4f9b <code>xClearOnExit</code> \u53c2\u6570\u662f\u4e3a\u4e86\u907f\u514d\u8fd9\u4e9b\u6f5c\u5728\u7684\u7ade\u4e89\u6761\u4ef6\u3002\u5982\u679c\u5c06 <code>xClearOnExit</code> \u8bbe\u7f6e\u4e3a <code>pdTRUE</code>\uff0c\u5219\u5bf9\u4e8b\u4ef6\u4f4d\u7684\u6d4b\u8bd5\u548c\u6e05\u9664\u5bf9\u8c03\u7528\u4efb\u52a1\u800c\u8a00\u662f\u539f\u5b50\u64cd\u4f5c\uff08\u5176\u4ed6\u4efb\u52a1\u6216\u4e2d\u65ad\u65e0\u6cd5\u6253\u65ad\uff09\u3002</p> <p>xEventGroupWaitBits() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>xEventGroup</code></li> </ul> <p>\u5305\u542b\u6b63\u5728\u8bfb\u53d6\u7684\u4e8b\u4ef6\u4f4d\u7684\u4e8b\u4ef6\u7ec4\u7684\u53e5\u67c4\u3002\u4e8b\u4ef6\u7ec4\u53e5\u67c4\u662f\u901a\u8fc7\u7528\u4e8e\u521b\u5efa\u4e8b\u4ef6\u7ec4\u7684 <code>xEventGroupCreate()</code> \u8c03\u7528\u8fd4\u56de\u7684\u3002</p> <ul> <li><code>uxBitsToWaitFor</code></li> </ul> <p>\u6307\u5b9a\u4e8b\u4ef6\u7ec4\u4e2d\u8981\u6d4b\u8bd5\u7684\u4e8b\u4ef6\u4f4d\u6216\u4e8b\u4ef6\u4f4d\u7684\u63a9\u7801\u3002</p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u8c03\u7528\u4efb\u52a1\u5e0c\u671b\u7b49\u5f85\u4e8b\u4ef6\u7ec4\u4e2d\u4e8b\u4ef6\u4f4d 0 \u548c/\u6216\u4e8b\u4ef6\u4f4d 2 \u88ab\u8bbe\u7f6e\uff0c\u5219\u5c06 <code>uxBitsToWaitFor</code> \u8bbe\u7f6e\u4e3a 0x05\uff08\u4e8c\u8fdb\u5236 0101\uff09\u3002\u6709\u5173\u66f4\u591a\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1\u8868 6\u3002</p> <ul> <li><code>xClearOnExit</code></li> </ul> <p>\u5982\u679c\u8c03\u7528\u4efb\u52a1\u7684\u89e3\u9664\u963b\u585e\u6761\u4ef6\u5df2\u6ee1\u8db3\uff0c\u5e76\u4e14 <code>xClearOnExit</code> \u8bbe\u7f6e\u4e3a <code>pdTRUE</code>\uff0c\u5219\u5728\u8c03\u7528\u4efb\u52a1\u9000\u51fa <code>xEventGroupWaitBits()</code> API \u51fd\u6570\u4e4b\u524d\uff0c<code>uxBitsToWaitFor</code> \u6307\u5b9a\u7684\u4e8b\u4ef6\u4f4d\u5c06\u5728\u4e8b\u4ef6\u7ec4\u4e2d\u6e05\u96f6\u3002</p> <p>\u5982\u679c <code>xClearOnExit</code> \u8bbe\u7f6e\u4e3a <code>pdFALSE</code>\uff0c\u5219 <code>xEventGroupWaitBits()</code> API \u51fd\u6570\u4e0d\u4f1a\u4fee\u6539\u4e8b\u4ef6\u7ec4\u4e2d\u4e8b\u4ef6\u4f4d\u7684\u72b6\u6001\u3002</p> <ul> <li><code>xWaitForAllBits</code></li> </ul> <p><code>uxBitsToWaitFor</code> \u53c2\u6570\u6307\u5b9a\u4e8b\u4ef6\u7ec4\u4e2d\u8981\u6d4b\u8bd5\u7684\u4e8b\u4ef6\u4f4d\u3002<code>xWaitForAllBits</code> \u6307\u5b9a\u8c03\u7528\u4efb\u52a1\u5728\u4f55\u65f6\u5e94\u4ece\u963b\u585e\u72b6\u6001\u4e2d\u79fb\u9664\uff0c\u5373\u4f55\u65f6\u5e94\u89e3\u9664\u963b\u585e\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e <code>uxBitsToWaitFor</code> \u53c2\u6570\u6307\u5b9a\u7684\u4e8b\u4ef6\u4f4d\u7684\u8bbe\u7f6e\u60c5\u51b5\u3002</p> <p>\u5982\u679c <code>xWaitForAllBits</code> \u8bbe\u7f6e\u4e3a <code>pdFALSE</code>\uff0c\u5219\u8fdb\u5165\u963b\u585e\u72b6\u6001\u4ee5\u7b49\u5f85\u5176\u89e3\u9664\u963b\u585e\u6761\u4ef6\u7684\u4efb\u52a1\u5c06\u5728 <code>uxBitsToWaitFor</code> \u6307\u5b9a\u7684\u4efb\u610f\u4f4d\u88ab\u8bbe\u7f6e\u65f6\uff08\u6216\u5728\u8c03\u7528 <code>xEventGroupWaitBits()</code> \u65f6\u8d85\u65f6\uff09\u79bb\u5f00\u963b\u585e\u72b6\u6001\u3002</p> <p>\u5982\u679c <code>xWaitForAllBits</code> \u8bbe\u7f6e\u4e3a <code>pdTRUE</code>\uff0c\u5219\u8fdb\u5165\u963b\u585e\u72b6\u6001\u4ee5\u7b49\u5f85\u5176\u89e3\u9664\u963b\u585e\u6761\u4ef6\u7684\u4efb\u52a1\u4ec5\u5728 <code>uxBitsToWaitFor</code> \u6307\u5b9a\u7684\u6240\u6709\u4e8b\u4ef6\u4f4d\u88ab\u8bbe\u7f6e\u65f6\uff08\u6216\u5728\u8c03\u7528 <code>xEventGroupWaitBits()</code> \u65f6\u8d85\u65f6\uff09\u79bb\u5f00\u963b\u585e\u72b6\u6001\u3002</p> <p>\u6709\u5173\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1\u8868 6\u3002</p> <ul> <li><code>xTicksToWait</code></li> </ul> <p>\u4efb\u52a1\u5e94\u5728\u963b\u585e\u72b6\u6001\u4e0b\u7b49\u5f85\u4ee5\u6ee1\u8db3\u5176\u89e3\u9664\u963b\u585e\u6761\u4ef6\u7684\u6700\u957f\u65f6\u95f4\u3002</p> <p>\u5982\u679c <code>xTicksToWait</code> \u4e3a\u96f6\uff0c\u6216\u8005\u5728\u8c03\u7528 <code>xEventGroupWaitBits()</code> \u65f6\u6ee1\u8db3\u4e86\u89e3\u9664\u963b\u585e\u6761\u4ef6\uff0c\u5219 <code>xEventGroupWaitBits()</code> \u5c06\u7acb\u5373\u8fd4\u56de\u3002</p> <p>\u5757\u65f6\u95f4\u4ee5\u6ef4\u7b54\u5468\u671f\u4e3a\u5355\u4f4d\u6307\u5b9a\uff0c\u56e0\u6b64\u5b83\u6240\u8868\u793a\u7684\u7edd\u5bf9\u65f6\u95f4\u53d6\u51b3\u4e8e\u6ef4\u7b54\u9891\u7387\u3002\u5b8f <code>pdMS_TO_TICKS()</code> \u53ef\u7528\u4e8e\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5\u6ef4\u7b54\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u3002</p> <p>\u5c06 <code>xTicksToWait</code> \u8bbe\u7f6e\u4e3a <code>portMAX_DELAY</code> \u5c06\u5bfc\u81f4\u4efb\u52a1\u65e0\u9650\u671f\u7b49\u5f85\uff08\u4e0d\u8d85\u65f6\uff09\uff0c\u524d\u63d0\u662f FreeRTOSConfig.h \u4e2d\u7684 <code>INCLUDE_vTaskSuspend</code> \u8bbe\u7f6e\u4e3a 1\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u5982\u679c <code>xEventGroupWaitBits()</code> \u8fd4\u56de\u662f\u56e0\u4e3a\u8c03\u7528\u4efb\u52a1\u7684\u89e3\u9664\u963b\u585e\u6761\u4ef6\u5df2\u6ee1\u8db3\uff0c\u5219\u8fd4\u56de\u503c\u662f\u4e8b\u4ef6\u7ec4\u7684\u503c\uff0c\u5728\u8c03\u7528\u4efb\u52a1\u7684\u89e3\u9664\u963b\u585e\u6761\u4ef6\u6ee1\u8db3\u65f6\uff08\u5728\u81ea\u52a8\u6e05\u9664\u4efb\u4f55\u4f4d\u4e4b\u524d\uff0c\u5982\u679c <code>xClearOnExit</code> \u4e3a <code>pdTRUE</code>\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8fd4\u56de\u7684\u503c\u4e5f\u5c06\u6ee1\u8db3\u89e3\u9664\u963b\u585e\u6761\u4ef6\u3002</p> <p>\u5982\u679c <code>xEventGroupWaitBits()</code> \u8fd4\u56de\u662f\u56e0\u4e3a <code>xTicksToWait</code> \u53c2\u6570\u6307\u5b9a\u7684\u5757\u65f6\u95f4\u5230\u671f\uff0c\u5219\u8fd4\u56de\u503c\u662f\u5757\u65f6\u95f4\u5230\u671f\u65f6\u4e8b\u4ef6\u7ec4\u7684\u503c\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8fd4\u56de\u7684\u503c\u5c06\u4e0d\u6ee1\u8db3\u89e3\u9664\u963b\u585e\u6761\u4ef6\u3002</p>"},{"location":"ch09-%E4%BA%8B%E4%BB%B6%E7%BB%84/#935-xeventgroupgetstaticbuffer-api","title":"9.3.5 xEventGroupGetStaticBuffer() API \u51fd\u6570","text":"<p><code>xEventGroupGetStaticBuffer()</code> API \u51fd\u6570\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b9\u6cd5\u6765\u68c0\u7d22\u6307\u5411\u9759\u6001\u521b\u5efa\u7684\u4e8b\u4ef6\u7ec4\u7684\u7f13\u51b2\u533a\u7684\u6307\u9488\u3002\u5b83\u662f\u521b\u5efa\u4e8b\u4ef6\u7ec4\u65f6\u63d0\u4f9b\u7684\u76f8\u540c\u7f13\u51b2\u533a\u3002</p> <p>*\u6ce8\u610f\uff1a\u5207\u52ff\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u8c03\u7528 <code>xEventGroupGetStaticBuffer()</code>\u3002</p> <p></p> <pre><code>BaseType_t xEventGroupGetStaticBuffer( EventGroupHandle_t xEventGroup,\n\nStaticEventGroup_t ** ppxEventGroupBuffer );\n</code></pre> <p>\u6e05\u5355 9.5 xEventGroupGetStaticBuffer() API \u51fd\u6570\u539f\u578b</p> <p>xEventGroupGetStaticBuffer() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>xEventGroup</code></li> </ul> <p>\u8981\u68c0\u7d22\u7f13\u51b2\u533a\u7684\u4e8b\u4ef6\u7ec4\u3002\u6b64\u4e8b\u4ef6\u7ec4\u5fc5\u987b\u901a\u8fc7 <code>xEventGroupCreateStatic()</code> \u521b\u5efa\u3002</p> <ul> <li><code>ppxEventGroupBuffer</code></li> </ul> <p>\u7528\u4e8e\u8fd4\u56de\u6307\u5411\u4e8b\u4ef6\u7ec4\u6570\u636e\u7ed3\u6784\u7f13\u51b2\u533a\u7684\u6307\u9488\u3002\u5b83\u662f\u521b\u5efa\u65f6\u63d0\u4f9b\u7684\u76f8\u540c\u7f13\u51b2\u533a\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u53ef\u80fd\u6709\u4e24\u4e2a\u8fd4\u56de\u503c\uff1a</p> <ul> <li> <p>\u5982\u679c\u6210\u529f\u68c0\u7d22\u5230\u7f13\u51b2\u533a\uff0c\u5219\u8fd4\u56de <code>pdTRUE</code>\u3002</p> </li> <li> <p>\u5982\u679c\u672a\u80fd\u6210\u529f\u68c0\u7d22\u5230\u7f13\u51b2\u533a\uff0c\u5219\u8fd4\u56de <code>pdFALSE</code>\u3002</p> </li> </ul>"},{"location":"ch09-%E4%BA%8B%E4%BB%B6%E7%BB%84/#_1","title":"9 \u4e8b\u4ef6\u7ec4","text":"<p>\u793a\u4f8b 9.1 \u5b9e\u9a8c\u4e8b\u4ef6\u7ec4</p> <p>\u6b64\u793a\u4f8b\u6f14\u793a\u5982\u4f55\uff1a</p> <ul> <li>\u521b\u5efa\u4e8b\u4ef6\u7ec4\u3002</li> <li>\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u8bbe\u7f6e\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u4f4d\u3002</li> <li>\u4ece\u4efb\u52a1\u8bbe\u7f6e\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u4f4d\u3002</li> <li>\u5728\u4e8b\u4ef6\u7ec4\u4e0a\u963b\u585e\u3002</li> </ul> <p>\u901a\u8fc7\u9996\u5148\u6267\u884c\u793a\u4f8b\u5e76\u5c06 <code>xWaitForAllBits</code> \u8bbe\u7f6e\u4e3a <code>pdFALSE</code>\uff0c\u7136\u540e\u6267\u884c\u793a\u4f8b\u5e76\u5c06 <code>xWaitForAllBits</code> \u8bbe\u7f6e\u4e3a <code>pdTRUE</code>\uff0c\u6765\u6f14\u793a <code>xEventGroupWaitBits()</code> \u7684 <code>xWaitForAllBits</code> \u53c2\u6570\u7684\u6548\u679c\u3002</p> <p>\u4e8b\u4ef6\u4f4d 0 \u548c\u4e8b\u4ef6\u4f4d 1 \u4ece\u4efb\u52a1\u4e2d\u8bbe\u7f6e\u3002\u4e8b\u4ef6\u4f4d 2 \u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u8bbe\u7f6e\u3002\u8fd9\u4e09\u4e2a\u6bd4\u7279\u901a\u8fc7\u6e05\u5355 9.6 \u4e2d\u6240\u793a\u7684 #define \u8bed\u53e5\u7ed9\u51fa\u4e86\u63cf\u8ff0\u6027\u540d\u79f0\u3002</p> <p></p> <pre><code>/* Definitions for the event bits in the event group. */\n#define mainFIRST_TASK_BIT ( 1UL &lt;&lt; 0UL )  /* Event bit 0, set by a task */\n#define mainSECOND_TASK_BIT ( 1UL &lt;&lt; 1UL ) /* Event bit 1, set by a task */\n#define mainISR_BIT ( 1UL &lt;&lt; 2UL )         /* Event bit 2, set by an ISR */\n</code></pre> <p>\u6e05\u5355 9.6 \u793a\u4f8b 9.1 \u4e2d\u4f7f\u7528\u7684\u4e8b\u4ef6\u4f4d\u5b9a\u4e49</p> <p>\u6e05\u5355 9.7 \u663e\u793a\u4e86\u8bbe\u7f6e\u4e8b\u4ef6\u4f4d 0 \u548c\u4e8b\u4ef6\u4f4d 1 \u7684\u4efb\u52a1\u7684\u5b9e\u73b0\u3002\u5b83\u5728\u4e00\u4e2a\u5faa\u73af\u4e2d\u91cd\u590d\u8bbe\u7f6e\u4e00\u4e2a\u4f4d\uff0c\u7136\u540e\u662f\u53e6\u4e00\u4e2a\u4f4d\uff0c\u6bcf\u6b21\u8c03\u7528 <code>xEventGroupSetBits()</code> \u4e4b\u95f4\u5ef6\u8fdf 200 \u6beb\u79d2\u3002\u5728\u8bbe\u7f6e\u6bcf\u4e2a\u4f4d\u4e4b\u524d\u6253\u5370\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4ee5\u4fbf\u5728\u63a7\u5236\u53f0\u4e2d\u67e5\u770b\u6267\u884c\u987a\u5e8f\u3002</p> <p></p> <pre><code>static void vEventBitSettingTask( void *pvParameters )\n{\n    const TickType_t xDelay200ms = pdMS_TO_TICKS( 200UL );\n\n    for( ;; )\n    {\n        /* Delay for a short while before starting the next loop. */\n        vTaskDelay( xDelay200ms );\n\n        /* Print out a message to say event bit 0 is about to be set by the\n           task, then set event bit 0. */\n        vPrintString( \"Bit setting task -\\t about to set bit 0.\\r\\n\" );\n        xEventGroupSetBits( xEventGroup, mainFIRST_TASK_BIT );\n\n        /* Delay for a short while before setting the other bit. */\n        vTaskDelay( xDelay200ms );\n\n        /* Print out a message to say event bit 1 is about to be set by the\n           task, then set event bit 1. */\n        vPrintString( \"Bit setting task -\\t about to set bit 1.\\r\\n\" );\n        xEventGroupSetBits( xEventGroup, mainSECOND_TASK_BIT );\n    }\n}\n</code></pre> <p>\u6e05\u5355 9.7 \u793a\u4f8b 9.1 \u4e2d\u8bbe\u7f6e\u4e8b\u4ef6\u7ec4\u4e2d\u4e24\u4e2a\u4e8b\u4ef6\u4f4d\u7684\u4efb\u52a1\u7684\u5b9e\u73b0</p> <p>\u6e05\u5355 9.8 \u663e\u793a\u4e86\u8bbe\u7f6e\u4e8b\u4ef6\u4f4d 2 \u7684\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u7684\u5b9e\u73b0\u3002\u540c\u6837\uff0c\u5728\u8bbe\u7f6e\u4e8b\u4ef6\u4f4d\u4e4b\u524d\u6253\u5370\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4ee5\u4fbf\u5728\u63a7\u5236\u53f0\u4e2d\u67e5\u770b\u6267\u884c\u987a\u5e8f\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7531\u4e8e\u4e0d\u5e94\u76f4\u63a5\u5728\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u6267\u884c\u63a7\u5236\u53f0\u8f93\u51fa\uff0c\u56e0\u6b64\u4f7f\u7528 <code>xTimerPendFunctionCallFromISR()</code> \u5c06\u8f93\u51fa\u63a8\u8fdf\u5230 RTOS \u5b88\u62a4\u4efb\u52a1\u7684\u4e0a\u4e0b\u6587\u4e2d\u3002</p> <p>\u4e0e\u4e4b\u524d\u7684\u793a\u4f8b\u4e00\u6837\uff0c\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u662f\u7531\u5f3a\u5236\u4ea7\u751f\u8f6f\u4ef6\u4e2d\u65ad\u7684\u7b80\u5355\u5468\u671f\u6027\u4efb\u52a1\u89e6\u53d1\u7684\u3002\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6bcf 500 \u6beb\u79d2\u751f\u6210\u4e00\u6b21\u4e2d\u65ad\u3002</p> <p></p> <pre><code>static uint32_t ulEventBitSettingISR( void )\n{\n    /* The string is not printed within the interrupt service routine, but is\n       instead sent to the RTOS daemon task for printing. It is therefore\n       declared static to ensure the compiler does not allocate the string on\n       the stack of the ISR, as the ISR's stack frame will not exist when the\n       string is printed from the daemon task. */\n    static const char *pcString = \"Bit setting ISR -\\t about to set bit 2.\\r\\n\";\n    BaseType_t xHigherPriorityTaskWoken = pdFALSE;\n\n    /* Print out a message to say bit 2 is about to be set. Messages cannot\n       be printed from an ISR, so defer the actual output to the RTOS daemon\n       task by pending a function call to run in the context of the RTOS\n       daemon task. */\n    xTimerPendFunctionCallFromISR( vPrintStringFromDaemonTask,\n                                   ( void * ) pcString,\n                                   0,\n                                   &amp;xHigherPriorityTaskWoken );\n\n    /* Set bit 2 in the event group. */\n    xEventGroupSetBitsFromISR( xEventGroup,\n                               mainISR_BIT,\n                               &amp;xHigherPriorityTaskWoken );\n\n    /* xTimerPendFunctionCallFromISR() and xEventGroupSetBitsFromISR() both\n       write to the timer command queue, and both used the same\n       xHigherPriorityTaskWoken variable. If writing to the timer command\n       queue resulted in the RTOS daemon task leaving the Blocked state, and\n       if the priority of the RTOS daemon task is higher than the priority of\n       the currently executing task (the task this interrupt interrupted) then\n       xHigherPriorityTaskWoken will have been set to pdTRUE.\n\n       xHigherPriorityTaskWoken is used as the parameter to\n       portYIELD_FROM_ISR(). If xHigherPriorityTaskWoken equals pdTRUE, then\n       calling portYIELD_FROM_ISR() will request a context switch. If\n       xHigherPriorityTaskWoken is still pdFALSE, then calling\n       portYIELD_FROM_ISR() will have no effect.\n\n       The implementation of portYIELD_FROM_ISR() used by the Windows port\n       includes a return statement, which is why this function does not\n       explicitly return a value. */\n\n    portYIELD_FROM_ISR( xHigherPriorityTaskWoken );\n}\n</code></pre> <p>\u6e05\u5355 9.8 \u793a\u4f8b 9.1 \u4e2d\u8bbe\u7f6e\u4e8b\u4ef6\u7ec4\u4e2d\u4e8b\u4ef6\u4f4d 2 \u7684 ISR \u7684\u5b9e\u73b0</p> <p>\u6e05\u5355 9.9 \u663e\u793a\u4e86\u8c03\u7528 <code>xEventGroupWaitBits()</code> \u5728\u4e8b\u4ef6\u7ec4\u4e0a\u963b\u585e\u7684\u4efb\u52a1\u7684\u5b9e\u73b0\u3002\u4efb\u52a1\u6253\u5370\u51fa\u4e8b\u4ef6\u7ec4\u4e2d\u8bbe\u7f6e\u7684\u6bcf\u4e2a\u4f4d\u7684\u5b57\u7b26\u4e32\u3002</p> <p><code>xEventGroupWaitBits()</code> \u7684 <code>xClearOnExit</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>pdTRUE</code>\uff0c\u56e0\u6b64\u5bfc\u81f4\u8c03\u7528 <code>xEventGroupWaitBits()</code> \u8fd4\u56de\u7684\u4e8b\u4ef6\u4f4d\u5c06\u5728 <code>xEventGroupWaitBits()</code> \u8fd4\u56de\u4e4b\u524d\u81ea\u52a8\u6e05\u9664\u3002</p> <p></p> <pre><code>static void vEventBitReadingTask( void *pvParameters )\n{\n    EventBits_t xEventGroupValue;\n    const EventBits_t xBitsToWaitFor = ( mainFIRST_TASK_BIT  |\n                                         mainSECOND_TASK_BIT |\n                                         mainISR_BIT );\n\n    for( ;; )\n    {\n        /* Block to wait for event bits to become set within the event\n           group. */\n        xEventGroupValue = xEventGroupWaitBits( /* The event group to read */\n                                                xEventGroup,\n\n                                                /* Bits to test */\n                                                xBitsToWaitFor,\n\n                                                /* Clear bits on exit if the\n                                                   unblock condition is met */\n                                                pdTRUE,\n\n                                                /* Don't wait for all bits. This\n                                                   parameter is set to pdTRUE for the\n                                                   second execution. */\n                                                pdFALSE,\n\n                                                /* Don't time out. */\n                                                portMAX_DELAY );\n\n        /* Print a message for each bit that was set. */\n        if( ( xEventGroupValue &amp; mainFIRST_TASK_BIT ) != 0 )\n        {\n            vPrintString( \"Bit reading task -\\t Event bit 0 was set\\r\\n\" );\n        }\n\n        if( ( xEventGroupValue &amp; mainSECOND_TASK_BIT ) != 0 )\n        {\n            vPrintString( \"Bit reading task -\\t Event bit 1 was set\\r\\n\" );\n        }\n\n        if( ( xEventGroupValue &amp; mainISR_BIT ) != 0 )\n        {\n            vPrintString( \"Bit reading task -\\t Event bit 2 was set\\r\\n\" );\n        }\n    }\n}\n</code></pre> <p>\u6e05\u5355 9.9 \u793a\u4f8b 9.1 \u4e2d\u963b\u585e\u4ee5\u7b49\u5f85\u4e8b\u4ef6\u4f4d\u88ab\u8bbe\u7f6e\u7684\u4efb\u52a1\u7684\u5b9e\u73b0</p> <p><code>main()</code> \u51fd\u6570\u521b\u5efa\u4e8b\u4ef6\u7ec4\u548c\u4efb\u52a1\uff0c\u7136\u540e\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u3002\u8bf7\u53c2\u89c1\u6e05\u5355 9.10 \u4e86\u89e3\u5176\u5b9e\u73b0\u3002\u8bfb\u53d6\u4e8b\u4ef6\u7ec4\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5199\u5165\u4e8b\u4ef6\u7ec4\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff0c\u786e\u4fdd\u6bcf\u6b21\u8bfb\u53d6\u4efb\u52a1\u7684\u89e3\u9664\u963b\u585e\u6761\u4ef6\u6ee1\u8db3\u65f6\uff0c\u8bfb\u53d6\u4efb\u52a1\u90fd\u4f1a\u62a2\u5360\u5199\u5165\u4efb\u52a1\u3002</p> <p></p> <pre><code>int main( void )\n{\n    /* Before an event group can be used it must first be created. */\n    xEventGroup = xEventGroupCreate();\n\n    /* Create the task that sets event bits in the event group. */\n    xTaskCreate( vEventBitSettingTask, \"Bit Setter\", 1000, NULL, 1, NULL );\n\n    /* Create the task that waits for event bits to get set in the event\n       group. */\n    xTaskCreate( vEventBitReadingTask, \"Bit Reader\", 1000, NULL, 2, NULL );\n\n    /* Create the task that is used to periodically generate a software\n       interrupt. */\n    xTaskCreate( vInterruptGenerator, \"Int Gen\", 1000, NULL, 3, NULL );\n\n    /* Install the handler for the software interrupt. The syntax necessary\n       to do this is dependent on the FreeRTOS port being used. The syntax\n       shown here can only be used with the FreeRTOS Windows port, where such\n       interrupts are only simulated. */\n    vPortSetInterruptHandler( mainINTERRUPT_NUMBER, ulEventBitSettingISR );\n\n    /* Start the scheduler so the created tasks start executing. */\n    vTaskStartScheduler();\n\n    /* The following line should never be reached. */\n    for( ;; );\n    return 0;\n}\n</code></pre> <p>\u6e05\u5355 9.10 \u793a\u4f8b 9.1 \u4e2d\u4e8b\u4ef6\u7ec4\u548c\u4efb\u52a1\u7684\u521b\u5efa</p> <p>\u5f53\u793a\u4f8b 9.1 \u5728 <code>xEventGroupWaitBits()</code> \u7684 <code>xWaitForAllBits</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>pdFALSE</code> \u65f6\u6267\u884c\u65f6\uff0c\u4ea7\u751f\u7684\u8f93\u51fa\u5982\u56fe 9.3 \u6240\u793a\u3002\u5728\u56fe 9.3 \u4e2d\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u7531\u4e8e\u8c03\u7528 <code>xEventGroupWaitBits()</code> \u65f6\u5c06 <code>xWaitForAllBits</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>pdFALSE</code>\uff0c\u56e0\u6b64\u6bcf\u5f53\u8bbe\u7f6e\u4e8b\u4ef6\u4f4d\u65f6\uff0c\u8bfb\u53d6\u4e8b\u4ef6\u7ec4\u7684\u4efb\u52a1\u90fd\u4f1a\u79bb\u5f00\u963b\u585e\u72b6\u6001\u5e76\u7acb\u5373\u6267\u884c\u3002</p> <p></p> <p> \u56fe 9.3 \u5f53\u793a\u4f8b 9.1 \u5728 xWaitForAllBits \u8bbe\u7f6e\u4e3a pdFALSE \u65f6\u6267\u884c\u6240\u4ea7\u751f\u7684\u8f93\u51fa</p> <p>\u5f53\u793a\u4f8b 9.1 \u5728 <code>xEventGroupWaitBits()</code> \u7684 <code>xWaitForAllBits</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>pdTRUE</code> \u65f6\u6267\u884c\u65f6\uff0c\u4ea7\u751f\u7684\u8f93\u51fa\u5982\u56fe 9.4 \u6240\u793a\u3002\u5728\u56fe 9.4 \u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u7531\u4e8e\u5c06 <code>xWaitForAllBits</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>pdTRUE</code>\uff0c\u56e0\u6b64\u8bfb\u53d6\u4e8b\u4ef6\u7ec4\u7684\u4efb\u52a1\u4ec5\u5728\u6240\u6709\u4e09\u4e2a\u4e8b\u4ef6\u4f4d\u88ab\u8bbe\u7f6e\u540e\u624d\u4f1a\u79bb\u5f00\u963b\u585e\u72b6\u6001\u3002</p> <p></p> <p> \u56fe 9.4 \u5f53\u793a\u4f8b 9.1 \u5728 xWaitForAllBits \u8bbe\u7f6e\u4e3a pdTRUE \u65f6\u6267\u884c\u6240\u4ea7\u751f\u7684\u8f93\u51fa</p>"},{"location":"ch09-%E4%BA%8B%E4%BB%B6%E7%BB%84/#94","title":"9.4 \u4f7f\u7528\u4e8b\u4ef6\u7ec4\u8fdb\u884c\u4efb\u52a1\u540c\u6b65","text":"<p>\u6709\u65f6\uff0c\u5e94\u7528\u7a0b\u5e8f\u7684\u8bbe\u8ba1\u8981\u6c42\u4e24\u4e2a\u6216\u66f4\u591a\u4efb\u52a1\u5f7c\u6b64\u540c\u6b65\u3002\u4f8b\u5982\uff0c\u8003\u8651\u4ee5\u4e0b\u8bbe\u8ba1\uff1a\u4efb\u52a1 A \u63a5\u6536\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u7136\u540e\u5c06\u8be5\u4e8b\u4ef6\u6240\u9700\u7684\u90e8\u5206\u5904\u7406\u59d4\u6d3e\u7ed9\u5176\u4ed6\u4e09\u4e2a\u4efb\u52a1\uff1a\u4efb\u52a1 B\u3001\u4efb\u52a1 C \u548c\u4efb\u52a1 D\u3002\u5982\u679c\u4efb\u52a1 A \u5728\u5904\u7406\u5b8c\u4e0a\u4e00\u4e2a\u4e8b\u4ef6\u4e4b\u524d\u65e0\u6cd5\u63a5\u6536\u53e6\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u5219\u6240\u6709\u56db\u4e2a\u4efb\u52a1\u90fd\u9700\u8981\u76f8\u4e92\u540c\u6b65\u3002\u6bcf\u4e2a\u4efb\u52a1\u7684\u540c\u6b65\u70b9\u662f\u5728\u8be5\u4efb\u52a1\u5b8c\u6210\u5904\u7406\u540e\uff0c\u65e0\u6cd5\u7ee7\u7eed\u6267\u884c\uff0c\u76f4\u5230\u5176\u4ed6\u4efb\u52a1\u5b8c\u6210\u76f8\u540c\u64cd\u4f5c\u3002\u4efb\u52a1 A \u53ea\u80fd\u5728\u6240\u6709\u4efb\u52a1\u5230\u8fbe\u540c\u6b65\u70b9\u540e\u624d\u80fd\u63a5\u6536\u53e6\u4e00\u4e2a\u4e8b\u4ef6\u3002</p> <p>\u8fd9\u79cd\u4efb\u52a1\u540c\u6b65\u9700\u6c42\u7684\u4e00\u4e2a\u8f83\u4e0d\u62bd\u8c61\u7684\u793a\u4f8b\u53ef\u4ee5\u5728 FreeRTOS+TCP \u6f14\u793a\u9879\u76ee\u4e4b\u4e00\u4e2d\u627e\u5230\u3002\u8be5\u6f14\u793a\u5728\u4e24\u4e2a\u4efb\u52a1\u4e4b\u95f4\u5171\u4eab\u4e00\u4e2a TCP \u5957\u63a5\u5b57\uff1b\u4e00\u4e2a\u4efb\u52a1\u5c06\u6570\u636e\u53d1\u9001\u5230\u5957\u63a5\u5b57\uff0c\u53e6\u4e00\u4e2a\u4efb\u52a1\u4ece\u540c\u4e00\u5957\u63a5\u5b57\u63a5\u6536\u6570\u636e[^25]\u3002\u5728\u786e\u4fdd\u53e6\u4e00\u4e2a\u4efb\u52a1\u4e0d\u518d\u5c1d\u8bd5\u8bbf\u95ee\u5957\u63a5\u5b57\u4e4b\u524d\uff0c\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u4efb\u52a1\u5e0c\u671b\u5173\u95ed\u5957\u63a5\u5b57\uff0c\u5219\u5fc5\u987b\u901a\u77e5\u53e6\u4e00\u4e2a\u4efb\u52a1\u5176\u610f\u56fe\uff0c\u7136\u540e\u7b49\u5f85\u53e6\u4e00\u4e2a\u4efb\u52a1\u505c\u6b62\u4f7f\u7528\u5957\u63a5\u5b57\u3002\u5728\u6e05\u5355 9.10 \u4e2d\u6f14\u793a\u4e86\u53d1\u9001\u6570\u636e\u5230\u5957\u63a5\u5b57\u7684\u4efb\u52a1\u5e0c\u671b\u5173\u95ed\u5957\u63a5\u5b57\u65f6\u7684\u4f2a\u4ee3\u7801\u793a\u4f8b\u3002</p> <p>[^25]: \u5728\u64b0\u5199\u672c\u6587\u65f6\uff0c\u8fd9\u662f\u5728\u4efb\u52a1\u4e4b\u95f4\u5171\u4eab\u5355\u4e2a FreeRTOS+TCP \u5957\u63a5\u5b57\u7684\u552f\u4e00\u65b9\u6cd5\u3002</p> <p>\u6e05\u5355 9.10 \u4e2d\u6f14\u793a\u7684\u573a\u666f\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u53ea\u6709\u4e24\u4e2a\u4efb\u52a1\u9700\u8981\u76f8\u4e92\u540c\u6b65\uff0c\u4f46\u5f88\u5bb9\u6613\u770b\u51fa\uff0c\u5982\u679c\u5176\u4ed6\u4efb\u52a1\u6267\u884c\u7684\u5904\u7406\u4f9d\u8d56\u4e8e\u5957\u63a5\u5b57\u5904\u4e8e\u6253\u5f00\u72b6\u6001\uff0c\u5219\u573a\u666f\u4f1a\u53d8\u5f97\u66f4\u52a0\u590d\u6742\uff0c\u5e76\u9700\u8981\u66f4\u591a\u4efb\u52a1\u52a0\u5165\u540c\u6b65\u3002</p> <p></p> <pre><code>void SocketTxTask( void *pvParameters )\n{\n    xSocket_t xSocket;\n    uint32_t ulTxCount = 0UL;\n\n    for( ;; )\n    {\n        /* Create a new socket. This task will send to this socket, and another\n           task will receive from this socket. */\n        xSocket = FreeRTOS_socket( ... );\n\n        /* Connect the socket. */\n        FreeRTOS_connect( xSocket, ... );\n\n        /* Use a queue to send the socket to the task that receives data. */\n        xQueueSend( xSocketPassingQueue, &amp;xSocket, portMAX_DELAY );\n\n        /* Send 1000 messages to the socket before closing the socket. */\n        for( ulTxCount = 0; ulTxCount &lt; 1000; ulTxCount++ )\n        {\n            if( FreeRTOS_send( xSocket, ... ) &lt; 0 )\n            {\n                /* Unexpected error - exit the loop, after which the socket\n                   will be closed. */\n                break;\n            }\n        }\n\n        /* Let the Rx task know the Tx task wants to close the socket. */\n        TxTaskWantsToCloseSocket();\n\n        /* This is the Tx task's synchronization point. The Tx task waits here\n           for the Rx task to reach its synchronization point. The Rx task will\n           only reach its synchronization point when it is no longer using the\n           socket, and the socket can be closed safely. */\n        xEventGroupSync( ... );\n\n        /* Neither task is using the socket. Shut down the connection, then\n           close the socket. */\n        FreeRTOS_shutdown( xSocket, ... );\n        WaitForSocketToDisconnect();\n        FreeRTOS_closesocket( xSocket );\n    }\n}\n/*-----------------------------------------------------------*/\n\nvoid SocketRxTask( void *pvParameters )\n{\n    xSocket_t xSocket;\n\n    for( ;; )\n    {\n        /* Wait to receive a socket that was created and connected by the Tx\n           task. */\n        xQueueReceive( xSocketPassingQueue, &amp;xSocket, portMAX_DELAY );\n\n        /* Keep receiving from the socket until the Tx task wants to close the\n           socket. */\n        while( TxTaskWantsToCloseSocket() == pdFALSE )\n        {\n           /* Receive then process data. */\n           FreeRTOS_recv( xSocket, ... );\n           ProcessReceivedData();\n        }\n\n        /* This is the Rx task's synchronization point - it only reaches here\n           when it is no longer using the socket, and it is therefore safe for\n           the Tx task to close the socket. */\n        xEventGroupSync( ... );\n    }\n}\n</code></pre> <p>\u6e05\u5355 9.11 \u4e24\u4e2a\u4efb\u52a1\u76f8\u4e92\u540c\u6b65\u4ee5\u786e\u4fdd\u5728\u5173\u95ed\u5171\u4eab TCP \u5957\u63a5\u5b57\u4e4b\u524d\u5957\u63a5\u5b57\u4e0d\u518d\u88ab\u4efb\u4f55\u4efb\u52a1\u4f7f\u7528\u7684\u4f2a\u4ee3\u7801</p> <p>\u4e8b\u4ef6\u7ec4\u53ef\u7528\u4e8e\u521b\u5efa\u540c\u6b65\u70b9\uff1a</p> <ul> <li> <p>\u6bcf\u4e2a\u5fc5\u987b\u53c2\u4e0e\u540c\u6b65\u7684\u4efb\u52a1\u5728\u4e8b\u4ef6\u7ec4\u4e2d\u5206\u914d\u4e00\u4e2a\u552f\u4e00\u7684\u4e8b\u4ef6\u4f4d\u3002</p> </li> <li> <p>\u6bcf\u4e2a\u4efb\u52a1\u5728\u5230\u8fbe\u540c\u6b65\u70b9\u65f6\u8bbe\u7f6e\u81ea\u5df1\u7684\u4e8b\u4ef6\u4f4d\u3002</p> </li> <li> <p>\u8bbe\u7f6e\u81ea\u5df1\u4e8b\u4ef6\u4f4d\u540e\uff0c\u6bcf\u4e2a\u4efb\u52a1\u5728\u4e8b\u4ef6\u7ec4\u4e0a\u963b\u585e\uff0c\u4ee5\u7b49\u5f85\u8868\u793a\u6240\u6709\u5176\u4ed6\u540c\u6b65\u4efb\u52a1\u7684\u4e8b\u4ef6\u4f4d\u4e5f\u88ab\u8bbe\u7f6e\u3002</p> </li> </ul> <p>\u4f46\u662f\uff0c\u65e0\u6cd5\u5728\u6b64\u573a\u666f\u4e2d\u4f7f\u7528 <code>xEventGroupSetBits()</code> \u548c <code>xEventGroupWaitBits()</code> API \u51fd\u6570\u3002\u5982\u679c\u4f7f\u7528\u5b83\u4eec\uff0c\u5219\u8bbe\u7f6e\u4f4d\uff08\u8868\u793a\u4efb\u52a1\u5df2\u5230\u8fbe\u5176\u540c\u6b65\u70b9\uff09\u548c\u6d4b\u8bd5\u4f4d\uff08\u786e\u5b9a\u5176\u4ed6\u540c\u6b65\u4efb\u52a1\u662f\u5426\u5df2\u5230\u8fbe\u5176\u540c\u6b65\u70b9\uff09\u5c06\u4f5c\u4e3a\u4e24\u4e2a\u5355\u72ec\u7684\u64cd\u4f5c\u6267\u884c\u3002\u8981\u4e86\u89e3\u8fd9\u4e3a\u4ec0\u4e48\u4f1a\u6210\u4e3a\u95ee\u9898\uff0c\u8bf7\u8003\u8651\u4ee5\u4e0b\u573a\u666f\uff1a\u4efb\u52a1 A\u3001\u4efb\u52a1 B \u548c\u4efb\u52a1 C \u5c1d\u8bd5\u4f7f\u7528\u4e8b\u4ef6\u7ec4\u8fdb\u884c\u540c\u6b65\uff1a</p> <ol> <li> <p>\u4efb\u52a1 A \u548c\u4efb\u52a1 B \u5df2\u7ecf\u5230\u8fbe\u540c\u6b65\u70b9\uff0c\u56e0\u6b64\u5b83\u4eec\u7684\u4e8b\u4ef6\u4f4d\u5df2\u5728\u4e8b\u4ef6\u7ec4\u4e2d\u8bbe\u7f6e\uff0c\u5e76\u4e14\u5b83\u4eec\u5904\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u4efb\u52a1 C \u7684\u4e8b\u4ef6\u4f4d\u4e5f\u88ab\u8bbe\u7f6e\u3002</p> </li> <li> <p>\u4efb\u52a1 C \u5230\u8fbe\u540c\u6b65\u70b9\uff0c\u5e76\u4f7f\u7528 <code>xEventGroupSetBits()</code> \u8bbe\u7f6e\u5176\u5728\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u4f4d\u3002\u4e00\u65e6\u4efb\u52a1 C \u7684\u4f4d\u88ab\u8bbe\u7f6e\uff0c\u4efb\u52a1 A \u548c\u4efb\u52a1 B \u5c31\u4f1a\u79bb\u5f00\u963b\u585e\u72b6\u6001\uff0c\u6240\u6709\u4e09\u4e2a\u4e8b\u4ef6\u4f4d\u90fd\u4f1a\u88ab\u6e05\u9664\u3002</p> </li> <li> <p>\u4efb\u52a1 C \u7136\u540e\u8c03\u7528 <code>xEventGroupWaitBits()</code> \u7b49\u5f85\u6240\u6709\u4e09\u4e2a\u4e8b\u4ef6\u4f4d\u88ab\u8bbe\u7f6e\uff0c\u4f46\u5230\u90a3\u65f6\uff0c\u6240\u6709\u4e09\u4e2a\u4e8b\u4ef6\u4f4d\u90fd\u5df2\u88ab\u6e05\u9664\uff0c\u4efb\u52a1 A \u548c\u4efb\u52a1 B \u5df2\u79bb\u5f00\u5404\u81ea\u7684\u540c\u6b65\u70b9\uff0c\u56e0\u6b64\u540c\u6b65\u5931\u8d25\u3002</p> </li> </ol> <p>\u8981\u6210\u529f\u4f7f\u7528\u4e8b\u4ef6\u7ec4\u521b\u5efa\u540c\u6b65\u70b9\uff0c\u4e8b\u4ef6\u4f4d\u7684\u8bbe\u7f6e\u548c\u540e\u7eed\u7684\u4e8b\u4ef6\u4f4d\u6d4b\u8bd5\u5fc5\u987b\u4f5c\u4e3a\u5355\u4e2a\u4e0d\u53ef\u4e2d\u65ad\u7684\u64cd\u4f5c\u6267\u884c\u3002\u4e3a\u6b64\uff0c\u63d0\u4f9b\u4e86 <code>xEventGroupSync()</code> API \u51fd\u6570\u3002</p>"},{"location":"ch09-%E4%BA%8B%E4%BB%B6%E7%BB%84/#941-xeventgroupsync-api","title":"9.4.1 xEventGroupSync() API \u51fd\u6570","text":"<p><code>xEventGroupSync()</code> \u63d0\u4f9b\u4e86\u4e00\u79cd\u65b9\u6cd5\uff0c\u5141\u8bb8\u4e24\u4e2a\u6216\u66f4\u591a\u4efb\u52a1\u4f7f\u7528\u4e8b\u4ef6\u7ec4\u76f8\u4e92\u540c\u6b65\u3002\u8be5\u51fd\u6570\u5141\u8bb8\u4efb\u52a1\u5728\u4e8b\u4ef6\u7ec4\u4e2d\u8bbe\u7f6e\u4e00\u4e2a\u6216\u591a\u4e2a\u4e8b\u4ef6\u4f4d\uff0c\u7136\u540e\u7b49\u5f85\u540c\u4e00\u4e8b\u4ef6\u7ec4\u4e2d\u4e00\u7ec4\u4e8b\u4ef6\u4f4d\u7684\u8bbe\u7f6e\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u5355\u4e00\u4e0d\u53ef\u4e2d\u65ad\u7684\u64cd\u4f5c\u3002</p> <p><code>xEventGroupSync()</code> \u7684 <code>uxBitsToWaitFor</code> \u53c2\u6570\u6307\u5b9a\u8c03\u7528\u4efb\u52a1\u7684\u89e3\u9664\u963b\u585e\u6761\u4ef6\u3002\u5982\u679c <code>xEventGroupSync()</code> \u8fd4\u56de\u662f\u56e0\u4e3a\u6ee1\u8db3\u4e86\u89e3\u9664\u963b\u585e\u6761\u4ef6\uff0c\u5219 <code>uxBitsToWaitFor</code> \u6307\u5b9a\u7684\u4e8b\u4ef6\u4f4d\u5c06\u5728 <code>xEventGroupSync()</code> \u8fd4\u56de\u4e4b\u524d\u6e05\u96f6\u3002</p> <p></p> <pre><code>EventBits_t xEventGroupSync( EventGroupHandle_t xEventGroup,\n                             const EventBits_t uxBitsToSet,\n                             const EventBits_t uxBitsToWaitFor,\n                             TickType_t xTicksToWait );\n</code></pre> <p>\u6e05\u5355 9.12 xEventGroupSync() API \u51fd\u6570\u539f\u578b</p> <p>xEventGroupSync() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>xEventGroup</code></li> </ul> <p>\u8981\u8bbe\u7f6e\u548c\u6d4b\u8bd5\u4e8b\u4ef6\u4f4d\u7684\u4e8b\u4ef6\u7ec4\u7684\u53e5\u67c4\u3002\u4e8b\u4ef6\u7ec4\u53e5\u67c4\u662f\u901a\u8fc7\u7528\u4e8e\u521b\u5efa\u4e8b\u4ef6\u7ec4\u7684 <code>xEventGroupCreate()</code> \u8c03\u7528\u8fd4\u56de\u7684\u3002</p> <ul> <li><code>uxBitsToSet</code></li> </ul> <p>\u6307\u5b9a\u8981\u5728\u4e8b\u4ef6\u7ec4\u4e2d\u8bbe\u7f6e\u4e3a 1 \u7684\u4e8b\u4ef6\u4f4d\u6216\u4e8b\u4ef6\u4f4d\u7684\u63a9\u7801\u3002\u901a\u8fc7\u5c06\u4e8b\u4ef6\u7ec4\u7684\u73b0\u6709\u503c\u4e0e <code>uxBitsToSet</code> \u4e2d\u4f20\u9012\u7684\u503c\u6309\u4f4d\u6216\uff0c\u66f4\u65b0\u4e8b\u4ef6\u7ec4\u7684\u503c\u3002</p> <p>\u4f8b\u5982\uff0c\u5c06 <code>uxBitsToSet</code> \u8bbe\u7f6e\u4e3a 0x04\uff08\u4e8c\u8fdb\u5236 0100\uff09\u5c06\u5bfc\u81f4\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u4e8b\u4ef6\u4f4d 2 \u88ab\u8bbe\u7f6e\uff08\u5982\u679c\u5c1a\u672a\u8bbe\u7f6e\uff09\uff0c\u800c\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u6240\u6709\u5176\u4ed6\u4e8b\u4ef6\u4f4d\u4fdd\u6301\u4e0d\u53d8\u3002</p> <ul> <li><code>uxBitsToWaitFor</code></li> </ul> <p>\u6307\u5b9a\u8981\u5728\u4e8b\u4ef6\u7ec4\u4e2d\u6d4b\u8bd5\u7684\u4e8b\u4ef6\u4f4d\u6216\u4e8b\u4ef6\u4f4d\u7684\u63a9\u7801\u3002</p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u8c03\u7528\u4efb\u52a1\u5e0c\u671b\u7b49\u5f85\u4e8b\u4ef6\u7ec4\u4e2d\u4e8b\u4ef6\u4f4d 0\u30011 \u548c 2 \u88ab\u8bbe\u7f6e\uff0c\u5219\u5c06 <code>uxBitsToWaitFor</code> \u8bbe\u7f6e\u4e3a 0x07\uff08\u4e8c\u8fdb\u5236 111\uff09\u3002</p> <ul> <li><code>xTicksToWait</code></li> </ul> <p>\u4efb\u52a1\u5e94\u5728\u963b\u585e\u72b6\u6001\u4e0b\u7b49\u5f85\u4ee5\u6ee1\u8db3\u5176\u89e3\u9664\u963b\u585e\u6761\u4ef6\u7684\u6700\u957f\u65f6\u95f4\u3002</p> <p>\u5982\u679c <code>xTicksToWait</code> \u4e3a\u96f6\uff0c\u6216\u8005\u5728\u8c03\u7528 <code>xEventGroupSync()</code> \u65f6\u6ee1\u8db3\u4e86\u89e3\u9664\u963b\u585e\u6761\u4ef6\uff0c\u5219 <code>xEventGroupSync()</code> \u5c06\u7acb\u5373\u8fd4\u56de\u3002</p> <p>\u5757\u65f6\u95f4\u4ee5\u6ef4\u7b54\u5468\u671f\u4e3a\u5355\u4f4d\u6307\u5b9a\uff0c\u56e0\u6b64\u5b83\u6240\u8868\u793a\u7684\u7edd\u5bf9\u65f6\u95f4\u53d6\u51b3\u4e8e\u6ef4\u7b54\u9891\u7387\u3002\u5b8f <code>pdMS_TO_TICKS()</code> \u53ef\u7528\u4e8e\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5\u6ef4\u7b54\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u3002</p> <p>\u5c06 <code>xTicksToWait</code> \u8bbe\u7f6e\u4e3a <code>portMAX_DELAY</code> \u5c06\u5bfc\u81f4\u4efb\u52a1\u65e0\u9650\u671f\u7b49\u5f85\uff08\u4e0d\u8d85\u65f6\uff09\uff0c\u524d\u63d0\u662f FreeRTOSConfig.h \u4e2d\u7684 <code>INCLUDE_vTaskSuspend</code> \u8bbe\u7f6e\u4e3a 1\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u5982\u679c <code>xEventGroupSync()</code> \u8fd4\u56de\u662f\u56e0\u4e3a\u8c03\u7528\u4efb\u52a1\u7684\u89e3\u9664\u963b\u585e\u6761\u4ef6\u5df2\u6ee1\u8db3\uff0c\u5219\u8fd4\u56de\u503c\u662f\u4e8b\u4ef6\u7ec4\u7684\u503c\uff0c\u5728\u8c03\u7528\u4efb\u52a1\u7684\u89e3\u9664\u963b\u585e\u6761\u4ef6\u6ee1\u8db3\u65f6\uff08\u5728\u81ea\u52a8\u6e05\u9664\u4efb\u4f55\u4f4d\u4e4b\u524d\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8fd4\u56de\u7684\u503c\u4e5f\u5c06\u6ee1\u8db3\u8c03\u7528\u4efb\u52a1\u7684\u89e3\u9664\u963b\u585e\u6761\u4ef6\u3002</p> <p>\u5982\u679c <code>xEventGroupSync()</code> \u8fd4\u56de\u662f\u56e0\u4e3a <code>xTicksToWait</code> \u53c2\u6570\u6307\u5b9a\u7684\u5757\u65f6\u95f4\u5230\u671f\uff0c\u5219\u8fd4\u56de\u503c\u662f\u5757\u65f6\u95f4\u5230\u671f\u65f6\u4e8b\u4ef6\u7ec4\u7684\u503c\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8fd4\u56de\u7684\u503c\u5c06\u4e0d\u6ee1\u8db3\u8c03\u7528\u4efb\u52a1\u7684\u89e3\u9664\u963b\u585e\u6761\u4ef6\u3002</p>"},{"location":"ch09-%E4%BA%8B%E4%BB%B6%E7%BB%84/#_2","title":"9 \u4e8b\u4ef6\u7ec4","text":"<p>\u793a\u4f8b 9.2 \u540c\u6b65\u4efb\u52a1</p> <p>\u793a\u4f8b 9.2 \u4f7f\u7528 <code>xEventGroupSync()</code> \u540c\u6b65\u5355\u4e2a\u4efb\u52a1\u5b9e\u73b0\u7684\u4e09\u4e2a\u5b9e\u4f8b\u3002\u4efb\u52a1\u53c2\u6570\u7528\u4e8e\u4f20\u9012\u6bcf\u4e2a\u5b9e\u4f8b\u5728\u8c03\u7528 <code>xEventGroupSync()</code> \u65f6\u8bbe\u7f6e\u7684\u4e8b\u4ef6\u4f4d\u3002</p> <p>\u5728\u8c03\u7528 <code>xEventGroupSync()</code> \u4e4b\u524d\u548c\u4e4b\u540e\uff0c\u4efb\u52a1\u6253\u5370\u4e00\u6761\u6d88\u606f\u3002\u6bcf\u6761\u6d88\u606f\u90fd\u5305\u542b\u65f6\u95f4\u6233\u3002\u8fd9\u5141\u8bb8\u89c2\u5bdf\u8f93\u51fa\u4e2d\u6267\u884c\u7684\u987a\u5e8f\u3002</p> <p>\u8bf7\u53c2\u89c1\u6e05\u5355 9.12 \u4e86\u89e3\u4efb\u52a1\u7684\u5b9e\u73b0\u3002</p> <p></p> <pre><code>static void vSyncingTask( void *pvParameters )\n{\n    const TickType_t xMaxDelay = pdMS_TO_TICKS( 4000UL );\n    const TickType_t xMinDelay = pdMS_TO_TICKS( 200UL );\n    TickType_t xDelayTime;\n    EventBits_t uxThisTasksSyncBit;\n    const EventBits_t uxAllSyncBits = ( mainFIRST_TASK_BIT  |\n                                        mainSECOND_TASK_BIT |\n                                        mainTHIRD_TASK_BIT );\n\n    /* Three instances of this task are created - each task uses a different\n       event bit in the synchronization. The event bit to use is passed into\n       each task instance using the task parameter. Store it in the\n       uxThisTasksSyncBit variable. */\n    uxThisTasksSyncBit = ( EventBits_t ) pvParameters;\n\n    for( ;; )\n    {\n        /* Simulate this task taking some time to perform an action by delaying\n           for a pseudo random time. This prevents all three instances of this\n           task reaching the synchronization point at the same time, and so\n           allows the example's behavior to be observed more easily. */\n        xDelayTime = ( rand() % xMaxDelay ) + xMinDelay;\n        vTaskDelay( xDelayTime );\n\n        /* Print out a message to show this task has reached its synchronization\n           point. pcTaskGetTaskName() is an API function that returns the name\n           assigned to the task when the task was created. */\n        vPrintTwoStrings( pcTaskGetTaskName( NULL ), \"reached sync point\" );\n\n        /* Wait for all the tasks to have reached their respective\n           synchronization points. */\n        xEventGroupSync( /* The event group used to synchronize. */\n                         xEventGroup,\n\n                         /* The bit set by this task to indicate it has reached\n                            the synchronization point. */\n                         uxThisTasksSyncBit,\n\n                         /* The bits to wait for, one bit for each task taking\n                            part in the synchronization. */\n                         uxAllSyncBits,\n\n                         /* Wait indefinitely for all three tasks to reach the\n                            synchronization point. */\n                         portMAX_DELAY );\n\n        /* Print out a message to show this task has passed its synchronization\n           point. As an indefinite delay was used the following line will only\n           be executed after all the tasks reached their respective\n           synchronization points. */\n        vPrintTwoStrings( pcTaskGetTaskName( NULL ), \"exited sync point\" );\n    }\n}\n</code></pre> <p>\u6e05\u5355 9.13 \u793a\u4f8b 9.2 \u4e2d\u4efb\u52a1\u7684\u5b9e\u73b0</p> <p><code>main()</code> \u51fd\u6570\u521b\u5efa\u4e8b\u4ef6\u7ec4\uff0c\u521b\u5efa\u4e09\u4e2a\u4efb\u52a1\uff0c\u7136\u540e\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u3002\u8bf7\u53c2\u89c1\u6e05\u5355 9.14 \u4e86\u89e3\u5176\u5b9e\u73b0\u3002</p> <p></p> <pre><code>/* Definitions for the event bits in the event group. */\n\n#define mainFIRST_TASK_BIT ( 1UL &lt;&lt; 0UL ) /* Event bit 0, set by the 1st task */\n#define mainSECOND_TASK_BIT( 1UL &lt;&lt; 1UL ) /* Event bit 1, set by the 2nd task */\n#define mainTHIRD_TASK_BIT ( 1UL &lt;&lt; 2UL ) /* Event bit 2, set by the 3rd task */\n\n/* Declare the event group used to synchronize the three tasks. */\nEventGroupHandle_t xEventGroup;\n\nint main( void )\n{\n    /* Before an event group can be used it must first be created. */\n    xEventGroup = xEventGroupCreate();\n\n    /* Create three instances of the task. Each task is given a different\n       name, which is later printed out to give a visual indication of which\n       task is executing. The event bit to use when the task reaches its\n       synchronization point is passed into the task using the task parameter. */\n    xTaskCreate( vSyncingTask, \"Task 1\", 1000, mainFIRST_TASK_BIT, 1, NULL );\n    xTaskCreate( vSyncingTask, \"Task 2\", 1000, mainSECOND_TASK_BIT, 1, NULL );\n    xTaskCreate( vSyncingTask, \"Task 3\", 1000, mainTHIRD_TASK_BIT, 1, NULL );\n\n    /* Start the scheduler so the created tasks start executing. */\n    vTaskStartScheduler();\n\n    /* As always, the following line should never be reached. */\n    for( ;; );\n    return 0;\n}\n</code></pre> <p>\u6e05\u5355 9.14 \u793a\u4f8b 9.2 \u4e2d main() \u51fd\u6570\u7684\u5b9e\u73b0</p> <p>\u6267\u884c\u793a\u4f8b 9.2 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa\u5982\u56fe 9.5 \u6240\u793a\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u5373\u4f7f\u6bcf\u4e2a\u4efb\u52a1\u5728\u4e0d\u540c\u7684\uff08\u4f2a\u968f\u673a\uff09\u65f6\u95f4\u5230\u8fbe\u540c\u6b65\u70b9\uff0c\u4f46\u6bcf\u4e2a\u4efb\u52a1\u5728\u5230\u8fbe\u5404\u81ea\u7684\u540c\u6b65\u70b9\u540e\u51e0\u4e4e\u540c\u65f6\u79bb\u5f00\u540c\u6b65\u70b9[^26]\u3002</p> <p>[^26]: \u56fe 9.5 \u663e\u793a\u4e86\u5728 FreeRTOS Windows \u79fb\u690d\u7248\u4e2d\u8fd0\u884c\u7684\u793a\u4f8b\uff0c\u8be5\u79fb\u690d\u7248\u5e76\u4e0d\u63d0\u4f9b\u771f\u5b9e\u7684\u5b9e\u65f6\u884c\u4e3a\uff08\u5c24\u5176\u662f\u5728\u4f7f\u7528 Windows \u7cfb\u7edf\u8c03\u7528\u6253\u5370\u5230\u63a7\u5236\u53f0\u65f6\uff09\uff0c\u56e0\u6b64\u4f1a\u663e\u793a\u4e00\u4e9b\u65f6\u95f4\u4e0a\u7684\u53d8\u5316\u3002</p> <p></p> <p> \u56fe 9.5 \u6267\u884c\u793a\u4f8b 9.2 \u65f6\u4ea7\u751f\u7684\u8f93\u51fa</p>"},{"location":"ch10-%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/","title":"10 \u4efb\u52a1\u901a\u77e5","text":""},{"location":"ch10-%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#101","title":"10.1 \u7b80\u4ecb","text":"<p>FreeRTOS \u5e94\u7528\u901a\u5e38\u7531\u4e00\u7cfb\u5217\u72ec\u7acb\u4efb\u52a1\u7ec4\u6210\uff0c\u8fd9\u4e9b\u4efb\u52a1\u76f8\u4e92\u901a\u4fe1\u4ee5\u5171\u540c\u5b9e\u73b0\u7cfb\u7edf\u529f\u80fd\u3002\u4efb\u52a1\u901a\u77e5\u662f\u4e00\u79cd\u9ad8\u6548\u673a\u5236\uff0c\u5141\u8bb8\u4e00\u4e2a\u4efb\u52a1\u76f4\u63a5\u901a\u77e5\u53e6\u4e00\u4e2a\u4efb\u52a1\u3002</p>"},{"location":"ch10-%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#1011","title":"10.1.1 \u901a\u8fc7\u4e2d\u4ecb\u5bf9\u8c61\u901a\u4fe1","text":"<p>\u672c\u4e66\u5df2\u4ecb\u7ecd\u4e86\u4efb\u52a1\u4e4b\u95f4\u901a\u4fe1\u7684\u591a\u79cd\u65b9\u5f0f\u3002\u8fd9\u4e9b\u65b9\u6cd5\u90fd\u9700\u8981\u521b\u5efa\u901a\u4fe1\u5bf9\u8c61\uff0c\u5982\u961f\u5217\u3001\u4e8b\u4ef6\u7ec4\u548c\u5404\u79cd\u7c7b\u578b\u7684\u4fe1\u53f7\u91cf\u3002</p> <p>\u4f7f\u7528\u901a\u4fe1\u5bf9\u8c61\u65f6\uff0c\u4e8b\u4ef6\u548c\u6570\u636e\u4e0d\u4f1a\u76f4\u63a5\u53d1\u9001\u5230\u63a5\u6536\u4efb\u52a1\u6216\u63a5\u6536 ISR\uff0c\u800c\u662f\u53d1\u9001\u5230\u901a\u4fe1\u5bf9\u8c61\u3002\u540c\u6837\uff0c\u4efb\u52a1\u548c ISR \u4e5f\u662f\u4ece\u901a\u4fe1\u5bf9\u8c61\u63a5\u6536\u4e8b\u4ef6\u548c\u6570\u636e\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u4ece\u53d1\u9001\u65b9\u63a5\u6536\u3002\u5982\u4e0b\u56fe 10.1 \u6240\u793a\u3002</p> <p></p> <p> \u56fe 10.1 \u901a\u8fc7\u901a\u4fe1\u5bf9\u8c61\u53d1\u9001\u4e8b\u4ef6\u7684\u793a\u610f\u56fe</p>"},{"location":"ch10-%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#1012","title":"10.1.2 \u4efb\u52a1\u901a\u77e5\u2014\u2014\u76f4\u63a5\u4efb\u52a1\u901a\u4fe1","text":"<p>\u201c\u4efb\u52a1\u901a\u77e5\u201d\u5141\u8bb8\u4efb\u52a1\u4e0e\u5176\u4ed6\u4efb\u52a1\u4ea4\u4e92\uff0c\u5e76\u4e0e ISR \u540c\u6b65\uff0c\u65e0\u9700\u5355\u72ec\u7684\u901a\u4fe1\u5bf9\u8c61\u3002\u901a\u8fc7\u4efb\u52a1\u901a\u77e5\uff0c\u4efb\u52a1\u6216 ISR \u53ef\u4ee5\u76f4\u63a5\u5411\u63a5\u6536\u4efb\u52a1\u53d1\u9001\u4e8b\u4ef6\uff0c\u5982\u56fe 10.2 \u6240\u793a\u3002</p> <p></p> <p> \u56fe 10.2 \u4efb\u52a1\u901a\u77e5\u7528\u4e8e\u76f4\u63a5\u4ece\u4e00\u4e2a\u4efb\u52a1\u5411\u53e6\u4e00\u4e2a\u4efb\u52a1\u53d1\u9001\u4e8b\u4ef6\u7684\u793a\u610f\u56fe</p> <p>\u4efb\u52a1\u901a\u77e5\u529f\u80fd\u662f\u53ef\u9009\u7684\u3002\u8981\u542f\u7528\u4efb\u52a1\u901a\u77e5\u529f\u80fd\uff0c\u8bf7\u5728 FreeRTOSConfig.h \u4e2d\u5c06 <code>configUSE_TASK_NOTIFICATIONS</code> \u8bbe\u7f6e\u4e3a 1\u3002</p> <p>\u5f53 <code>configUSE_TASK_NOTIFICATIONS</code> \u8bbe\u7f6e\u4e3a 1 \u65f6\uff0c\u6bcf\u4e2a\u4efb\u52a1\u81f3\u5c11\u6709\u4e00\u4e2a\u201c\u901a\u77e5\u72b6\u6001\u201d\uff0c\u53ef\u4ee5\u662f\u201c\u5f85\u5904\u7406\u201d\u6216\u201c\u672a\u5904\u7406\u201d\uff0c\u8fd8\u6709\u4e00\u4e2a\u201c\u901a\u77e5\u503c\u201d\uff0c\u4e3a 32 \u4f4d\u65e0\u7b26\u53f7\u6574\u6570\u3002\u5f53\u4efb\u52a1\u6536\u5230\u901a\u77e5\u65f6\uff0c\u5176\u901a\u77e5\u72b6\u6001\u88ab\u8bbe\u7f6e\u4e3a\u5f85\u5904\u7406\u3002\u5f53\u4efb\u52a1\u8bfb\u53d6\u5176\u901a\u77e5\u503c\u65f6\uff0c\u901a\u77e5\u72b6\u6001\u88ab\u8bbe\u7f6e\u4e3a\u672a\u5904\u7406\u3002  \u5982\u679c <code>configTASK_NOTIFICATION_ARRAY_ENTRIES</code> \u8bbe\u7f6e\u4e3a\u5927\u4e8e 1 \u7684\u503c\uff0c\u5219\u4f1a\u6709\u591a\u4e2a\u901a\u77e5\u72b6\u6001\u548c\u503c\u901a\u8fc7\u7d22\u5f15\u6807\u8bc6\u3002</p> <p>\u4efb\u52a1\u53ef\u4ee5\u5728\u963b\u585e\u72b6\u6001\u4e0b\u7b49\u5f85\u5176\u901a\u77e5\u72b6\u6001\u53d8\u4e3a\u5f85\u5904\u7406\uff0c\u5177\u6709\u53ef\u9009\u7684\u8d85\u65f6\u3002</p>"},{"location":"ch10-%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#1013","title":"10.1.3 \u8303\u56f4","text":"<p>\u672c\u7ae0\u8ba8\u8bba\uff1a</p> <ul> <li>\u4efb\u52a1\u7684\u901a\u77e5\u72b6\u6001\u548c\u901a\u77e5\u503c\u3002</li> <li>\u4efb\u52a1\u901a\u77e5\u53ef\u4ee5\u5728\u4f55\u65f6\u4f55\u5730\u66ff\u4ee3\u901a\u4fe1\u5bf9\u8c61\uff08\u5982\u4fe1\u53f7\u91cf\uff09\u7684\u4f7f\u7528\u3002</li> <li>\u4f7f\u7528\u4efb\u52a1\u901a\u77e5\u66ff\u4ee3\u901a\u4fe1\u5bf9\u8c61\u7684\u4f18\u70b9\u3002</li> </ul>"},{"location":"ch10-%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#102","title":"10.2 \u4efb\u52a1\u901a\u77e5\u7684\u4f18\u7f3a\u70b9","text":""},{"location":"ch10-%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#1021","title":"10.2.1 \u4efb\u52a1\u901a\u77e5\u7684\u6027\u80fd\u4f18\u52bf","text":"<p>\u4f7f\u7528\u4efb\u52a1\u901a\u77e5\u5411\u4efb\u52a1\u53d1\u9001\u4e8b\u4ef6\u6216\u6570\u636e\u7684\u901f\u5ea6\u6bd4\u4f7f\u7528\u961f\u5217\u3001\u4fe1\u53f7\u91cf\u6216\u4e8b\u4ef6\u7ec4\u6267\u884c\u7b49\u6548\u64cd\u4f5c\u8981\u5feb\u5f97\u591a\u3002</p>"},{"location":"ch10-%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#1022-ram","title":"10.2.2 RAM \u5360\u7528\u4f18\u52bf","text":"<p>\u540c\u6837\uff0c\u4f7f\u7528\u4efb\u52a1\u901a\u77e5\u5411\u4efb\u52a1\u53d1\u9001\u4e8b\u4ef6\u6216\u6570\u636e\u6240\u9700\u7684 RAM \u4e5f\u6bd4\u4f7f\u7528\u961f\u5217\u3001\u4fe1\u53f7\u91cf\u6216\u4e8b\u4ef6\u7ec4\u6267\u884c\u7b49\u6548\u64cd\u4f5c\u8981\u5c11\u5f97\u591a\u3002\u8fd9\u662f\u56e0\u4e3a\u6bcf\u4e2a\u901a\u4fe1\u5bf9\u8c61\uff08\u961f\u5217\u3001\u4fe1\u53f7\u91cf\u6216\u4e8b\u4ef6\u7ec4\uff09\u5728\u4f7f\u7528\u4e4b\u524d\u5fc5\u987b\u521b\u5efa\uff0c\u800c\u542f\u7528\u4efb\u52a1\u901a\u77e5\u529f\u80fd\u5219\u5177\u6709\u56fa\u5b9a\u7684\u5f00\u9500\u3002\u4efb\u52a1\u901a\u77e5\u7684 RAM \u6210\u672c\u4e3a <code>configTASK_NOTIFICATION_ARRAY_ENTRIES</code> * 5 \u5b57\u8282\u6bcf\u4e2a\u4efb\u52a1\u3002<code>configTASK_NOTIFICATION_ARRAY_ENTRIES</code> \u7684\u9ed8\u8ba4\u503c\u4e3a 1\uff0c\u4f7f\u5f97\u4efb\u52a1\u901a\u77e5\u7684\u9ed8\u8ba4\u5927\u5c0f\u4e3a\u6bcf\u4e2a\u4efb\u52a1 5 \u5b57\u8282\u3002</p>"},{"location":"ch10-%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#1023","title":"10.2.3 \u4efb\u52a1\u901a\u77e5\u7684\u5c40\u9650\u6027","text":"<p>\u4efb\u52a1\u901a\u77e5\u6bd4\u901a\u4fe1\u5bf9\u8c61\u66f4\u5feb\uff0c\u4f7f\u7528\u7684 RAM \u66f4\u5c11\uff0c\u4f46\u5e76\u4e0d\u662f\u5728\u6240\u6709\u573a\u666f\u4e2d\u90fd\u53ef\u4ee5\u4f7f\u7528\u4efb\u52a1\u901a\u77e5\u3002\u672c\u8282\u8bb0\u5f55\u4e86\u65e0\u6cd5\u4f7f\u7528\u4efb\u52a1\u901a\u77e5\u7684\u573a\u666f\uff1a</p> <ul> <li>\u53d1\u9001\u4e8b\u4ef6\u6216\u6570\u636e\u5230 ISR</li> </ul> <p>\u901a\u4fe1\u5bf9\u8c61\u53ef\u7528\u4e8e\u53d1\u9001\u4e8b\u4ef6\u548c\u6570\u636e\u4ece ISR \u5230\u4efb\u52a1\uff0c\u4ee5\u53ca\u4ece\u4efb\u52a1\u5230 ISR\u3002</p> <p>\u4efb\u52a1\u901a\u77e5\u53ef\u7528\u4e8e\u53d1\u9001\u4e8b\u4ef6\u548c\u6570\u636e\u4ece ISR \u5230\u4efb\u52a1\uff0c\u4f46\u4e0d\u80fd\u7528\u4e8e\u53d1\u9001\u4e8b\u4ef6\u6216\u6570\u636e\u4ece\u4efb\u52a1\u5230 ISR\u3002</p> <ul> <li>\u542f\u7528\u591a\u4e2a\u63a5\u6536\u4efb\u52a1</li> </ul> <p>\u4e00\u4e2a\u901a\u4fe1\u5bf9\u8c61\u53ef\u4ee5\u88ab\u4efb\u4f55\u77e5\u9053\u5176\u53e5\u67c4\u7684\u4efb\u52a1\u6216 ISR \u8bbf\u95ee\uff08\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u961f\u5217\u53e5\u67c4\u3001\u4fe1\u53f7\u91cf\u53e5\u67c4\u6216\u4e8b\u4ef6\u7ec4\u53e5\u67c4\uff09\u3002\u4efb\u4f55\u6570\u91cf\u7684\u4efb\u52a1\u548c ISR \u53ef\u4ee5\u5904\u7406\u53d1\u9001\u5230\u4efb\u4f55\u7ed9\u5b9a\u901a\u4fe1\u5bf9\u8c61\u7684\u4e8b\u4ef6\u6216\u6570\u636e\u3002</p> <p>\u4efb\u52a1\u901a\u77e5\u662f\u76f4\u63a5\u53d1\u9001\u5230\u63a5\u6536\u4efb\u52a1\u7684\uff0c\u56e0\u6b64\u5b83\u4eec\u53ea\u80fd\u88ab\u53d1\u9001\u901a\u77e5\u7684\u4efb\u52a1\u5904\u7406\u3002\u7136\u800c\uff0c\u8fd9\u5728\u5b9e\u9645\u60c5\u51b5\u4e0b\u5f88\u5c11\u6210\u4e3a\u9650\u5236\uff0c\u56e0\u4e3a\u867d\u7136\u591a\u4e2a\u4efb\u52a1\u548c ISR \u53d1\u9001\u5230\u540c\u4e00\u4e2a\u901a\u4fe1\u5bf9\u8c61\u662f\u5e38\u89c1\u7684\uff0c\u4f46\u591a\u4e2a\u4efb\u52a1\u548c ISR \u4ece\u540c\u4e00\u4e2a\u901a\u4fe1\u5bf9\u8c61\u63a5\u6536\u5219\u5f88\u5c11\u89c1\u3002</p> <ul> <li>\u7f13\u51b2\u591a\u4e2a\u6570\u636e\u9879</li> </ul> <p>\u961f\u5217\u662f\u4e00\u4e2a\u53ef\u4ee5\u540c\u65f6\u5bb9\u7eb3\u591a\u4e2a\u6570\u636e\u9879\u7684\u901a\u4fe1\u5bf9\u8c61\u3002\u5df2\u53d1\u9001\u5230\u961f\u5217\u4f46\u5c1a\u672a\u4ece\u961f\u5217\u63a5\u6536\u7684\u6570\u636e\u7f13\u5b58\u5728\u961f\u5217\u5bf9\u8c61\u5185\u3002</p> <p>\u4efb\u52a1\u901a\u77e5\u901a\u8fc7\u66f4\u65b0\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u5411\u4efb\u52a1\u53d1\u9001\u6570\u636e\u3002\u4efb\u52a1\u7684\u901a\u77e5\u503c\u4e00\u6b21\u53ea\u80fd\u5bb9\u7eb3\u4e00\u4e2a\u503c\u3002</p> <ul> <li>\u5e7f\u64ad\u7ed9\u591a\u4e2a\u4efb\u52a1</li> </ul> <p>\u4e8b\u4ef6\u7ec4\u662f\u4e00\u4e2a\u901a\u4fe1\u5bf9\u8c61\uff0c\u53ef\u7528\u4e8e\u540c\u65f6\u5411\u591a\u4e2a\u4efb\u52a1\u53d1\u9001\u4e8b\u4ef6\u3002</p> <p>\u4efb\u52a1\u901a\u77e5\u662f\u76f4\u63a5\u53d1\u9001\u7ed9\u63a5\u6536\u4efb\u52a1\u7684\uff0c\u56e0\u6b64\u53ea\u80fd\u88ab\u63a5\u6536\u4efb\u52a1\u5904\u7406\u3002</p> <ul> <li>\u5728\u53d1\u9001\u5b8c\u6210\u4e4b\u524d\u4ee5\u963b\u585e\u72b6\u6001\u7b49\u5f85</li> </ul> <p>\u5982\u679c\u901a\u4fe1\u5bf9\u8c61\u6682\u65f6\u5904\u4e8e\u4e00\u79cd\u72b6\u6001\uff0c\u610f\u5473\u7740\u4e0d\u80fd\u518d\u5411\u5176\u4e2d\u5199\u5165\u66f4\u591a\u6570\u636e\u6216\u4e8b\u4ef6\uff08\u4f8b\u5982\uff0c\u5f53\u961f\u5217\u5df2\u6ee1\u65f6\uff0c\u4e0d\u80fd\u518d\u5411\u961f\u5217\u53d1\u9001\u6570\u636e\uff09\uff0c\u90a3\u4e48\u5c1d\u8bd5\u5199\u5165\u5bf9\u8c61\u7684\u4efb\u52a1\u53ef\u4ee5\u9009\u62e9\u6027\u5730\u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u5176\u5199\u5165\u64cd\u4f5c\u5b8c\u6210\u3002</p> <p>\u5982\u679c\u4efb\u52a1\u5c1d\u8bd5\u5411\u4e00\u4e2a\u5df2\u7ecf\u6709\u901a\u77e5\u5f85\u5904\u7406\u7684\u4efb\u52a1\u53d1\u9001\u4efb\u52a1\u901a\u77e5\uff0c\u5219\u53d1\u9001\u4efb\u52a1\u65e0\u6cd5\u5728\u963b\u585e\u72b6\u6001\u4e0b\u7b49\u5f85\u63a5\u6536\u4efb\u52a1\u91cd\u7f6e\u5176\u901a\u77e5\u72b6\u6001\u3002\u6b63\u5982\u5c06\u8981\u770b\u5230\u7684\uff0c\u8fd9\u5728\u5b9e\u9645\u60c5\u51b5\u4e0b\u5f88\u5c11\u6210\u4e3a\u4efb\u52a1\u901a\u77e5\u4f7f\u7528\u4e2d\u7684\u9650\u5236\u3002</p>"},{"location":"ch10-%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#103","title":"10.3 \u4f7f\u7528\u4efb\u52a1\u901a\u77e5","text":""},{"location":"ch10-%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#1031-api","title":"10.3.1 \u4efb\u52a1\u901a\u77e5 API \u9009\u9879","text":"<p>\u4efb\u52a1\u901a\u77e5\u662f\u4e00\u79cd\u975e\u5e38\u5f3a\u5927\u7684\u7279\u6027\uff0c\u901a\u5e38\u53ef\u4ee5\u66ff\u4ee3\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u3001\u8ba1\u6570\u4fe1\u53f7\u91cf\u3001\u4e8b\u4ef6\u7ec4\uff0c\u6709\u65f6\u751a\u81f3\u662f\u961f\u5217\u3002\u8fd9\u79cd\u5e7f\u6cdb\u7684\u4f7f\u7528\u573a\u666f\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 <code>xTaskNotify()</code> API \u51fd\u6570\u53d1\u9001\u4efb\u52a1\u901a\u77e5\uff0c\u4ee5\u53ca\u4f7f\u7528 <code>xTaskNotifyWait()</code> API \u51fd\u6570\u63a5\u6536\u4efb\u52a1\u901a\u77e5\u6765\u5b9e\u73b0\u3002</p> <p>\u7136\u800c\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5e76\u4e0d\u9700\u8981 <code>xTaskNotify()</code> \u548c <code>xTaskNotifyWait()</code> \u63d0\u4f9b\u7684\u5168\u90e8\u7075\u6d3b\u6027\uff0c\u56e0\u6b64\u63d0\u4f9b\u4e86 <code>xTaskNotifyGive()</code> API \u51fd\u6570\u4f5c\u4e3a <code>xTaskNotify()</code> \u7684\u66f4\u7b80\u5355\u4f46\u7075\u6d3b\u6027\u8f83\u4f4e\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u63d0\u4f9b\u4e86 <code>ulTaskNotifyTake()</code> API \u51fd\u6570\u4f5c\u4e3a <code>xTaskNotifyWait()</code> \u7684\u66f4\u7b80\u5355\u4f46\u7075\u6d3b\u6027\u8f83\u4f4e\u7684\u66ff\u4ee3\u65b9\u6848\u3002</p> <p>\u4efb\u52a1\u901a\u77e5\u7cfb\u7edf\u4e0d\u9650\u4e8e\u5355\u4e2a\u901a\u77e5\u4e8b\u4ef6\u3002\u914d\u7f6e\u53c2\u6570 <code>configTASK_NOTIFICATION_ARRAY_ENTRIES</code> \u9ed8\u8ba4\u8bbe\u7f6e\u4e3a 1\u3002\u5982\u679c\u5c06\u5176\u8bbe\u7f6e\u4e3a\u5927\u4e8e 1 \u7684\u503c\uff0c\u5219\u5728\u6bcf\u4e2a\u4efb\u52a1\u5185\u90e8\u521b\u5efa\u4e00\u4e2a\u901a\u77e5\u6570\u7ec4\u3002\u8fd9\u5141\u8bb8\u901a\u8fc7\u7d22\u5f15\u7ba1\u7406\u901a\u77e5\u3002\u6bcf\u4e2a\u4efb\u52a1\u901a\u77e5 API \u51fd\u6570\u90fd\u6709\u4e00\u4e2a\u7d22\u5f15\u7248\u672c\u3002\u4f7f\u7528\u975e\u7d22\u5f15\u7248\u672c\u5c06\u5bfc\u81f4\u8bbf\u95ee notification[0]\uff08\u6570\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\uff09\u3002\u6bcf\u4e2a API \u51fd\u6570\u7684 <code>indexed</code> \u7248\u672c\u901a\u8fc7\u540e\u7f00 <code>Indexed</code> \u6765\u6807\u8bc6\uff0c\u56e0\u6b64\u51fd\u6570 <code>xTaskNotify</code> \u53d8\u4e3a <code>xTaskNotifyIndexed</code>\u3002\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u672c\u4e66\u5c06\u8d2f\u7a7f\u59cb\u7ec8\u4f7f\u7528\u6bcf\u4e2a\u51fd\u6570\u7684\u975e\u7d22\u5f15\u7248\u672c\u3002</p> <p>\u4efb\u52a1\u901a\u77e5 API \u662f\u4f5c\u4e3a\u5b8f\u5b9e\u73b0\u7684\uff0c\u8fd9\u4e9b\u5b8f\u8c03\u7528\u6bcf\u79cd API \u51fd\u6570\u7c7b\u578b\u7684\u5e95\u5c42 <code>Generic</code> \u7248\u672c\u3002\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u672c\u4e66\u5c06\u8fd9\u4e9b API \u5b8f\u79f0\u4e3a\u51fd\u6570\u3002</p>"},{"location":"ch10-%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#10311-api-27","title":"10.3.1.1 \u5b8c\u6574\u7684 API \u51fd\u6570\u5217\u8868 <sup>27</sup>","text":"<ul> <li><code>xTaskNotifyGive</code></li> <li><code>xTaskNotifyGiveIndexed</code></li> <li><code>vTaskNotifyGiveFromISR</code></li> <li><code>vTaskNotifyGiveIndexedFromISR</code></li> <li><code>vTaskNotifyTake</code></li> <li><code>vTaskNotifyTakeIndexed</code></li> <li><code>xTaskNotify</code></li> <li><code>xTaskNotifyIndexed</code></li> <li><code>xTaskNotifyWait</code></li> <li><code>xTaskNotifyWaitIndexed</code></li> <li><code>xTaskNotifyStateClear</code></li> <li><code>xTaskNotifyStateClearIndexed</code></li> <li><code>ulTaskNotifyValueClear</code></li> <li><code>ulTaskNotifyValueClearIndexed</code></li> <li><code>xTaskNotifyAndQueryIndexedFromISR</code></li> <li><code>xTaskNotifyAndQueryFromISR</code></li> <li><code>xTaskNotifyFromISR</code></li> <li><code>xTaskNotifyIndexedFromISR</code></li> <li><code>xTaskNotifyAndQuery</code></li> <li><code>xTaskNotifyAndQueryIndexed</code></li> </ul> <p>(27): \u8fd9\u4e9b\u51fd\u6570\u5b9e\u9645\u4e0a\u662f\u4f5c\u4e3a\u5b8f\u5b9e\u73b0\u7684\u3002</p> <p>\u6ce8\u610f\uff1a\u63a5\u6536\u901a\u77e5\u7684 <code>FromISR</code> \u51fd\u6570\u4e0d\u5b58\u5728\uff0c\u56e0\u4e3a\u901a\u77e5\u59cb\u7ec8\u662f\u53d1\u9001\u7ed9\u4efb\u52a1\u7684\uff0c\u800c\u4e2d\u65ad\u4e0e\u4efb\u4f55\u4efb\u52a1\u90fd\u6ca1\u6709\u5173\u8054\u3002</p>"},{"location":"ch10-%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#1032-xtasknotifygive-api","title":"10.3.2 xTaskNotifyGive() API \u51fd\u6570","text":"<p><code>xTaskNotifyGive()</code> \u5c06\u901a\u77e5\u76f4\u63a5\u53d1\u9001\u5230\u4efb\u52a1\uff0c\u5e76\u9012\u589e\uff08\u52a0\u4e00\uff09\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u3002\u8c03\u7528 <code>xTaskNotifyGive()</code> \u5c06\u4f7f\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u72b6\u6001\u8bbe\u7f6e\u4e3a\u5f85\u5904\u7406\uff08\u5982\u679c\u5b83\u5c1a\u672a\u5904\u4e8e\u5f85\u5904\u7406\u72b6\u6001\uff09\u3002</p> <p>\u63d0\u4f9b <code>xTaskNotifyGive()</code> API \u51fd\u6570\u662f\u4e3a\u4e86\u5141\u8bb8\u5c06\u4efb\u52a1\u901a\u77e5\u7528\u4f5c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u6216\u8ba1\u6570\u4fe1\u53f7\u91cf\u7684\u66f4\u8f7b\u91cf\u7ea7\u548c\u66f4\u5feb\u7684\u66ff\u4ee3\u65b9\u6848\u3002</p> <p></p> <pre><code>BaseType_t xTaskNotifyGive( TaskHandle_t xTaskToNotify );\nBaseType_t xTaskNotifyGiveIndexed( TaskHandle_t xTaskToNotify, UBaseType_t uxIndexToNotify );\n</code></pre> <p>\u5217\u8868 10.1 xTaskNotifyGive() API \u51fd\u6570\u539f\u578b</p> <p>xTaskNotifyGive()/xTaskNotifyGiveIndexed() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>xTaskToNotify</code></li> </ul> <p>\u8981\u53d1\u9001\u901a\u77e5\u7684\u4efb\u52a1\u7684\u53e5\u67c4\u2014\u2014\u6709\u5173\u83b7\u53d6\u4efb\u52a1\u53e5\u67c4\u7684\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 <code>xTaskCreate()</code> API \u51fd\u6570\u7684 <code>pxCreatedTask</code> \u53c2\u6570\u3002</p> <ul> <li><code>uxIndexToNotify</code></li> </ul> <p>\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p><code>xTaskNotifyGive()</code> \u662f\u4e00\u4e2a\u5b8f\uff0c\u5b83\u8c03\u7528 <code>xTaskNotify()</code>\u3002\u4f20\u9012\u7ed9 <code>xTaskNotify()</code> \u7684\u53c2\u6570\u7531\u5b8f\u8bbe\u7f6e\uff0c\u4f7f\u5f97 <code>pdPASS</code> \u662f\u552f\u4e00\u53ef\u80fd\u7684\u8fd4\u56de\u503c\u3002\u7a0d\u540e\u5c06\u63cf\u8ff0 <code>xTaskNotify()</code>\u3002</p>"},{"location":"ch10-%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#1033-vtasknotifygivefromisr-api","title":"10.3.3 vTaskNotifyGiveFromISR() API \u51fd\u6570","text":"<p><code>vTaskNotifyGiveFromISR()</code> \u662f <code>xTaskNotifyGive()</code> \u7684\u4e00\u4e2a\u7248\u672c\uff0c\u53ef\u4ee5\u5728\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u4f7f\u7528\u3002</p> <p></p> <pre><code>void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify,\n                             BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre> <p>\u5217\u8868 10.2 vTaskNotifyGiveFromISR() API \u51fd\u6570\u539f\u578b</p> <p>vTaskNotifyGiveFromISR() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>xTaskToNotify</code></li> </ul> <p>\u8981\u53d1\u9001\u901a\u77e5\u7684\u4efb\u52a1\u7684\u53e5\u67c4\u2014\u2014\u6709\u5173\u83b7\u53d6\u4efb\u52a1\u53e5\u67c4\u7684\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 <code>xTaskCreate()</code> API \u51fd\u6570\u7684 <code>pxCreatedTask</code> \u53c2\u6570\u3002</p> <ul> <li><code>pxHigherPriorityTaskWoken</code></li> </ul> <p>\u5982\u679c\u8981\u53d1\u9001\u901a\u77e5\u7684\u4efb\u52a1\u6b63\u5728\u963b\u585e\u72b6\u6001\u7b49\u5f85\u63a5\u6536\u901a\u77e5\uff0c\u5219\u53d1\u9001\u901a\u77e5\u5c06\u4f7f\u8be5\u4efb\u52a1\u79bb\u5f00\u963b\u585e\u72b6\u6001\u3002</p> <p>\u5982\u679c\u8c03\u7528 <code>vTaskNotifyGiveFromISR()</code> \u5bfc\u81f4\u4efb\u52a1\u79bb\u5f00\u963b\u585e\u72b6\u6001\uff0c\u5e76\u4e14\u88ab\u89e3\u9664\u963b\u585e\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1\uff08\u88ab\u4e2d\u65ad\u7684\u4efb\u52a1\uff09\uff0c\u5219 <code>vTaskNotifyGiveFromISR()</code> \u5c06\u5728\u5185\u90e8\u5c06 <code>*pxHigherPriorityTaskWoken</code> \u8bbe\u7f6e\u4e3a <code>pdTRUE</code>\u3002</p> <p>\u5982\u679c <code>vTaskNotifyGiveFromISR()</code> \u5c06\u6b64\u503c\u8bbe\u7f6e\u4e3a <code>pdTRUE</code>\uff0c\u5219\u5728\u4e2d\u65ad\u9000\u51fa\u4e4b\u524d\u5e94\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002\u8fd9\u5c06\u786e\u4fdd\u4e2d\u65ad\u76f4\u63a5\u8fd4\u56de\u5230\u6700\u9ad8\u4f18\u5148\u7ea7\u7684\u5c31\u7eea\u72b6\u6001\u4efb\u52a1\u3002</p> <p>\u4e0e\u6240\u6709\u4e2d\u65ad\u5b89\u5168\u7684 API \u51fd\u6570\u4e00\u6837\uff0c<code>pxHigherPriorityTaskWoken</code> \u53c2\u6570\u5728\u4f7f\u7528\u4e4b\u524d\u5fc5\u987b\u8bbe\u7f6e\u4e3a <code>pdFALSE</code>\u3002</p>"},{"location":"ch10-%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#1034-ultasknotifytake-api","title":"10.3.4 ulTaskNotifyTake() API \u51fd\u6570","text":"<p><code>ulTaskNotifyTake()</code> \u5141\u8bb8\u4efb\u52a1\u5728\u963b\u585e\u72b6\u6001\u4e0b\u7b49\u5f85\u5176\u901a\u77e5\u503c\u5927\u4e8e\u96f6\uff0c\u5e76\u5728\u8fd4\u56de\u4e4b\u524d\u9012\u51cf\uff08\u4ece\u4e2d\u51cf\u53bb\uff09\u6216\u6e05\u9664\u4efb\u52a1\u7684\u901a\u77e5\u503c\u3002</p> <p>\u63d0\u4f9b <code>ulTaskNotifyTake()</code> API \u51fd\u6570\u662f\u4e3a\u4e86\u5141\u8bb8\u5c06\u4efb\u52a1\u901a\u77e5\u7528\u4f5c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u6216\u8ba1\u6570\u4fe1\u53f7\u91cf\u7684\u66f4\u8f7b\u91cf\u7ea7\u548c\u66f4\u5feb\u7684\u66ff\u4ee3\u65b9\u6848\u3002</p> <p></p> <pre><code>uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t\nxTicksToWait );\n</code></pre> <p>\u5217\u8868 10.3 ulTaskNotifyTake() API \u51fd\u6570\u539f\u578b</p> <p>ulTaskNotifyTake() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>xClearCountOnExit</code></li> </ul> <p>\u5982\u679c <code>xClearCountOnExit</code> \u8bbe\u7f6e\u4e3a <code>pdTRUE</code>\uff0c\u5219\u8c03\u7528\u4efb\u52a1\u7684\u901a\u77e5\u503c\u5c06\u5728\u8fd4\u56de\u4e4b\u524d\u6e05\u9664\u4e3a\u96f6\u3002</p> <p>\u5982\u679c <code>xClearCountOnExit</code> \u8bbe\u7f6e\u4e3a <code>pdFALSE</code>\uff0c\u5e76\u4e14\u8c03\u7528\u4efb\u52a1\u7684\u901a\u77e5\u503c\u5927\u4e8e\u96f6\uff0c\u5219\u8c03\u7528\u4efb\u52a1\u7684\u901a\u77e5\u503c\u5c06\u5728\u8fd4\u56de\u4e4b\u524d\u9012\u51cf\u3002</p> <ul> <li><code>xTicksToWait</code></li> </ul> <p>\u8c03\u7528\u4efb\u52a1\u5e94\u5728\u963b\u585e\u72b6\u6001\u4e0b\u7b49\u5f85\u5176\u901a\u77e5\u503c\u5927\u4e8e\u96f6\u7684\u6700\u957f\u65f6\u95f4\u3002</p> <p>\u5757\u65f6\u95f4\u4ee5\u6ef4\u7b54\u5468\u671f\u4e3a\u5355\u4f4d\u6307\u5b9a\uff0c\u56e0\u6b64\u5b83\u6240\u4ee3\u8868\u7684\u7edd\u5bf9\u65f6\u95f4\u53d6\u51b3\u4e8e\u6ef4\u7b54\u9891\u7387\u3002\u5b8f <code>pdMS_TO_TICKS()</code> \u53ef\u7528\u4e8e\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5\u6ef4\u7b54\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u3002</p> <p>\u5c06 <code>xTicksToWait</code> \u8bbe\u7f6e\u4e3a <code>portMAX_DELAY</code> \u5c06\u5bfc\u81f4\u4efb\u52a1\u65e0\u9650\u671f\u7b49\u5f85\uff08\u4e0d\u8d85\u65f6\uff09\uff0c\u524d\u63d0\u662f <code>INCLUDE_vTaskSuspend</code> \u5728 <code>FreeRTOSConfig.h</code> \u4e2d\u8bbe\u7f6e\u4e3a 1\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u8fd4\u56de\u503c\u662f\u8c03\u7528\u4efb\u52a1\u7684\u901a\u77e5\u503c \u5728 \u6839\u636e <code>xClearCountOnExit</code> \u53c2\u6570\u7684\u503c\u88ab\u6e05\u9664\u4e3a\u96f6\u6216\u9012\u51cf\u4e4b\u524d\u3002</p> <p>\u5982\u679c\u6307\u5b9a\u4e86\u5757\u65f6\u95f4\uff08<code>xTicksToWait</code> \u4e0d\u4e3a\u96f6\uff09\uff0c\u5e76\u4e14\u8fd4\u56de\u503c\u4e0d\u4e3a\u96f6\uff0c\u5219\u8c03\u7528\u4efb\u52a1\u53ef\u80fd\u5df2\u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u5176\u901a\u77e5\u503c\u53d8\u4e3a\u5927\u4e8e\u96f6\uff0c\u4f46\u5176\u901a\u77e5\u503c\u5728\u5757\u65f6\u95f4\u5230\u671f\u4e4b\u524d\u5df2\u88ab\u66f4\u65b0\u3002</p> <p>\u5982\u679c\u6307\u5b9a\u4e86\u5757\u65f6\u95f4\uff08<code>xTicksToWait</code> \u4e0d\u4e3a\u96f6\uff09\uff0c\u5e76\u4e14\u8fd4\u56de\u503c\u4e3a\u96f6\uff0c\u5219\u8c03\u7528\u4efb\u52a1\u88ab\u7f6e\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u5176\u901a\u77e5\u503c\u53d8\u4e3a\u5927\u4e8e\u96f6\uff0c\u4f46\u5728\u6b64\u4e4b\u524d\u6307\u5b9a\u7684\u5757\u65f6\u95f4\u5df2\u5230\u671f\u3002</p>"},{"location":"ch10-%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#_1","title":"10 \u4efb\u52a1\u901a\u77e5","text":"<p>\u793a\u4f8b 10.1 \u4f7f\u7528\u4efb\u52a1\u901a\u77e5\u66ff\u4ee3\u4fe1\u53f7\u91cf\uff0c\u65b9\u6cd5 1</p> <p>\u793a\u4f8b 7.1 \u4f7f\u7528\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u89e3\u9664\u4efb\u52a1\u7684\u963b\u585e\u2014\u2014\u6709\u6548\u5730\u5c06\u4efb\u52a1\u4e0e\u4e2d\u65ad\u540c\u6b65\u3002\u6b64\u793a\u4f8b\u590d\u5236\u4e86\u793a\u4f8b 7.1 \u7684\u529f\u80fd\uff0c\u4f46\u4f7f\u7528\u76f4\u63a5\u4efb\u52a1\u901a\u77e5\u66ff\u4ee3\u4e86\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u3002</p> <p>\u5217\u8868 10.4 \u663e\u793a\u4e86\u4e0e\u4e2d\u65ad\u540c\u6b65\u7684\u4efb\u52a1\u7684\u5b9e\u73b0\u3002\u7528\u4e8e\u793a\u4f8b 7.1 \u4e2d\u7684 <code>xSemaphoreTake()</code> \u8c03\u7528\u5df2\u88ab <code>ulTaskNotifyTake()</code> \u8c03\u7528\u66ff\u6362\u3002</p> <p><code>ulTaskNotifyTake()</code> \u7684 <code>xClearCountOnExit</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>pdTRUE</code>\uff0c\u8fd9\u5bfc\u81f4\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u5728 <code>ulTaskNotifyTake()</code> \u8fd4\u56de\u4e4b\u524d\u88ab\u6e05\u9664\u4e3a\u96f6\u3002\u56e0\u6b64\uff0c\u5728\u6bcf\u6b21\u8c03\u7528 <code>ulTaskNotifyTake()</code> \u4e4b\u95f4\uff0c\u6709\u5fc5\u8981\u5904\u7406\u6240\u6709\u5df2\u53ef\u7528\u7684\u4e8b\u4ef6\u3002\u5728\u793a\u4f8b 7.1 \u4e2d\uff0c\u7531\u4e8e\u4f7f\u7528\u4e86\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\uff0c\u56e0\u6b64\u5fc5\u987b\u4ece\u786c\u4ef6\u786e\u5b9a\u5f85\u5904\u7406\u4e8b\u4ef6\u7684\u6570\u91cf\uff0c\u800c\u8fd9\u5e76\u4e0d\u603b\u662f\u53ef\u884c\u7684\u3002\u5728\u793a\u4f8b 10.1 \u4e2d\uff0c\u5f85\u5904\u7406\u4e8b\u4ef6\u7684\u6570\u91cf\u662f\u901a\u8fc7 <code>ulTaskNotifyTake()</code> \u8fd4\u56de\u7684\u3002</p> <p>\u5728\u8c03\u7528 <code>ulTaskNotifyTake</code> \u4e4b\u95f4\u53d1\u751f\u7684\u4e2d\u65ad\u4e8b\u4ef6\u88ab\u9501\u5b58\u5230\u4efb\u52a1\u7684\u901a\u77e5\u503c\u4e2d\uff0c\u5982\u679c\u8c03\u7528\u4efb\u52a1\u5df2\u7ecf\u6709\u901a\u77e5\u5f85\u5904\u7406\uff0c\u5219\u8c03\u7528 <code>ulTaskNotifyTake()</code> \u5c06\u7acb\u5373\u8fd4\u56de\u3002</p> <p></p> <pre><code>/* \u5468\u671f\u6027\u4efb\u52a1\u751f\u6210\u8f6f\u4ef6\u4e2d\u65ad\u7684\u9891\u7387\u3002 */\nconst TickType_t xInterruptFrequency = pdMS_TO_TICKS( 500UL );\n\nstatic void vHandlerTask( void *pvParameters )\n{\n    /* xMaxExpectedBlockTime \u88ab\u8bbe\u7f6e\u4e3a\u6bd4\u4e8b\u4ef6\u4e4b\u95f4\u7684\u6700\u5927\u9884\u671f\u65f6\u95f4\u7a0d\u957f\u3002 */\n    const TickType_t xMaxExpectedBlockTime = xInterruptFrequency +\n                                             pdMS_TO_TICKS( 10 );\n    uint32_t ulEventsToProcess;\n\n    /* \u4e0e\u5927\u591a\u6570\u4efb\u52a1\u4e00\u6837\uff0c\u8be5\u4efb\u52a1\u5728\u65e0\u9650\u5faa\u73af\u4e2d\u5b9e\u73b0\u3002 */\n    for( ;; )\n    {\n        /* \u7b49\u5f85\u63a5\u6536\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u76f4\u63a5\u53d1\u9001\u5230\u6b64\u4efb\u52a1\u7684\u901a\u77e5\u3002 */\n        ulEventsToProcess = ulTaskNotifyTake( pdTRUE, xMaxExpectedBlockTime );\n        if( ulEventsToProcess != 0 )\n        {\n            /* \u81f3\u5c11\u53d1\u751f\u4e86\u4e00\u6b21\u4e8b\u4ef6\u3002\u5faa\u73af\u5904\u7406\u6240\u6709\u5f85\u5904\u7406\u7684\u4e8b\u4ef6\uff08\u5728\u672c\u4f8b\u4e2d\uff0c\n               \u4ec5\u6253\u5370\u51fa\u6bcf\u4e2a\u4e8b\u4ef6\u7684\u6d88\u606f\uff09\u3002 */\n            while( ulEventsToProcess &gt; 0 )\n            {\n                vPrintString( \"Handler task - Processing event.\\r\\n\" );\n                ulEventsToProcess--;\n            }\n        }\n        else\n        {\n            /* \u5982\u679c\u5230\u8fbe\u6b64\u51fd\u6570\u7684\u6b64\u90e8\u5206\uff0c\u5219\u8868\u793a\u5728\u9884\u671f\u65f6\u95f4\u5185\u672a\u53d1\u751f\u4e2d\u65ad\uff0c\n               \uff08\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff09\u53ef\u80fd\u9700\u8981\u6267\u884c\u4e00\u4e9b\u9519\u8bef\u6062\u590d\u64cd\u4f5c\u3002 */\n        }\n    }\n}\n</code></pre> <p>\u5217\u8868 10.4 \u4e0e\u4e2d\u65ad\u5904\u7406\u76f8\u5173\u7684\u4efb\u52a1\u5b9e\u73b0</p> <p>\u7528\u4e8e\u751f\u6210\u8f6f\u4ef6\u4e2d\u65ad\u7684\u5468\u671f\u6027\u4efb\u52a1\u5728\u4e2d\u65ad\u751f\u6210\u4e4b\u524d\u6253\u5370\u4e00\u6761\u6d88\u606f\uff0c\u5728\u4e2d\u65ad\u751f\u6210\u4e4b\u540e\u518d\u6b21\u6253\u5370\u3002\u8fd9\u5141\u8bb8\u5728\u8f93\u51fa\u4e2d\u89c2\u5bdf\u6267\u884c\u987a\u5e8f\u3002</p> <p>\u5217\u8868 10.5 \u663e\u793a\u4e86\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u3002\u5b83\u6240\u505a\u7684\u53ea\u662f\u5c06\u901a\u77e5\u76f4\u63a5\u53d1\u9001\u5230\u4e2d\u65ad\u5904\u7406\u7684\u4efb\u52a1\u3002</p> <p></p> <pre><code>static uint32_t ulExampleInterruptHandler( void )\n{\n    BaseType_t xHigherPriorityTaskWoken;\n\n    /* xHigherPriorityTaskWoken \u53c2\u6570\u5fc5\u987b\u521d\u59cb\u5316\u4e3a pdFALSE\uff0c\u56e0\u4e3a\u5982\u679c\u9700\u8981\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u5b83\u5c06\u5728\u4e2d\u65ad\u5b89\u5168 API \u51fd\u6570\u5185\u90e8\u88ab\u8bbe\u7f6e\u4e3a pdTRUE\u3002 */\n    xHigherPriorityTaskWoken = pdFALSE;\n\n    /* \u76f4\u63a5\u5c06\u901a\u77e5\u53d1\u9001\u5230\u4e2d\u65ad\u5904\u7406\u88ab\u5ef6\u8fdf\u7684\u4efb\u52a1\u3002 */\n    vTaskNotifyGiveFromISR( /* \u53d1\u9001\u901a\u77e5\u7684\u4efb\u52a1\u7684\u53e5\u67c4\u3002\u53e5\u67c4\u5728\u4efb\u52a1\u521b\u5efa\u65f6\u4fdd\u5b58\u3002 */\n                            xHandlerTask,\n\n                            /* xHigherPriorityTaskWoken \u6309\u7167\u901a\u5e38\u7684\u65b9\u5f0f\u4f7f\u7528\u3002 */\n                            &amp;xHigherPriorityTaskWoken );\n\n    /* \u5c06 xHigherPriorityTaskWoken \u503c\u4f20\u9012\u7ed9 portYIELD_FROM_ISR()\u3002\u5982\u679c \n       xHigherPriorityTaskWoken \u5728 vTaskNotifyGiveFromISR() \u5185\u90e8\u88ab\u8bbe\u7f6e\u4e3a pdTRUE\uff0c\n       \u5219\u8c03\u7528 portYIELD_FROM_ISR() \u5c06\u8bf7\u6c42\u4e0a\u4e0b\u6587\u5207\u6362\u3002\u5982\u679c\n       xHigherPriorityTaskWoken \u4ecd\u7136\u662f pdFALSE\uff0c\u5219\u8c03\u7528 \n       portYIELD_FROM_ISR() \u5c06\u6ca1\u6709\u6548\u679c\u3002Windows \u79fb\u690d\u4e2d\u4f7f\u7528\u7684\n       portYIELD_FROM_ISR() \u7684\u5b9e\u73b0\u5305\u62ec\u4e00\u4e2a\u8fd4\u56de\u8bed\u53e5\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8be5\u51fd\u6570\n       \u4e0d\u663e\u5f0f\u8fd4\u56de\u503c\u7684\u539f\u56e0\u3002 */\n    portYIELD_FROM_ISR( xHigherPriorityTaskWoken );\n}\n</code></pre> <p>\u5217\u8868 10.5 \u793a\u4f8b 10.1 \u4e2d\u4f7f\u7528\u7684\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u7684\u5b9e\u73b0</p> <p>\u6267\u884c\u793a\u4f8b 10.1 \u65f6\u751f\u6210\u7684\u8f93\u51fa\u5982\u56fe 10.3 \u6240\u793a\u3002 \u5982\u9884\u671f\u7684\u90a3\u6837\uff0c\u5b83\u4e0e\u6267\u884c\u793a\u4f8b 7.1 \u65f6\u751f\u6210\u7684\u8f93\u51fa\u76f8\u540c\u3002<code>vHandlerTask()</code> \u5728\u4e2d\u65ad\u751f\u6210\u540e\u7acb\u5373\u8fdb\u5165\u8fd0\u884c\u72b6\u6001\uff0c\u56e0\u6b64\u4efb\u52a1\u7684\u8f93\u51fa\u4e0e\u5468\u671f\u4efb\u52a1\u751f\u6210\u7684\u8f93\u51fa\u4ea4\u9519\u3002\u56fe 10.4 \u63d0\u4f9b\u4e86\u8fdb\u4e00\u6b65\u7684\u89e3\u91ca\u3002</p> <p> </p> <p> \u56fe 10.3 \u6267\u884c\u793a\u4f8b 7.1 \u65f6\u751f\u6210\u7684\u8f93\u51fa</p> <p> \u56fe 10.4 \u6267\u884c\u793a\u4f8b 10.1 \u65f6\u7684\u6267\u884c\u987a\u5e8f</p>"},{"location":"ch10-%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#_2","title":"10 \u4efb\u52a1\u901a\u77e5","text":"<p>\u793a\u4f8b 10.2 \u4f7f\u7528\u4efb\u52a1\u901a\u77e5\u66ff\u4ee3\u4fe1\u53f7\u91cf\uff0c\u65b9\u6cd5 2</p> <p>\u5728\u793a\u4f8b 10.1 \u4e2d\uff0c<code>ulTaskNotifyTake()</code> \u7684 <code>xClearOnExit</code> \u53c2\u6570\u88ab\u8bbe\u7f6e\u4e3a <code>pdTRUE</code>\u3002\u793a\u4f8b 10.1 \u7a0d\u5fae\u4fee\u6539\u4e86\u793a\u4f8b 10.1\uff0c\u4ee5\u6f14\u793a\u5f53 <code>ulTaskNotifyTake()</code> \u7684 <code>xClearOnExit</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>pdFALSE</code> \u65f6\u7684\u884c\u4e3a\u3002</p> <p>\u5f53 <code>xClearOnExit</code> \u4e3a <code>pdFALSE</code> \u65f6\uff0c\u8c03\u7528 <code>ulTaskNotifyTake()</code> \u53ea\u4f1a\u9012\u51cf\uff08\u51cf\u5c11\uff09\u8c03\u7528\u4efb\u52a1\u7684\u901a\u77e5\u503c\uff0c\u800c\u4e0d\u662f\u5c06\u5176\u6e05\u9664\u4e3a\u96f6\u3002\u56e0\u6b64\uff0c\u901a\u77e5\u8ba1\u6570\u662f\u5df2\u53d1\u751f\u7684\u4e8b\u4ef6\u6570\u91cf\u4e0e\u5df2\u5904\u7406\u7684\u4e8b\u4ef6\u6570\u91cf\u4e4b\u95f4\u7684\u5dee\u503c\u3002\u8fd9\u5141\u8bb8\u7b80\u5316 <code>vHandlerTask()</code> \u7684\u7ed3\u6784\uff0c\u5177\u4f53\u4f53\u73b0\u5728\u4e24\u4e2a\u65b9\u9762\uff1a</p> <ol> <li> <p>\u5f85\u5904\u7406\u4e8b\u4ef6\u7684\u6570\u91cf\u4fdd\u5b58\u5728\u901a\u77e5\u503c\u4e2d\uff0c\u56e0\u6b64\u4e0d\u518d\u9700\u8981\u5728\u672c\u5730\u53d8\u91cf\u4e2d\u4fdd\u5b58\u3002</p> </li> <li> <p>\u5728\u6bcf\u6b21\u8c03\u7528 <code>ulTaskNotifyTake()</code> \u4e4b\u95f4\uff0c\u53ea\u9700\u5904\u7406\u4e00\u4e2a\u4e8b\u4ef6\u3002</p> </li> </ol> <p>\u793a\u4f8b 10.2 \u4e2d\u4f7f\u7528\u7684 <code>vHandlerTask()</code> \u7684\u5b9e\u73b0\u5982\u5217\u8868 10.6 \u6240\u793a\u3002</p> <p></p> <pre><code>static void vHandlerTask( void *pvParameters )\n{\n    /* xMaxExpectedBlockTime \u88ab\u8bbe\u7f6e\u4e3a\u6bd4\u4e8b\u4ef6\u4e4b\u95f4\u7684\u6700\u5927\u9884\u671f\u65f6\u95f4\u7a0d\u957f\u3002 */\n    const TickType_t xMaxExpectedBlockTime = xInterruptFrequency + \n                                             pdMS_TO_TICKS( 10 );\n\n    /* \u4e0e\u5927\u591a\u6570\u4efb\u52a1\u4e00\u6837\uff0c\u8be5\u4efb\u52a1\u5728\u65e0\u9650\u5faa\u73af\u4e2d\u5b9e\u73b0\u3002 */\n    for( ;; )\n    {\n        /* \u7b49\u5f85\u63a5\u6536\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u76f4\u63a5\u53d1\u9001\u5230\u6b64\u4efb\u52a1\u7684\u901a\u77e5\u3002 xClearCountOnExit \u53c2\u6570\u73b0\u5728\u662f\n           pdFALSE\uff0c\u56e0\u6b64\u4efb\u52a1\u7684\u901a\u77e5\u503c\u5c06\u88ab ulTaskNotifyTake() \u9012\u51cf\uff0c\u800c\u4e0d\u662f\u6e05\u9664\u4e3a\u96f6\u3002 */\n        if( ulTaskNotifyTake( pdFALSE, xMaxExpectedBlockTime ) != 0 )\n        {\n            /* \u53d1\u751f\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u3002\u73b0\u5728\u5904\u7406\u5b83\u3002 */\n            vPrintString( \"Handler task - Processing event.\\r\\n\" );\n        }\n        else\n        {\n            /* \u5982\u679c\u5230\u8fbe\u6b64\u51fd\u6570\u7684\u6b64\u90e8\u5206\uff0c\u5219\u8868\u793a\u5728\u9884\u671f\u65f6\u95f4\u5185\u672a\u53d1\u751f\u4e2d\u65ad\uff0c\n               \uff08\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff09\u53ef\u80fd\u9700\u8981\u6267\u884c\u4e00\u4e9b\u9519\u8bef\u6062\u590d\u64cd\u4f5c\u3002 */\n        }\n    }\n}\n</code></pre> <p>\u5217\u8868 10.6 \u4e0e\u4e2d\u65ad\u5904\u7406\u76f8\u5173\u7684\u4efb\u52a1\u5b9e\u73b0\u793a\u4f8b 10.2</p> <p>\u51fa\u4e8e\u6f14\u793a\u76ee\u7684\uff0c\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e5f\u88ab\u4fee\u6539\u4e3a\u5728\u6bcf\u6b21\u4e2d\u65ad\u65f6\u53d1\u9001\u591a\u4e2a\u4efb\u52a1\u901a\u77e5\uff0c\u4ece\u800c\u6a21\u62df\u5728\u9ad8\u9891\u7387\u4e0b\u53d1\u751f\u591a\u4e2a\u4e2d\u65ad\u3002\u793a\u4f8b 10.2 \u4e2d\u4f7f\u7528\u7684\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u7684\u5b9e\u73b0\u5982\u5217\u8868 10.7 \u6240\u793a\u3002</p> <p></p> <pre><code>static uint32_t ulExampleInterruptHandler( void )\n{\n    BaseType_t xHigherPriorityTaskWoken;\n\n    xHigherPriorityTaskWoken = pdFALSE;\n\n    /* \u5411\u5904\u7406\u4efb\u52a1\u53d1\u9001\u591a\u4e2a\u901a\u77e5\u3002\u7b2c\u4e00\u6b21 'give' \u5c06\u89e3\u9664\u4efb\u52a1\u963b\u585e\uff0c\u540e\u7eed\u7684 'gives' \u7528\u4e8e\u6f14\u793a\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u88ab\u7528\u4f5c\u8ba1\u6570\uff08\u9501\u5b58\uff09\u4e8b\u4ef6 - \u5141\u8bb8\u4efb\u52a1\u4f9d\u6b21\u5904\u7406\u6bcf\u4e2a\u4e8b\u4ef6\u3002 */\n    vTaskNotifyGiveFromISR( xHandlerTask, &amp;xHigherPriorityTaskWoken );\n    vTaskNotifyGiveFromISR( xHandlerTask, &amp;xHigherPriorityTaskWoken );\n    vTaskNotifyGiveFromISR( xHandlerTask, &amp;xHigherPriorityTaskWoken );\n\n    portYIELD_FROM_ISR( xHigherPriorityTaskWoken );\n}\n</code></pre> <p>\u5217\u8868 10.7 \u793a\u4f8b 10.2 \u4e2d\u4f7f\u7528\u7684\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u7684\u5b9e\u73b0</p> <p>\u6267\u884c\u793a\u4f8b 10.2 \u65f6\u751f\u6210\u7684\u8f93\u51fa\u5982\u56fe 10.5 \u6240\u793a\u3002 \u5982\u6240\u793a\uff0c<code>vHandlerTask()</code> \u5728\u6bcf\u6b21\u751f\u6210\u4e2d\u65ad\u65f6\u5904\u7406\u6240\u6709\u4e09\u4e2a\u4e8b\u4ef6\u3002</p> <p></p> <p> \u56fe 10.5 \u6267\u884c\u793a\u4f8b 10.2 \u65f6\u751f\u6210\u7684\u8f93\u51fa</p>"},{"location":"ch10-%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#1035-xtasknotify-xtasknotifyfromisr-api","title":"10.3.5 xTaskNotify() \u548c xTaskNotifyFromISR() API \u51fd\u6570","text":"<p><code>xTaskNotify()</code> \u662f <code>xTaskNotifyGive()</code> \u7684\u4e00\u4e2a\u66f4\u5f3a\u5927\u7684\u7248\u672c\uff0c\u53ef\u7528\u4e8e\u4ee5\u4ee5\u4e0b\u4efb\u610f\u65b9\u5f0f\u66f4\u65b0\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\uff1a</p> <ul> <li> <p>\u589e\u52a0\uff08\u52a0\u4e00\uff09\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c<code>xTaskNotify()</code> \u7b49\u6548\u4e8e <code>xTaskNotifyGive()</code>\u3002</p> </li> <li> <p>\u8bbe\u7f6e\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u4e2d\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u4f4d\u3002\u8fd9\u5141\u8bb8\u5c06\u4efb\u52a1\u7684\u901a\u77e5\u503c\u7528\u4f5c\u4e8b\u4ef6\u7ec4\u7684\u66f4\u8f7b\u91cf\u7ea7\u548c\u66f4\u5feb\u7684\u66ff\u4ee3\u54c1\u3002</p> </li> <li> <p>\u5411\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u5199\u5165\u4e00\u4e2a\u5168\u65b0\u7684\u6570\u5b57\uff0c\u4f46\u524d\u63d0\u662f\u63a5\u6536\u4efb\u52a1\u81ea\u4e0a\u6b21\u66f4\u65b0\u4ee5\u6765\u5df2\u8bfb\u53d6\u5176\u901a\u77e5\u503c\u3002\u8fd9\u5141\u8bb8\u4efb\u52a1\u7684\u901a\u77e5\u503c\u63d0\u4f9b\u7c7b\u4f3c\u4e8e\u957f\u5ea6\u4e3a\u4e00\u7684\u961f\u5217\u6240\u63d0\u4f9b\u7684\u529f\u80fd\u3002</p> </li> <li> <p>\u5411\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u5199\u5165\u4e00\u4e2a\u5168\u65b0\u7684\u6570\u5b57\uff0c\u5373\u4f7f\u63a5\u6536\u4efb\u52a1\u81ea\u4e0a\u6b21\u66f4\u65b0\u4ee5\u6765\u5c1a\u672a\u8bfb\u53d6\u5176\u901a\u77e5\u503c\u3002\u8fd9\u5141\u8bb8\u4efb\u52a1\u7684\u901a\u77e5\u503c\u63d0\u4f9b\u7c7b\u4f3c\u4e8e <code>xQueueOverwrite()</code> API \u51fd\u6570\u6240\u63d0\u4f9b\u7684\u529f\u80fd\u3002\u7ed3\u679c\u884c\u4e3a\u6709\u65f6\u88ab\u79f0\u4e3a\u201c\u90ae\u7bb1\u201d\u3002</p> </li> </ul> <p><code>xTaskNotify()</code> \u6bd4 <code>xTaskNotifyGive()</code> \u66f4\u7075\u6d3b\u548c\u5f3a\u5927\uff0c\u7531\u4e8e\u989d\u5916\u7684\u7075\u6d3b\u6027\u548c\u5f3a\u5927\uff0c\u5b83\u7684\u4f7f\u7528\u4e5f\u7a0d\u5fae\u590d\u6742\u4e00\u4e9b\u3002</p> <p><code>xTaskNotifyFromISR()</code> \u662f\u53ef\u4ee5\u5728\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u4f7f\u7528\u7684 <code>xTaskNotify()</code> \u7684\u4e00\u4e2a\u7248\u672c\uff0c\u56e0\u6b64\u5b83\u6709\u4e00\u4e2a\u989d\u5916\u7684 <code>pxHigherPriorityTaskWoken</code> \u53c2\u6570\u3002</p> <p>\u8c03\u7528 <code>xTaskNotify()</code> \u5c06\u59cb\u7ec8\u4f7f\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u72b6\u6001\u8bbe\u7f6e\u4e3a\u5f85\u5904\u7406\uff08\u5982\u679c\u5b83\u5c1a\u672a\u5904\u4e8e\u5f85\u5904\u7406\u72b6\u6001\uff09\u3002</p> <p></p> <pre><code>BaseType_t xTaskNotify( TaskHandle_t xTaskToNotify,\n                        uint32_t ulValue,\n                        eNotifyAction eAction );\n\nBaseType_t xTaskNotifyFromISR( TaskHandle_t xTaskToNotify,\n                               uint32_t ulValue,\n                               eNotifyAction eAction,\n                               BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre> <p>\u5217\u8868 10.8 xTaskNotify() \u548c xTaskNotifyFromISR() API \u51fd\u6570\u539f\u578b</p> <p>xTaskNotify() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>xTaskToNotify</code></li> </ul> <p>\u8981\u53d1\u9001\u901a\u77e5\u7684\u4efb\u52a1\u7684\u53e5\u67c4\u2014\u2014\u6709\u5173\u83b7\u53d6\u4efb\u52a1\u53e5\u67c4\u7684\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 <code>xTaskCreate()</code> API \u51fd\u6570\u7684 <code>pxCreatedTask</code> \u53c2\u6570\u3002</p> <ul> <li><code>ulValue</code></li> </ul> <p><code>ulValue</code> \u7684\u4f7f\u7528\u65b9\u5f0f\u53d6\u51b3\u4e8e <code>eNotifyAction</code> \u7684\u503c\u3002\u89c1\u4e0b\u6587\u3002</p> <ul> <li><code>eNotifyAction</code></li> </ul> <p>\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b\uff0c\u6307\u5b9a\u5982\u4f55\u66f4\u65b0\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u3002\u89c1\u4e0b\u6587\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p><code>xTaskNotify()</code> \u5c06\u8fd4\u56de <code>pdPASS</code> \u9664\u4e86\u4e0b\u9762\u63d0\u5230\u7684\u4e00\u4e2a\u4f8b\u5916\u60c5\u51b5\u3002</p> <p>\u6709\u6548\u7684 xTaskNotify() eNotifyAction \u53c2\u6570\u503c\u53ca\u5176\u5bf9\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u7684\u7ed3\u679c\u5f71\u54cd</p> <ul> <li><code>eNoAction</code></li> </ul> <p>\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u72b6\u6001\u88ab\u8bbe\u7f6e\u4e3a\u5f85\u5904\u7406\uff0c\u800c\u5176\u901a\u77e5\u503c\u672a\u88ab\u66f4\u65b0\u3002<code>xTaskNotify()</code> \u7684 <code>ulValue</code> \u53c2\u6570\u672a\u4f7f\u7528\u3002</p> <p><code>eNoAction</code> \u52a8\u4f5c\u5141\u8bb8\u5c06\u4efb\u52a1\u901a\u77e5\u7528\u4f5c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u7684\u66f4\u5feb\u548c\u66f4\u8f7b\u91cf\u7ea7\u7684\u66ff\u4ee3\u54c1\u3002</p> <ul> <li><code>eSetBits</code></li> </ul> <p>\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u4e0e\u901a\u8fc7 <code>xTaskNotify()</code> \u7684 <code>ulValue</code> \u53c2\u6570\u4f20\u9012\u7684\u503c\u8fdb\u884c\u6309\u4f4d\u6216\u3002\u4f8b\u5982\uff0c\u5982\u679c <code>ulValue</code> \u8bbe\u7f6e\u4e3a 0x01\uff0c\u5219\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u7684\u7b2c 0 \u4f4d\u5c06\u88ab\u8bbe\u7f6e\u3002\u4f5c\u4e3a\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c <code>ulValue</code> \u4e3a 0x06\uff08\u4e8c\u8fdb\u5236 0110\uff09\uff0c\u5219\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u7684\u7b2c 1 \u4f4d\u548c\u7b2c 2 \u4f4d\u5c06\u88ab\u8bbe\u7f6e\u3002</p> <p><code>eSetBits</code> \u52a8\u4f5c\u5141\u8bb8\u5c06\u4efb\u52a1\u901a\u77e5\u7528\u4f5c\u4e8b\u4ef6\u7ec4\u7684\u66f4\u5feb\u548c\u66f4\u8f7b\u91cf\u7ea7\u7684\u66ff\u4ee3\u54c1\u3002</p> <ul> <li><code>eIncrement</code></li> </ul> <p>\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u9012\u589e\u3002<code>xTaskNotify()</code> \u7684 <code>ulValue</code> \u53c2\u6570\u672a\u4f7f\u7528\u3002</p> <p><code>eIncrement</code> \u52a8\u4f5c\u5141\u8bb8\u5c06\u4efb\u52a1\u901a\u77e5\u7528\u4f5c\u4e8c\u8fdb\u5236\u6216\u8ba1\u6570\u4fe1\u53f7\u91cf\u7684\u66f4\u5feb\u548c\u66f4\u8f7b\u91cf\u7ea7\u7684\u66ff\u4ee3\u54c1\uff0c\u7b49\u6548\u4e8e\u66f4\u7b80\u5355\u7684 <code>xTaskNotifyGive()</code> API \u51fd\u6570\u3002</p> <ul> <li><code>eSetValueWithoutOverwrite</code></li> </ul> <p>\u5982\u679c\u63a5\u6536\u4efb\u52a1\u5728\u8c03\u7528 <code>xTaskNotify()</code> \u4e4b\u524d\u5df2\u7ecf\u6709\u901a\u77e5\u5f85\u5904\u7406\uff0c\u5219\u4e0d\u91c7\u53d6\u4efb\u4f55\u64cd\u4f5c\uff0c<code>xTaskNotify()</code> \u5c06\u8fd4\u56de <code>pdFAIL</code>\u3002</p> <p>\u5982\u679c\u63a5\u6536\u4efb\u52a1\u5728\u8c03\u7528 <code>xTaskNotify()</code> \u4e4b\u524d\u6ca1\u6709\u901a\u77e5\u5f85\u5904\u7406\uff0c\u5219\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u88ab\u8bbe\u7f6e\u4e3a <code>xTaskNotify()</code> \u7684 <code>ulValue</code> \u53c2\u6570\u4e2d\u4f20\u9012\u7684\u503c\u3002</p> <ul> <li><code>eSetValueWithOverwrite</code></li> </ul> <p>\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u88ab\u8bbe\u7f6e\u4e3a <code>xTaskNotify()</code> \u7684 <code>ulValue</code> \u53c2\u6570\u4e2d\u4f20\u9012\u7684\u503c\uff0c\u65e0\u8bba\u63a5\u6536\u4efb\u52a1\u5728\u8c03\u7528 <code>xTaskNotify()</code> \u4e4b\u524d\u662f\u5426\u6709\u901a\u77e5\u5f85\u5904\u7406\u3002</p>"},{"location":"ch10-%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#1036-xtasknotifywait-api","title":"10.3.6 xTaskNotifyWait() API \u51fd\u6570","text":"<p><code>xTaskNotifyWait()</code> \u662f <code>ulTaskNotifyTake()</code> \u7684\u4e00\u4e2a\u66f4\u5f3a\u5927\u7684\u7248\u672c\u3002\u5b83\u5141\u8bb8\u4efb\u52a1\u7b49\u5f85\uff0c\u5177\u6709\u53ef\u9009\u7684\u8d85\u65f6\uff0c\u76f4\u5230\u8c03\u7528\u4efb\u52a1\u7684\u901a\u77e5\u72b6\u6001\u53d8\u4e3a\u5f85\u5904\u7406\uff08\u5982\u679c\u5b83\u5c1a\u672a\u5904\u4e8e\u5f85\u5904\u7406\u72b6\u6001\uff09\u3002<code>xTaskNotifyWait()</code> \u63d0\u4f9b\u4e86\u5728\u8fdb\u5165\u51fd\u6570\u65f6\u548c\u9000\u51fa\u51fd\u6570\u65f6\u6e05\u9664\u8c03\u7528\u4efb\u52a1\u7684\u901a\u77e5\u503c\u4e2d\u7684\u4f4d\u7684\u9009\u9879\u3002</p> <p></p> <pre><code>BaseType_t xTaskNotifyWait( uint32_t   ulBitsToClearOnEntry,\n                            uint32_t   ulBitsToClearOnExit,\n                            uint32_t   *pulNotificationValue,\n                            TickType_t xTicksToWait );\n</code></pre> <p>\u5217\u8868 10.9 xTaskNotifyWait() API \u51fd\u6570\u539f\u578b</p> <p>xTaskNotifyWait() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>ulBitsToClearOnEntry</code></li> </ul> <p>\u5982\u679c\u8c03\u7528\u4efb\u52a1\u5728\u8c03\u7528 <code>xTaskNotifyWait()</code> \u4e4b\u524d\u6ca1\u6709\u901a\u77e5\u5f85\u5904\u7406\uff0c\u5219\u5728\u8fdb\u5165\u51fd\u6570\u65f6\u5c06\u6e05\u9664 <code>ulBitsToClearOnEntry</code> \u4e2d\u8bbe\u7f6e\u7684\u4efb\u4f55\u4f4d\u3002</p> <p>\u4f8b\u5982\uff0c\u5982\u679c <code>ulBitsToClearOnEntry</code> \u4e3a 0x01\uff0c\u5219\u5728\u8fdb\u5165\u51fd\u6570\u65f6\u5c06\u6e05\u9664\u4efb\u52a1\u901a\u77e5\u503c\u7684\u7b2c 0 \u4f4d\u3002\u4f5c\u4e3a\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5c06 <code>ulBitsToClearOnEntry</code> \u8bbe\u7f6e\u4e3a 0xffffffff\uff08<code>ULONG_MAX</code>\uff09\u5c06\u6e05\u9664\u4efb\u52a1\u901a\u77e5\u503c\u4e2d\u7684\u6240\u6709\u4f4d\uff0c\u6709\u6548\u5730\u5c06\u503c\u6e05\u9664\u4e3a 0\u3002</p> <ul> <li><code>ulBitsToClearOnExit</code></li> </ul> <p>\u5982\u679c\u8c03\u7528\u4efb\u52a1\u5728\u9000\u51fa <code>xTaskNotifyWait()</code> \u65f6\u6536\u5230\u901a\u77e5\uff0c\u6216\u8005\u5728\u8c03\u7528 <code>xTaskNotifyWait()</code> \u65f6\u5df2\u7ecf\u6709\u901a\u77e5\u5f85\u5904\u7406\uff0c\u5219\u5728\u9000\u51fa <code>xTaskNotifyWait()</code> \u51fd\u6570\u4e4b\u524d\uff0c\u5c06\u6e05\u9664 <code>ulBitsToClearOnExit</code> \u4e2d\u8bbe\u7f6e\u7684\u4efb\u4f55\u4f4d\u3002</p> <p>\u5728 <code>*pulNotificationValue</code> \u4e2d\u4fdd\u5b58\u4efb\u52a1\u7684\u901a\u77e5\u503c\uff08\u8bf7\u53c2\u9605 <code>pulNotificationValue</code> \u7684\u63cf\u8ff0\uff09\u4e4b\u540e\uff0c\u6e05\u9664\u8fd9\u4e9b\u4f4d\u3002</p> <p>\u4f8b\u5982\uff0c\u5982\u679c <code>ulBitsToClearOnExit</code> \u4e3a 0x03\uff0c\u5219\u5728\u51fd\u6570\u9000\u51fa\u4e4b\u524d\u5c06\u6e05\u9664\u4efb\u52a1\u901a\u77e5\u503c\u7684\u7b2c 0 \u4f4d\u548c\u7b2c 1 \u4f4d\u3002</p> <p>\u5c06 <code>ulBitsToClearOnExit</code> \u8bbe\u7f6e\u4e3a 0xffffffff\uff08<code>ULONG_MAX</code>\uff09\u5c06\u6e05\u9664\u4efb\u52a1\u901a\u77e5\u503c\u4e2d\u7684\u6240\u6709\u4f4d\uff0c\u6709\u6548\u5730\u5c06\u503c\u6e05\u9664\u4e3a 0\u3002</p> <ul> <li><code>pulNotificationValue</code></li> </ul> <p>\u7528\u4e8e\u4f20\u51fa\u4efb\u52a1\u7684\u901a\u77e5\u503c\u3002\u590d\u5236\u5230 <code>*pulNotificationValue</code> \u7684\u503c\u662f\u4efb\u52a1\u7684\u901a\u77e5\u503c\uff0c\u5728\u7531\u4e8e <code>ulBitsToClearOnExit</code> \u8bbe\u7f6e\u800c\u6e05\u9664\u4efb\u4f55\u4f4d\u4e4b\u524d\u7684\u503c\u3002</p> <p><code>pulNotificationValue</code> \u662f\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u5982\u679c\u4e0d\u9700\u8981\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a NULL\u3002</p> <ul> <li><code>xTicksToWait</code></li> </ul> <p>\u8c03\u7528\u4efb\u52a1\u5e94\u5728\u963b\u585e\u72b6\u6001\u4e0b\u7b49\u5f85\u5176\u901a\u77e5\u72b6\u6001\u53d8\u4e3a\u5f85\u5904\u7406\u7684\u6700\u957f\u65f6\u95f4\u3002</p> <p>\u5757\u65f6\u95f4\u4ee5\u6ef4\u7b54\u5468\u671f\u4e3a\u5355\u4f4d\u6307\u5b9a\uff0c\u56e0\u6b64\u5b83\u6240\u4ee3\u8868\u7684\u7edd\u5bf9\u65f6\u95f4\u53d6\u51b3\u4e8e\u6ef4\u7b54\u9891\u7387\u3002\u5b8f <code>pdMS_TO_TICKS()</code> \u53ef\u7528\u4e8e\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5\u6ef4\u7b54\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u3002</p> <p>\u5c06 <code>xTicksToWait</code> \u8bbe\u7f6e\u4e3a <code>portMAX_DELAY</code> \u5c06\u5bfc\u81f4\u4efb\u52a1\u65e0\u9650\u671f\u7b49\u5f85\uff08\u4e0d\u8d85\u65f6\uff09\uff0c\u524d\u63d0\u662f <code>INCLUDE_vTaskSuspend</code> \u5728 <code>FreeRTOSConfig.h</code> \u4e2d\u8bbe\u7f6e\u4e3a 1\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u6709\u4e24\u79cd\u53ef\u80fd\u7684\u8fd4\u56de\u503c\uff1a</p> <ul> <li> <p><code>pdTRUE</code></p> <p>\u8868\u793a <code>xTaskNotifyWait()</code> \u8fd4\u56de\u662f\u56e0\u4e3a\u6536\u5230\u4e86\u901a\u77e5\uff0c\u6216\u8005\u56e0\u4e3a\u8c03\u7528\u4efb\u52a1\u5728\u8c03\u7528 <code>xTaskNotifyWait()</code> \u65f6\u5df2\u7ecf\u6709\u901a\u77e5\u5f85\u5904\u7406\u3002</p> <p>\u5982\u679c\u6307\u5b9a\u4e86\u5757\u65f6\u95f4\uff08<code>xTicksToWait</code> \u4e0d\u4e3a\u96f6\uff09\uff0c\u5219\u8c03\u7528\u4efb\u52a1\u53ef\u80fd\u5df2\u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u5176\u901a\u77e5\u72b6\u6001\u53d8\u4e3a\u5f85\u5904\u7406\uff0c\u4f46\u5176\u901a\u77e5\u72b6\u6001\u5728\u5757\u65f6\u95f4\u5230\u671f\u4e4b\u524d\u5df2\u88ab\u8bbe\u7f6e\u4e3a\u5f85\u5904\u7406\u3002</p> </li> <li> <p><code>pdFALSE</code></p> <p>\u8868\u793a <code>xTaskNotifyWait()</code> \u8fd4\u56de\u65f6\u8c03\u7528\u4efb\u52a1\u6ca1\u6709\u6536\u5230\u4efb\u52a1\u901a\u77e5\u3002</p> <p>\u5982\u679c <code>xTicksToWait</code> \u4e0d\u4e3a\u96f6\uff0c\u5219\u8c03\u7528\u4efb\u52a1\u5c06\u88ab\u7f6e\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u5176\u901a\u77e5\u72b6\u6001\u53d8\u4e3a\u5f85\u5904\u7406\uff0c\u4f46\u5728\u6b64\u4e4b\u524d\u6307\u5b9a\u7684\u5757\u65f6\u95f4\u5df2\u5230\u671f\u3002</p> </li> </ul>"},{"location":"ch10-%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#1037-uart","title":"10.3.7 \u4efb\u52a1\u901a\u77e5\u5728\u5916\u8bbe\u9a71\u52a8\u4e2d\u7684\u5e94\u7528\uff1aUART \u793a\u4f8b","text":"<p>\u5916\u8bbe\u9a71\u52a8\u7a0b\u5e8f\u5e93\u63d0\u4f9b\u5bf9\u786c\u4ef6\u63a5\u53e3\u6267\u884c\u5e38\u89c1\u64cd\u4f5c\u7684\u51fd\u6570\u3002\u6b64\u7c7b\u5916\u8bbe\u7684\u793a\u4f8b\u5305\u62ec\u901a\u7528\u5f02\u6b65\u63a5\u6536\u5668\u548c\u53d1\u5c04\u5668\uff08UART\uff09\u3001\u4e32\u884c\u5916\u8bbe\u63a5\u53e3\uff08SPI\uff09\u7aef\u53e3\u3001\u6a21\u6570\u8f6c\u6362\u5668\uff08ADC\uff09\u548c Ethernet \u7aef\u53e3\u3002\u6b64\u7c7b\u5e93\u901a\u5e38\u63d0\u4f9b\u7684\u51fd\u6570\u793a\u4f8b\u5305\u62ec\u521d\u59cb\u5316\u5916\u8bbe\u3001\u5411\u5916\u8bbe\u53d1\u9001\u6570\u636e\u548c\u4ece\u5916\u8bbe\u63a5\u6536\u6570\u636e\u7684\u51fd\u6570\u3002</p> <p>\u67d0\u4e9b\u5916\u8bbe\u4e0a\u7684\u64cd\u4f5c\u9700\u8981\u76f8\u5bf9\u8f83\u957f\u7684\u65f6\u95f4\u624d\u80fd\u5b8c\u6210\u3002\u6b64\u7c7b\u64cd\u4f5c\u7684\u793a\u4f8b\u5305\u62ec\u9ad8\u7cbe\u5ea6 ADC \u8f6c\u6362\u548c\u5728 UART \u4e0a\u4f20\u8f93\u5927\u6570\u636e\u5305\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u9a71\u52a8\u7a0b\u5e8f\u5e93\u51fd\u6570\u53ef\u4ee5\u5b9e\u73b0\u4e3a\u8f6e\u8be2\uff08\u91cd\u590d\u8bfb\u53d6\uff09\u5916\u8bbe\u7684\u72b6\u6001\u5bc4\u5b58\u5668\uff0c\u4ee5\u786e\u5b9a\u64cd\u4f5c\u4f55\u65f6\u5b8c\u6210\u3002\u7136\u800c\uff0c\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8fdb\u884c\u8f6e\u8be2\u51e0\u4e4e\u603b\u662f\u6d6a\u8d39\u7684\uff0c\u56e0\u4e3a\u5b83\u5728\u6ca1\u6709\u8fdb\u884c\u4efb\u4f55\u6709\u6548\u5904\u7406\u65f6\u4f1a\u5360\u7528\u5904\u7406\u5668 100% \u7684\u65f6\u95f4\u3002\u8fd9\u79cd\u6d6a\u8d39\u5728\u591a\u4efb\u52a1\u7cfb\u7edf\u4e2d\u5c24\u5176\u6602\u8d35\uff0c\u56e0\u4e3a\u8f6e\u8be2\u5916\u8bbe\u7684\u4efb\u52a1\u53ef\u80fd\u4f1a\u963b\u6b62\u8f83\u4f4e\u4f18\u5148\u7ea7\u4efb\u52a1\u7684\u6267\u884c\uff0c\u800c\u540e\u8005\u786e\u5b9e\u6709\u6709\u6548\u7684\u5904\u7406\u8981\u6267\u884c\u3002</p> <p>\u4e3a\u4e86\u907f\u514d\u6d6a\u8d39\u5904\u7406\u65f6\u95f4\uff0c\u9ad8\u6548\u7684 RTOS \u611f\u77e5\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u5e94\u8be5\u662f\u57fa\u4e8e\u4e2d\u65ad\u7684\uff0c\u5e76\u5141\u8bb8\u5728\u963b\u585e\u72b6\u6001\u4e0b\u7b49\u5f85\u64cd\u4f5c\u5b8c\u6210\u7684\u4efb\u52a1\u3002\u8fd9\u6837\uff0c\u8f83\u4f4e\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\u53ef\u4ee5\u5728\u6267\u884c\u8017\u65f6\u64cd\u4f5c\u7684\u4efb\u52a1\u5904\u4e8e\u963b\u585e\u72b6\u6001\u65f6\u6267\u884c\uff0c\u800c\u6ca1\u6709\u4efb\u52a1\u4f1a\u5728\u65e0\u6cd5\u6709\u6548\u5229\u7528\u7684\u60c5\u51b5\u4e0b\u5360\u7528\u5904\u7406\u65f6\u95f4\u3002</p> <p>RTOS \u611f\u77e5\u9a71\u52a8\u7a0b\u5e8f\u5e93\u901a\u5e38\u4f7f\u7528\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u5c06\u4efb\u52a1\u7f6e\u4e8e\u963b\u585e\u72b6\u6001\u3002\u8be5\u6280\u672f\u7531\u5217\u8868 10.10 \u4e2d\u793a\u4f8b\u4ee3\u7801\u6f14\u793a\uff0c\u8be5\u793a\u4f8b\u63d0\u4f9b\u4e86\u5728 UART \u7aef\u53e3\u4e0a\u4f20\u8f93\u6570\u636e\u7684 RTOS \u611f\u77e5\u5e93\u51fd\u6570\u7684\u8f6e\u5ed3\u3002\u5728\u5217\u8868 10.10 \u4e2d\uff1a</p> <ul> <li> <p><code>xUART</code> \u662f\u63cf\u8ff0 UART \u5916\u8bbe\u5e76\u4fdd\u5b58\u72b6\u6001\u4fe1\u606f\u7684\u7ed3\u6784\u3002\u7ed3\u6784\u7684 <code>xTxSemaphore</code> \u6210\u5458\u662f <code>SemaphoreHandle_t</code> \u7c7b\u578b\u7684\u53d8\u91cf\u3002\u5047\u8bbe\u4fe1\u53f7\u91cf\u5df2\u7ecf\u521b\u5efa\u3002</p> </li> <li> <p><code>xUART_Send()</code> \u51fd\u6570\u4e0d\u5305\u62ec\u4efb\u4f55\u4e92\u65a5\u903b\u8f91\u3002\u5982\u679c\u591a\u4e2a\u4efb\u52a1\u8981\u4f7f\u7528 <code>xUART_Send()</code> \u51fd\u6570\uff0c\u5219\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u8005\u5fc5\u987b\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7ba1\u7406\u4e92\u65a5\u3002\u4f8b\u5982\uff0c\u4efb\u52a1\u53ef\u80fd\u9700\u8981\u5728\u8c03\u7528 <code>xUART_Send()</code> \u4e4b\u524d\u83b7\u53d6\u4e00\u4e2a\u4e92\u65a5\u91cf\u3002</p> </li> <li> <p><code>xSemaphoreTake()</code> API \u51fd\u6570\u7528\u4e8e\u5728 UART \u4f20\u8f93\u542f\u52a8\u540e\u5c06\u8c03\u7528\u4efb\u52a1\u7f6e\u4e8e\u963b\u585e\u72b6\u6001\u3002</p> </li> <li> <p><code>xSemaphoreGiveFromISR()</code> API \u51fd\u6570\u7528\u4e8e\u5728\u4f20\u8f93\u5b8c\u6210\u540e\u5c06\u4efb\u52a1\u4ece\u963b\u585e\u72b6\u6001\u79fb\u9664\uff0c\u5373\u5728 UART \u5916\u8bbe\u7684\u4f20\u8f93\u7ed3\u675f\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u6267\u884c\u65f6\u3002</p> </li> </ul> <p></p> <pre><code>/* \u9a71\u52a8\u7a0b\u5e8f\u5e93\u51fd\u6570\uff0c\u5411 UART \u53d1\u9001\u6570\u636e\u3002 */\n\nBaseType_t xUART_Send( xUART *pxUARTInstance, \n                       uint8_t *pucDataSource, \n                       size_t uxLength )\n{\n    BaseType_t xReturn;\n\n    /* \u901a\u8fc7\u5c1d\u8bd5\u5728\u6ca1\u6709\u8d85\u65f6\u7684\u60c5\u51b5\u4e0b\u83b7\u53d6\u4fe1\u53f7\u91cf\uff0c\u786e\u4fdd UART \u7684\u4f20\u8f93\u4fe1\u53f7\u91cf\u5c1a\u4e0d\u53ef\u7528\u3002 */\n    xSemaphoreTake( pxUARTInstance-&gt;xTxSemaphore, 0 );\n\n    /* \u542f\u52a8\u4f20\u8f93\u3002 */\n    UART_low_level_send( pxUARTInstance, pucDataSource, uxLength );\n\n    /* \u963b\u585e\u5728\u4fe1\u53f7\u91cf\u4e0a\u4ee5\u7b49\u5f85\u4f20\u8f93\u5b8c\u6210\u3002\u5982\u679c\u83b7\u53d6\u4fe1\u53f7\u91cf\uff0c\u5219 xReturn \u5c06\u88ab\u8bbe\u7f6e\u4e3a pdPASS\u3002\n       \u5982\u679c\u4fe1\u53f7\u91cf\u83b7\u53d6\u64cd\u4f5c\u8d85\u65f6\uff0c\u5219 xReturn \u5c06\u88ab\u8bbe\u7f6e\u4e3a pdFAIL\u3002\n       \u6ce8\u610f\uff0c\u5982\u679c\u4e2d\u65ad\u53d1\u751f\u5728\u8c03\u7528 UART_low_level_send() \u548c\u8c03\u7528 xSemaphoreTake() \u4e4b\u95f4\uff0c\n       \u5219\u4e8b\u4ef6\u5c06\u88ab\u9501\u5b58\u5230\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u4e2d\uff0cxSemaphoreTake() \u7684\u8c03\u7528\u5c06\u7acb\u5373\u8fd4\u56de\u3002 */\n    xReturn = xSemaphoreTake( pxUARTInstance-&gt;xTxSemaphore, \n                              pxUARTInstance-&gt;xTxTimeout );\n\n    return xReturn;\n}\n/*-----------------------------------------------------------*/\n\n/* UART \u7684\u4f20\u8f93\u7ed3\u675f\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\uff0c\u5728\u6700\u540e\u4e00\u4e2a\u5b57\u8282\u53d1\u9001\u5230 UART \u4e4b\u540e\u6267\u884c\u3002 */\nvoid xUART_TransmitEndISR( xUART *pxUARTInstance )\n{\n    BaseType_t xHigherPriorityTaskWoken = pdFALSE;\n\n    /* \u6e05\u9664\u4e2d\u65ad\u3002 */\n    UART_low_level_interrupt_clear( pxUARTInstance );\n\n    /* \u7ed9\u4e88 Tx \u4fe1\u53f7\u91cf\u4ee5\u6307\u793a\u4f20\u8f93\u7ed3\u675f\u3002\u5982\u679c\u6709\u4efb\u52a1\u5728\u7b49\u5f85\u4fe1\u53f7\u91cf\u88ab\u963b\u585e\uff0c\u5219\u8be5\u4efb\u52a1\u5c06\u4ece\n       \u963b\u585e\u72b6\u6001\u4e2d\u79fb\u9664\u3002 */\n    xSemaphoreGiveFromISR( pxUARTInstance-&gt;xTxSemaphore, \n                           &amp;xHigherPriorityTaskWoken );\n    portYIELD_FROM_ISR( xHigherPriorityTaskWoken );\n}\n</code></pre> <p>\u5217\u8868 10.10 \u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u5728\u9a71\u52a8\u7a0b\u5e8f\u5e93\u4f20\u8f93\u51fd\u6570\u4e2d\u7684\u5e94\u7528\u793a\u4f8b</p> <p>\u5982\u5217\u8868 10.10 \u6240\u793a\u7684\u6280\u672f\u662f\u5b8c\u5168\u53ef\u884c\u7684\uff0c\u786e\u5b9e\u662f\u5e38\u89c1\u505a\u6cd5\uff0c\u4f46\u5b83\u6709\u4e00\u4e9b\u7f3a\u70b9\uff1a</p> <ul> <li> <p>\u5e93\u4f7f\u7528\u4e86\u591a\u4e2a\u4fe1\u53f7\u91cf\uff0c\u8fd9\u589e\u52a0\u4e86\u5176 RAM \u5360\u7528\u3002</p> </li> <li> <p>\u5728\u521b\u5efa\u4fe1\u53f7\u91cf\u4e4b\u524d\u65e0\u6cd5\u4f7f\u7528\u4fe1\u53f7\u91cf\uff0c\u56e0\u6b64\u4f7f\u7528\u4fe1\u53f7\u91cf\u7684\u5e93\u65e0\u6cd5\u4f7f\u7528\uff0c\u76f4\u5230\u5b83\u88ab\u663e\u5f0f\u521d\u59cb\u5316\u3002</p> </li> <li> <p>\u4fe1\u53f7\u91cf\u662f\u9002\u7528\u4e8e\u5e7f\u6cdb\u7528\u4f8b\u7684\u901a\u7528\u5bf9\u8c61\uff1b\u5b83\u4eec\u5305\u542b\u5141\u8bb8\u4efb\u4f55\u6570\u91cf\u7684\u4efb\u52a1\u5728\u4fe1\u53f7\u91cf\u53ef\u7528\u65f6\u8fdb\u5165\u963b\u585e\u72b6\u6001\u7684\u903b\u8f91\uff0c\u5e76\u4ee5\u786e\u5b9a\u6027\u65b9\u5f0f\u9009\u62e9\u5728\u4fe1\u53f7\u91cf\u53ef\u7528\u65f6\u4ece\u963b\u585e\u72b6\u6001\u4e2d\u79fb\u9664\u54ea\u4e2a\u4efb\u52a1\u3002\u6267\u884c\u8be5\u903b\u8f91\u9700\u8981\u4e00\u5b9a\u65f6\u95f4\uff0c\u800c\u5728\u5217\u8868 10.10 \u6240\u793a\u7684\u573a\u666f\u4e2d\uff0c\u8fd9\u79cd\u5904\u7406\u5f00\u9500\u662f\u591a\u4f59\u7684\uff0c\u56e0\u4e3a\u5728\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\uff0c\u4e0d\u80fd\u6709\u591a\u4e2a\u4efb\u52a1\u7b49\u5f85\u4fe1\u53f7\u91cf\u3002</p> </li> </ul> <p>\u5217\u8868 10.11 \u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u4efb\u52a1\u901a\u77e5\u66ff\u4ee3\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u3002</p> <p>\u6ce8\u610f\uff1a\u5982\u679c\u5e93\u4f7f\u7528\u4efb\u52a1\u901a\u77e5\uff0c\u5219\u5e93\u7684\u6587\u6863\u5fc5\u987b\u6e05\u695a\u5730\u8bf4\u660e\uff0c\u8c03\u7528\u5e93\u51fd\u6570\u53ef\u80fd\u4f1a\u66f4\u6539\u8c03\u7528\u4efb\u52a1\u7684\u901a\u77e5\u72b6\u6001\u548c\u503c\u3002</p> <p>\u5728\u5217\u8868 10.11 \u4e2d\uff1a</p> <ul> <li> <p><code>xTxSemaphore</code> \u6210\u5458\u88ab <code>xTaskToNotify</code> \u6210\u5458\u66ff\u4ee3\u3002<code>xTaskToNotify</code> \u662f <code>TaskHandle_t</code> \u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u7528\u4e8e\u4fdd\u5b58\u7b49\u5f85 UART \u64cd\u4f5c\u5b8c\u6210\u7684\u4efb\u52a1\u7684\u53e5\u67c4\u3002</p> </li> <li> <p>\u4f7f\u7528 <code>xTaskGetCurrentTaskHandle()</code> FreeRTOS API \u51fd\u6570\u83b7\u53d6\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u7684\u4efb\u52a1\u7684\u53e5\u67c4\u3002</p> </li> <li> <p>\u5e93\u4e0d\u521b\u5efa\u4efb\u4f55 FreeRTOS \u5bf9\u8c61\uff0c\u56e0\u6b64\u4e0d\u4ea7\u751f RAM \u5f00\u9500\uff0c\u4e5f\u4e0d\u9700\u8981\u663e\u5f0f\u521d\u59cb\u5316\u3002</p> </li> <li> <p>\u4efb\u52a1\u901a\u77e5\u76f4\u63a5\u53d1\u9001\u5230\u7b49\u5f85 UART \u64cd\u4f5c\u5b8c\u6210\u7684\u4efb\u52a1\uff0c\u56e0\u6b64\u4e0d\u6267\u884c\u4e0d\u5fc5\u8981\u7684\u903b\u8f91\u3002</p> </li> </ul> <p><code>xTaskToNotify</code> \u6210\u5458\u7531\u4efb\u52a1\u548c\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u8bbf\u95ee\uff0c\u56e0\u6b64\u5fc5\u987b\u8003\u8651\u5904\u7406\u5668\u5982\u4f55\u66f4\u65b0\u5176\u503c\uff1a</p> <ul> <li> <p>\u5982\u679c <code>xTaskToNotify</code> \u7531\u5355\u4e2a\u5185\u5b58\u5199\u5165\u64cd\u4f5c\u66f4\u65b0\uff0c\u5219\u53ef\u4ee5\u5728\u4e0d\u8fdb\u884c\u4e34\u754c\u533a\u4fdd\u62a4\u7684\u60c5\u51b5\u4e0b\u66f4\u65b0\uff0c\u6b63\u5982\u5217\u8868 10.11 \u4e2d\u6240\u793a\u3002\u5982\u679c <code>xTaskToNotify</code> \u662f 32 \u4f4d\u53d8\u91cf\uff08<code>TaskHandle_t</code> \u662f 32 \u4f4d\u7c7b\u578b\uff09\uff0c\u5e76\u4e14 FreeRTOS \u8fd0\u884c\u7684\u5904\u7406\u5668\u662f 32 \u4f4d\u5904\u7406\u5668\uff0c\u5219\u60c5\u51b5\u5c31\u662f\u5982\u6b64\u3002</p> </li> <li> <p>\u5982\u679c\u66f4\u65b0 <code>xTaskToNotify</code> \u9700\u8981\u591a\u4e2a\u5185\u5b58\u5199\u5165\u64cd\u4f5c\uff0c\u5219\u5fc5\u987b\u5728\u4e34\u754c\u533a\u5185\u66f4\u65b0 <code>xTaskToNotify</code>\uff0c\u5426\u5219\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u53ef\u80fd\u4f1a\u5728\u5176\u5904\u4e8e\u4e0d\u4e00\u81f4\u72b6\u6001\u65f6\u8bbf\u95ee <code>xTaskToNotify</code>\u3002\u5982\u679c <code>xTaskToNotify</code> \u662f 32 \u4f4d\u53d8\u91cf\uff0c\u800c FreeRTOS \u8fd0\u884c\u7684\u5904\u7406\u5668\u662f 16 \u4f4d\u5904\u7406\u5668\uff0c\u5219\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u4e24\u4e2a 16 \u4f4d\u7684\u5185\u5b58\u5199\u5165\u64cd\u4f5c\u624d\u80fd\u66f4\u65b0\u6240\u6709 32 \u4f4d\u3002</p> </li> </ul> <p>\u5728 FreeRTOS \u5b9e\u73b0\u5185\u90e8\uff0c<code>TaskHandle_t</code> \u662f\u4e00\u4e2a\u6307\u9488\uff0c\u56e0\u6b64 <code>sizeof( TaskHandle_t )</code> \u59cb\u7ec8\u7b49\u4e8e <code>sizeof( void * )</code>\u3002</p> <p></p> <pre><code>/* \u9a71\u52a8\u7a0b\u5e8f\u5e93\u51fd\u6570\uff0c\u5411 UART \u53d1\u9001\u6570\u636e\u3002 */\nBaseType_t xUART_Send( xUART *pxUARTInstance, \n                       uint8_t *pucDataSource, \n                       size_t uxLength )\n{\n    BaseType_t xReturn;\n\n    /* \u4fdd\u5b58\u8c03\u7528\u6b64\u51fd\u6570\u7684\u4efb\u52a1\u7684\u53e5\u67c4\u3002\u6709\u5173\u4ee5\u4e0b\u884c\u662f\u5426\u9700\u8981\u5728\u4e34\u754c\u533a\u4fdd\u62a4\u7684\u8bf4\u660e\uff0c\u8bf7\u53c2\u9605\u672c\u4e66\u6587\u672c\u3002 */\n    pxUARTInstance-&gt;xTaskToNotify = xTaskGetCurrentTaskHandle();\n\n    /* \u901a\u8fc7\u5c06 xClearCountOnExit \u53c2\u6570\u8bbe\u7f6e\u4e3a pdTRUE\uff0c\u5e76\u5c06\u963b\u585e\u65f6\u95f4\u8bbe\u7f6e\u4e3a 0\uff08\u4e0d\u963b\u585e\uff09\uff0c\u8c03\u7528 ulTaskNotifyTake() \u786e\u4fdd\u8c03\u7528\u4efb\u52a1\u6ca1\u6709\u901a\u77e5\u5f85\u5904\u7406\u3002 */\n    ulTaskNotifyTake( pdTRUE, 0 );\n\n    /* \u542f\u52a8\u4f20\u8f93\u3002 */\n    UART_low_level_send( pxUARTInstance, pucDataSource, uxLength );\n\n    /* \u963b\u585e\uff0c\u76f4\u5230\u6536\u5230\u901a\u77e5\uff0c\u8868\u793a\u4f20\u8f93\u5df2\u5b8c\u6210\u3002\u5982\u679c\u6536\u5230\u901a\u77e5\uff0c\u5219 xReturn \u5c06\u88ab\u8bbe\u7f6e\u4e3a 1\uff0c\u56e0\u4e3a ISR \u5c06\u6b64\u4efb\u52a1\u7684\u901a\u77e5\u503c\u9012\u589e\u5230 1\uff08pdTRUE\uff09\u3002\u5982\u679c\u64cd\u4f5c\u8d85\u65f6\uff0c\u5219 xReturn \u5c06\u4e3a 0\uff08pdFALSE\uff09\uff0c\u56e0\u4e3a\u6b64\u4efb\u52a1\u7684\u901a\u77e5\u503c\u81ea\u4e0a\u6b21\u6e05\u9664\u4e3a 0 \u4ee5\u6765\u672a\u88ab\u66f4\u6539\u3002\u6ce8\u610f\uff0c\u5982\u679c ISR \u5728\u8c03\u7528 UART_low_level_send() \u548c\u8c03\u7528 ulTaskNotifyTake() \u4e4b\u95f4\u6267\u884c\uff0c\u5219\u4e8b\u4ef6\u5c06\u88ab\u9501\u5b58\u5230\u4efb\u52a1\u7684\u901a\u77e5\u503c\u4e2d\uff0c\u8c03\u7528 ulTaskNotifyTake() \u5c06\u7acb\u5373\u8fd4\u56de\u3002 */\n    xReturn = ( BaseType_t ) ulTaskNotifyTake( pdTRUE, \n                                               pxUARTInstance-&gt;xTxTimeout );\n\n    return xReturn;\n}\n/*-----------------------------------------------------------*/\n\n/* UART \u7684\u4f20\u8f93\u7ed3\u675f\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\uff0c\u5728\u6700\u540e\u4e00\u4e2a\u5b57\u8282\u53d1\u9001\u5230 UART \u4e4b\u540e\u6267\u884c\u3002 */\nvoid xUART_TransmitEndISR( xUART *pxUARTInstance )\n{\n    BaseType_t xHigherPriorityTaskWoken = pdFALSE;\n\n    /* \u6e05\u9664\u4e2d\u65ad\u3002 */\n    UART_low_level_interrupt_clear( pxUARTInstance );\n\n    /* \u53d1\u9001\u901a\u77e5\uff0c\u76f4\u63a5\u7ed9\u5230\u8c03\u7528 xUART_Send() \u7684\u4efb\u52a1\u3002\u5982\u679c\u4efb\u52a1\u6b63\u5728\u963b\u585e\u7b49\u5f85\u901a\u77e5\uff0c\u5219\u4efb\u52a1\u5c06\u4ece\u963b\u585e\u72b6\u6001\u4e2d\u79fb\u9664\u3002 */\n    vTaskNotifyGiveFromISR( pxUARTInstance-&gt;xTaskToNotify,\n                            &amp;xHigherPriorityTaskWoken );\n\n    /* \u73b0\u5728\u6ca1\u6709\u4efb\u52a1\u5728\u7b49\u5f85\u901a\u77e5\u3002\u5c06 xTaskToNotify \u6210\u5458\u8bbe\u7f6e\u56de NULL\u3002\u8fd9\u4e00\u6b65\u4e0d\u662f\u4e25\u683c\u5fc5\u8981\u7684\uff0c\u4f46\u6709\u52a9\u4e8e\u8c03\u8bd5\u3002 */\n    pxUARTInstance-&gt;xTaskToNotify = NULL;\n    portYIELD_FROM_ISR( xHigherPriorityTaskWoken );\n}\n</code></pre> <p>\u5217\u8868 10.11 \u4f7f\u7528\u4efb\u52a1\u901a\u77e5\u7684\u9a71\u52a8\u7a0b\u5e8f\u5e93\u4f20\u8f93\u51fd\u6570\u7684\u4f2a\u4ee3\u7801\u793a\u4f8b</p> <p>\u4efb\u52a1\u901a\u77e5\u8fd8\u53ef\u4ee5\u5728\u63a5\u6536\u51fd\u6570\u4e2d\u66ff\u4ee3\u4fe1\u53f7\u91cf\uff0c\u5982\u5217\u8868 10.12 \u6240\u793a\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a RTOS \u611f\u77e5\u5e93\u51fd\u6570\u7684\u8f6e\u5ed3\uff0c\u8be5\u51fd\u6570\u7528\u4e8e\u4ece UART \u7aef\u53e3\u63a5\u6536\u6570\u636e\u3002\u53c2\u8003\u5217\u8868 10.12\uff1a</p> <ul> <li> <p><code>xUART_Receive()</code> \u51fd\u6570\u4e0d\u5305\u62ec\u4efb\u4f55\u4e92\u65a5\u903b\u8f91\u3002\u5982\u679c\u591a\u4e2a\u4efb\u52a1\u8981\u4f7f\u7528 <code>xUART_Receive()</code> \u51fd\u6570\uff0c\u5219\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u8005\u5fc5\u987b\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7ba1\u7406\u4e92\u65a5\u3002\u4f8b\u5982\uff0c\u4efb\u52a1\u53ef\u80fd\u9700\u8981\u5728\u8c03\u7528 <code>xUART_Receive()</code> \u4e4b\u524d\u83b7\u53d6\u4e00\u4e2a\u4e92\u65a5\u91cf\u3002</p> </li> <li> <p>UART \u7684\u63a5\u6536\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u5c06 UART \u63a5\u6536\u5230\u7684\u5b57\u7b26\u653e\u5165 RAM \u7f13\u51b2\u533a\u3002<code>xUART_Receive()</code> \u51fd\u6570\u4ece RAM \u7f13\u51b2\u533a\u8fd4\u56de\u5b57\u7b26\u3002</p> </li> <li> <p><code>xUART_Receive()</code> \u7684 <code>uxWantedBytes</code> \u53c2\u6570\u7528\u4e8e\u6307\u5b9a\u8981\u63a5\u6536\u7684\u5b57\u7b26\u6570\u3002\u5982\u679c RAM \u7f13\u51b2\u533a\u5c1a\u4e0d\u5305\u542b\u8bf7\u6c42\u7684\u5b57\u7b26\u6570\uff0c\u5219\u8c03\u7528\u4efb\u52a1\u88ab\u7f6e\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u901a\u77e5\uff0c\u76f4\u5230\u7f13\u51b2\u533a\u4e2d\u7684\u5b57\u7b26\u6570\u589e\u52a0\u3002<code>while()</code> \u5faa\u73af\u7528\u4e8e\u91cd\u590d\u6b64\u5e8f\u5217\uff0c\u76f4\u5230\u63a5\u6536\u7f13\u51b2\u533a\u5305\u542b\u6240\u8bf7\u6c42\u7684\u5b57\u8282\u6570\uff0c\u6216\u53d1\u751f\u8d85\u65f6\u3002</p> </li> <li> <p>\u8c03\u7528\u4efb\u52a1\u53ef\u80fd\u4f1a\u591a\u6b21\u8fdb\u5165\u963b\u585e\u72b6\u6001\u3002\u56e0\u6b64\uff0c\u963b\u585e\u65f6\u95f4\u88ab\u8c03\u6574\uff0c\u4ee5\u8003\u8651\u81ea <code>xUART_Receive()</code> \u88ab\u8c03\u7528\u4ee5\u6765\u5df2\u7ecf\u8fc7\u53bb\u7684\u65f6\u95f4\u3002\u8c03\u6574\u786e\u4fdd\u5728 <code>xUART_Receive()</code> \u5185\u90e8\u82b1\u8d39\u7684\u603b\u65f6\u95f4\u4e0d\u8d85\u8fc7 <code>xRxTimeout</code> \u6210\u5458\u6307\u5b9a\u7684\u5757\u65f6\u95f4\u3002\u5757\u65f6\u95f4\u7684\u8c03\u6574\u4f7f\u7528 FreeRTOS \u7684 <code>vTaskSetTimeOutState()</code> \u548c <code>xTaskCheckForTimeOut()</code> \u8f85\u52a9\u51fd\u6570\u3002</p> </li> </ul> <p></p> <pre><code>/* \u9a71\u52a8\u7a0b\u5e8f\u5e93\u51fd\u6570\uff0c\u4ece UART \u63a5\u6536\u6570\u636e\u3002 */\n\nsize_t xUART_Receive( xUART *pxUARTInstance, \n                      uint8_t *pucBuffer,\n                      size_t uxWantedBytes )\n{\n    size_t uxReceived = 0;\n    TickType_t xTicksToWait;\n    TimeOut_t xTimeOut;\n\n    /* \u8bb0\u5f55\u8fdb\u5165\u6b64\u51fd\u6570\u7684\u65f6\u95f4\u3002 */\n    vTaskSetTimeOutState( &amp;xTimeOut );\n\n    /* xTicksToWait \u662f\u8d85\u65f6\u503c - \u5b83\u6700\u521d\u8bbe\u7f6e\u4e3a\u6b64 UART \u5b9e\u4f8b\u7684\u6700\u5927\u63a5\u6536\u8d85\u65f6\u3002 */\n    xTicksToWait = pxUARTInstance-&gt;xRxTimeout;\n\n    /* \u4fdd\u5b58\u8c03\u7528\u6b64\u51fd\u6570\u7684\u4efb\u52a1\u7684\u53e5\u67c4\u3002\u6709\u5173\u4ee5\u4e0b\u884c\u662f\u5426\u9700\u8981\u5728\u4e34\u754c\u533a\u4fdd\u62a4\u7684\u8bf4\u660e\uff0c\u8bf7\u53c2\u9605\u672c\u4e66\u6587\u672c\u3002 */\n    pxUARTInstance-&gt;xTaskToNotify = xTaskGetCurrentTaskHandle();\n\n    /* \u5faa\u73af\uff0c\u76f4\u5230\u7f13\u51b2\u533a\u5305\u542b\u6240\u9700\u6570\u91cf\u7684\u5b57\u8282\uff0c\u6216\u53d1\u751f\u8d85\u65f6\u3002 */\n    while( UART_bytes_in_rx_buffer( pxUARTInstance ) &lt; uxWantedBytes )\n    {\n        /* \u68c0\u67e5\u662f\u5426\u8d85\u65f6\uff0c\u8c03\u6574 xTicksToWait \u4ee5\u8003\u8651\u5230\u76ee\u524d\u4e3a\u6b62\u5728\u6b64\u51fd\u6570\u4e2d\u82b1\u8d39\u7684\u65f6\u95f4\u3002 */\n        if( xTaskCheckForTimeOut( &amp;xTimeOut, &amp;xTicksToWait ) != pdFALSE )\n        {\n            /* \u5728\u6240\u9700\u5b57\u8282\u53ef\u7528\u4e4b\u524d\u8d85\u65f6\uff0c\u9000\u51fa\u5faa\u73af\u3002 */\n            break;\n        }\n\n        /* \u63a5\u6536\u7f13\u51b2\u533a\u5c1a\u672a\u5305\u542b\u6240\u9700\u6570\u91cf\u7684\u5b57\u8282\u3002\u7b49\u5f85\u6700\u591a xTicksToWait \u6ef4\u7b54\u4ee5\u63a5\u6536\u6765\u81ea\u63a5\u6536\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u7684\u66f4\u591a\u6570\u636e\u7684\u901a\u77e5\u3002\u5982\u679c\u8c03\u7528\u4efb\u52a1\u5728\u8c03\u7528\u6b64\u51fd\u6570\u65f6\u5df2\u7ecf\u6709\u901a\u77e5\u5f85\u5904\u7406\uff0c\u5219\u65e0\u8bba\u5982\u4f55\uff0c\u8c03\u7528 ulTaskNotifyTake() \u90fd\u4f1a\u989d\u5916\u8fed\u4ee3\u4e00\u6b21\u6b64 while \u5faa\u73af\u3002 */\n        ulTaskNotifyTake( pdTRUE, xTicksToWait );\n    }\n\n    /* \u6ca1\u6709\u4efb\u52a1\u5728\u7b49\u5f85\u63a5\u6536\u901a\u77e5\uff0c\u56e0\u6b64\u5c06 xTaskToNotify \u8bbe\u7f6e\u56de NULL\u3002\u672c\u4e66\u6587\u672c\u4e2d\u5305\u542b\u6709\u5173\u4ee5\u4e0b\u884c\u662f\u5426\u9700\u8981\u5728\u4e34\u754c\u533a\u4fdd\u62a4\u7684\u8bf4\u660e\u3002 */\n    pxUARTInstance-&gt;xTaskToNotify = NULL;\n\n    /* \u5c1d\u8bd5\u4ece\u63a5\u6536\u7f13\u51b2\u533a\u8bfb\u53d6 uxWantedBytes \u5230 pucBuffer \u4e2d\u3002\u5b9e\u9645\u8bfb\u53d6\u7684\u5b57\u8282\u6570\uff08\u53ef\u80fd\u5c11\u4e8e uxWantedBytes\uff09\u5c06\u88ab\u8fd4\u56de\u3002 */\n    uxReceived = UART_read_from_receive_buffer( pxUARTInstance, \n                                                pucBuffer,\n                                                uxWantedBytes );\n    return uxReceived;\n}\n\n/*-----------------------------------------------------------*/\n\n/* UART \u7684\u63a5\u6536\u4e2d\u65ad\u7684\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b */\nvoid xUART_ReceiveISR( xUART *pxUARTInstance )\n{\n    BaseType_t xHigherPriorityTaskWoken = pdFALSE;\n\n    /* \u5c06\u63a5\u6536\u5230\u7684\u6570\u636e\u590d\u5236\u5230\u6b64 UART \u7684\u63a5\u6536\u7f13\u51b2\u533a\u5e76\u6e05\u9664\u4e2d\u65ad\u3002 */\n    UART_low_level_receive( pxUARTInstance );\n\n    /* \u5982\u679c\u6709\u4efb\u52a1\u7b49\u5f85\u901a\u77e5\u65b0\u6570\u636e\uff0c\u5219\u7acb\u5373\u901a\u77e5\u5b83\u3002 */\n    if( pxUARTInstance-&gt;xTaskToNotify != NULL )\n    {\n        vTaskNotifyGiveFromISR( pxUARTInstance-&gt;xTaskToNotify,\n                                &amp;xHigherPriorityTaskWoken );\n        portYIELD_FROM_ISR( xHigherPriorityTaskWoken );\n    }\n}\n</code></pre> <p>\u5217\u8868 10.12 \u4f7f\u7528\u4efb\u52a1\u901a\u77e5\u7684\u9a71\u52a8\u7a0b\u5e8f\u5e93\u63a5\u6536\u51fd\u6570\u7684\u4f2a\u4ee3\u7801\u793a\u4f8b</p>"},{"location":"ch10-%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#1038-adc","title":"10.3.8 \u4efb\u52a1\u901a\u77e5\u5728\u5916\u8bbe\u9a71\u52a8\u4e2d\u7684\u5e94\u7528\uff1aADC \u793a\u4f8b","text":"<p>\u4e0a\u4e00\u8282\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528 <code>vTaskNotifyGiveFromISR()</code> \u4ece\u4e2d\u65ad\u5411\u4efb\u52a1\u53d1\u9001\u4efb\u52a1\u901a\u77e5\u3002 <code>vTaskNotifyGiveFromISR()</code> \u662f\u4e00\u4e2a\u7b80\u5355\u7684\u51fd\u6570\uff0c\u4f46\u5176\u529f\u80fd\u6709\u9650\uff1b\u5b83\u53ea\u80fd\u53d1\u9001\u65e0\u503c\u4e8b\u4ef6\u7684\u4efb\u52a1\u901a\u77e5\uff0c\u4e0d\u80fd\u53d1\u9001\u6570\u636e\u3002\u672c\u8282\u6f14\u793a\u5982\u4f55\u4f7f\u7528 <code>xTaskNotifyFromISR()</code> \u901a\u8fc7\u4efb\u52a1\u901a\u77e5\u4e8b\u4ef6\u53d1\u9001\u6570\u636e\u3002\u8be5\u6280\u672f\u7531\u5217\u8868 10.13 \u4e2d\u7684\u4f2a\u4ee3\u7801\u6f14\u793a\uff0c\u8be5\u4ee3\u7801\u63d0\u4f9b\u4e86 ADC \u7684 RTOS \u611f\u77e5\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u7684\u8f6e\u5ed3\u3002\u5728\u5217\u8868 10.13 \u4e2d\uff1a</p> <ul> <li> <p>\u5047\u8bbe\u6bcf 50 \u6beb\u79d2\u81f3\u5c11\u542f\u52a8\u4e00\u6b21 ADC \u8f6c\u6362\u3002</p> </li> <li> <p><code>ADC_ConversionEndISR()</code> \u662f ADC \u8f6c\u6362\u7ed3\u675f\u4e2d\u65ad\u7684\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\uff0c\u5373\u6bcf\u6b21\u6709\u65b0\u7684 ADC \u503c\u53ef\u7528\u65f6\u6267\u884c\u7684\u4e2d\u65ad\u3002</p> </li> <li> <p>\u7531 <code>vADCTask()</code> \u5b9e\u73b0\u7684\u4efb\u52a1\u5904\u7406 ADC \u751f\u6210\u7684\u6bcf\u4e2a\u503c\u3002\u5047\u8bbe\u4efb\u52a1\u7684\u53e5\u67c4\u5728\u521b\u5efa\u4efb\u52a1\u65f6\u5b58\u50a8\u5728 <code>xADCTaskToNotify</code> \u4e2d\u3002</p> </li> <li> <p><code>ADC_ConversionEndISR()</code> \u4f7f\u7528 <code>xTaskNotifyFromISR()</code>\uff0c\u5176 <code>eAction</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>eSetValueWithoutOverwrite</code>\uff0c\u5411 <code>vADCTask()</code> \u4efb\u52a1\u53d1\u9001\u4efb\u52a1\u901a\u77e5\uff0c\u5e76\u5c06 ADC \u8f6c\u6362\u7684\u7ed3\u679c\u5199\u5165\u4efb\u52a1\u7684\u901a\u77e5\u503c\u3002</p> </li> <li> <p><code>vADCTask()</code> \u4efb\u52a1\u4f7f\u7528 <code>xTaskNotifyWait()</code> \u7b49\u5f85\u63a5\u6536\u5230\u65b0\u7684 ADC \u503c\u7684\u901a\u77e5\uff0c\u5e76\u4ece\u5176\u901a\u77e5\u503c\u4e2d\u68c0\u7d22 ADC \u8f6c\u6362\u7684\u7ed3\u679c\u3002</p> </li> </ul> <p></p> <pre><code>/* \u4f7f\u7528 ADC \u7684\u4efb\u52a1\u3002 */\nvoid vADCTask( void *pvParameters )\n{\n    uint32_t ulADCValue;\n    BaseType_t xResult;\n\n    /* \u89e6\u53d1 ADC \u8f6c\u6362\u7684\u9891\u7387\u3002 */\n    const TickType_t xADCConversionFrequency = pdMS_TO_TICKS( 50 );\n\n    for( ;; )\n    {\n        /* \u7b49\u5f85\u4e0b\u4e00\u4e2a ADC \u8f6c\u6362\u7ed3\u679c\u3002 */\n        xResult = xTaskNotifyWait(\n                    /* \u65b0\u7684 ADC \u503c\u5c06\u8986\u76d6\u65e7\u503c\uff0c\u56e0\u6b64\u5728\u7b49\u5f85\u65b0\u901a\u77e5\u503c\u65f6\uff0c\u65e0\u9700\u6e05\u9664\u4efb\u4f55\u4f4d\u3002 */\n                    0,\n                    /* \u5c06\u6765\u7684 ADC \u503c\u5c06\u8986\u76d6\u73b0\u6709\u503c\uff0c\u56e0\u6b64\u5728\u9000\u51fa xTaskNotifyWait() \u4e4b\u524d\uff0c\u65e0\u9700\u6e05\u9664\u4efb\u4f55\u4f4d\u3002 */\n                    0,\n                    /* \u53d8\u91cf\u7684\u5730\u5740\uff0c\u4efb\u52a1\u7684\u901a\u77e5\u503c\uff08\u4fdd\u5b58\u6700\u65b0\u7684 ADC \u8f6c\u6362\u7ed3\u679c\uff09\u5c06\u88ab\u590d\u5236\u5230\u8be5\u53d8\u91cf\u4e2d\u3002 */\n                    &amp;ulADCValue,\n                    /* \u6bcf\u4e2a xADCConversionFrequency \u6ef4\u7b54\u5e94\u8be5\u63a5\u6536\u5230\u4e00\u4e2a\u65b0\u7684 ADC \u503c\u3002 */\n                    xADCConversionFrequency * 2 );\n\n        if( xResult == pdPASS )\n        {\n            /* \u6536\u5230\u4e86\u4e00\u4e2a\u65b0\u7684 ADC \u503c\u3002\u73b0\u5728\u5904\u7406\u5b83\u3002 */\n            ProcessADCResult( ulADCValue );\n        }\n        else\n        {\n            /* \u8c03\u7528 xTaskNotifyWait() \u7684\u8fd4\u56de\u503c\u4e0d\u5728\u9884\u671f\u65f6\u95f4\u5185\uff0c\u89e6\u53d1 ADC \u8f6c\u6362\u7684\u8f93\u5165\u53ef\u80fd\u5b58\u5728\u95ee\u9898\uff0c\u6216\u8005 ADC \u672c\u8eab\u53ef\u80fd\u5b58\u5728\u95ee\u9898\u3002\u5728\u6b64\u5904\u7406\u9519\u8bef\u3002 */\n        }\n    }\n}\n\n/*-----------------------------------------------------------*/\n\n/* \u6bcf\u6b21 ADC \u8f6c\u6362\u5b8c\u6210\u65f6\u6267\u884c\u7684\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u3002 */\nvoid ADC_ConversionEndISR( xADC *pxADCInstance )\n{\n    uint32_t ulConversionResult;\n    BaseType_t xHigherPriorityTaskWoken = pdFALSE, xResult;\n\n    /* \u8bfb\u53d6\u65b0\u7684 ADC \u503c\u5e76\u6e05\u9664\u4e2d\u65ad\u3002 */\n    ulConversionResult = ADC_low_level_read( pxADCInstance );\n\n    /* \u53d1\u9001\u901a\u77e5\u548c ADC \u8f6c\u6362\u7ed3\u679c\uff0c\u76f4\u63a5\u7ed9\u5230 vADCTask()\u3002 */\n    xResult = xTaskNotifyFromISR( xADCTaskToNotify, /* xTaskToNotify \u53c2\u6570 */\n                                  ulConversionResult, /* ulValue \u53c2\u6570 */\n                                  eSetValueWithoutOverwrite, /* eAction \u53c2\u6570\u3002 */\n                                  &amp;xHigherPriorityTaskWoken );\n\n    /* \u5982\u679c\u8c03\u7528 xTaskNotifyFromISR() \u8fd4\u56de pdFAIL\uff0c\u5219\u4efb\u52a1\u8ddf\u4e0d\u4e0a ADC \u503c\u751f\u6210\u7684\u901f\u5ea6\u3002\n       configASSERT() \u5728 11.2 \u8282\u4e2d\u63cf\u8ff0\u3002 */\n    configASSERT( xResult == pdPASS );\n    portYIELD_FROM_ISR( xHigherPriorityTaskWoken );\n}\n</code></pre> <p>\u5217\u8868 10.13 \u4f7f\u7528\u4efb\u52a1\u901a\u77e5\u5411\u4efb\u52a1\u4f20\u9012\u503c\u7684\u4f2a\u4ee3\u7801\u793a\u4f8b</p>"},{"location":"ch10-%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#1039","title":"10.3.9 \u4efb\u52a1\u901a\u77e5\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u76f4\u63a5\u4f7f\u7528","text":"<p>\u672c\u8282\u901a\u8fc7\u6f14\u793a\u4efb\u52a1\u901a\u77e5\u5728\u5177\u6709\u4ee5\u4e0b\u529f\u80fd\u7684\u5047\u8bbe\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u4f7f\u7528\uff0c\u6765\u589e\u5f3a\u4efb\u52a1\u901a\u77e5\u7684\u5f3a\u5927\u529f\u80fd\uff1a</p> <ul> <li> <p>\u5e94\u7528\u7a0b\u5e8f\u901a\u8fc7\u6162\u901f\u4e92\u8054\u7f51\u8fde\u63a5\u4e0e\u8fdc\u7a0b\u6570\u636e\u670d\u52a1\u5668\u8fdb\u884c\u901a\u4fe1\uff0c\u5411\u5176\u53d1\u9001\u6570\u636e\u5e76\u8bf7\u6c42\u6570\u636e\u3002\u4ece\u73b0\u5728\u8d77\uff0c\u8fdc\u7a0b\u6570\u636e\u670d\u52a1\u5668\u79f0\u4e3a \u4e91\u670d\u52a1\u5668\u3002</p> </li> <li> <p>\u4ece\u4e91\u670d\u52a1\u5668\u8bf7\u6c42\u6570\u636e\u540e\uff0c\u8bf7\u6c42\u4efb\u52a1\u5fc5\u987b\u5728\u963b\u585e\u72b6\u6001\u4e0b\u7b49\u5f85\u63a5\u6536\u5230\u8bf7\u6c42\u7684\u6570\u636e\u3002</p> </li> <li> <p>\u5411\u4e91\u670d\u52a1\u5668\u53d1\u9001\u6570\u636e\u540e\uff0c\u53d1\u9001\u4efb\u52a1\u5fc5\u987b\u5728\u963b\u585e\u72b6\u6001\u4e0b\u7b49\u5f85\u4e91\u670d\u52a1\u5668\u786e\u8ba4\u5df2\u6b63\u786e\u63a5\u6536\u6570\u636e\u3002</p> </li> </ul> <p>\u56fe 10.6 \u663e\u793a\u4e86\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u793a\u610f\u56fe\u3002\u5728\u56fe 10.6 \u4e2d\uff1a</p> <ul> <li> <p>\u5904\u7406\u4e0e\u4e91\u670d\u52a1\u5668\u7684\u591a\u4e2a\u4e92\u8054\u7f51\u8fde\u63a5\u7684\u590d\u6742\u6027\u88ab\u5c01\u88c5\u5728\u4e00\u4e2a FreeRTOS \u4efb\u52a1\u4e2d\u3002\u8be5\u4efb\u52a1\u5145\u5f53 FreeRTOS \u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u4ee3\u7406\u670d\u52a1\u5668\uff0c\u79f0\u4e3a \u670d\u52a1\u5668\u4efb\u52a1\u3002</p> </li> <li> <p>\u5e94\u7528\u7a0b\u5e8f\u4efb\u52a1\u901a\u8fc7\u8c03\u7528 <code>CloudRead()</code> \u4ece\u4e91\u670d\u52a1\u5668\u8bfb\u53d6\u6570\u636e\u3002 <code>CloudRead()</code> \u5e76\u4e0d\u76f4\u63a5\u4e0e\u4e91\u670d\u52a1\u5668\u901a\u4fe1\uff0c\u800c\u662f\u5c06\u8bfb\u53d6\u8bf7\u6c42\u53d1\u9001\u5230\u670d\u52a1\u5668\u4efb\u52a1\u7684\u961f\u5217\u4e2d\uff0c\u5e76\u4f5c\u4e3a\u4efb\u52a1\u901a\u77e5\u4ece\u670d\u52a1\u5668\u4efb\u52a1\u63a5\u6536\u8bf7\u6c42\u7684\u6570\u636e\u3002</p> </li> <li> <p>\u5e94\u7528\u7a0b\u5e8f\u4efb\u52a1\u901a\u8fc7\u8c03\u7528 <code>CloudWrite()</code> \u5411\u4e91\u670d\u52a1\u5668\u5199\u5165\u6570\u636e\u3002 <code>CloudWrite()</code> \u5e76\u4e0d\u76f4\u63a5\u4e0e\u4e91\u670d\u52a1\u5668\u901a\u4fe1\uff0c\u800c\u662f\u5c06\u5199\u5165\u8bf7\u6c42\u53d1\u9001\u5230\u670d\u52a1\u5668\u4efb\u52a1\u7684\u961f\u5217\u4e2d\uff0c\u5e76\u4f5c\u4e3a\u4efb\u52a1\u901a\u77e5\u4ece\u670d\u52a1\u5668\u4efb\u52a1\u63a5\u6536\u5199\u5165\u64cd\u4f5c\u7684\u7ed3\u679c\u3002</p> </li> </ul> <p>\u7531 <code>CloudRead()</code> \u548c <code>CloudWrite()</code> \u51fd\u6570\u53d1\u9001\u5230\u670d\u52a1\u5668\u4efb\u52a1\u7684\u7ed3\u6784\u5982\u5217\u8868 10.14 \u6240\u793a\u3002</p> <p></p> <p> \u56fe 10.6 \u5e94\u7528\u7a0b\u5e8f\u4efb\u52a1\u4e0e\u4e91\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u8def\u5f84</p> <p></p> <pre><code>typedef enum CloudOperations\n{\n    eRead, /* \u53d1\u9001\u6570\u636e\u5230\u4e91\u670d\u52a1\u5668\u3002 */\n    eWrite /* \u4ece\u4e91\u670d\u52a1\u5668\u63a5\u6536\u6570\u636e\u3002 */\n} Operation_t;\n\ntypedef struct CloudCommand\n{\n    Operation_t eOperation; /* \u8981\u6267\u884c\u7684\u64cd\u4f5c\uff08\u8bfb\u53d6\u6216\u5199\u5165\uff09\u3002 */\n    uint32_t ulDataID; /* \u6807\u8bc6\u6b63\u5728\u8bfb\u53d6\u6216\u5199\u5165\u7684\u6570\u636e\u3002 */\n    uint32_t ulDataValue; /* \u4ec5\u5728\u5411\u4e91\u670d\u52a1\u5668\u5199\u5165\u6570\u636e\u65f6\u4f7f\u7528\u3002 */\n    TaskHandle_t xTaskToNotify;/* \u6267\u884c\u64cd\u4f5c\u7684\u4efb\u52a1\u7684\u53e5\u67c4\u3002 */\n} CloudCommand_t;\n</code></pre> <p>\u5217\u8868 10.14 \u53d1\u9001\u5230\u670d\u52a1\u5668\u4efb\u52a1\u7684\u7ed3\u6784\u548c\u6570\u636e\u7c7b\u578b</p> <p><code>CloudRead()</code> \u7684\u4f2a\u4ee3\u7801\u5982\u5217\u8868 10.15 \u6240\u793a\u3002\u8be5\u51fd\u6570\u5c06\u8bf7\u6c42\u53d1\u9001\u5230\u670d\u52a1\u5668\u4efb\u52a1\uff0c\u7136\u540e\u8c03\u7528 <code>xTaskNotifyWait()</code> \u5728\u963b\u585e\u72b6\u6001\u4e0b\u7b49\u5f85\uff0c\u76f4\u5230\u6536\u5230\u901a\u77e5\uff0c\u8bf7\u6c42\u7684\u6570\u636e\u53ef\u7528\u3002</p> <p>\u663e\u793a\u670d\u52a1\u5668\u4efb\u52a1\u5982\u4f55\u7ba1\u7406\u8bfb\u53d6\u8bf7\u6c42\u7684\u4f2a\u4ee3\u7801\u5982\u5217\u8868 10.16\u3002\u5f53\u4ece\u4e91\u670d\u52a1\u5668\u63a5\u6536\u5230\u6570\u636e\u540e\uff0c\u670d\u52a1\u5668\u4efb\u52a1\u89e3\u9664\u5e94\u7528\u7a0b\u5e8f\u4efb\u52a1\u7684\u963b\u585e\uff0c\u5e76\u901a\u8fc7\u5c06 <code>eAction</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>eSetValueWithOverwrite</code> \u7684 <code>xTaskNotify()</code> \u8c03\u7528\u5c06\u63a5\u6536\u5230\u7684\u6570\u636e\u53d1\u9001\u7ed9\u5e94\u7528\u7a0b\u5e8f\u4efb\u52a1\u3002</p> <p>\u5217\u8868 10.16 \u663e\u793a\u4e86\u7b80\u5316\u7684\u573a\u666f\uff0c\u56e0\u4e3a\u5b83\u5047\u8bbe <code>GetCloudData()</code> \u4e0d\u5fc5\u7b49\u5f85\u4ece\u4e91\u670d\u52a1\u5668\u83b7\u53d6\u503c\u3002</p> <p></p> <pre><code>/* ulDataID \u6807\u8bc6\u8981\u8bfb\u53d6\u7684\u6570\u636e\u3002 pulValue \u4fdd\u5b58\u8981\u5c06\u4e91\u670d\u52a1\u5668\u8fd4\u56de\u7684\u6570\u636e\u5199\u5165\u7684\u53d8\u91cf\u7684\u5730\u5740\u3002 */\nBaseType_t CloudRead( uint32_t ulDataID, uint32_t *pulValue )\n{\n    CloudCommand_t xRequest;\n    BaseType_t xReturn;\n\n    /* \u8bbe\u7f6e CloudCommand_t \u7ed3\u6784\u7684\u6210\u5458\u4ee5\u6b63\u786e\u5904\u7406\u6b64\u8bfb\u53d6\u8bf7\u6c42\u3002 */\n    xRequest.eOperation = eRead; /* \u8fd9\u662f\u4e00\u4e2a\u8bfb\u53d6\u6570\u636e\u7684\u8bf7\u6c42\u3002 */\n    xRequest.ulDataID = ulDataID; /* \u4e00\u4e2a\u6807\u8bc6\u8981\u8bfb\u53d6\u6570\u636e\u7684\u4ee3\u7801\u3002 */\n    xRequest.xTaskToNotify = xTaskGetCurrentTaskHandle(); /* \u8c03\u7528\u4efb\u52a1\u7684\u53e5\u67c4\u3002 */\n\n    /* \u901a\u8fc7\u4ee5 0 \u7684\u963b\u585e\u65f6\u95f4\u8bfb\u53d6\u901a\u77e5\u503c\uff0c\u786e\u4fdd\u6ca1\u6709\u5f85\u5904\u7406\u7684\u901a\u77e5\uff0c\u7136\u540e\u5c06\u7ed3\u6784\u53d1\u9001\u5230\u670d\u52a1\u5668\u4efb\u52a1\u3002 */\n    xTaskNotifyWait( 0, 0, NULL, 0 );\n    xQueueSend( xServerTaskQueue, &amp;xRequest, portMAX_DELAY );\n\n    /* \u7b49\u5f85\u6765\u81ea\u670d\u52a1\u5668\u4efb\u52a1\u7684\u901a\u77e5\u3002\u670d\u52a1\u5668\u4efb\u52a1\u5c06\u4ece\u4e91\u670d\u52a1\u5668\u63a5\u6536\u5230\u7684\u503c\u76f4\u63a5\u5199\u5165\u6b64\u4efb\u52a1\u7684\u901a\u77e5\u503c\uff0c\n       \u56e0\u6b64\u5728\u8fdb\u5165\u548c\u9000\u51fa xTaskNotifyWait() \u51fd\u6570\u65f6\u65e0\u9700\u6e05\u9664\u901a\u77e5\u503c\u4e2d\u7684\u4efb\u4f55\u4f4d\u3002\u63a5\u6536\u5230\u7684\u503c\u88ab\u5199\u5165 *pulValue\uff0c\n       \u56e0\u6b64 pulValue \u88ab\u4f5c\u4e3a\u901a\u77e5\u503c\u5199\u5165\u7684\u5730\u5740\u4f20\u9012\u3002 */\n    xReturn = xTaskNotifyWait( 0, /* \u8fdb\u5165\u65f6\u4e0d\u6e05\u9664\u4efb\u4f55\u4f4d */\n                               0, /* \u9000\u51fa\u65f6\u4e0d\u6e05\u9664\u4efb\u4f55\u4f4d */\n                               pulValue, /* \u901a\u77e5\u503c\u5199\u5165 *pulValue */\n                               pdMS_TO_TICKS( 250 ) ); /* \u6700\u591a\u7b49\u5f85 250 \u6beb\u79d2 */\n\n    /* \u5982\u679c xReturn \u4e3a pdPASS\uff0c\u5219\u8868\u793a\u5df2\u83b7\u53d6\u503c\u3002\u5982\u679c xReturn \u4e3a pdFAIL\uff0c\u5219\u8868\u793a\u8bf7\u6c42\u8d85\u65f6\u3002 */\n    return xReturn;\n}\n</code></pre> <p>\u5217\u8868 10.15 CloudRead() API \u51fd\u6570\u7684\u5b9e\u73b0</p> <p></p> <pre><code>void ServerTask( void *pvParameters )\n{\n    CloudCommand_t xCommand;\n    uint32_t ulReceivedValue;\n\n    for( ;; )\n    {\n        /* \u7b49\u5f85\u4ece\u4efb\u52a1\u63a5\u6536\u4e0b\u4e00\u4e2a CloudCommand_t \u7ed3\u6784 */\n        xQueueReceive( xServerTaskQueue, &amp;xCommand, portMAX_DELAY );\n\n        switch( xCommand.eOperation ) /* \u662f\u8bfb\u53d6\u8fd8\u662f\u5199\u5165\u8bf7\u6c42\uff1f */\n        {\n            case eRead:\n\n                /* \u4ece\u8fdc\u7a0b\u4e91\u670d\u52a1\u5668\u83b7\u53d6\u8bf7\u6c42\u7684\u6570\u636e\u9879 */\n                ulReceivedValue = GetCloudData( xCommand.ulDataID );\n\n                /* \u8c03\u7528 xTaskNotify() \u53d1\u9001\u901a\u77e5\u548c\u4ece\u4e91\u670d\u52a1\u5668\u63a5\u6536\u5230\u7684\u503c\n                   \u7ed9\u53d1\u51fa\u8bf7\u6c42\u7684\u4efb\u52a1\u3002\u4efb\u52a1\u7684\u53e5\u67c4\u4ece CloudCommand_t \u7ed3\u6784\u4e2d\u83b7\u53d6\u3002 */\n                xTaskNotify( xCommand.xTaskToNotify, /* \u4efb\u52a1\u7684\u53e5\u67c4\u5728\u7ed3\u6784\u4e2d */\n                             ulReceivedValue, /* \u4e91\u6570\u636e\u4f5c\u4e3a\u901a\u77e5\u503c\u53d1\u9001 */\n                             eSetValueWithOverwrite );\n                break;\n\n                /* \u5176\u4ed6\u60c5\u51b5\u5728\u6b64\u5904\u7406\u3002 */\n        }\n    }\n}\n</code></pre> <p>\u5217\u8868 10.16 \u670d\u52a1\u5668\u4efb\u52a1\u5904\u7406\u8bfb\u53d6\u8bf7\u6c42</p> <p><code>CloudWrite()</code> \u7684\u4f2a\u4ee3\u7801\u5982\u5217\u8868 10.17 \u6240\u793a\u3002\u4e3a\u4e86\u6f14\u793a\uff0c<code>CloudWrite()</code> \u8fd4\u56de\u4e00\u4e2a\u6309\u4f4d\u72b6\u6001\u4ee3\u7801\uff0c\u5176\u4e2d\u72b6\u6001\u4ee3\u7801\u4e2d\u7684\u6bcf\u4e2a\u4f4d\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u542b\u4e49\u3002\u5217\u8868 10.17 \u9876\u90e8\u7684 <code>#define</code> \u8bed\u53e5\u663e\u793a\u4e86\u56db\u4e2a\u793a\u4f8b\u72b6\u6001\u4f4d\u3002</p> <p>\u4efb\u52a1\u6e05\u9664\u8fd9\u56db\u4e2a\u72b6\u6001\u4f4d\uff0c\u5c06\u8bf7\u6c42\u53d1\u9001\u5230\u670d\u52a1\u5668\u4efb\u52a1\uff0c\u7136\u540e\u8c03\u7528 <code>xTaskNotifyWait()</code> \u5728\u963b\u585e\u72b6\u6001\u4e0b\u7b49\u5f85\u72b6\u6001\u901a\u77e5\u3002</p> <p></p> <pre><code>/* \u4e91\u5199\u5165\u64cd\u4f5c\u4f7f\u7528\u7684\u72b6\u6001\u4f4d\u3002 */\n#define SEND_SUCCESSFUL_BIT ( 0x01 &lt;&lt; 0 )\n#define OPERATION_TIMED_OUT_BIT ( 0x01 &lt;&lt; 1 )\n#define NO_INTERNET_CONNECTION_BIT ( 0x01 &lt;&lt; 2 )\n#define CANNOT_LOCATE_CLOUD_SERVER_BIT ( 0x01 &lt;&lt; 3 )\n\n/* \u4e00\u4e2a\u63a9\u7801\uff0c\u8bbe\u7f6e\u4e86\u56db\u4e2a\u72b6\u6001\u4f4d\u3002 */\n#define CLOUD_WRITE_STATUS_BIT_MASK ( SEND_SUCCESSFUL_BIT |\n                                      OPERATION_TIMED_OUT_BIT |\n                                      NO_INTERNET_CONNECTION_BIT |\n                                      CANNOT_LOCATE_CLOUD_SERVER_BIT )\n\nuint32_t CloudWrite( uint32_t ulDataID, uint32_t ulDataValue )\n{\n    CloudCommand_t xRequest;\n    uint32_t ulNotificationValue;\n\n    /* \u8bbe\u7f6e CloudCommand_t \u7ed3\u6784\u7684\u6210\u5458\u4ee5\u6b63\u786e\u5904\u7406\u6b64\u5199\u5165\u8bf7\u6c42\u3002 */\n    xRequest.eOperation = eWrite; /* \u8fd9\u662f\u4e00\u4e2a\u5199\u5165\u6570\u636e\u7684\u8bf7\u6c42 */\n    xRequest.ulDataID = ulDataID; /* \u4e00\u4e2a\u6807\u8bc6\u6b63\u5728\u5199\u5165\u7684\u6570\u636e\u7684\u4ee3\u7801 */\n    xRequest.ulDataValue = ulDataValue; /* \u5199\u5165\u4e91\u670d\u52a1\u5668\u7684\u6570\u636e\u503c */\n    xRequest.xTaskToNotify = xTaskGetCurrentTaskHandle(); /* \u8c03\u7528\u4efb\u52a1\u7684\u53e5\u67c4\u3002 */\n\n    /* \u901a\u8fc7\u5c06 ulBitsToClearOnExit \u53c2\u6570\u8bbe\u7f6e\u4e3a CLOUD_WRITE_STATUS_BIT_MASK\uff0c\u5e76\u5c06\u963b\u585e\u65f6\u95f4\u8bbe\u7f6e\u4e3a 0\uff0c\u8c03\u7528 xTaskNotifyWait() \u6e05\u9664\u4e0e\u5199\u5165\u64cd\u4f5c\u76f8\u5173\u7684\u4e09\u4e2a\u72b6\u6001\u4f4d\u3002\u5f53\u524d\u7684\u901a\u77e5\u503c\u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u56e0\u6b64 pulNotificationValue \u53c2\u6570\u8bbe\u7f6e\u4e3a NULL\u3002 */\n    xTaskNotifyWait( 0, CLOUD_WRITE_STATUS_BIT_MASK, NULL, 0 );\n\n    /* \u5c06\u8bf7\u6c42\u53d1\u9001\u5230\u670d\u52a1\u5668\u4efb\u52a1\u3002 */\n    xQueueSend( xServerTaskQueue, &amp;xRequest, portMAX_DELAY );\n\n    /* \u7b49\u5f85\u6765\u81ea\u670d\u52a1\u5668\u4efb\u52a1\u7684\u901a\u77e5\u3002\u670d\u52a1\u5668\u4efb\u52a1\u5c06\u6309\u4f4d\u72b6\u6001\u4ee3\u7801\u5199\u5165\u6b64\u4efb\u52a1\u7684\u901a\u77e5\u503c\uff0c\n       \u8be5\u72b6\u6001\u4ee3\u7801\u5199\u5165 ulNotificationValue\u3002 */\n    xTaskNotifyWait( 0, /* \u8fdb\u5165\u65f6\u4e0d\u6e05\u9664\u4efb\u4f55\u4f4d\u3002 */\n                     CLOUD_WRITE_STATUS_BIT_MASK, /* \u9000\u51fa\u65f6\u6e05\u9664\u76f8\u5173\u4f4d\u3002 */\n                     &amp;ulNotificationValue, /* \u901a\u77e5\u503c\u3002 */\n                     pdMS_TO_TICKS( 250 ) ); /* \u6700\u591a\u7b49\u5f85 250 \u6beb\u79d2\u3002 */\n\n    /* \u5c06\u72b6\u6001\u4ee3\u7801\u8fd4\u56de\u7ed9\u8c03\u7528\u4efb\u52a1\u3002 */\n    return ( ulNotificationValue &amp; CLOUD_WRITE_STATUS_BIT_MASK );\n}\n</code></pre> <p>\u5217\u8868 10.17 CloudWrite() API \u51fd\u6570\u7684\u5b9e\u73b0</p> <p>\u663e\u793a\u670d\u52a1\u5668\u4efb\u52a1\u5982\u4f55\u7ba1\u7406\u5199\u5165\u8bf7\u6c42\u7684\u4f2a\u4ee3\u7801\u5982\u5217\u8868 10.18\u3002\u5f53\u6570\u636e\u53d1\u9001\u5230\u4e91\u670d\u52a1\u5668\u540e\uff0c\u670d\u52a1\u5668\u4efb\u52a1\u89e3\u9664\u5e94\u7528\u7a0b\u5e8f\u4efb\u52a1\u7684\u963b\u585e\uff0c\u5e76\u901a\u8fc7\u5c06\u6309\u4f4d\u72b6\u6001\u4ee3\u7801\u53d1\u9001\u7ed9\u5e94\u7528\u7a0b\u5e8f\u4efb\u52a1\u7684 <code>xTaskNotify()</code> \u8c03\u7528\u6765\u53d1\u9001\u72b6\u6001\u901a\u77e5\u3002\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u4e2d\u53ea\u6709\u7531 <code>CLOUD_WRITE_STATUS_BIT_MASK</code> \u5e38\u91cf\u5b9a\u4e49\u7684\u4f4d\u53ef\u4ee5\u88ab\u66f4\u6539\uff0c\u56e0\u6b64\u63a5\u6536\u4efb\u52a1\u53ef\u4ee5\u5c06\u901a\u77e5\u503c\u4e2d\u7684\u5176\u4ed6\u4f4d\u7528\u4e8e\u5176\u4ed6\u76ee\u7684\u3002</p> <p>\u5217\u8868 10.18 \u663e\u793a\u4e86\u7b80\u5316\u7684\u573a\u666f\uff0c\u56e0\u4e3a\u5b83\u5047\u8bbe <code>SetCloudData()</code> \u4e0d\u5fc5\u7b49\u5f85\u4ece\u8fdc\u7a0b\u4e91\u670d\u52a1\u5668\u83b7\u53d6\u786e\u8ba4\u3002</p> <p></p> <pre><code>void ServerTask( void *pvParameters )\n{\n    CloudCommand_t xCommand;\n    uint32_t ulBitwiseStatusCode;\n\n    for( ;; )\n    {\n        /* \u7b49\u5f85\u63a5\u6536\u4e0b\u4e00\u4e2a\u6d88\u606f\u3002 */\n        xQueueReceive( xServerTaskQueue, &amp;xCommand, portMAX_DELAY );\n\n        /* \u662f\u8bfb\u53d6\u8fd8\u662f\u5199\u5165\u8bf7\u6c42\uff1f */\n        switch( xCommand.eOperation )\n        {\n            case eWrite:\n\n            /* \u5c06\u6570\u636e\u53d1\u9001\u5230\u8fdc\u7a0b\u4e91\u670d\u52a1\u5668\u3002SetCloudData() \u8fd4\u56de\u4e00\u4e2a\u6309\u4f4d\u72b6\u6001\u4ee3\u7801\uff0c\n               \u8be5\u72b6\u6001\u4ee3\u7801\u4ec5\u4f7f\u7528 CLOUD_WRITE_STATUS_BIT_MASK \u5b9a\u4e49\u7684\u4f4d\u3002 */\n            ulBitwiseStatusCode = SetCloudData( xCommand.ulDataID,\n                                                xCommand.ulDataValue );\n\n            /* \u53d1\u9001\u901a\u77e5\u7ed9\u53d1\u51fa\u5199\u5165\u8bf7\u6c42\u7684\u4efb\u52a1\u3002\u4f7f\u7528 eSetBits \u52a8\u4f5c\uff0c\u4ee5\u4fbf\u8bbe\u7f6e\u5728\n               ulBitwiseStatusCode \u4e2d\u7684\u4efb\u4f55\u72b6\u6001\u4f4d\u90fd\u5c06\u88ab\u8bbe\u7f6e\u5230\u88ab\u901a\u77e5\u4efb\u52a1\u7684\u901a\u77e5\u503c\u4e2d\u3002\n               \u5176\u4ed6\u6240\u6709\u4f4d\u4fdd\u6301\u4e0d\u53d8\u3002\u4efb\u52a1\u7684\u53e5\u67c4\u4ece CloudCommand_t \u7ed3\u6784\u4e2d\u83b7\u53d6\u3002 */\n            xTaskNotify( xCommand.xTaskToNotify, /* \u4efb\u52a1\u7684\u53e5\u67c4\u5728\u7ed3\u6784\u4e2d */\n                         ulBitwiseStatusCode,    /* \u4e91\u6570\u636e\u4f5c\u4e3a\u901a\u77e5\u503c\u53d1\u9001 */\n                         eSetBits );\n            break;\n\n            /* \u5176\u4ed6\u60c5\u51b5\u5728\u6b64\u5904\u7406\u3002 */\n        }\n    }\n}\n</code></pre> <p>\u5217\u8868 10.18 \u670d\u52a1\u5668\u4efb\u52a1\u5904\u7406\u53d1\u9001\u8bf7\u6c42</p>"},{"location":"ch11-%E4%BD%8E%E5%8A%9F%E8%80%97%E6%94%AF%E6%8C%81/","title":"11 \u4f4e\u529f\u8017\u652f\u6301","text":""},{"location":"ch11-%E4%BD%8E%E5%8A%9F%E8%80%97%E6%94%AF%E6%8C%81/#111","title":"11.1 \u8282\u80fd\u7b80\u4ecb","text":"<p>FreeRTOS \u901a\u8fc7 IDLE \u4efb\u52a1\u94a9\u5b50\u548c\u65e0\u6ef4\u7b54\u7a7a\u95f2\u6a21\u5f0f\uff08tickless Idle\uff09\u4e3a\u4f4e\u529f\u8017\u6a21\u5f0f\u63d0\u4f9b\u4e86\u4fbf\u6377\u652f\u6301\u3002</p> <p>\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u5728 IDLE \u4efb\u52a1\u94a9\u5b50\u4e2d\u8ba9\u5fae\u63a7\u5236\u5668\u8fdb\u5165\u4f4e\u529f\u8017\u72b6\u6001\u6765\u964d\u4f4e\u529f\u8017\u3002\u4f46\u8fd9\u79cd\u65b9\u6cd5\u7684\u8282\u80fd\u6548\u679c\u53d7\u9650\u4e8e\u9700\u8981\u5b9a\u671f\u9000\u51fa\u5e76\u91cd\u65b0\u8fdb\u5165\u4f4e\u529f\u8017\u72b6\u6001\u4ee5\u5904\u7406\u6ef4\u7b54\u4e2d\u65ad\u3002\u5982\u679c\u6ef4\u7b54\u4e2d\u65ad\u9891\u7387\u8fc7\u9ad8\uff08\u5524\u9192\u8fc7\u4e8e\u9891\u7e41\uff09\uff0c\u5219\u6bcf\u6b21\u8fdb\u5165\u548c\u9000\u51fa\u4f4e\u529f\u8017\u72b6\u6001\u6240\u6d88\u8017\u7684\u80fd\u91cf\u548c\u65f6\u95f4\u4f1a\u62b5\u6d88\u8282\u80fd\u6536\u76ca\uff0c\u9664\u975e\u91c7\u7528\u6781\u8f7b\u91cf\u7ea7\u7684\u7701\u7535\u6a21\u5f0f\u3002</p> <p>FreeRTOS \u652f\u6301\u4e00\u79cd\u4f4e\u529f\u8017\u72b6\u6001\uff0c\u5141\u8bb8\u5fae\u63a7\u5236\u5668\u5468\u671f\u6027\u5730\u8fdb\u5165\u548c\u9000\u51fa\u4f4e\u529f\u8017\u3002FreeRTOS \u7684\u65e0\u6ef4\u7b54\u7a7a\u95f2\u6a21\u5f0f\u4f1a\u5728\u7a7a\u95f2\u671f\u95f4\uff08\u6ca1\u6709\u53ef\u8fd0\u884c\u7684\u5e94\u7528\u4efb\u52a1\u65f6\uff09\u505c\u6b62\u5468\u671f\u6027\u6ef4\u7b54\u4e2d\u65ad\uff0c\u4f7f MCU \u80fd\u591f\u4fdd\u6301\u5728\u6df1\u5ea6\u7701\u7535\u72b6\u6001\uff0c\u76f4\u5230\u53d1\u751f\u4e2d\u65ad\u6216 RTOS \u5185\u6838\u9700\u8981\u5c06\u4efb\u52a1\u5207\u6362\u5230\u5c31\u7eea\u72b6\u6001\u3002\u6062\u590d\u6ef4\u7b54\u4e2d\u65ad\u65f6\uff0c\u5185\u6838\u4f1a\u5bf9\u6ef4\u7b54\u8ba1\u6570\u503c\u8fdb\u884c\u4fee\u6b63\u3002\u65e0\u6ef4\u7b54\u6a21\u5f0f\u7684\u539f\u7406\u662f\u5728 MCU \u6267\u884c\u7a7a\u95f2\u4efb\u52a1\u65f6\u8ba9\u5176\u8fdb\u5165\u4f4e\u529f\u8017\u6a21\u5f0f\u4ee5\u8282\u7701\u7cfb\u7edf\u529f\u8017\u3002</p>"},{"location":"ch11-%E4%BD%8E%E5%8A%9F%E8%80%97%E6%94%AF%E6%8C%81/#112-freertos","title":"11.2 FreeRTOS \u7761\u7720\u6a21\u5f0f","text":"<p>FreeRTOS \u652f\u6301\u4e09\u79cd\u7761\u7720\u6a21\u5f0f\uff1a</p> <ol> <li> <p>eAbortSleep - \u8868\u793a\u6709\u4efb\u52a1\u53d8\u4e3a\u5c31\u7eea\u3001\u6302\u8d77\u4e86\u4e0a\u4e0b\u6587\u5207\u6362\u6216\u6ef4\u7b54\u4e2d\u65ad\u5df2\u53d1\u751f\u4f46\u56e0\u8c03\u5ea6\u5668\u6302\u8d77\u800c\u6302\u8d77\u3002\u6b64\u6a21\u5f0f\u901a\u77e5 RTOS \u653e\u5f03\u8fdb\u5165\u7761\u7720\u6a21\u5f0f\u3002</p> </li> <li> <p>eStandardSleep - \u5141\u8bb8\u8fdb\u5165\u4e0d\u4f1a\u8d85\u8fc7\u9884\u671f\u7a7a\u95f2\u65f6\u95f4\u7684\u7761\u7720\u6a21\u5f0f\u3002</p> </li> <li> <p>eNoTasksWaitingTimeout - \u5f53\u6ca1\u6709\u4efb\u52a1\u7b49\u5f85\u8d85\u65f6\u65f6\u8fdb\u5165\u6b64\u6a21\u5f0f\uff0c\u6b64\u65f6\u53ef\u4ee5\u5b89\u5168\u5730\u8fdb\u5165\u53ea\u80fd\u901a\u8fc7\u5916\u90e8\u4e2d\u65ad\u6216\u590d\u4f4d\u5524\u9192\u7684\u7761\u7720\u6a21\u5f0f\u3002</p> </li> </ol>"},{"location":"ch11-%E4%BD%8E%E5%8A%9F%E8%80%97%E6%94%AF%E6%8C%81/#113","title":"11.3 \u542f\u7528\u5185\u7f6e\u65e0\u6ef4\u7b54\u7a7a\u95f2\u529f\u80fd\u7684\u65b9\u6cd5","text":"<p>\u901a\u8fc7\u5728 FreeRTOSConfig.h \u4e2d\u5c06 <code>configUSE_TICKLESS_IDLE</code> \u5b9a\u4e49\u4e3a 1\uff08\u5bf9\u4e8e\u652f\u6301\u8be5\u7279\u6027\u7684\u7aef\u53e3\uff09\u5373\u53ef\u542f\u7528\u5185\u7f6e\u65e0\u6ef4\u7b54\u7a7a\u95f2\u529f\u80fd\u3002\u5bf9\u4e8e\u4efb\u4f55 FreeRTOS \u7aef\u53e3\uff08\u5305\u62ec\u5df2\u5185\u7f6e\u8be5\u529f\u80fd\u7684\u7aef\u53e3\uff09\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5c06 <code>configUSE_TICKLESS_IDLE</code> \u5b9a\u4e49\u4e3a 2 \u6765\u63d0\u4f9b\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u65e0\u6ef4\u7b54\u7a7a\u95f2\u529f\u80fd\u3002 </p> <p>\u542f\u7528\u65e0\u6ef4\u7b54\u7a7a\u95f2\u529f\u80fd\u540e\uff0c\u5185\u6838\u4f1a\u5728\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u4e2a\u6761\u4ef6\u65f6\u8c03\u7528 <code>portSUPPRESS_TICKS_AND_SLEEP()</code> \u5b8f\uff1a</p> <ol> <li> <p>\u53ea\u6709\u7a7a\u95f2\u4efb\u52a1\u53ef\u8fd0\u884c\uff0c\u56e0\u4e3a\u6240\u6709\u5e94\u7528\u4efb\u52a1\u90fd\u5904\u4e8e\u963b\u585e\u6216\u6302\u8d77\u72b6\u6001\u3002</p> </li> <li> <p>\u5728\u5185\u6838\u9700\u8981\u5c06\u5e94\u7528\u4efb\u52a1\u4ece\u963b\u585e\u72b6\u6001\u8f6c\u6362\u4e3a\u5c31\u7eea\u72b6\u6001\u4e4b\u524d\uff0c\u81f3\u5c11\u4f1a\u7ecf\u8fc7 n \u4e2a\u5b8c\u6574\u7684\u6ef4\u7b54\u5468\u671f\uff0c\u5176\u4e2d n \u7531 FreeRTOSConfig.h \u4e2d\u7684 <code>configEXPECTED_IDLE_TIME_BEFORE_SLEEP</code> \u5b9a\u4e49\u8bbe\u7f6e\u3002</p> </li> </ol>"},{"location":"ch11-%E4%BD%8E%E5%8A%9F%E8%80%97%E6%94%AF%E6%8C%81/#1131-the-portsuppress_ticks_and_sleep-macro","title":"11.3.1 The portSUPPRESS_TICKS_AND_SLEEP() Macro","text":"<pre><code>portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime )\n</code></pre> <p>Listing 11.1 The prototype for the portSUPPRESS_TICKS_AND_SLEEP macro</p> <p>The value of the <code>xExpectedIdleTime</code> parameter in <code>portSUPPRESS_TICKS_AND_SLEEP()</code> equals the total number  of tick periods before a task is due to be moved into the Ready state. The parameter value is therefore the  time the microcontroller can safely remain in a deep sleep state, with the tick interrupt suppressed. </p>"},{"location":"ch11-%E4%BD%8E%E5%8A%9F%E8%80%97%E6%94%AF%E6%8C%81/#1132-the-vportsuppressticksandsleep-function","title":"11.3.2 The vPortSuppressTicksAndSleep Function","text":"<p>The <code>vPortSuppressTicksAndSleep()</code> function is defined in FreeRTOS and it can be used to implement the  tickless mode. This function is weakly defined in the FreeRTOS Cortex-M port layer and can be overridden  by the application writer.</p> <p></p> <pre><code>void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );\n</code></pre> <p>Listing 11.2 The vPortSuppressTicksAndSleep API function prototype</p>"},{"location":"ch11-%E4%BD%8E%E5%8A%9F%E8%80%97%E6%94%AF%E6%8C%81/#1133-the-etaskconfirmsleepmodestatus-function","title":"11.3.3 The eTaskConfirmSleepModeStatus Function","text":"<p>The API eTaskConfirmSleepModeStatus returns the sleep mode status to determine if it is ok to proceed  with the sleep and if it is ok to sleep indefinitely. This functionality is only available when <code>configUSE_TICKLESS_IDLE</code>  is set to 1.</p> <p></p> <pre><code>eSleepModeStatus eTaskConfirmSleepModeStatus( void );\n</code></pre> <p>Listing 11.3 The eTaskConfirmSleepModeStatus API function prototype</p> <p>If <code>eTaskConfirmSleepModeStatus()</code> returns <code>eNoTasksWaitingTimeout</code> when it is called from  within <code>portSUPPRESS_TICKS_AND_SLEEP()</code>, then the microcontroller can remain in a deep sleep state  indefinitely. <code>eTaskConfirmSleepModeStatus()</code> will only return <code>eNoTasksWaitingTimeout</code> when the  following conditions are true:</p> <ul> <li> <p>Software timers are not being used, so the scheduler is not due to execute a timer callback function    at any time in the future.</p> </li> <li> <p>All the application tasks are either in the Suspended state, or in the Blocked state with a timeout value    of <code>portMAX_DELAY</code>, so the scheduler is not due to transition a task out of the Blocked state at any fixed    time in the future.</p> </li> </ul> <p>To avoid race conditions, the FreeRTOS scheduler is suspended before <code>portSUPPRESS_TICKS_AND_SLEEP()</code> is  called, and resumed when <code>portSUPPRESS_TICKS_AND_SLEEP()</code> completes. This ensures application tasks cannot  execute between the microcontroller exiting its low power state and <code>portSUPPRESS_TICKS_AND_SLEEP()</code>  completing its execution. Further, it is necessary for the <code>portSUPPRESS_TICKS_AND_SLEEP()</code> function to  create a small critical section between the timer being stopped and the sleep mode being entered to ensure  it is ok to proceed into the sleep mode. <code>eTaskConfirmSleepModeStatus()</code> should be called from this critical  section.</p> <p>In addition, FreeRTOS provides users with two other interface functions defined in FreeRTOSConfig.h. These  macros allow the application writer to add additional steps before and after the MCU is placed into the low  power state, respectively.</p>"},{"location":"ch11-%E4%BD%8E%E5%8A%9F%E8%80%97%E6%94%AF%E6%8C%81/#1134-the-configpre_sleep_processing-configuration","title":"11.3.4 The configPRE_SLEEP_PROCESSING configuration","text":"<pre><code>configPRE_SLEEP_PROCESSING( xExpectedIdleTime )\n</code></pre> <p>Listing 11.4 The prototype for the configPRE_SLEEP_PROCESSING macro</p> <p>Before the user can make the MCU enter the low-power mode, <code>configPRE_SLEEP_PROCESSING()</code> must be called to  configure the system parameters to reduce the system power consumption, such as turning off other peripheral  clocks, reducing the system frequency. </p>"},{"location":"ch11-%E4%BD%8E%E5%8A%9F%E8%80%97%E6%94%AF%E6%8C%81/#1135-the-configpost_sleep_processing-configuration","title":"11.3.5 The configPOST_SLEEP_PROCESSING configuration","text":"<pre><code>configPOST_SLEEP_PROCESSING( xExpectedIdleTime )\n</code></pre> <p>Listing 11.5 The prototype for the configPOST_SLEEP_PROCESSING macro</p> <p>After exiting the low-power mode, the user should call the <code>configPOST_SLEEP_PROCESSING()</code> function  to restore the system's main frequency and peripheral functions.</p>"},{"location":"ch11-%E4%BD%8E%E5%8A%9F%E8%80%97%E6%94%AF%E6%8C%81/#114-implementing-portsuppress_ticks_and_sleep-macro","title":"11.4 Implementing portSUPPRESS_TICKS_AND_SLEEP() Macro","text":"<p>If the FreeRTOS port in use does not provide a default implementation of <code>portSUPPRESS_TICKS_AND_SLEEP()</code>,  then the application writer can provide their own implementation by defining <code>portSUPPRESS_TICKS_AND_SLEEP()</code>  in FreeRTOSConfig.h. If the FreeRTOS port in use does provide a default implementation of <code>portSUPPRESS_TICKS_AND_SLEEP()</code>,  then the application writer can override the default implementation by defining <code>portSUPPRESS_TICKS_AND_SLEEP()</code>  in FreeRTOSConfig.h. </p> <p>The following source code is an example of how <code>portSUPPRESS_TICKS_AND_SLEEP()</code> might be implemented by an  application writer. The example is basic, and will introduce some slippage between the time maintained by  the kernel and calendar time. Of the function calls shown in the example, only <code>vTaskStepTick()</code>  and <code>eTaskConfirmSleepModeStatus()</code> are part of the FreeRTOS API. The other functions are specific to the  clocks and power saving modes available on the hardware in use, and as such, must be provided by the  application writer.</p> <p></p> <pre><code>/* First define the portSUPPRESS_TICKS_AND_SLEEP() macro.  The parameter is the\n   time, in ticks, until the kernel next needs to execute. */\n\n#define portSUPPRESS_TICKS_AND_SLEEP( xIdleTime ) vApplicationSleep( xIdleTime )\n\n/* Define the function that is called by portSUPPRESS_TICKS_AND_SLEEP(). */\nvoid vApplicationSleep( TickType_t xExpectedIdleTime )\n{\n    unsigned long ulLowPowerTimeBeforeSleep, ulLowPowerTimeAfterSleep;\n\n    eSleepModeStatus eSleepStatus;\n\n    /* Read the current time from a time source that will remain operational\n       while the microcontroller is in a low power state. */\n    ulLowPowerTimeBeforeSleep = ulGetExternalTime();\n\n    /* Stop the timer that is generating the tick interrupt. */\n    prvStopTickInterruptTimer();\n\n    /* Enter a critical section that will not effect interrupts bringing the MCU\n       out of sleep mode. */\n    disable_interrupts();\n\n    /* Ensure it is still ok to enter the sleep mode. */\n    eSleepStatus = eTaskConfirmSleepModeStatus();\n\n    if( eSleepStatus == eAbortSleep )\n    {\n        /* A task has been moved out of the Blocked state since this macro was\n           executed, or a context siwth is being held pending.  Do not enter a\n           sleep state.  Restart the tick and exit the critical section. */\n        prvStartTickInterruptTimer();\n        enable_interrupts();\n    }\n    else\n    {\n        if( eSleepStatus == eNoTasksWaitingTimeout )\n        {\n            /* It is not necessary to configure an interrupt to bring the\n               microcontroller out of its low power state at a fixed time in \n               the future. */\n            prvSleep();\n        }\n        else\n        {\n            /* Configure an interrupt to bring the microcontroller out of its low\n               power state at the time the kernel next needs to execute.  The\n               interrupt must be generated from a source that remains operational\n               when the microcontroller is in a low power state. */\n            vSetWakeTimeInterrupt( xExpectedIdleTime );\n\n            /* Enter the low power state. */\n            prvSleep();\n\n            /* Determine how long the microcontroller was actually in a low power\n               state for, which will be less than xExpectedIdleTime if the\n               microcontroller was brought out of low power mode by an interrupt\n               other than that configured by the vSetWakeTimeInterrupt() call.\n               Note that the scheduler is suspended before\n               portSUPPRESS_TICKS_AND_SLEEP() is called, and resumed when\n               portSUPPRESS_TICKS_AND_SLEEP() returns.  Therefore no other tasks will\n               execute until this function completes. */\n            ulLowPowerTimeAfterSleep = ulGetExternalTime();\n\n            /* Correct the kernels tick count to account for the time the\n               microcontroller spent in its low power state. */\n            vTaskStepTick( ulLowPowerTimeAfterSleep - ulLowPowerTimeBeforeSleep );\n        }\n\n        /* Exit the critical section - it might be possible to do this immediately\n           after the prvSleep() calls. */\n        enable_interrupts();\n\n        /* Restart the timer that is generating the tick interrupt. */\n        prvStartTickInterruptTimer();\n    }\n}\n</code></pre> <p>Listing 11.6 An example of a user defined implementation of portSUPPRESS_TICKS_AND_SLEEP()</p>"},{"location":"ch11-%E4%BD%8E%E5%8A%9F%E8%80%97%E6%94%AF%E6%8C%81/#115-idle-task-hook-function","title":"11.5 Idle Task Hook Function","text":"<p>The Idle task can optionally call an application defined hook (or callback) function - the idle hook.  The idle task runs at the lowest priority, so such an idle hook function will only get executed when  there are no tasks of higher priority that are able to run. This makes the Idle hook function an ideal  place to put the processor into a low power state - providing an automatic power saving whenever there  is no processing to be performed. The Idle hook will only get called if <code>configUSE_IDLE_HOOK</code> is set  to 1 within FreeRTOSConfig.h.</p> <p></p> <pre><code>void vApplicationIdleHook( void );\n</code></pre> <p>Listing 11.7 The vApplicationIdleHook API function prototype</p> <p>The idle hook is called repeatedly as long as the idle task is running. It is paramount that the idle  hook function does not call any API functions that could cause it to block. Also, if the application  makes use of the <code>vTaskDelete()</code> API function then the idle task hook must be allowed to periodically  return, since the idle task is responsible for cleaning up the resources that were allocated by the RTOS  kernel to the task that has been deleted.</p>"},{"location":"ch12-%E5%BC%80%E5%8F%91%E8%80%85%E6%94%AF%E6%8C%81/","title":"12 \u5f00\u53d1\u8005\u652f\u6301","text":""},{"location":"ch12-%E5%BC%80%E5%8F%91%E8%80%85%E6%94%AF%E6%8C%81/#121","title":"12.1 \u7b80\u4ecb","text":"<p>\u672c\u7ae0\u91cd\u70b9\u4ecb\u7ecd\u4e86\u4e00\u7ec4\u65e8\u5728\u6700\u5927\u5316\u5f00\u53d1\u6548\u7387\u7684\u7279\u6027\uff1a</p> <ul> <li>\u63d0\u4f9b\u5bf9\u5e94\u7528\u884c\u4e3a\u7684\u6d1e\u5bdf\u3002</li> <li>\u7a81\u51fa\u4f18\u5316\u673a\u4f1a\u3002</li> <li>\u5728\u9519\u8bef\u53d1\u751f\u65f6\u7acb\u5373\u6355\u83b7\u3002</li> </ul>"},{"location":"ch12-%E5%BC%80%E5%8F%91%E8%80%85%E6%94%AF%E6%8C%81/#122-configassert","title":"12.2 configASSERT()","text":"<p>\u5728 C \u8bed\u8a00\u4e2d\uff0c\u5b8f <code>assert()</code> \u7528\u4e8e\u9a8c\u8bc1\u7a0b\u5e8f\u505a\u51fa\u7684\u201c\u65ad\u8a00\u201d\uff08\u5047\u8bbe\uff09\u3002\u65ad\u8a00\u4ee5 C \u8868\u8fbe\u5f0f\u5f62\u5f0f\u4e66\u5199\uff0c\u5982\u679c\u8868\u8fbe\u5f0f\u7ed3\u679c\u4e3a\u5047\uff080\uff09\uff0c\u5219\u65ad\u8a00\u5931\u8d25\u3002\u4f8b\u5982\uff0c\u6e05\u5355 12.1 \u68c0\u67e5\u6307\u9488 <code>pxMyPointer</code> \u662f\u5426\u4e0d\u4e3a NULL\u3002</p> <p></p> <pre><code>/* \u68c0\u67e5 pxMyPointer \u662f\u5426\u4e0d\u4e3a NULL */\nassert( pxMyPointer != NULL );\n</code></pre> <p>\u6e05\u5355 12.1 \u4f7f\u7528\u6807\u51c6 C assert() \u5b8f\u68c0\u67e5 pxMyPointer \u662f\u5426\u4e3a NULL</p> <p>\u5e94\u7528\u5f00\u53d1\u8005\u53ef\u901a\u8fc7\u5b9e\u73b0 <code>assert()</code> \u5b8f\u6765\u6307\u5b9a\u65ad\u8a00\u5931\u8d25\u65f6\u7684\u5904\u7406\u65b9\u5f0f\u3002</p> <p>FreeRTOS \u6e90\u7801\u4e0d\u4f1a\u8c03\u7528 <code>assert()</code>\uff0c\u56e0\u4e3a\u5e76\u975e\u6240\u6709\u7f16\u8bd1\u5668\u90fd\u652f\u6301\u8be5\u5b8f\u3002\u76f8\u53cd\uff0cFreeRTOS \u6e90\u7801\u4e2d\u5927\u91cf\u4f7f\u7528\u4e86 <code>configASSERT()</code> \u5b8f\uff0c\u5f00\u53d1\u8005\u53ef\u5728 <code>FreeRTOSConfig.h</code> \u4e2d\u81ea\u5b9a\u4e49\u5176\u884c\u4e3a\uff0c\u529f\u80fd\u4e0e\u6807\u51c6 C <code>assert()</code> \u7c7b\u4f3c\u3002</p> <p>\u65ad\u8a00\u5931\u8d25\u5fc5\u987b\u89c6\u4e3a\u81f4\u547d\u9519\u8bef\u3002\u4e0d\u8981\u5c1d\u8bd5\u5728\u65ad\u8a00\u5931\u8d25\u7684\u4ee3\u7801\u884c\u4e4b\u540e\u7ee7\u7eed\u6267\u884c\u3002</p> <p>\u4f7f\u7528 <code>configASSERT()</code> \u80fd\u663e\u8457\u63d0\u5347\u5f00\u53d1\u6548\u7387\uff0c\u80fd\u7acb\u5373\u6355\u83b7\u548c\u5b9a\u4f4d\u8bb8\u591a\u5e38\u89c1\u9519\u8bef\u3002\u5f3a\u70c8\u5efa\u8bae\u5728\u5f00\u53d1\u6216\u8c03\u8bd5 FreeRTOS \u5e94\u7528\u65f6\u5b9a\u4e49 <code>configASSERT()</code>\u3002</p> <p>\u5b9a\u4e49 <code>configASSERT()</code> \u6709\u52a9\u4e8e\u8fd0\u884c\u65f6\u8c03\u8bd5\uff0c\u4f46\u4f1a\u589e\u52a0\u5e94\u7528\u4ee3\u7801\u4f53\u79ef\u5e76\u964d\u4f4e\u6267\u884c\u901f\u5ea6\u3002\u5982\u679c\u672a\u5b9a\u4e49 <code>configASSERT()</code>\uff0c\u5219\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u7684\u7a7a\u5b9a\u4e49\uff0c\u6240\u6709\u5bf9 <code>configASSERT()</code> \u7684\u8c03\u7528\u90fd\u4f1a\u88ab C \u9884\u5904\u7406\u5668\u5b8c\u5168\u79fb\u9664\u3002</p>"},{"location":"ch12-%E5%BC%80%E5%8F%91%E8%80%85%E6%94%AF%E6%8C%81/#1221-configassert","title":"12.2.1 \u793a\u4f8b configASSERT() \u5b9a\u4e49","text":"<p>\u6e05\u5355 12.2 \u4e2d\u7684 <code>configASSERT()</code> \u5b9a\u4e49\u5728\u5e94\u7528\u7a0b\u5e8f\u5728\u8c03\u8bd5\u5668\u63a7\u5236\u4e0b\u6267\u884c\u65f6\u975e\u5e38\u6709\u7528\u3002\u5b83\u5c06\u5728\u4efb\u4f55\u65ad\u8a00\u5931\u8d25\u7684\u4ee3\u7801\u884c\u4e2d\u505c\u6b62\u6267\u884c\uff0c\u56e0\u6b64\u5f53\u8c03\u8bd5\u4f1a\u8bdd\u6682\u505c\u65f6\uff0c\u8c03\u8bd5\u5668\u663e\u793a\u7684\u5c06\u662f\u5931\u8d25\u65ad\u8a00\u7684\u4ee3\u7801\u884c\u3002</p> <p></p> <pre><code>/* \u7981\u7528\u4e2d\u65ad\u4ee5\u505c\u6b62\u6ef4\u7b54\u4e2d\u65ad\u7684\u6267\u884c\uff0c\u7136\u540e\u8fdb\u5165\u5faa\u73af\u4ee5\u4fbf\u4e0d\u5728\u65ad\u8a00\u5931\u8d25\u7684\u4ee3\u7801\u884c\u4e4b\u540e\u7ee7\u7eed\u6267\u884c\u3002\n\u5982\u679c\u786c\u4ef6\u652f\u6301\u8c03\u8bd5\u4e2d\u65ad\uff0c\u5219\u53ef\u4ee5\u7528\u8c03\u8bd5\u4e2d\u65ad\u6307\u4ee4\u66ff\u6362 for() \u5faa\u73af\u3002 */\n\n#define configASSERT( x ) if( ( x ) == 0 ) { taskDISABLE_INTERRUPTS(); for(;;); }\n</code></pre> <p>\u6e05\u5355 12.2 \u5728\u8c03\u8bd5\u5668\u63a7\u5236\u4e0b\u6267\u884c\u65f6\u6709\u7528\u7684\u7b80\u5355 configASSERT() \u5b9a\u4e49</p> <p>\u6e05\u5355 12.3 \u4e2d\u7684 <code>configASSERT()</code> \u5b9a\u4e49\u5728\u5e94\u7528\u7a0b\u5e8f\u4e0d\u5728\u8c03\u8bd5\u5668\u63a7\u5236\u4e0b\u6267\u884c\u65f6\u975e\u5e38\u6709\u7528\u3002\u5b83\u4f1a\u6253\u5370\u6216\u4ee5\u5176\u4ed6\u65b9\u5f0f\u8bb0\u5f55\u4e0b\u65ad\u8a00\u5931\u8d25\u7684\u6e90\u4ee3\u7801\u884c\u3002\u5931\u8d25\u7684\u65ad\u8a00\u4ee3\u7801\u884c\u901a\u8fc7\u6807\u51c6 C <code>__FILE__</code> \u5b8f\u83b7\u53d6\u6e90\u6587\u4ef6\u540d\uff0c\u901a\u8fc7\u6807\u51c6 C <code>__LINE__</code> \u5b8f\u83b7\u53d6\u6e90\u6587\u4ef6\u4e2d\u7684\u884c\u53f7\u3002</p> <p></p> <pre><code>/* \u6b64\u51fd\u6570\u5fc5\u987b\u5728 C \u6e90\u6587\u4ef6\u4e2d\u5b9a\u4e49\uff0c\u800c\u4e0d\u662f FreeRTOSConfig.h \u5934\u6587\u4ef6\u4e2d\u3002 */\nvoid vAssertCalled( const char *pcFile, uint32_t ulLine )\n{\n    /* \u5728\u6b64\u51fd\u6570\u5185\u90e8\uff0cpcFile \u4fdd\u5b58\u68c0\u6d4b\u5230\u9519\u8bef\u7684\u6e90\u6587\u4ef6\u540d\uff0c\n       ulLine \u4fdd\u5b58\u6e90\u6587\u4ef6\u4e2d\u7684\u884c\u53f7\u3002\u53ef\u4ee5\u5728\u8fdb\u5165\u4ee5\u4e0b\u65e0\u9650\u5faa\u73af\u4e4b\u524d\u6253\u5370\u6216\u4ee5\u5176\u4ed6\u65b9\u5f0f\u8bb0\u5f55 pcFile \u548c ulLine \u7684\u503c\u3002 */\n    RecordErrorInformationHere( pcFile, ulLine );\n\n    /* \u7981\u7528\u4e2d\u65ad\u4ee5\u505c\u6b62\u6ef4\u7b54\u4e2d\u65ad\u7684\u6267\u884c\uff0c\u7136\u540e\u8fdb\u5165\u5faa\u73af\u4ee5\u4fbf\u4e0d\u5728\u65ad\u8a00\u5931\u8d25\u7684\u4ee3\u7801\u884c\u4e4b\u540e\u7ee7\u7eed\u6267\u884c\u3002 */\n    taskDISABLE_INTERRUPTS();\n    for( ;; );\n}\n/*-----------------------------------------------------------*/\n\n/* \u4ee5\u4e0b\u4e24\u884c\u5fc5\u987b\u653e\u5728 FreeRTOSConfig.h \u4e2d\u3002 */\nextern void vAssertCalled( const char *pcFile, unsigned long ulLine );\n#define configASSERT( x ) if( ( x ) == 0 ) vAssertCalled( __FILE__, __LINE__ )\n</code></pre> <p>\u6e05\u5355 12.3 \u8bb0\u5f55\u4e0b\u65ad\u8a00\u5931\u8d25\u7684\u6e90\u4ee3\u7801\u884c\u7684 configASSERT() \u5b9a\u4e49</p>"},{"location":"ch12-%E5%BC%80%E5%8F%91%E8%80%85%E6%94%AF%E6%8C%81/#123-tracealyzer-for-freertos","title":"12.3 Tracealyzer for FreeRTOS","text":"<p>Tracealyzer for FreeRTOS \u662f\u6211\u4eec\u7684\u5408\u4f5c\u4f19\u4f34 Percepio \u63d0\u4f9b\u7684\u8fd0\u884c\u65f6\u8bca\u65ad\u548c\u4f18\u5316\u5de5\u5177\u3002</p> <p>Tracealyzer for FreeRTOS \u6355\u83b7\u6709\u4ef7\u503c\u7684\u52a8\u6001\u884c\u4e3a\u4fe1\u606f\uff0c\u7136\u540e\u4ee5\u76f8\u4e92\u5173\u8054\u7684\u56fe\u5f62\u89c6\u56fe\u5448\u73b0\u6355\u83b7\u7684\u4fe1\u606f\u3002\u8be5\u5de5\u5177\u8fd8\u80fd\u591f\u663e\u793a\u591a\u4e2a\u540c\u6b65\u89c6\u56fe\u3002</p> <p>\u6355\u83b7\u7684\u4fe1\u606f\u5728\u5206\u6790\u3001\u6545\u969c\u6392\u9664\u6216\u7b80\u5355\u5730\u4f18\u5316 FreeRTOS \u5e94\u7528\u7a0b\u5e8f\u65f6\u975e\u5e38\u5b9d\u8d35\u3002</p> <p>Tracealyzer for FreeRTOS \u53ef\u4ee5\u4e0e\u4f20\u7edf\u8c03\u8bd5\u5668\u5e76\u884c\u4f7f\u7528\uff0c\u5e76\u901a\u8fc7\u66f4\u9ad8\u5c42\u6b21\u7684\u57fa\u4e8e\u65f6\u95f4\u7684\u89c6\u89d2\u8865\u5145\u8c03\u8bd5\u5668\u7684\u89c6\u56fe\u3002</p> <p> </p> <p> \u56fe 12.1 FreeRTOS+Trace \u5305\u542b 20 \u591a\u4e2a\u76f8\u4e92\u5173\u8054\u7684\u89c6\u56fe</p> <p> \u56fe 12.2 FreeRTOS+Trace \u4e3b\u8981\u8ddf\u8e2a\u89c6\u56fe - \u8d85\u8fc7 20 \u4e2a\u76f8\u4e92\u5173\u8054\u7684\u8ddf\u8e2a\u89c6\u56fe\u4e4b\u4e00</p> <p> \u56fe 12.3 FreeRTOS+Trace CPU \u5360\u7528\u7387\u89c6\u56fe - \u8d85\u8fc7 20 \u4e2a\u76f8\u4e92\u5173\u8054\u7684\u8ddf\u8e2a\u89c6\u56fe\u4e4b\u4e00</p> <p> \u56fe 12.4 FreeRTOS+Trace \u54cd\u5e94\u65f6\u95f4\u89c6\u56fe - \u8d85\u8fc7 20 \u4e2a\u76f8\u4e92\u5173\u8054\u7684\u8ddf\u8e2a\u89c6\u56fe\u4e4b\u4e00</p> <p> \u56fe 12.5 FreeRTOS+Trace \u7528\u6237\u4e8b\u4ef6\u7ed8\u56fe\u89c6\u56fe - \u8d85\u8fc7 20 \u4e2a\u76f8\u4e92\u5173\u8054\u7684\u8ddf\u8e2a\u89c6\u56fe\u4e4b\u4e00</p> <p> \u56fe 12.6 FreeRTOS+Trace \u5185\u6838\u5bf9\u8c61\u5386\u53f2\u89c6\u56fe - \u8d85\u8fc7 20 \u4e2a\u76f8\u4e92\u5173\u8054\u7684\u8ddf\u8e2a\u89c6\u56fe\u4e4b\u4e00</p>"},{"location":"ch12-%E5%BC%80%E5%8F%91%E8%80%85%E6%94%AF%E6%8C%81/#124","title":"12.4 \u8c03\u8bd5\u76f8\u5173\u7684\u94a9\u5b50\uff08\u56de\u8c03\uff09\u51fd\u6570","text":""},{"location":"ch12-%E5%BC%80%E5%8F%91%E8%80%85%E6%94%AF%E6%8C%81/#1241","title":"12.4.1 \u5185\u5b58\u5206\u914d\u5931\u8d25\u94a9\u5b50","text":"<p>\u5185\u5b58\u5206\u914d\u5931\u8d25\u94a9\u5b50\uff08\u6216\u56de\u8c03\uff09\u5728\u7b2c 3 \u7ae0\u300a\u5806\u5185\u5b58\u7ba1\u7406\u300b\u4e2d\u8fdb\u884c\u4e86\u63cf\u8ff0\u3002</p> <p>\u5b9a\u4e49\u5185\u5b58\u5206\u914d\u5931\u8d25\u94a9\u5b50\u53ef\u786e\u4fdd\u5728\u521b\u5efa\u4efb\u52a1\u3001\u961f\u5217\u3001\u4fe1\u53f7\u91cf\u6216\u4e8b\u4ef6\u7ec4\u5931\u8d25\u65f6\u7acb\u5373\u901a\u77e5\u5e94\u7528\u5f00\u53d1\u8005\u3002</p>"},{"location":"ch12-%E5%BC%80%E5%8F%91%E8%80%85%E6%94%AF%E6%8C%81/#1242","title":"12.4.2 \u5806\u6808\u6ea2\u51fa\u94a9\u5b50","text":"<p>\u5806\u6808\u6ea2\u51fa\u94a9\u5b50\u7684\u8be6\u7ec6\u4fe1\u606f\u5728\u7b2c 13.3 \u8282\u300a\u5806\u6808\u6ea2\u51fa\u300b\u4e2d\u63d0\u4f9b\u3002</p> <p>\u5b9a\u4e49\u5806\u6808\u6ea2\u51fa\u94a9\u5b50\u53ef\u786e\u4fdd\u5728\u4efb\u52a1\u4f7f\u7528\u7684\u5806\u6808\u8d85\u8fc7\u5206\u914d\u7ed9\u8be5\u4efb\u52a1\u7684\u5806\u6808\u7a7a\u95f4\u65f6\u901a\u77e5\u5e94\u7528\u5f00\u53d1\u8005\u3002</p>"},{"location":"ch12-%E5%BC%80%E5%8F%91%E8%80%85%E6%94%AF%E6%8C%81/#125","title":"12.5 \u67e5\u770b\u8fd0\u884c\u65f6\u548c\u4efb\u52a1\u72b6\u6001\u4fe1\u606f","text":""},{"location":"ch12-%E5%BC%80%E5%8F%91%E8%80%85%E6%94%AF%E6%8C%81/#1251","title":"12.5.1 \u4efb\u52a1\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f","text":"<p>\u4efb\u52a1\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u63d0\u4f9b\u6bcf\u4e2a\u4efb\u52a1\u6240\u63a5\u6536\u5904\u7406\u65f6\u95f4\u7684\u4fe1\u606f\u3002\u4efb\u52a1\u7684 \u8fd0\u884c\u65f6\u95f4 \u662f\u81ea\u5e94\u7528\u7a0b\u5e8f\u542f\u52a8\u4ee5\u6765\uff0c\u4efb\u52a1\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u7684\u603b\u65f6\u95f4\u3002</p> <p>\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u65e8\u5728\u4f5c\u4e3a\u9879\u76ee\u5f00\u53d1\u9636\u6bb5\u7684\u5206\u6790\u548c\u8c03\u8bd5\u5de5\u5177\u3002\u5b83\u4eec\u63d0\u4f9b\u7684\u4fe1\u606f\u4ec5\u5728\u7528\u4e8e\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u7684\u8ba1\u6570\u5668\u6ea2\u51fa\u4e4b\u524d\u6709\u6548\u3002\u6536\u96c6\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u4f1a\u589e\u52a0\u4efb\u52a1\u4e0a\u4e0b\u6587\u5207\u6362\u65f6\u95f4\u3002</p> <p>\u8981\u83b7\u53d6\u4e8c\u8fdb\u5236\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\uff0c\u8c03\u7528 <code>uxTaskGetSystemState()</code> API \u51fd\u6570\u3002\u8981\u83b7\u53d6\u53ef\u8bfb\u6027\u8f83\u5f3a\u7684 ASCII \u8868\u683c\u5f62\u5f0f\u7684\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\uff0c\u8c03\u7528 <code>vTaskGetRunTimeStatistics()</code> \u5e2e\u52a9\u51fd\u6570\u3002</p>"},{"location":"ch12-%E5%BC%80%E5%8F%91%E8%80%85%E6%94%AF%E6%8C%81/#1252","title":"12.5.2 \u8fd0\u884c\u65f6\u7edf\u8ba1\u65f6\u949f","text":"<p>\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u9700\u8981\u6d4b\u91cf\u6ef4\u7b54\u5468\u671f\u7684\u5206\u6570\u3002\u56e0\u6b64\uff0cRTOS \u6ef4\u7b54\u8ba1\u6570\u5668\u4e0d\u7528\u4e8e\u8fd0\u884c\u65f6\u7edf\u8ba1\u65f6\u949f\uff0c\u800c\u662f\u7531\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u63d0\u4f9b\u65f6\u949f\u3002\u5efa\u8bae\u5c06\u8fd0\u884c\u65f6\u7edf\u8ba1\u65f6\u949f\u7684\u9891\u7387\u8bbe\u7f6e\u4e3a\u6ef4\u7b54\u4e2d\u65ad\u9891\u7387\u7684 10 \u5230 100 \u500d\u4e4b\u95f4\u3002\u8fd0\u884c\u65f6\u7edf\u8ba1\u65f6\u949f\u7684\u901f\u5ea6\u8d8a\u5feb\uff0c\u7edf\u8ba1\u4fe1\u606f\u5c31\u8d8a\u51c6\u786e\uff0c\u4f46\u65f6\u95f4\u503c\u6ea2\u51fa\u7684\u65f6\u95f4\u4e5f\u8d8a\u65e9\u3002</p> <p>\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u65f6\u95f4\u503c\u7531\u4e00\u4e2a\u81ea\u7531\u8fd0\u884c\u7684 32 \u4f4d\u5916\u8bbe\u5b9a\u65f6\u5668/\u8ba1\u6570\u5668\u751f\u6210\uff0c\u5176\u503c\u53ef\u4ee5\u5728\u6ca1\u6709\u5176\u4ed6\u5904\u7406\u5f00\u9500\u7684\u60c5\u51b5\u4e0b\u8bfb\u53d6\u3002\u5982\u679c\u53ef\u7528\u7684\u5916\u8bbe\u548c\u65f6\u949f\u901f\u5ea6\u4e0d\u652f\u6301\u8be5\u6280\u672f\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u66ff\u4ee3\u4f46\u6548\u7387\u8f83\u4f4e\u7684\u6280\u672f\uff0c\u5305\u62ec\uff1a</p> <ul> <li>\u914d\u7f6e\u5916\u8bbe\u4ee5\u5728\u6240\u9700\u7684\u8fd0\u884c\u65f6\u7edf\u8ba1\u65f6\u949f\u9891\u7387\u4e0b\u751f\u6210\u5468\u671f\u6027\u4e2d\u65ad\uff0c\u7136\u540e\u4f7f\u7528\u751f\u6210\u7684\u4e2d\u65ad\u6570\u91cf\u4f5c\u4e3a\u8fd0\u884c\u65f6\u7edf\u8ba1\u65f6\u949f\u3002</li> </ul> <p>\u5982\u679c\u5468\u671f\u6027\u4e2d\u65ad\u4ec5\u7528\u4e8e\u63d0\u4f9b\u8fd0\u884c\u65f6\u7edf\u8ba1\u65f6\u949f\uff0c\u5219\u6b64\u65b9\u6cd5\u6548\u7387\u975e\u5e38\u4f4e\u3002\u7136\u800c\uff0c\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u5df2\u7ecf\u4f7f\u7528\u5177\u6709\u5408\u9002\u9891\u7387\u7684\u5468\u671f\u6027\u4e2d\u65ad\uff0c\u5219\u5c06\u751f\u6210\u7684\u4e2d\u65ad\u6570\u91cf\u8ba1\u5165\u73b0\u6709\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u662f\u7b80\u5355\u800c\u9ad8\u6548\u7684\u3002</p> <ul> <li>\u901a\u8fc7\u4f7f\u7528\u81ea\u7531\u8fd0\u884c\u7684 16 \u4f4d\u5916\u8bbe\u5b9a\u65f6\u5668\u7684\u5f53\u524d\u503c\u4f5c\u4e3a 32 \u4f4d\u503c\u7684\u6700\u4f4e\u6709\u6548 16 \u4f4d\uff0c\u4ee5\u53ca\u5b9a\u65f6\u5668\u6ea2\u51fa\u7684\u6b21\u6570\u4f5c\u4e3a 32 \u4f4d\u503c\u7684\u6700\u9ad8\u6709\u6548 16 \u4f4d\uff0c\u751f\u6210 32 \u4f4d\u503c\u3002</li> </ul> <p>\u901a\u8fc7\u5c06 RTOS \u6ef4\u7b54\u8ba1\u6570\u5668\u4e0e ARM Cortex-M SysTick \u5b9a\u65f6\u5668\u7684\u5f53\u524d\u503c\u7ed3\u5408\u8d77\u6765\uff0c\u53ef\u4ee5\u901a\u8fc7\u9002\u5f53\u4e14\u6709\u4e9b\u590d\u6742\u7684\u64cd\u4f5c\u751f\u6210\u8fd0\u884c\u65f6\u7edf\u8ba1\u65f6\u949f\u3002FreeRTOS \u4e0b\u8f7d\u4e2d\u7684\u67d0\u4e9b\u6f14\u793a\u9879\u76ee\u6f14\u793a\u4e86\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002</p>"},{"location":"ch12-%E5%BC%80%E5%8F%91%E8%80%85%E6%94%AF%E6%8C%81/#1253","title":"12.5.3 \u914d\u7f6e\u5e94\u7528\u7a0b\u5e8f\u4ee5\u6536\u96c6\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f","text":"<p>\u4ee5\u4e0b\u662f\u6536\u96c6\u4efb\u52a1\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u6240\u9700\u7684\u5b8f\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\u6700\u521d\uff0c\u8fd9\u4e9b\u5b8f\u65e8\u5728\u5305\u542b\u5728 RTOS \u79fb\u690d\u5c42\u4e2d\uff0c\u8fd9\u5c31\u662f\u5b8f\u524d\u7f00\u4e3a\u201cport\u201d\u7684\u539f\u56e0\uff0c\u4f46\u5728 <code>FreeRTOSConfig.h</code> \u4e2d\u5b9a\u4e49\u5b83\u4eec\u5df2\u88ab\u8bc1\u660e\u66f4\u4e3a\u5b9e\u7528\u3002</p> <p>\u7528\u4e8e\u6536\u96c6\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u7684\u5b8f</p> <ul> <li><code>configGENERATE_RUN_TIME_STATS</code></li> </ul> <p>\u6b64\u5b8f\u5fc5\u987b\u5728 FreeRTOSConfig.h \u4e2d\u8bbe\u7f6e\u4e3a 1\u3002\u5f53\u6b64\u5b8f\u8bbe\u7f6e\u4e3a 1 \u65f6\uff0c\u8c03\u5ea6\u7a0b\u5e8f\u5c06\u5728\u9002\u5f53\u7684\u65f6\u5019\u8c03\u7528\u672c\u8282\u8be6\u7ec6\u4ecb\u7ecd\u7684\u5176\u4ed6\u5b8f\u3002</p> <ul> <li><code>portCONFIGURE_TIMER_FOR_RUN_TIME_STATS()</code></li> </ul> <p>\u5fc5\u987b\u63d0\u4f9b\u6b64\u5b8f\u4ee5\u521d\u59cb\u5316\u7528\u4e8e\u63d0\u4f9b\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u65f6\u949f\u7684\u5916\u8bbe\u3002</p> <ul> <li><code>portGET_RUN_TIME_COUNTER_VALUE()</code>, \u6216 <code>portALT_GET_RUN_TIME_COUNTER_VALUE(Time)</code></li> </ul> <p>\u5fc5\u987b\u63d0\u4f9b\u8fd9\u4e24\u4e2a\u5b8f\u4e2d\u7684\u4e00\u4e2a\u4ee5\u8fd4\u56de\u5f53\u524d\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u65f6\u949f\u503c\u3002\u8fd9\u662f\u81ea\u5e94\u7528\u7a0b\u5e8f\u9996\u6b21\u542f\u52a8\u4ee5\u6765\uff0c\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u7684\u603b\u65f6\u95f4\uff0c\u4ee5\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u65f6\u949f\u5355\u4f4d\u8868\u793a\u3002</p> <p>\u5982\u679c\u4f7f\u7528\u7b2c\u4e00\u4e2a\u5b8f\uff0c\u5219\u5fc5\u987b\u5c06\u5176\u5b9a\u4e49\u4e3a\u8bc4\u4f30\u5f53\u524d\u65f6\u949f\u503c\u3002\u5982\u679c\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u5b8f\uff0c\u5219\u5fc5\u987b\u5c06\u5176\u5b9a\u4e49\u4e3a\u5c06\u5176\u201cTime\u201d\u53c2\u6570\u8bbe\u7f6e\u4e3a\u5f53\u524d\u65f6\u949f\u503c\u3002</p>"},{"location":"ch12-%E5%BC%80%E5%8F%91%E8%80%85%E6%94%AF%E6%8C%81/#1254-uxtaskgetsystemstate-api","title":"12.5.4 uxTaskGetSystemState() API \u51fd\u6570","text":"<p><code>uxTaskGetSystemState()</code> \u63d0\u4f9b\u6709\u5173 FreeRTOS \u8c03\u5ea6\u7a0b\u5e8f\u63a7\u5236\u4e0b\u7684\u6bcf\u4e2a\u4efb\u52a1\u7684\u72b6\u6001\u4fe1\u606f\u5feb\u7167\u3002\u4fe1\u606f\u4ee5 <code>TaskStatus_t</code> \u7ed3\u6784\u7684\u6570\u7ec4\u5f62\u5f0f\u63d0\u4f9b\uff0c\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u7d22\u5f15\u5bf9\u5e94\u4e00\u4e2a\u4efb\u52a1\u3002<code>TaskStatus_t</code> \u5728\u6e05\u5355 12.5 \u4e2d\u8fdb\u884c\u4e86\u63cf\u8ff0\u3002</p> <p></p> <pre><code>UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray,\n                                  const UBaseType_t uxArraySize,\n                                  configRUN_TIME_COUNTER_TYPE * const pulTotalRunTime );\n</code></pre> <p>\u6e05\u5355 12.4 uxTaskGetSystemState() API \u51fd\u6570\u539f\u578b</p> <p>\u6ce8\u610f\uff1a<code>configRUN_TIME_COUNTER_TYPE</code> \u9ed8\u8ba4\u503c\u4e3a <code>uint32_t</code>\uff0c\u4ee5\u4fdd\u6301\u5411\u540e\u517c\u5bb9\u6027\uff0c\u4f46\u5982\u679c <code>uint32_t</code> \u9650\u5236\u592a\u5927\uff0c\u53ef\u4ee5\u5728 FreeRTOSConfig.h \u4e2d\u8986\u76d6\u3002</p> <p>uxTaskGetSystemState() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>pxTaskStatusArray</code></li> </ul> <p>\u6307\u5411 <code>TaskStatus_t</code> \u7ed3\u6784\u6570\u7ec4\u7684\u6307\u9488\u3002</p> <p>\u6570\u7ec4\u5fc5\u987b\u5305\u542b\u6bcf\u4e2a\u4efb\u52a1\u81f3\u5c11\u4e00\u4e2a <code>TaskStatus_t</code> \u7ed3\u6784\u3002\u53ef\u4ee5\u4f7f\u7528 <code>uxTaskGetNumberOfTasks()</code> API \u51fd\u6570\u786e\u5b9a\u4efb\u52a1\u6570\u91cf\u3002</p> <p><code>TaskStatus_t</code> \u7ed3\u6784\u5728\u6e05\u5355 12.5 \u4e2d\u8fdb\u884c\u4e86\u63cf\u8ff0\uff0cTaskStatus_t \u7ed3\u6784\u6210\u5458\u5728\u4e0b\u4e00\u4e2a\u5217\u8868\u4e2d\u8fdb\u884c\u4e86\u63cf\u8ff0\u3002</p> <ul> <li><code>uxArraySize</code></li> </ul> <p><code>pxTaskStatusArray</code> \u53c2\u6570\u6240\u6307\u5411\u7684\u6570\u7ec4\u7684\u5927\u5c0f\u3002\u5927\u5c0f\u4ee5\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15\u6570\u91cf\uff08\u6570\u7ec4\u4e2d\u5305\u542b\u7684 <code>TaskStatus_t</code> \u7ed3\u6784\u7684\u6570\u91cf\uff09\u800c\u4e0d\u662f\u6570\u7ec4\u4e2d\u7684\u5b57\u8282\u6570\u6765\u6307\u5b9a\u3002</p> <ul> <li><code>pulTotalRunTime</code></li> </ul> <p>\u5982\u679c\u5728 <code>FreeRTOSConfig.h</code> \u4e2d\u5c06 <code>configGENERATE_RUN_TIME_STATS</code> \u8bbe\u7f6e\u4e3a 1\uff0c\u5219 <code>*pulTotalRunTime</code> \u5c06\u7531 <code>uxTaskGetSystemState()</code> \u8bbe\u7f6e\u4e3a\u81ea\u76ee\u6807\u542f\u52a8\u4ee5\u6765\u7684\u603b\u8fd0\u884c\u65f6\u95f4\uff08\u7531\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u7684\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u65f6\u949f\u5b9a\u4e49\uff09\u3002</p> <p><code>pulTotalRunTime</code> \u662f\u53ef\u9009\u7684\uff0c\u5982\u679c\u4e0d\u9700\u8981\u603b\u8fd0\u884c\u65f6\u95f4\uff0c\u53ef\u4ee5\u5c06\u5176\u8bbe\u7f6e\u4e3a NULL\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p><code>uxTaskGetSystemState()</code> \u586b\u5145\u7684 <code>TaskStatus_t</code> \u7ed3\u6784\u7684\u6570\u91cf\u5c06\u88ab\u8fd4\u56de\u3002</p> <p>\u8fd4\u56de\u503c\u5e94\u7b49\u4e8e <code>uxTaskGetNumberOfTasks()</code> API \u51fd\u6570\u8fd4\u56de\u7684\u503c\uff0c\u4f46\u5982\u679c\u4f20\u9012\u7ed9 <code>uxArraySize</code> \u53c2\u6570\u7684\u503c\u592a\u5c0f\uff0c\u5219\u8fd4\u56de\u503c\u5c06\u4e3a\u96f6\u3002</p> <p></p> <pre><code>typedef struct xTASK_STATUS\n{\n    TaskHandle_t xHandle;\n    const char *pcTaskName;\n    UBaseType_t xTaskNumber;\n    eTaskState eCurrentState;\n    UBaseType_t uxCurrentPriority;\n    UBaseType_t uxBasePriority;\n    configRUN_TIME_COUNTER_TYPE ulRunTimeCounter;\n    StackType_t * pxStackBase;\n    #if ( ( portSTACK_GROWTH &gt; 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )\n        StackType_t * pxTopOfStack;\n        StackType_t * pxEndOfStack;\n    #endif\n    uint16_t usStackHighWaterMark;\n    #if ( ( configUSE_CORE_AFFINITY == 1 ) &amp;&amp; ( configNUMBER_OF_CORES &gt; 1 ) )\n        UBaseType_t uxCoreAffinityMask;\n    #endif\n} TaskStatus_t;\n</code></pre> <p>\u6e05\u5355 12.5 TaskStatus_t \u7ed3\u6784</p> <p>TaskStatus_t \u7ed3\u6784\u6210\u5458</p> <ul> <li><code>xHandle</code></li> </ul> <p>\u4e0e\u7ed3\u6784\u4e2d\u4fe1\u606f\u76f8\u5173\u8054\u7684\u4efb\u52a1\u7684\u53e5\u67c4\u3002</p> <ul> <li><code>pcTaskName</code></li> </ul> <p>\u4efb\u52a1\u7684\u53ef\u8bfb\u6587\u672c\u540d\u79f0\u3002</p> <ul> <li><code>xTaskNumber</code></li> </ul> <p>\u6bcf\u4e2a\u4efb\u52a1\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684 <code>xTaskNumber</code> \u503c\u3002</p> <p>\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u521b\u5efa\u548c\u5220\u9664\u4efb\u52a1\uff0c\u5219\u53ef\u80fd\u4f1a\u51fa\u73b0\u4efb\u52a1\u4e0e\u5148\u524d\u5220\u9664\u7684\u4efb\u52a1\u5177\u6709\u76f8\u540c\u53e5\u67c4\u7684\u60c5\u51b5\u3002\u63d0\u4f9b <code>xTaskNumber</code> \u662f\u4e3a\u4e86\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u548c\u5185\u6838\u611f\u77e5\u8c03\u8bd5\u5668\u533a\u5206\u4ecd\u6709\u6548\u7684\u4efb\u52a1\u548c\u5177\u6709\u76f8\u540c\u53e5\u67c4\u7684\u5df2\u5220\u9664\u4efb\u52a1\u3002</p> <ul> <li><code>eCurrentState</code></li> </ul> <p>\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b\uff0c\u8868\u793a\u4efb\u52a1\u7684\u72b6\u6001\u3002<code>eCurrentState</code> \u53ef\u4ee5\u662f\u4ee5\u4e0b\u503c\u4e4b\u4e00\uff1a </p> <ul> <li><code>eRunning</code></li> <li><code>eReady</code></li> <li><code>eBlocked</code></li> <li><code>eSuspended</code></li> <li><code>eDeleted</code></li> </ul> <p>\u4efb\u52a1\u4ec5\u5728\u901a\u8fc7\u8c03\u7528 <code>vTaskDelete()</code> \u5220\u9664\u4efb\u52a1\u548c\u7a7a\u95f2\u4efb\u52a1\u91ca\u653e\u5206\u914d\u7ed9\u5df2\u5220\u9664\u4efb\u52a1\u7684\u5185\u90e8\u6570\u636e\u7ed3\u6784\u548c\u5806\u6808\u7684\u5185\u5b58\u4e4b\u95f4\u7684\u77ed\u65f6\u95f4\u5185\u88ab\u62a5\u544a\u4e3a\u5904\u4e8e <code>eDeleted</code> \u72b6\u6001\u3002\u5728\u6b64\u4e4b\u540e\uff0c\u4efb\u52a1\u5c06\u4e0d\u518d\u4ee5\u4efb\u4f55\u65b9\u5f0f\u5b58\u5728\uff0c\u5c1d\u8bd5\u4f7f\u7528\u5176\u53e5\u67c4\u662f\u65e0\u6548\u7684\u3002</p> <ul> <li><code>uxCurrentPriority</code></li> </ul> <p><code>uxTaskGetSystemState()</code> \u88ab\u8c03\u7528\u65f6\uff0c\u4efb\u52a1\u6b63\u5728\u8fd0\u884c\u7684\u4f18\u5148\u7ea7\u3002\u5982\u679c\u4efb\u52a1\u6839\u636e\u4f18\u5148\u7ea7\u7ee7\u627f\u673a\u5236\u4e34\u65f6\u88ab\u5206\u914d\u4e86\u66f4\u9ad8\u7684\u4f18\u5148\u7ea7\uff0c\u5219 <code>uxCurrentPriority</code> \u5c06\u9ad8\u4e8e\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u8005\u5206\u914d\u7ed9\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff0c\u5177\u4f53\u673a\u5236\u5728 8.3 \u8282 \u4fe1\u53f7\u91cf\uff08\u548c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\uff09 \u4e2d\u8fdb\u884c\u4e86\u63cf\u8ff0\u3002</p> <ul> <li><code>uxBasePriority</code></li> </ul> <p>\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u8005\u5206\u914d\u7ed9\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002   <code>uxBasePriority</code> \u4ec5\u5728 FreeRTOSConfig.h \u4e2d\u5c06 <code>configUSE_MUTEXES</code> \u8bbe\u7f6e\u4e3a 1 \u65f6\u6709\u6548\u3002</p> <ul> <li><code>ulRunTimeCounter</code></li> </ul> <p>\u81ea\u4efb\u52a1\u521b\u5efa\u4ee5\u6765\u4efb\u52a1\u4f7f\u7528\u7684\u603b\u8fd0\u884c\u65f6\u95f4\u3002\u603b\u8fd0\u884c\u65f6\u95f4\u4f5c\u4e3a\u7edd\u5bf9\u65f6\u95f4\u63d0\u4f9b\uff0c\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u8005\u63d0\u4f9b\u7684\u65f6\u949f\u6765\u6536\u96c6\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u3002\u4ec5\u5f53 FreeRTOSConfig.h \u4e2d\u5c06 <code>configGENERATE_RUN_TIME_STATS</code> \u8bbe\u7f6e\u4e3a 1 \u65f6\uff0c<code>ulRunTimeCounter</code> \u624d\u6709\u6548\u3002</p> <ul> <li><code>pxStackBase</code></li> </ul> <p>\u6307\u5411\u5206\u914d\u7ed9\u8be5\u4efb\u52a1\u7684\u5806\u6808\u533a\u57df\u7684\u57fa\u5730\u5740\u3002</p> <ul> <li><code>pxTopOfStack</code></li> </ul> <p>\u6307\u5411\u5206\u914d\u7ed9\u8be5\u4efb\u52a1\u7684\u5806\u6808\u533a\u57df\u7684\u5f53\u524d\u9876\u90e8\u5730\u5740\u3002    <code>pxTopOfStack</code> \u5b57\u6bb5\u4ec5\u5728\u5806\u6808\u5411\u4e0a\u751f\u957f\uff08\u5373 <code>portSTACK_GROWTH</code> \u5927\u4e8e\u96f6\uff09\u6216\u5728 FreeRTOSConfig.h \u4e2d\u5c06 <code>configRECORD_STACK_HIGH_ADDRESS</code> \u8bbe\u7f6e\u4e3a 1 \u65f6\u6709\u6548\u3002</p> <ul> <li><code>pxEndOfStack</code></li> </ul> <p>\u6307\u5411\u5206\u914d\u7ed9\u8be5\u4efb\u52a1\u7684\u5806\u6808\u533a\u57df\u7684\u7ed3\u675f\u5730\u5740\u3002    <code>pxEndOfStack</code> \u5b57\u6bb5\u4ec5\u5728\u5806\u6808\u5411\u4e0a\u751f\u957f\uff08\u5373 <code>portSTACK_GROWTH</code> \u5927\u4e8e\u96f6\uff09\u6216\u5728 FreeRTOSConfig.h \u4e2d\u5c06 <code>configRECORD_STACK_HIGH_ADDRESS</code> \u8bbe\u7f6e\u4e3a 1 \u65f6\u6709\u6548\u3002</p> <ul> <li><code>usStackHighWaterMark</code></li> </ul> <p>\u4efb\u52a1\u7684\u5806\u6808\u9ad8\u6c34\u4f4d\u6807\u8bb0\u3002\u8fd9\u662f\u81ea\u4efb\u52a1\u521b\u5efa\u4ee5\u6765\uff0c\u4efb\u52a1\u5806\u6808\u4e2d\u5269\u4f59\u7684\u6700\u5c0f\u7a7a\u95f4\u91cf\u3002\u5b83\u8868\u793a\u4efb\u52a1\u6ea2\u51fa\u5806\u6808\u7684\u63a5\u8fd1\u7a0b\u5ea6\uff1b\u8be5\u503c\u8d8a\u63a5\u8fd1\u96f6\uff0c\u4efb\u52a1\u8d8a\u63a5\u8fd1\u6ea2\u51fa\u5806\u6808\u3002<code>usStackHighWaterMark</code> \u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u3002</p> <ul> <li><code>uxCoreAffinityMask</code></li> </ul> <p>\u4e00\u4e2a\u6309\u4f4d\u503c\uff0c\u6307\u793a\u4efb\u52a1\u53ef\u4ee5\u5728\u5176\u4e0a\u8fd0\u884c\u7684\u6838\u5fc3\u3002     \u6838\u5fc3\u4ece 0 \u7f16\u53f7\u5230 <code>configNUMBER_OF_CORES</code> - 1\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u5728\u6838\u5fc3 0 \u548c\u6838\u5fc3 1 \u4e0a\u8fd0\u884c\u7684\u4efb\u52a1\u5c06\u5176 <code>uxCoreAffinityMask</code> \u8bbe\u7f6e\u4e3a 0x03\u3002<code>uxCoreAffinityMask</code> \u5b57\u6bb5\u4ec5\u5728 FreeRTOSConfig.h \u4e2d\u5c06 <code>configUSE_CORE_AFFINITY</code> \u8bbe\u7f6e\u4e3a 1 \u4e14 <code>configNUMBER_OF_CORES</code> \u8bbe\u7f6e\u4e3a\u5927\u4e8e 1 \u65f6\u53ef\u7528\u3002</p>"},{"location":"ch12-%E5%BC%80%E5%8F%91%E8%80%85%E6%94%AF%E6%8C%81/#1255-vtasklisttasks","title":"12.5.5 vTaskListTasks() \u5e2e\u52a9\u51fd\u6570","text":"<p><code>vTaskListTasks()</code> \u63d0\u4f9b\u4e0e <code>uxTaskGetSystemState()</code> \u7c7b\u4f3c\u7684\u4efb\u52a1\u72b6\u6001\u4fe1\u606f\uff0c\u4f46\u4ee5\u4eba\u7c7b\u53ef\u8bfb\u7684 ASCII \u8868\u683c\u5f62\u5f0f\u5448\u73b0\u4fe1\u606f\uff0c\u800c\u4e0d\u662f\u4ee5\u4e8c\u8fdb\u5236\u503c\u6570\u7ec4\u7684\u5f62\u5f0f\u3002</p> <p><code>vTaskListTasks()</code> \u662f\u4e00\u4e2a\u975e\u5e38\u8017\u8d39\u5904\u7406\u5668\u7684\u51fd\u6570\uff0c\u5e76\u4e14\u4f1a\u4f7f\u8c03\u5ea6\u7a0b\u5e8f\u6302\u8d77\u8f83\u957f\u65f6\u95f4\u3002\u56e0\u6b64\uff0c\u5efa\u8bae\u4ec5\u5728\u8c03\u8bd5\u65f6\u4f7f\u7528\u8be5\u51fd\u6570\uff0c\u800c\u4e0d\u8981\u5728\u751f\u4ea7\u5b9e\u65f6\u7cfb\u7edf\u4e2d\u4f7f\u7528\u3002</p> <p>\u5982\u679c\u5728 FreeRTOSConfig.h \u4e2d\u5c06 <code>configUSE_TRACE_FACILITY</code> \u8bbe\u7f6e\u4e3a 1 \u4e14\u5c06 <code>configUSE_STATS_FORMATTING_FUNCTIONS</code> \u8bbe\u7f6e\u4e3a\u5927\u4e8e 0\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 <code>vTaskListTasks()</code>\u3002</p> <p></p> <pre><code>void vTaskListTasks( char * pcWriteBuffer, size_t uxBufferLength );\n</code></pre> <p>\u6e05\u5355 12.6 vTaskListTasks() API \u51fd\u6570\u539f\u578b</p> <p>vTaskListTasks() \u53c2\u6570</p> <ul> <li><code>pcWriteBuffer</code></li> </ul> <p>\u6307\u5411\u4e00\u4e2a\u5b57\u7b26\u7f13\u51b2\u533a\u7684\u6307\u9488\uff0c\u683c\u5f0f\u5316\u7684\u4eba\u7c7b\u53ef\u8bfb\u8868\u5c06\u88ab\u5199\u5165\u8be5\u7f13\u51b2\u533a\u3002    \u8be5\u7f13\u51b2\u533a\u5047\u5b9a\u8db3\u591f\u5927\uff0c\u53ef\u4ee5\u5bb9\u7eb3\u751f\u6210\u7684\u62a5\u544a\u3002   \u6bcf\u4e2a\u4efb\u52a1\u5927\u7ea6 40 \u4e2a\u5b57\u8282\u5e94\u8be5\u8db3\u591f\u3002</p> <ul> <li><code>uxBufferLength</code></li> </ul> <p><code>pcWriteBuffer</code> \u7684\u957f\u5ea6\u3002</p> <p><code>vTaskListTasks()</code> \u751f\u6210\u7684\u8f93\u51fa\u793a\u4f8b\u89c1\u56fe 12.7\u3002 \u5728\u8f93\u51fa\u4e2d\uff1a</p> <ul> <li> <p>\u6bcf\u4e00\u884c\u63d0\u4f9b\u5355\u4e2a\u4efb\u52a1\u7684\u4fe1\u606f\u3002</p> </li> <li> <p>\u7b2c\u4e00\u5217\u662f\u4efb\u52a1\u7684\u540d\u79f0\u3002</p> </li> <li> <p>\u7b2c\u4e8c\u5217\u662f\u4efb\u52a1\u7684\u72b6\u6001\uff0c\u5176\u4e2d 'X' \u8868\u793a\u6b63\u5728\u8fd0\u884c\uff0c'R' \u8868\u793a\u5c31\u7eea\uff0c'B' \u8868\u793a\u963b\u585e\uff0c'S' \u8868\u793a\u6302\u8d77\uff0c'D' \u8868\u793a\u4efb\u52a1\u5df2\u88ab\u5220\u9664\u3002 \u4efb\u52a1\u4ec5\u5728\u901a\u8fc7\u8c03\u7528 <code>vTaskDelete()</code> \u5220\u9664\u4efb\u52a1\u548c\u7a7a\u95f2\u4efb\u52a1\u91ca\u653e\u5206\u914d\u7ed9\u5df2\u5220\u9664\u4efb\u52a1\u7684\u5185\u90e8\u6570\u636e\u7ed3\u6784\u548c\u5806\u6808\u7684\u5185\u5b58\u4e4b\u95f4\u7684\u77ed\u65f6\u95f4\u5185\u88ab\u62a5\u544a\u4e3a\u5904\u4e8e\u5220\u9664\u72b6\u6001\u3002 \u5728\u6b64\u4e4b\u540e\uff0c\u4efb\u52a1\u5c06\u4e0d\u518d\u4ee5\u4efb\u4f55\u65b9\u5f0f\u5b58\u5728\uff0c\u5c1d\u8bd5\u4f7f\u7528\u5176\u53e5\u67c4\u662f\u65e0\u6548\u7684\u3002</p> </li> <li> <p>\u7b2c\u4e09\u5217\u662f\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002</p> </li> <li> <p>\u7b2c\u56db\u5217\u662f\u4efb\u52a1\u7684\u5806\u6808\u9ad8\u6c34\u4f4d\u6807\u8bb0\u3002\u8bf7\u53c2\u89c1 <code>usStackHighWaterMark</code> \u7684\u63cf\u8ff0\u3002</p> </li> <li> <p>\u7b2c\u4e94\u5217\u662f\u5206\u914d\u7ed9\u4efb\u52a1\u7684\u552f\u4e00\u7f16\u53f7\u3002\u8bf7\u53c2\u89c1 <code>xTaskNumber</code> \u7684\u63cf\u8ff0\u3002</p> </li> </ul> <p></p> <p> \u56fe 12.7 vTaskListTasks() \u751f\u6210\u7684\u8f93\u51fa\u793a\u4f8b</p> <p>\u6ce8\u610f\uff1a  <code>vTaskList</code> \u662f <code>vTaskListTasks</code> \u7684\u65e7\u7248\u672c\u3002 <code>vTaskList</code> \u5047\u5b9a <code>pcWriteBuffer</code> \u7684\u957f\u5ea6\u4e3a <code>configSTATS_BUFFER_MAX_LENGTH</code>\u3002\u6b64\u51fd\u6570\u4ec5\u7528\u4e8e\u5411\u540e\u517c\u5bb9\u3002 \u65b0\u5e94\u7528\u7a0b\u5e8f\u5efa\u8bae\u4f7f\u7528 <code>vTaskListTasks</code> \u5e76\u663e\u5f0f\u63d0\u4f9b <code>pcWriteBuffer</code> \u7684\u957f\u5ea6\u3002</p> <p></p> <pre><code>void vTaskList( signed char *pcWriteBuffer );\n</code></pre> <p>\u6e05\u5355 12.7 vTaskList() API \u51fd\u6570\u539f\u578b</p> <p>vTaskList() \u53c2\u6570</p> <ul> <li> <p><code>pcWriteBuffer</code></p> <p>\u6307\u5411\u4e00\u4e2a\u5b57\u7b26\u7f13\u51b2\u533a\u7684\u6307\u9488\uff0c\u683c\u5f0f\u5316\u7684\u4eba\u7c7b\u53ef\u8bfb\u8868\u5c06\u88ab\u5199\u5165\u8be5\u7f13\u51b2\u533a\u3002  \u8be5\u7f13\u51b2\u533a\u5fc5\u987b\u8db3\u591f\u5927\uff0c\u4ee5\u5bb9\u7eb3\u6574\u4e2a\u8868\uff0c\u56e0\u4e3a\u4e0d\u6267\u884c\u8fb9\u754c\u68c0\u67e5\u3002</p> </li> </ul>"},{"location":"ch12-%E5%BC%80%E5%8F%91%E8%80%85%E6%94%AF%E6%8C%81/#1256-vtaskgetruntimestatistics","title":"12.5.6 vTaskGetRunTimeStatistics() \u5e2e\u52a9\u51fd\u6570","text":"<p><code>vTaskGetRunTimeStatistics()</code> \u5c06\u6536\u96c6\u7684\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u683c\u5f0f\u5316\u4e3a\u4eba\u7c7b\u53ef\u8bfb\u7684 ASCII \u8868\u683c\u3002</p> <p><code>vTaskGetRunTimeStatistics()</code> \u662f\u4e00\u4e2a\u975e\u5e38\u8017\u8d39\u5904\u7406\u5668\u7684\u51fd\u6570\uff0c\u5e76\u4e14\u4f1a\u4f7f\u8c03\u5ea6\u7a0b\u5e8f\u6302\u8d77\u8f83\u957f\u65f6\u95f4\u3002\u56e0\u6b64\uff0c\u5efa\u8bae\u4ec5\u5728\u8c03\u8bd5\u65f6\u4f7f\u7528\u8be5\u51fd\u6570\uff0c\u800c\u4e0d\u8981\u5728\u751f\u4ea7\u5b9e\u65f6\u7cfb\u7edf\u4e2d\u4f7f\u7528\u3002</p> <p>\u5f53 FreeRTOSConfig.h \u4e2d\u5c06 <code>configGENERATE_RUN_TIME_STATS</code> \u8bbe\u7f6e\u4e3a 1\uff0c<code>configUSE_STATS_FORMATTING_FUNCTIONS</code> \u8bbe\u7f6e\u4e3a\u5927\u4e8e 0\uff0c\u4e14 <code>configUSE_TRACE_FACILITY</code> \u8bbe\u7f6e\u4e3a 1 \u65f6\uff0c<code>vTaskGetRunTimeStatistics()</code> \u53ef\u7528\u3002</p> <p></p> <pre><code>void vTaskGetRunTimeStatistics( char * pcWriteBuffer, size_t uxBufferLength );\n</code></pre> <p>\u6e05\u5355 12.8 vTaskGetRunTimeStatistics() API \u51fd\u6570\u539f\u578b</p> <p>vTaskGetRunTimeStatistics() \u53c2\u6570</p> <ul> <li><code>pcWriteBuffer</code></li> </ul> <p>\u6307\u5411\u4e00\u4e2a\u5b57\u7b26\u7f13\u51b2\u533a\u7684\u6307\u9488\uff0c\u683c\u5f0f\u5316\u7684\u4eba\u7c7b\u53ef\u8bfb\u8868\u5c06\u88ab\u5199\u5165\u8be5\u7f13\u51b2\u533a\u3002   \u8be5\u7f13\u51b2\u533a\u5047\u5b9a\u8db3\u591f\u5927\uff0c\u53ef\u4ee5\u5bb9\u7eb3\u751f\u6210\u7684\u62a5\u544a\u3002   \u6bcf\u4e2a\u4efb\u52a1\u5927\u7ea6 40 \u4e2a\u5b57\u8282\u5e94\u8be5\u8db3\u591f\u3002</p> <ul> <li><code>uxBufferLength</code> </li> </ul> <p><code>pcWriteBuffer</code> \u7684\u957f\u5ea6\u3002</p> <p><code>vTaskGetRunTimeStatistics()</code> \u751f\u6210\u7684\u8f93\u51fa\u793a\u4f8b\u89c1\u56fe 12.8\u3002\u5728\u8f93\u51fa\u4e2d\uff1a</p> <ul> <li> <p>\u6bcf\u4e00\u884c\u63d0\u4f9b\u5355\u4e2a\u4efb\u52a1\u7684\u4fe1\u606f\u3002</p> </li> <li> <p>\u7b2c\u4e00\u5217\u662f\u4efb\u52a1\u540d\u79f0\u3002</p> </li> <li> <p>\u7b2c\u4e8c\u5217\u662f\u4efb\u52a1\u5728\u8fd0\u884c\u72b6\u6001\u4e0b\u7684\u65f6\u95f4\uff0c\u4f5c\u4e3a\u7edd\u5bf9\u503c\u3002\u8bf7\u53c2\u89c1 <code>ulRunTimeCounter</code> \u7684\u63cf\u8ff0\u3002</p> </li> <li> <p>\u7b2c\u4e09\u5217\u662f\u4efb\u52a1\u5728\u8fd0\u884c\u72b6\u6001\u4e0b\u7684\u65f6\u95f4\uff0c\u4f5c\u4e3a\u81ea\u76ee\u6807\u542f\u52a8\u4ee5\u6765\u7684\u603b\u65f6\u95f4\u767e\u5206\u6bd4\u3002\u663e\u793a\u7684\u767e\u5206\u6bd4\u603b\u548c\u901a\u5e38\u4f1a\u4f4e\u4e8e\u9884\u671f\u7684 100%\uff0c\u56e0\u4e3a\u7edf\u8ba1\u4fe1\u606f\u662f\u4f7f\u7528\u5411\u4e0b\u820d\u5165\u5230\u6700\u63a5\u8fd1\u6574\u6570\u503c\u7684\u6574\u6570\u8ba1\u7b97\u7684\u3002</p> </li> </ul> <p></p> <p> \u56fe 12.8 vTaskGetRunTimeStatistics() \u751f\u6210\u7684\u8f93\u51fa\u793a\u4f8b</p> <p>\u6ce8\u610f\uff1a  <code>vTaskGetRunTimeStats</code> \u662f <code>vTaskGetRunTimeStatistics</code> \u7684\u65e7\u7248\u672c\u3002  <code>vTaskGetRunTimeStats</code> \u5047\u5b9a <code>pcWriteBuffer</code> \u7684\u957f\u5ea6\u4e3a <code>configSTATS_BUFFER_MAX_LENGTH</code>\u3002\u6b64\u51fd\u6570\u4ec5\u7528\u4e8e\u5411\u540e\u517c\u5bb9\u3002  \u65b0\u5e94\u7528\u7a0b\u5e8f\u5efa\u8bae\u4f7f\u7528 <code>vTaskGetRunTimeStatistics</code> \u5e76\u663e\u5f0f\u63d0\u4f9b <code>pcWriteBuffer</code> \u7684\u957f\u5ea6\u3002</p> <p></p> <p><code>c  void vTaskGetRunTimeStats( signed char *pcWriteBuffer );</code> \u6e05\u5355 12.9 vTaskGetRunTimeStats() API \u51fd\u6570\u539f\u578b</p> <p>vTaskGetRunTimeStats() \u53c2\u6570</p> <ul> <li> <p><code>pcWriteBuffer</code></p> <p>\u6307\u5411\u4e00\u4e2a\u5b57\u7b26\u7f13\u51b2\u533a\u7684\u6307\u9488\uff0c\u683c\u5f0f\u5316\u7684\u4eba\u7c7b\u53ef\u8bfb\u8868\u5c06\u88ab\u5199\u5165\u8be5\u7f13\u51b2\u533a\u3002\u8be5\u7f13\u51b2\u533a\u5fc5\u987b\u8db3\u591f\u5927\uff0c\u4ee5\u5bb9\u7eb3\u6574\u4e2a\u8868\uff0c\u56e0\u4e3a\u4e0d\u6267\u884c\u8fb9\u754c\u68c0\u67e5\u3002</p> </li> </ul>"},{"location":"ch12-%E5%BC%80%E5%8F%91%E8%80%85%E6%94%AF%E6%8C%81/#1257","title":"12.5.7 \u751f\u6210\u548c\u663e\u793a\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u7684\u793a\u4f8b","text":"<p>\u6b64\u793a\u4f8b\u4f7f\u7528\u5047\u8bbe\u7684 16 \u4f4d\u5b9a\u65f6\u5668\u751f\u6210 32 \u4f4d\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u65f6\u949f\u3002\u8ba1\u6570\u5668\u914d\u7f6e\u4e3a\u5728 16 \u4f4d\u503c\u8fbe\u5230\u5176\u6700\u5927\u503c\u65f6\u751f\u6210\u4e2d\u65ad\u2014\u2014\u6709\u6548\u5730\u521b\u5efa\u6ea2\u51fa\u4e2d\u65ad\u3002\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u8ba1\u7b97\u6ea2\u51fa\u53d1\u751f\u7684\u6b21\u6570\u3002</p> <p>\u901a\u8fc7\u5c06\u6ea2\u51fa\u53d1\u751f\u7684\u8ba1\u6570\u7528\u4f5c 32 \u4f4d\u503c\u7684\u9ad8\u4e24\u4e2a\u5b57\u8282\uff0c\u5c06\u5f53\u524d 16 \u4f4d\u8ba1\u6570\u5668\u503c\u7528\u4f5c 32 \u4f4d\u503c\u7684\u4f4e\u4e24\u4e2a\u5b57\u8282\uff0c\u751f\u6210 32 \u4f4d\u503c\u3002\u6e05\u5355 12.10 \u4e2d\u663e\u793a\u4e86\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u7684\u4f2a\u4ee3\u7801\u3002</p> <p></p> <pre><code>void TimerOverflowInterruptHandler( void )\n{\n    /* \u4ec5\u8ba1\u7b97\u4e2d\u65ad\u7684\u6570\u91cf\u3002 */\n    ulOverflowCount++;\n\n    /* \u6e05\u9664\u4e2d\u65ad\u3002 */\n    ClearTimerInterrupt();\n}\n</code></pre> <p>\u6e05\u5355 12.10 \u7528\u4e8e\u8ba1\u7b97\u5b9a\u65f6\u5668\u6ea2\u51fa\u7684 16 \u4f4d\u5b9a\u65f6\u5668\u6ea2\u51fa\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f</p> <p>\u6e05\u5355 12.11 \u663e\u793a\u4e86\u4e3a\u542f\u7528\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u6536\u96c6\u800c\u6dfb\u52a0\u5230 FreeRTOSConfig.h \u4e2d\u7684\u884c\u3002</p> <p></p> <pre><code>/* \u5c06 configGENERATE_RUN_TIME_STATS \u8bbe\u7f6e\u4e3a 1 \u4ee5\u542f\u7528\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u7684\u6536\u96c6\u3002\n\u5f53\u8fd9\u6837\u505a\u65f6\uff0c\u8fd8\u5fc5\u987b\u5b9a\u4e49 portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() \u548c\nportGET_RUN_TIME_COUNTER_VALUE() \u6216\nportALT_GET_RUN_TIME_COUNTER_VALUE(x)\u3002 */\n#define configGENERATE_RUN_TIME_STATS 1\n\n/* portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() \u88ab\u5b9a\u4e49\u4e3a\u8c03\u7528\u8bbe\u7f6e\u5047\u8bbe\u7684 16 \u4f4d\u5b9a\u65f6\u5668\u7684\u51fd\u6570\n\uff08\u8be5\u51fd\u6570\u7684\u5b9e\u73b0\u672a\u663e\u793a\uff09\u3002 */\nvoid vSetupTimerForRunTimeStats( void );\n#define portCONFIGURE_TIMER_FOR_RUN_TIME_STATS()  vSetupTimerForRunTimeStats()\n\n/* portALT_GET_RUN_TIME_COUNTER_VALUE() \u88ab\u5b9a\u4e49\u4e3a\u5c06\u5176\u53c2\u6570\u8bbe\u7f6e\u4e3a\u5f53\u524d\u8fd0\u884c\u65f6\u8ba1\u6570\u5668/\u65f6\u95f4\u503c\u3002\n\u8fd4\u56de\u7684\u65f6\u95f4\u503c\u4e3a 32 \u4f4d\u957f\uff0c\u901a\u8fc7\u5c06 16 \u4f4d\u5b9a\u65f6\u5668\u6ea2\u51fa\u7684\u8ba1\u6570\u5de6\u79fb\u5230 32 \u4f4d\u6570\u5b57\u7684\u9ad8\u4e24\u4e2a\u5b57\u8282\uff0c\u7136\u540e\u5c06\u7ed3\u679c\u4e0e\u5f53\u524d 16 \u4f4d\u8ba1\u6570\u5668\u503c\u8fdb\u884c\u6309\u4f4d\u6216\u8fd0\u7b97\u800c\u5f62\u6210\u3002 */\n#define portALT_GET_RUN_TIME_COUNTER_VALUE( ulCountValue )                  \\\n{                                                                           \\\n    extern volatile unsigned long ulOverflowCount;                          \\\n                                                                            \\\n    /* \u5728\u4f7f\u7528\u5176\u503c\u65f6\uff0c\u65ad\u5f00\u65f6\u949f\u4e0e\u8ba1\u6570\u5668\u7684\u8fde\u63a5\uff0c\u4ee5\u514d\u5176\u503c\u53d1\u751f\u53d8\u5316\u3002 */                                    \\\n    PauseTimer();                                                           \\\n                                                                            \\\n    /* \u6ea2\u51fa\u7684\u6b21\u6570\u88ab\u79fb\u4f4d\u5230\u8fd4\u56de\u7684 32 \u4f4d\u503c\u7684\u6700\u9ad8\u4e24\u4e2a\u5b57\u8282\u3002 */                           \\\n    ulCountValue = ( ulOverflowCount &lt;&lt; 16UL );                             \\\n                                                                            \\\n    /* \u5f53\u524d\u8ba1\u6570\u5668\u503c\u7528\u4f5c\u8fd4\u56de\u7684 32 \u4f4d\u503c\u7684\u6700\u4f4e\u4e24\u4e2a\u5b57\u8282\u3002 */                               \\\n    ulCountValue |= ( unsigned long ) ReadTimerCount();                     \\\n                                                                            \\\n    /* \u91cd\u65b0\u8fde\u63a5\u65f6\u949f\u5230\u8ba1\u6570\u5668\u3002 */                               \\\n    ResumeTimer();                                                          \\\n}\n</code></pre> <p>\u6e05\u5355 12.11 \u4e3a\u542f\u7528\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u6536\u96c6\u800c\u6dfb\u52a0\u5230 FreeRTOSConfig.h\u4e2d\u7684\u5b8f</p> <p>\u6e05\u5355 12.12 \u4e2d\u7684\u4efb\u52a1\u6bcf 5 \u79d2\u6253\u5370\u4e00\u6b21\u6536\u96c6\u5230\u7684\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u3002</p> <p></p> <pre><code>#define RUN_TIME_STATS_STRING_BUFFER_LENGTH       512\n\n/* \u4e3a\u4e86\u6e05\u6670\u8d77\u89c1\uff0c\u672a\u5728\u6b64\u4ee3\u7801\u6e05\u5355\u4e2d\u7701\u7565 fflush() \u7684\u8c03\u7528\u3002 */\nstatic void prvStatsTask( void *pvParameters )\n{\n    TickType_t xLastExecutionTime;\n\n    /* \u7528\u4e8e\u4fdd\u5b58\u683c\u5f0f\u5316\u7684\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u6587\u672c\u7684\u7f13\u51b2\u533a\u9700\u8981\u76f8\u5f53\u5927\u3002\n       \u56e0\u6b64\u5c06\u5176\u58f0\u660e\u4e3a\u9759\u6001\uff0c\u4ee5\u786e\u4fdd\u5b83\u4e0d\u5206\u914d\u5728\u4efb\u52a1\u5806\u6808\u4e0a\u3002\u8fd9\u4f7f\u5f97\u6b64\u51fd\u6570\u4e0d\u53ef\u91cd\u5165\u3002 */\n    static signed char cStringBuffer[ RUN_TIME_STATS_STRING_BUFFER_LENGTH ];\n\n    /* \u8be5\u4efb\u52a1\u6bcf 5 \u79d2\u8fd0\u884c\u4e00\u6b21\u3002 */\n    const TickType_t xBlockPeriod = pdMS_TO_TICKS( 5000 );\n\n    /* \u5c06 xLastExecutionTime \u521d\u59cb\u5316\u4e3a\u5f53\u524d\u65f6\u95f4\u3002\u8fd9\u662f\u552f\u4e00\u9700\u8981\u663e\u5f0f\u5199\u5165\u6b64\u53d8\u91cf\u7684\u65f6\u95f4\u3002\u4e4b\u540e\uff0c\u5b83\u4f1a\u5728 vTaskDelayUntil() API \u51fd\u6570\u5185\u90e8\u81ea\u52a8\u66f4\u65b0\u3002 */\n    xLastExecutionTime = xTaskGetTickCount();\n\n    /* \u4e0e\u5927\u591a\u6570\u4efb\u52a1\u4e00\u6837\uff0c\u8be5\u4efb\u52a1\u5728\u65e0\u9650\u5faa\u73af\u4e2d\u5b9e\u73b0\u3002 */\n    for( ;; )\n    {\n        /* \u7b49\u5f85\uff0c\u76f4\u5230\u8be5\u4efb\u52a1\u518d\u6b21\u8fd0\u884c\u3002 */\n        xTaskDelayUntil( &amp;xLastExecutionTime, xBlockPeriod );\n\n        /* \u4ece\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u751f\u6210\u6587\u672c\u8868\u3002\u6b64\u8868\u5fc5\u987b\u9002\u5408 cStringBuffer \u6570\u7ec4\u3002 */\n        vTaskGetRunTimeStatistics( cStringBuffer, RUN_TIME_STATS_STRING_BUFFER_LENGTH );\n\n        /* \u6253\u5370\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u8868\u7684\u5217\u6807\u9898\u3002 */\n        printf( \"\\nTask\\t\\tAbs\\t\\t\\t%%\\n\" );\n        printf( \"-------------------------------------------------------------\\n\" );\n\n        /* \u6253\u5370\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u8868\u672c\u8eab\u3002\u6570\u636e\u8868\u5305\u542b\u591a\u884c\uff0c\u56e0\u6b64\u8c03\u7528 vPrintMultipleLines() \u51fd\u6570\u800c\u4e0d\u662f\u76f4\u63a5\u8c03\u7528 printf()\u3002 \n           vPrintMultipleLines() \u51fd\u6570\u9010\u884c\u8c03\u7528 printf()\uff0c\u4ee5\u786e\u4fdd\u884c\u7f13\u51b2\u533a\u6309\u9884\u671f\u5de5\u4f5c\u3002 */ \n        vPrintMultipleLines( cStringBuffer );\n    }\n}\n</code></pre> <p>\u6e05\u5355 12.12 \u6253\u5370\u6536\u96c6\u5230\u7684\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u7684\u4efb\u52a1</p>"},{"location":"ch12-%E5%BC%80%E5%8F%91%E8%80%85%E6%94%AF%E6%8C%81/#126","title":"12.6 \u8ddf\u8e2a\u94a9\u5b50\u5b8f","text":"<p>\u8ddf\u8e2a\u5b8f\u662f\u5728 FreeRTOS \u6e90\u4ee3\u7801\u4e2d\u7684\u5173\u952e\u70b9\u653e\u7f6e\u7684\u5b8f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u5b8f\u662f\u7a7a\u7684\uff0c\u56e0\u6b64\u4e0d\u4f1a\u751f\u6210\u4efb\u4f55\u4ee3\u7801\uff0c\u4e5f\u6ca1\u6709\u8fd0\u884c\u65f6\u5f00\u9500\u3002\u901a\u8fc7\u8986\u76d6\u9ed8\u8ba4\u7684\u7a7a\u5b9e\u73b0\uff0c\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u8005\u53ef\u4ee5\uff1a</p> <ul> <li> <p>\u5728\u4e0d\u4fee\u6539 FreeRTOS \u6e90\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\u5411 FreeRTOS \u63d2\u5165\u4ee3\u7801\u3002</p> </li> <li> <p>\u901a\u8fc7\u76ee\u6807\u786c\u4ef6\u4e0a\u53ef\u7528\u7684\u4efb\u4f55\u65b9\u5f0f\u8f93\u51fa\u8be6\u7ec6\u7684\u6267\u884c\u5e8f\u5217\u4fe1\u606f\u3002\u8ddf\u8e2a\u5b8f\u51fa\u73b0\u5728 FreeRTOS \u6e90\u4ee3\u7801\u4e2d\u7684\u8db3\u591f\u591a\u7684\u4f4d\u7f6e\uff0c\u5141\u8bb8\u5b83\u4eec\u7528\u4e8e\u521b\u5efa\u5b8c\u6574\u8be6\u7ec6\u7684\u8c03\u5ea6\u7a0b\u5e8f\u6d3b\u52a8\u8ddf\u8e2a\u548c\u5206\u6790\u65e5\u5fd7\u3002</p> </li> </ul>"},{"location":"ch12-%E5%BC%80%E5%8F%91%E8%80%85%E6%94%AF%E6%8C%81/#1261","title":"12.6.1 \u53ef\u7528\u7684\u8ddf\u8e2a\u94a9\u5b50\u5b8f","text":"<p>\u8be6\u7ec6\u8bf4\u660e\u6bcf\u4e2a\u5b8f\u4f1a\u5360\u7528\u592a\u591a\u7a7a\u95f4\u3002\u4e0b\u9762\u7684\u5217\u8868\u8be6\u7ec6\u8bf4\u660e\u4e86\u88ab\u8ba4\u4e3a\u5bf9\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u8005\u6700\u6709\u7528\u7684\u5b8f\u7684\u5b50\u96c6\u3002</p> <p>\u5217\u8868\u4e2d\u7684\u8bb8\u591a\u63cf\u8ff0\u90fd\u63d0\u5230\u4e86\u4e00\u4e2a\u540d\u4e3a <code>pxCurrentTCB</code> \u7684\u53d8\u91cf\u3002 <code>pxCurrentTCB</code> \u662f\u4e00\u4e2a FreeRTOS \u79c1\u6709\u53d8\u91cf\uff0c\u4fdd\u5b58\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u7684\u4efb\u52a1\u7684\u53e5\u67c4\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u4ece FreeRTOS/Source/tasks.c \u6e90\u6587\u4ef6\u8c03\u7528\u7684\u4efb\u4f55\u5b8f\u4e2d\u4f7f\u7528\u3002</p> <p>\u5e38\u7528\u8ddf\u8e2a\u94a9\u5b50\u5b8f\u7684\u9009\u62e9</p> <ul> <li><code>traceTASK_INCREMENT_TICK(xTickCount)</code></li> </ul> <p>\u5728\u6ef4\u7b54\u4e2d\u65ad\u671f\u95f4\u8c03\u7528\uff0c\u5728\u6ef4\u7b54\u8ba1\u6570\u5668\u9012\u589e\u4e4b\u524d\u3002 <code>xTickCount</code> \u53c2\u6570\u5c06\u65b0\u6ef4\u7b54\u8ba1\u6570\u503c\u4f20\u9012\u7ed9\u5b8f\u3002</p> <ul> <li><code>traceTASK_SWITCHED_OUT()</code></li> </ul> <p>\u5728\u9009\u62e9\u65b0\u4efb\u52a1\u8fd0\u884c\u4e4b\u524d\u8c03\u7528\u3002\u5728\u6b64\u65f6\uff0c<code>pxCurrentTCB</code> \u5305\u542b\u5373\u5c06\u79bb\u5f00\u8fd0\u884c\u72b6\u6001\u7684\u4efb\u52a1\u7684\u53e5\u67c4\u3002</p> <ul> <li><code>traceTASK_SWITCHED_IN()</code></li> </ul> <p>\u5728\u9009\u62e9\u4efb\u52a1\u8fd0\u884c\u4e4b\u540e\u8c03\u7528\u3002\u5728\u6b64\u65f6\uff0c<code>pxCurrentTCB</code> \u5305\u542b\u5373\u5c06\u8fdb\u5165\u8fd0\u884c\u72b6\u6001\u7684\u4efb\u52a1\u7684\u53e5\u67c4\u3002</p> <ul> <li><code>traceBLOCKING_ON_QUEUE_RECEIVE(pxQueue)</code></li> </ul> <p>\u5728\u5f53\u524d\u6267\u884c\u7684\u4efb\u52a1\u56e0\u5c1d\u8bd5\u4ece\u7a7a\u961f\u5217\u8bfb\u53d6\u800c\u8fdb\u5165\u963b\u585e\u72b6\u6001\u4e4b\u524d\u7acb\u5373\u8c03\u7528\uff0c\u6216\u56e0\u5c1d\u8bd5\u201c\u83b7\u53d6\u201d\u7a7a\u4fe1\u53f7\u91cf\u6216\u4e92\u65a5\u91cf\u800c\u8fdb\u5165\u963b\u585e\u72b6\u6001\u3002 <code>pxQueue</code> \u53c2\u6570\u5c06\u76ee\u6807\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u7684\u53e5\u67c4\u4f20\u9012\u7ed9\u5b8f\u3002</p> <ul> <li><code>traceBLOCKING_ON_QUEUE_SEND(pxQueue)</code></li> </ul> <p>\u5728\u5f53\u524d\u6267\u884c\u7684\u4efb\u52a1\u56e0\u5c1d\u8bd5\u5411\u5df2\u6ee1\u961f\u5217\u5199\u5165\u800c\u8fdb\u5165\u963b\u585e\u72b6\u6001\u4e4b\u524d\u7acb\u5373\u8c03\u7528\u3002 <code>pxQueue</code> \u53c2\u6570\u5c06\u76ee\u6807\u961f\u5217\u7684\u53e5\u67c4\u4f20\u9012\u7ed9\u5b8f\u3002</p> <ul> <li><code>traceQUEUE_SEND(pxQueue)</code></li> </ul> <p>\u5f53\u961f\u5217\u53d1\u9001\u6216\u4fe1\u53f7\u91cf\u201c\u7ed9\u4e88\u201d\u64cd\u4f5c\u6210\u529f\u65f6\uff0c\u4ece <code>xQueueSend()</code>\u3001<code>xQueueSendToFront()</code>\u3001<code>xQueueSendToBack()</code> \u6216\u4efb\u4f55\u4fe1\u53f7\u91cf\u201c\u7ed9\u4e88\u201d\u51fd\u6570\u5185\u90e8\u8c03\u7528\u3002 <code>pxQueue</code> \u53c2\u6570\u5c06\u76ee\u6807\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u7684\u53e5\u67c4\u4f20\u9012\u7ed9\u5b8f\u3002</p> <ul> <li><code>traceQUEUE_SEND_FAILED(pxQueue)</code></li> </ul> <p>\u5f53\u961f\u5217\u53d1\u9001\u6216\u4fe1\u53f7\u91cf\u201c\u7ed9\u4e88\u201d\u64cd\u4f5c\u5931\u8d25\u65f6\uff0c\u4ece <code>xQueueSend()</code>\u3001<code>xQueueSendToFront()</code>\u3001<code>xQueueSendToBack()</code> \u6216\u4efb\u4f55\u4fe1\u53f7\u91cf\u201c\u7ed9\u4e88\u201d\u51fd\u6570\u5185\u90e8\u8c03\u7528\u3002\u5982\u679c\u961f\u5217\u5df2\u6ee1\u5e76\u4e14\u5728\u6307\u5b9a\u7684\u4efb\u4f55\u963b\u585e\u65f6\u95f4\u5185\u4ecd\u7136\u6ee1\uff0c\u5219\u961f\u5217\u53d1\u9001\u6216\u4fe1\u53f7\u91cf\u201c\u7ed9\u4e88\u201d\u5c06\u5931\u8d25\u3002 <code>pxQueue</code> \u53c2\u6570\u5c06\u76ee\u6807\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u7684\u53e5\u67c4\u4f20\u9012\u7ed9\u5b8f\u3002</p> <ul> <li><code>traceQUEUE_RECEIVE(pxQueue)</code></li> </ul> <p>\u5f53\u961f\u5217\u63a5\u6536\u6216\u4fe1\u53f7\u91cf\u201c\u83b7\u53d6\u201d\u64cd\u4f5c\u6210\u529f\u65f6\uff0c\u4ece <code>xQueueReceive()</code> \u6216\u4efb\u4f55\u4fe1\u53f7\u91cf\u201c\u83b7\u53d6\u201d\u51fd\u6570\u5185\u90e8\u8c03\u7528\u3002 <code>pxQueue</code> \u53c2\u6570\u5c06\u76ee\u6807\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u7684\u53e5\u67c4\u4f20\u9012\u7ed9\u5b8f\u3002</p> <ul> <li><code>traceQUEUE_RECEIVE_FAILED(pxQueue)</code></li> </ul> <p>\u5f53\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u63a5\u6536\u64cd\u4f5c\u5931\u8d25\u65f6\uff0c\u4ece <code>xQueueReceive()</code> \u6216\u4efb\u4f55\u4fe1\u53f7\u91cf\u201c\u83b7\u53d6\u201d\u51fd\u6570\u5185\u90e8\u8c03\u7528\u3002\u5982\u679c\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u4e3a\u7a7a\u5e76\u4e14\u5728\u6307\u5b9a\u7684\u4efb\u4f55\u963b\u585e\u65f6\u95f4\u5185\u4ecd\u7136\u4e3a\u7a7a\uff0c\u5219\u961f\u5217\u63a5\u6536\u6216\u4fe1\u53f7\u91cf\u201c\u83b7\u53d6\u201d\u64cd\u4f5c\u5c06\u5931\u8d25\u3002 <code>pxQueue</code> \u53c2\u6570\u5c06\u76ee\u6807\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u7684\u53e5\u67c4\u4f20\u9012\u7ed9\u5b8f\u3002</p> <ul> <li><code>traceQUEUE_SEND_FROM_ISR(pxQueue)</code></li> </ul> <p>\u5f53\u53d1\u9001\u64cd\u4f5c\u6210\u529f\u65f6\uff0c\u4ece <code>xQueueSendFromISR()</code> \u5185\u90e8\u8c03\u7528\u3002 <code>pxQueue</code> \u53c2\u6570\u5c06\u76ee\u6807\u961f\u5217\u7684\u53e5\u67c4\u4f20\u9012\u7ed9\u5b8f\u3002</p> <ul> <li><code>traceQUEUE_SEND_FROM_ISR_FAILED(pxQueue)</code></li> </ul> <p>\u5f53\u53d1\u9001\u64cd\u4f5c\u5931\u8d25\u65f6\uff0c\u4ece <code>xQueueSendFromISR()</code> \u5185\u90e8\u8c03\u7528\u3002\u5982\u679c\u961f\u5217\u5df2\u6ee1\uff0c\u5219\u53d1\u9001\u64cd\u4f5c\u5c06\u5931\u8d25\u3002 <code>pxQueue</code> \u53c2\u6570\u5c06\u76ee\u6807\u961f\u5217\u7684\u53e5\u67c4\u4f20\u9012\u7ed9\u5b8f\u3002</p> <ul> <li><code>traceQUEUE_RECEIVE_FROM_ISR(pxQueue)</code></li> </ul> <p>\u5f53\u63a5\u6536\u64cd\u4f5c\u6210\u529f\u65f6\uff0c\u4ece <code>xQueueReceiveFromISR()</code> \u5185\u90e8\u8c03\u7528\u3002 <code>pxQueue</code> \u53c2\u6570\u5c06\u76ee\u6807\u961f\u5217\u7684\u53e5\u67c4\u4f20\u9012\u7ed9\u5b8f\u3002</p> <ul> <li><code>traceQUEUE_RECEIVE_FROM_ISR_FAILED(pxQueue)</code></li> </ul> <p>\u5f53\u63a5\u6536\u64cd\u4f5c\u56e0\u961f\u5217\u5df2\u7a7a\u800c\u5931\u8d25\u65f6\uff0c\u4ece <code>xQueueReceiveFromISR()</code> \u5185\u90e8\u8c03\u7528\u3002 <code>pxQueue</code> \u53c2\u6570\u5c06\u76ee\u6807\u961f\u5217\u7684\u53e5\u67c4\u4f20\u9012\u7ed9\u5b8f\u3002</p> <ul> <li><code>traceTASK_DELAY_UNTIL( xTimeToWake )</code></li> </ul> <p>\u5f53\u4efb\u52a1\u8fdb\u5165\u963b\u585e\u72b6\u6001\u65f6\uff0c\u7acb\u5373\u4ece <code>xTaskDelayUntil()</code> \u5185\u90e8\u8c03\u7528\u3002</p> <ul> <li><code>traceTASK_DELAY()</code></li> </ul> <p>\u5f53\u4efb\u52a1\u8fdb\u5165\u963b\u585e\u72b6\u6001\u65f6\uff0c\u7acb\u5373\u4ece <code>vTaskDelay()</code> \u5185\u90e8\u8c03\u7528\u3002</p>"},{"location":"ch12-%E5%BC%80%E5%8F%91%E8%80%85%E6%94%AF%E6%8C%81/#1262","title":"12.6.2 \u5b9a\u4e49\u8ddf\u8e2a\u94a9\u5b50\u5b8f","text":"<p>\u6bcf\u4e2a\u8ddf\u8e2a\u5b8f\u90fd\u6709\u9ed8\u8ba4\u7684\u7a7a\u5b9a\u4e49\u3002\u53ef\u4ee5\u901a\u8fc7\u5728 FreeRTOSConfig.h \u4e2d\u63d0\u4f9b\u65b0\u7684\u5b8f\u5b9a\u4e49\u6765\u8986\u76d6\u9ed8\u8ba4\u5b9a\u4e49\u3002\u5982\u679c\u8ddf\u8e2a\u5b8f\u5b9a\u4e49\u53d8\u5f97\u5f88\u957f\u6216\u5f88\u590d\u6742\uff0c\u5219\u53ef\u4ee5\u5728\u4e00\u4e2a\u65b0\u7684\u5934\u6587\u4ef6\u4e2d\u5b9e\u73b0\u5b83\u4eec\uff0c\u7136\u540e\u518d\u4ece FreeRTOSConfig.h \u4e2d\u5305\u542b\u8be5\u6587\u4ef6\u3002</p> <p>\u6839\u636e\u8f6f\u4ef6\u5de5\u7a0b\u7684\u6700\u4f73\u5b9e\u8df5\uff0cFreeRTOS \u7ef4\u62a4\u4e25\u683c\u7684\u6570\u636e\u9690\u85cf\u7b56\u7565\u3002\u8ddf\u8e2a\u5b8f\u5141\u8bb8\u5c06\u7528\u6237\u4ee3\u7801\u6dfb\u52a0\u5230 FreeRTOS \u6e90\u6587\u4ef6\u4e2d\uff0c\u56e0\u6b64\u8ddf\u8e2a\u5b8f\u53ef\u89c1\u7684\u6570\u636e\u7c7b\u578b\u4e0e\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u53ef\u89c1\u7684\u6570\u636e\u7c7b\u578b\u4e0d\u540c\uff1a</p> <ul> <li> <p>\u5728 FreeRTOS/Source/tasks.c \u6e90\u6587\u4ef6\u5185\u90e8\uff0c\u4efb\u52a1\u53e5\u67c4\u662f\u6307\u5411\u63cf\u8ff0\u4efb\u52a1\u7684\u6570\u636e\u7ed3\u6784\uff08\u4efb\u52a1\u7684 \u4efb\u52a1\u63a7\u5236\u5757\uff0c\u6216 TCB\uff09\u7684\u6307\u9488\u3002\u5728 FreeRTOS/Source/tasks.c \u6e90\u6587\u4ef6\u5916\u90e8\uff0c\u4efb\u52a1\u53e5\u67c4\u662f\u6307\u5411\u65e0\u6548\u6570\u636e\u7684\u6307\u9488\u3002</p> </li> <li> <p>\u5728 FreeRTOS/Source/queue.c \u6e90\u6587\u4ef6\u5185\u90e8\uff0c\u961f\u5217\u53e5\u67c4\u662f\u6307\u5411\u63cf\u8ff0\u961f\u5217\u7684\u6570\u636e\u7ed3\u6784\u7684\u6307\u9488\u3002\u5728 FreeRTOS/Source/queue.c \u6e90\u6587\u4ef6\u5916\u90e8\uff0c\u961f\u5217\u53e5\u67c4\u662f\u6307\u5411\u65e0\u6548\u6570\u636e\u7684\u6307\u9488\u3002</p> </li> </ul> <p>\u5982\u679c\u8ddf\u8e2a\u5b8f\u76f4\u63a5\u8bbf\u95ee\u901a\u5e38\u662f\u79c1\u6709\u7684 FreeRTOS \u6570\u636e\u7ed3\u6784\uff0c\u5219\u9700\u8981\u6781\u5176\u5c0f\u5fc3\uff0c\u56e0\u4e3a\u79c1\u6709\u6570\u636e\u7ed3\u6784\u53ef\u80fd\u4f1a\u5728 FreeRTOS \u7248\u672c\u4e4b\u95f4\u53d1\u751f\u53d8\u5316\u3002</p>"},{"location":"ch12-%E5%BC%80%E5%8F%91%E8%80%85%E6%94%AF%E6%8C%81/#1263-freertos","title":"12.6.3 FreeRTOS \u611f\u77e5\u8c03\u8bd5\u5668\u63d2\u4ef6","text":"<p>\u63d0\u4f9b\u4e00\u4e9b FreeRTOS \u611f\u77e5\u7684\u63d2\u4ef6\u53ef\u7528\u4e8e\u4ee5\u4e0b IDE\u3002\u8fd9\u4efd\u6e05\u5355\u53ef\u80fd\u5e76\u4e0d\u8be6\u5c3d\uff1a</p> <p></p> <ul> <li> <p>Eclipse (StateViewer)</p> </li> <li> <p>Eclipse (ThreadSpy)</p> </li> <li> <p>IAR</p> </li> <li> <p>ARM DS-5</p> </li> <li> <p>Atollic TrueStudio</p> </li> <li> <p>Microchip MPLAB</p> </li> <li> <p>iSYSTEM WinIDEA</p> </li> <li> <p>STM32CubeIDE</p> </li> </ul>"},{"location":"ch13-%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/","title":"13 \u6545\u969c\u6392\u67e5","text":""},{"location":"ch13-%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/#131","title":"13.1 \u7ae0\u8282\u7b80\u4ecb\u4e0e\u8303\u56f4","text":"<p>\u672c\u7ae0\u91cd\u70b9\u4ecb\u7ecd\u65b0\u7528\u6237\u5728\u4f7f\u7528 FreeRTOS \u65f6\u6700\u5e38\u9047\u5230\u7684\u95ee\u9898\u3002\u9996\u5148\u5173\u6ce8\u4e09\u5927\u5e38\u89c1\u95ee\u9898\uff1a\u4e2d\u65ad\u4f18\u5148\u7ea7\u5206\u914d\u9519\u8bef\u3001\u5806\u6808\u6ea2\u51fa\u548c\u4e0d\u5f53\u4f7f\u7528 printf()\u3002\u968f\u540e\u4ee5 FAQ \u5f62\u5f0f\u7b80\u8981\u4ecb\u7ecd\u5176\u4ed6\u5e38\u89c1\u9519\u8bef\u3001\u53ef\u80fd\u539f\u56e0\u53ca\u89e3\u51b3\u65b9\u6848\u3002</p> <p>\u4f7f\u7528 <code>configASSERT()</code> \u80fd\u663e\u8457\u63d0\u5347\u5f00\u53d1\u6548\u7387\uff0c\u80fd\u7acb\u5373\u6355\u83b7\u548c\u5b9a\u4f4d\u8bb8\u591a\u5e38\u89c1\u9519\u8bef\u3002\u5f3a\u70c8\u5efa\u8bae\u5728\u5f00\u53d1\u6216\u8c03\u8bd5 FreeRTOS \u5e94\u7528\u65f6\u5b9a\u4e49 <code>configASSERT()</code>\u3002<code>configASSERT()</code> \u8be6\u89c1\u7b2c 12.2 \u8282\u3002</p>"},{"location":"ch13-%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/#132","title":"13.2 \u4e2d\u65ad\u4f18\u5148\u7ea7","text":"<p>\u6ce8\u610f\uff1a\u8fd9\u662f\u6700\u5e38\u89c1\u7684\u652f\u6301\u8bf7\u6c42\u539f\u56e0\uff0c\u5728\u5927\u591a\u6570\u7aef\u53e3\u4e2d\u5b9a\u4e49 <code>configASSERT()</code> \u53ef\u7acb\u5373\u6355\u83b7\u6b64\u7c7b\u9519\u8bef\uff01</p> <p>\u5982\u679c\u6240\u7528 FreeRTOS \u7aef\u53e3\u652f\u6301\u4e2d\u65ad\u5d4c\u5957\uff0c\u4e14\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u4f7f\u7528\u4e86 FreeRTOS API\uff0c\u5219\u5fc5\u987b\u5c06\u8be5\u4e2d\u65ad\u7684\u4f18\u5148\u7ea7\u8bbe\u7f6e\u4e3a\u4e0d\u9ad8\u4e8e <code>configMAX_SYSCALL_INTERRUPT_PRIORITY</code>\uff08\u8be6\u89c1\u7b2c 7.8 \u8282\u201c\u4e2d\u65ad\u5d4c\u5957\u201d\uff09\u3002\u5426\u5219\u4f1a\u5bfc\u81f4\u5173\u952e\u533a\u65e0\u6548\uff0c\u8fdb\u800c\u5f15\u53d1\u95f4\u6b47\u6027\u6545\u969c\u3002</p> <p>\u7279\u522b\u6ce8\u610f\uff1a</p> <ul> <li>\u67d0\u4e9b\u5904\u7406\u5668\uff08\u5982\u90e8\u5206 ARM Cortex\uff09\u4e2d\u65ad\u4f18\u5148\u7ea7\u9ed8\u8ba4\u6700\u9ad8\uff0c\u4f7f\u7528 FreeRTOS API \u7684\u4e2d\u65ad\u4e0d\u80fd\u4fdd\u6301\u672a\u521d\u59cb\u5316\u72b6\u6001\u3002</li> <li>\u6570\u503c\u9ad8\u7684\u4f18\u5148\u7ea7\u4ee3\u8868\u903b\u8f91\u4e0a\u7684\u4f4e\u4f18\u5148\u7ea7\uff0c\u8fd9\u53ef\u80fd\u4ee4\u4eba\u56f0\u60d1\uff08\u540c\u6837\u89c1\u4e8e ARM Cortex \u7b49\u5904\u7406\u5668\uff09\u3002</li> <li>\u4f8b\u5982\uff0c\u5728\u6b64\u7c7b\u5904\u7406\u5668\u4e0a\uff0c\u4f18\u5148\u7ea7\u4e3a 5 \u7684\u4e2d\u65ad\u53ef\u88ab\u4f18\u5148\u7ea7\u4e3a 4 \u7684\u4e2d\u65ad\u6253\u65ad\u3002\u56e0\u6b64\uff0c\u5982\u679c <code>configMAX_SYSCALL_INTERRUPT_PRIORITY</code> \u8bbe\u4e3a 5\uff0c\u4efb\u4f55\u4f7f\u7528 FreeRTOS API \u7684\u4e2d\u65ad\u53ea\u80fd\u5206\u914d\u6570\u503c\u5927\u4e8e\u7b49\u4e8e 5 \u7684\u4f18\u5148\u7ea7\u3002\u6b64\u65f6\uff0c\u4f18\u5148\u7ea7 5 \u6216 6 \u6709\u6548\uff0c\u4f18\u5148\u7ea7 3 \u5219\u65e0\u6548\u3002</li> </ul> <p></p> <ul> <li> <p>\u4e0d\u540c\u7684\u5e93\u5b9e\u73b0\u5bf9\u4e2d\u65ad\u4f18\u5148\u7ea7\u7684\u5b9a\u4e49\u65b9\u5f0f\u4e0d\u540c\u3002\u7279\u522b\u662f\u9488\u5bf9 ARM Cortex \u5904\u7406\u5668\u7684\u5e93\uff0c\u4e2d\u65ad\u4f18\u5148\u7ea7\u5728\u5199\u5165\u786c\u4ef6\u5bc4\u5b58\u5668\u4e4b\u524d\u4f1a\u88ab\u79fb\u4f4d\u3002\u4e00\u4e9b\u5e93\u4f1a\u81ea\u884c\u6267\u884c\u79fb\u4f4d\u64cd\u4f5c\uff0c\u800c\u53e6\u4e00\u4e9b\u5219\u671f\u671b\u5728\u8c03\u7528\u5e93\u51fd\u6570\u4e4b\u524d\u5b8c\u6210\u79fb\u4f4d\u3002</p> </li> <li> <p>\u76f8\u540c\u67b6\u6784\u7684\u4e0d\u540c\u5b9e\u73b0\u5bf9\u4e2d\u65ad\u4f18\u5148\u7ea7\u4f4d\u6570\u7684\u652f\u6301\u4e0d\u540c\u3002\u4f8b\u5982\uff0c\u6765\u81ea\u4e0d\u540c\u5382\u5546\u7684 Cortex-M \u5904\u7406\u5668\u53ef\u80fd\u5206\u522b\u652f\u6301 3 \u4f4d\u6216 4 \u4f4d\u4f18\u5148\u7ea7\u3002</p> </li> <li> <p>\u5b9a\u4e49\u4e2d\u65ad\u4f18\u5148\u7ea7\u7684\u4f4d\u53ef\u80fd\u5206\u4e3a\u62a2\u5360\u4f18\u5148\u7ea7\u4f4d\u548c\u5b50\u4f18\u5148\u7ea7\u4f4d\u3002\u786e\u4fdd\u6240\u6709\u4f4d\u90fd\u5206\u914d\u7ed9\u62a2\u5360\u4f18\u5148\u7ea7\uff0c\u4ee5\u514d\u4f7f\u7528\u5b50\u4f18\u5148\u7ea7\u3002</p> </li> </ul> <p>\u5728\u67d0\u4e9b FreeRTOS \u7aef\u53e3\u4e2d\uff0c<code>configMAX_SYSCALL_INTERRUPT_PRIORITY</code> \u8fd8\u6709\u4e00\u4e2a\u66ff\u4ee3\u540d\u79f0 <code>configMAX_API_CALL_INTERRUPT_PRIORITY</code>\u3002</p>"},{"location":"ch13-%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/#133","title":"13.3 \u5806\u6808\u6ea2\u51fa","text":"<p>\u5806\u6808\u6ea2\u51fa\u662f\u7b2c\u4e8c\u5927\u5e38\u89c1\u652f\u6301\u8bf7\u6c42\u6765\u6e90\u3002FreeRTOS \u63d0\u4f9b\u4e86\u51e0\u79cd\u529f\u80fd\u6765\u5e2e\u52a9\u6355\u83b7\u548c\u8c03\u8bd5\u4e0e\u5806\u6808\u76f8\u5173\u7684\u95ee\u9898[^28]\u3002</p> <p>[^28]: \u8fd9\u4e9b\u529f\u80fd\u5728 FreeRTOS Windows \u7aef\u53e3\u4e2d\u4e0d\u53ef\u7528\u3002</p>"},{"location":"ch13-%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/#1331-the-uxtaskgetstackhighwatermark-api-function","title":"13.3.1 The uxTaskGetStackHighWaterMark() API Function","text":"<p>\u6bcf\u4e2a\u4efb\u52a1\u7ef4\u62a4\u81ea\u5df1\u7684\u5806\u6808\uff0c\u5806\u6808\u7684\u603b\u5927\u5c0f\u5728\u4efb\u52a1\u521b\u5efa\u65f6\u6307\u5b9a\u3002<code>uxTaskGetStackHighWaterMark()</code> \u7528\u4e8e\u67e5\u8be2\u4efb\u52a1\u6ea2\u51fa\u5176\u5206\u914d\u7684\u5806\u6808\u7a7a\u95f4\u7684\u7a0b\u5ea6\u3002\u8be5\u503c\u79f0\u4e3a\u5806\u6808\u201c\u9ad8\u6c34\u4f4d\u7ebf\u201d\u3002</p> <p></p> <pre><code>UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask );\n</code></pre> <p>Listing 13.1 The uxTaskGetStackHighWaterMark() API function prototype</p> <p>uxTaskGetStackHighWaterMark() \u53c2\u6570\u548c\u8fd4\u56de\u503c</p> <ul> <li><code>xTask</code></li> </ul> <p>\u6b63\u5728\u67e5\u8be2\u5176\u5806\u6808\u9ad8\u6c34\u4f4d\u7ebf\u7684\u4efb\u52a1\u53e5\u67c4\uff08\u76ee\u6807\u4efb\u52a1\uff09\u2014\u6709\u5173\u83b7\u53d6\u4efb\u52a1\u53e5\u67c4\u7684\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 <code>xTaskCreate()</code> API \u51fd\u6570\u7684 pxCreatedTask \u53c2\u6570\u3002</p> <p>\u4efb\u52a1\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012 NULL \u4ee3\u66ff\u6709\u6548\u4efb\u52a1\u53e5\u67c4\u6765\u67e5\u8be2\u5176\u81ea\u8eab\u7684\u5806\u6808\u9ad8\u6c34\u4f4d\u7ebf\u3002</p> <ul> <li>\u8fd4\u56de\u503c</li> </ul> <p>\u968f\u7740\u4efb\u52a1\u7684\u6267\u884c\u548c\u4e2d\u65ad\u7684\u5904\u7406\uff0c\u4efb\u52a1\u4f7f\u7528\u7684\u5806\u6808\u5927\u5c0f\u4f1a\u4e0d\u65ad\u589e\u957f\u548c\u7f29\u5c0f\u3002<code>uxTaskGetStackHighWaterMark()</code> \u8fd4\u56de\u81ea\u4efb\u52a1\u5f00\u59cb\u6267\u884c\u4ee5\u6765\uff0c\u4efb\u52a1\u53ef\u7528\u7684\u6700\u5c0f\u5269\u4f59\u5806\u6808\u7a7a\u95f4\u3002\u8fd9\u662f\u5728\u5806\u6808\u4f7f\u7528\u8fbe\u5230\u6700\u5927\uff08\u6216\u6700\u6df1\uff09\u503c\u65f6\u5269\u4f59\u7684\u672a\u4f7f\u7528\u5806\u6808\u91cf\u3002\u9ad8\u6c34\u4f4d\u7ebf\u79bb\u96f6\u8d8a\u8fd1\uff0c\u4efb\u52a1\u6ea2\u51fa\u5176\u5806\u6808\u7684\u53ef\u80fd\u6027\u5c31\u8d8a\u5927\u3002</p> <p><code>uxTaskGetStackHighWaterMark2()</code> API \u53ef\u4ee5\u66ff\u4ee3 <code>uxTaskGetStackHighWaterMark()</code> \u4f7f\u7528\uff0c\u4e8c\u8005\u7684\u552f\u4e00\u533a\u522b\u5728\u4e8e\u8fd4\u56de\u503c\u7c7b\u578b\u3002</p> <p></p> <pre><code>configSTACK_DEPTH_TYPE uxTaskGetStackHighWaterMark2( TaskHandle_t xTask );\n</code></pre> <p>Listing 13.2 The uxTaskGetStackHighWaterMark2() API function prototype</p> <p>\u4f7f\u7528 <code>configSTACK_DEPTH_TYPE</code> \u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u5458\u63a7\u5236\u7528\u4e8e\u5806\u6808\u6df1\u5ea6\u7684\u7c7b\u578b\u3002</p>"},{"location":"ch13-%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/#1332-","title":"13.3.2 \u8fd0\u884c\u65f6\u5806\u6808\u68c0\u67e5 - \u6982\u8ff0","text":"<p>FreeRTOS \u5305\u542b\u4e09\u79cd\u53ef\u9009\u7684\u8fd0\u884c\u65f6\u5806\u6808\u68c0\u67e5\u673a\u5236\u3002\u8fd9\u4e9b\u673a\u5236\u7531 FreeRTOSConfig.h \u4e2d\u7684 <code>configCHECK_FOR_STACK_OVERFLOW</code> \u7f16\u8bd1\u65f6\u914d\u7f6e\u5e38\u91cf\u63a7\u5236\u3002\u8fd9\u4e24\u79cd\u65b9\u6cd5\u90fd\u4f1a\u589e\u52a0\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u65f6\u95f4\u3002</p> <p>\u5806\u6808\u6ea2\u51fa\u94a9\u5b50\uff08\u6216\u5806\u6808\u6ea2\u51fa\u56de\u8c03\uff09\u662f\u5185\u6838\u5728\u68c0\u6d4b\u5230\u5806\u6808\u6ea2\u51fa\u65f6\u8c03\u7528\u7684\u51fd\u6570\u3002\u8981\u4f7f\u7528\u5806\u6808\u6ea2\u51fa\u94a9\u5b50\u51fd\u6570\uff1a</p> <ol> <li> <p>\u5728 FreeRTOSConfig.h \u4e2d\u5c06 <code>configCHECK_FOR_STACK_OVERFLOW</code> \u8bbe\u7f6e\u4e3a 1\u30012 \u6216 3\uff0c\u5982\u4ee5\u4e0b\u5b50\u8282\u6240\u8ff0\u3002</p> </li> <li> <p>\u63d0\u4f9b\u94a9\u5b50\u51fd\u6570\u7684\u5b9e\u73b0\uff0c\u4f7f\u7528\u4e0e\u5217\u8868 13.3 \u4e2d\u6240\u793a\u5b8c\u5168\u76f8\u540c\u7684\u51fd\u6570\u540d\u79f0\u548c\u539f\u578b\u3002</p> </li> </ol> <p></p> <pre><code>void vApplicationStackOverflowHook( TaskHandle_t *pxTask, signed char *pcTaskName );\n</code></pre> <p>Listing 13.3 The stack overflow hook function prototype</p> <p>\u5806\u6808\u6ea2\u51fa\u94a9\u5b50\u65e8\u5728\u7b80\u5316\u5806\u6808\u9519\u8bef\u7684\u6355\u83b7\u548c\u8c03\u8bd5\uff0c\u4f46\u53d1\u751f\u6ea2\u51fa\u65f6\u5b9e\u9645\u4e0a\u65e0\u6cd5\u4ece\u4e2d\u6062\u590d\u3002\u8be5\u51fd\u6570\u7684\u53c2\u6570\u5c06\u6ea2\u51fa\u5806\u6808\u7684\u4efb\u52a1\u7684\u53e5\u67c4\u548c\u540d\u79f0\u4f20\u9012\u7ed9\u94a9\u5b50\u51fd\u6570\u3002</p> <p>\u5806\u6808\u6ea2\u51fa\u94a9\u5b50\u4ece\u4e2d\u65ad\u4e0a\u4e0b\u6587\u4e2d\u8c03\u7528\u3002</p> <p>\u67d0\u4e9b\u5fae\u63a7\u5236\u5668\u5728\u68c0\u6d4b\u5230\u4e0d\u6b63\u786e\u7684\u5185\u5b58\u8bbf\u95ee\u65f6\u4f1a\u751f\u6210\u6545\u969c\u5f02\u5e38\uff0c\u56e0\u6b64\u5728\u5185\u6838\u6709\u673a\u4f1a\u8c03\u7528\u5806\u6808\u6ea2\u51fa\u94a9\u5b50\u51fd\u6570\u4e4b\u524d\uff0c\u53ef\u80fd\u4f1a\u89e6\u53d1\u6545\u969c\u3002</p>"},{"location":"ch13-%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/#1333-1","title":"13.3.3 \u8fd0\u884c\u65f6\u5806\u6808\u68c0\u67e5 - \u65b9\u6cd5 1","text":"<p>\u5f53 <code>configCHECK_FOR_STACK_OVERFLOW</code> \u8bbe\u7f6e\u4e3a 1 \u65f6\uff0c\u9009\u62e9\u65b9\u6cd5 1\u3002</p> <p>\u6bcf\u6b21\u4efb\u52a1\u88ab\u8c03\u51fa\u65f6\uff0c\u4efb\u52a1\u7684\u6574\u4e2a\u6267\u884c\u4e0a\u4e0b\u6587\u90fd\u4f1a\u4fdd\u5b58\u5230\u5176\u5806\u6808\u4e2d\u3002\u8fd9\u53ef\u80fd\u662f\u5806\u6808\u4f7f\u7528\u8fbe\u5230\u5cf0\u503c\u7684\u65f6\u523b\u3002\u5f53 <code>configCHECK_FOR_STACK_OVERFLOW</code> \u8bbe\u7f6e\u4e3a 1 \u65f6\uff0c\u5185\u6838\u4f1a\u68c0\u67e5\u4e0a\u4e0b\u6587\u4fdd\u5b58\u540e\u5806\u6808\u6307\u9488\u662f\u5426\u4ecd\u5728\u6709\u6548\u5806\u6808\u7a7a\u95f4\u5185\u3002\u5982\u679c\u53d1\u73b0\u5806\u6808\u6307\u9488\u8d85\u51fa\u6709\u6548\u8303\u56f4\uff0c\u5219\u4f1a\u8c03\u7528\u5806\u6808\u6ea2\u51fa\u94a9\u5b50\u3002</p> <p>\u65b9\u6cd5 1 \u6267\u884c\u8fc5\u901f\uff0c\u4f46\u53ef\u80fd\u4f1a\u9519\u8fc7\u4e0a\u4e0b\u6587\u5207\u6362\u4e4b\u95f4\u53d1\u751f\u7684\u5806\u6808\u6ea2\u51fa\u3002</p>"},{"location":"ch13-%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/#1334-2","title":"13.3.4 \u8fd0\u884c\u65f6\u5806\u6808\u68c0\u67e5 - \u65b9\u6cd5 2","text":"<p>\u65b9\u6cd5 2 \u5728\u65b9\u6cd5 1 \u63cf\u8ff0\u7684\u68c0\u67e5\u57fa\u7840\u4e0a\u6267\u884c\u4e86\u989d\u5916\u7684\u68c0\u67e5\u3002\u5f53 <code>configCHECK_FOR_STACK_OVERFLOW</code> \u8bbe\u7f6e\u4e3a 2 \u65f6\u9009\u62e9\u6b64\u65b9\u6cd5\u3002</p> <p>\u5f53\u521b\u5efa\u4efb\u52a1\u65f6\uff0c\u4f1a\u7528\u5df2\u77e5\u6a21\u5f0f\u586b\u5145\u5176\u5806\u6808\u3002\u65b9\u6cd5 2 \u6d4b\u8bd5\u4efb\u52a1\u5806\u6808\u7a7a\u95f4\u6700\u540e 20 \u4e2a\u5b57\u8282\u7684\u503c\uff0c\u4ee5\u9a8c\u8bc1\u8be5\u6a21\u5f0f\u662f\u5426\u672a\u88ab\u8986\u76d6\u3002\u5982\u679c\u8fd9 20 \u4e2a\u5b57\u8282\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u5b57\u8282\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u5219\u4f1a\u8c03\u7528\u5806\u6808\u6ea2\u51fa\u94a9\u5b50\u51fd\u6570\u3002</p> <p>\u65b9\u6cd5 2 \u7684\u6267\u884c\u901f\u5ea6\u4e0d\u53ca\u65b9\u6cd5 1 \u5feb\uff0c\u4f46\u4ecd\u7136\u76f8\u5bf9\u8f83\u5feb\uff0c\u56e0\u4e3a\u53ea\u6d4b\u8bd5\u4e86 20 \u4e2a\u5b57\u8282\u3002\u5b83\u6700\u6709\u53ef\u80fd\u6355\u83b7\u6240\u6709\u5806\u6808\u6ea2\u51fa\uff1b\u7136\u800c\uff0c\u67d0\u4e9b\u6ea2\u51fa\u53ef\u80fd\u4f1a\u88ab\u6f0f\u6389\uff08\u4f46\u6781\u4e0d\u53ef\u80fd\uff09\u3002</p>"},{"location":"ch13-%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/#1334-3","title":"13.3.4 \u8fd0\u884c\u65f6\u5806\u6808\u68c0\u67e5 - \u65b9\u6cd5 3","text":"<p>\u5f53 <code>configCHECK_FOR_STACK_OVERFLOW</code> \u8bbe\u7f6e\u4e3a 3 \u65f6\uff0c\u9009\u62e9\u65b9\u6cd5 3\u3002</p> <p>\u6b64\u65b9\u6cd5\u4ec5\u5728\u67d0\u4e9b\u9009\u5b9a\u7684\u7aef\u53e3\u53ef\u7528\u3002\u5f53\u53ef\u7528\u65f6\uff0c\u6b64\u65b9\u6cd5\u542f\u7528 ISR \u5806\u6808\u68c0\u67e5\u3002\u5f53\u68c0\u6d4b\u5230 ISR \u5806\u6808\u6ea2\u51fa\u65f6\uff0c\u4f1a\u89e6\u53d1\u65ad\u8a00\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0d\u4f1a\u8c03\u7528\u5806\u6808\u6ea2\u51fa\u94a9\u5b50\u51fd\u6570\uff0c\u56e0\u4e3a\u5b83\u7279\u5b9a\u4e8e\u4efb\u52a1\u5806\u6808\u800c\u4e0d\u662f ISR \u5806\u6808\u3002</p>"},{"location":"ch13-%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/#134-printf-sprintf","title":"13.4 \u5bf9 printf() \u548c sprintf() \u7684\u4f7f\u7528","text":"<p>\u901a\u8fc7 <code>printf()</code> \u8fdb\u884c\u65e5\u5fd7\u8bb0\u5f55\u662f\u4e00\u4e2a\u5e38\u89c1\u9519\u8bef\uff0c\u5f00\u53d1\u4eba\u5458\u5e38\u5e38\u5728\u4e0d\u77e5\u60c5\u7684\u60c5\u51b5\u4e0b\u6dfb\u52a0\u66f4\u591a <code>printf()</code> \u8c03\u7528\u6765\u8f85\u52a9\u8c03\u8bd5\uff0c\u4ece\u800c\u52a0\u5267\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u8bb8\u591a\u4ea4\u53c9\u7f16\u8bd1\u5668\u4f9b\u5e94\u5546\u4f1a\u63d0\u4f9b\u9002\u5408\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4f7f\u7528\u7684 <code>printf()</code> \u5b9e\u73b0\u3002\u5373\u4f7f\u6709\u8fd9\u6837\u7684\u5b9e\u73b0\uff0c\u5b83\u4e5f\u53ef\u80fd\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u53ef\u80fd\u4e0d\u9002\u5408\u5728\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u4f7f\u7528\uff0c\u5e76\u4e14\u6839\u636e\u8f93\u51fa\u7684\u76ee\u6807\uff0c\u6267\u884c\u65f6\u95f4\u53ef\u80fd\u76f8\u5bf9\u8f83\u957f\u3002</p> <p>\u7279\u522b\u6ce8\u610f\uff0c\u5982\u679c\u6ca1\u6709\u53ef\u7528\u4e8e\u5c0f\u578b\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7684 <code>printf()</code> \u5b9e\u73b0\uff0c\u800c\u662f\u4f7f\u7528\u4e86\u901a\u7528\u7684 <code>printf()</code> \u5b9e\u73b0\uff1a</p> <ul> <li> <p>\u4ec5\u4ec5\u5305\u542b\u5bf9 <code>printf()</code> \u6216 <code>sprintf()</code> \u7684\u8c03\u7528\u5c31\u53ef\u80fd\u5927\u5e45\u589e\u52a0\u5e94\u7528\u7a0b\u5e8f\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5927\u5c0f\u3002</p> </li> <li> <p><code>printf()</code> \u548c <code>sprintf()</code> \u53ef\u80fd\u4f1a\u8c03\u7528 <code>malloc()</code>\uff0c\u5982\u679c\u4f7f\u7528\u7684\u5185\u5b58\u5206\u914d\u65b9\u6848\u4e0d\u662f heap_3\uff0c\u5219\u53ef\u80fd\u65e0\u6548\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1\u7b2c 3.2 \u8282\u201c\u793a\u4f8b\u5185\u5b58\u5206\u914d\u65b9\u6848\u201d\u3002</p> </li> <li> <p><code>printf()</code> \u548c <code>sprintf()</code> \u53ef\u80fd\u9700\u8981\u7684\u5806\u6808\u5927\u5c0f\u662f\u5176\u4ed6\u60c5\u51b5\u4e0b\u6240\u9700\u5806\u6808\u5927\u5c0f\u7684\u51e0\u500d\u3002</p> </li> </ul>"},{"location":"ch13-%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/#1341-printf-stdargc","title":"13.4.1 Printf-stdarg.c","text":"<p>\u8bb8\u591a FreeRTOS \u6f14\u793a\u9879\u76ee\u4f7f\u7528\u4e00\u4e2a\u540d\u4e3a printf-stdarg.c \u7684\u6587\u4ef6\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6700\u5c0f\u548c\u5806\u6808\u9ad8\u6548\u7684 <code>sprintf()</code> \u5b9e\u73b0\uff0c\u53ef\u4ee5\u66ff\u4ee3\u6807\u51c6\u5e93\u7248\u672c\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8fd9\u5c06\u5141\u8bb8\u4e3a\u6bcf\u4e2a\u8c03\u7528 <code>sprintf()</code> \u548c\u76f8\u5173\u51fd\u6570\u7684\u4efb\u52a1\u5206\u914d\u66f4\u5c0f\u7684\u5806\u6808\u3002</p> <p>printf-stdarg.c \u8fd8\u63d0\u4f9b\u4e86\u4e00\u79cd\u673a\u5236\uff0c\u53ef\u4ee5\u5c06 <code>printf()</code> \u8f93\u51fa\u9010\u5b57\u7b26\u5b9a\u5411\u5230\u4e00\u4e2a\u7aef\u53e3\uff0c\u5c3d\u7ba1\u901f\u5ea6\u8f83\u6162\uff0c\u4f46\u53ef\u4ee5\u8fdb\u4e00\u6b65\u51cf\u5c11\u5806\u6808\u4f7f\u7528\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u5e76\u975e\u6240\u6709 FreeRTOS \u4e0b\u8f7d\u4e2d\u5305\u542b\u7684 <code>printf-stdarg.c</code> \u90fd\u5b9e\u73b0\u4e86 <code>snprintf()</code>\u3002\u4e0d\u5b9e\u73b0 <code>snprintf()</code> \u7684\u526f\u672c\u4f1a\u76f4\u63a5\u5ffd\u7565\u7f13\u51b2\u533a\u5927\u5c0f\u53c2\u6570\uff0c\u56e0\u4e3a\u5b83\u4eec\u76f4\u63a5\u6620\u5c04\u5230 <code>sprintf()</code>\u3002</p> <p>printf-stdarg.c \u662f\u5f00\u6e90\u7684\uff0c\u4f46\u5f52\u7b2c\u4e09\u65b9\u6240\u6709\uff0c\u56e0\u6b64\u4e0e FreeRTOS \u53e6\u884c\u6388\u6743\u3002\u8bb8\u53ef\u8bc1\u6761\u6b3e\u5305\u542b\u5728\u6e90\u6587\u4ef6\u7684\u9876\u90e8\u3002</p>"},{"location":"ch13-%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/#135","title":"13.5 \u5176\u4ed6\u5e38\u89c1\u9519\u8bef\u6765\u6e90","text":""},{"location":"ch13-%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/#1351","title":"13.5.1 \u75c7\u72b6\uff1a\u5411\u6f14\u793a\u6dfb\u52a0\u7b80\u5355\u4efb\u52a1\u5bfc\u81f4\u6f14\u793a\u5d29\u6e83","text":"<p>\u521b\u5efa\u4efb\u52a1\u9700\u8981\u4ece\u5806\u4e2d\u83b7\u53d6\u5185\u5b58\u3002\u8bb8\u591a\u6f14\u793a\u5e94\u7528\u7a0b\u5e8f\u9879\u76ee\u5c06\u5806\u7684\u5927\u5c0f\u8bbe\u7f6e\u4e3a\u521a\u597d\u8db3\u591f\u521b\u5efa\u6f14\u793a\u4efb\u52a1\u7684\u5927\u5c0f\uff0c\u56e0\u6b64\u5728\u521b\u5efa\u4efb\u52a1\u540e\uff0c\u5269\u4f59\u7684\u5806\u5185\u5b58\u4e0d\u8db3\u4ee5\u6dfb\u52a0\u5176\u4ed6\u4efb\u52a1\u3001\u961f\u5217\u3001\u4e8b\u4ef6\u7ec4\u6216\u4fe1\u53f7\u91cf\u3002</p> <p>\u7a7a\u95f2\u4efb\u52a1\uff0c\u53ef\u80fd\u8fd8\u6709 RTOS \u5b88\u62a4\u4efb\u52a1\uff0c\u5728\u8c03\u7528 <code>vTaskStartScheduler()</code> \u65f6\u4f1a\u81ea\u52a8\u521b\u5efa\u3002 \u5982\u679c\u6ca1\u6709\u8db3\u591f\u7684\u5806\u5185\u5b58\u5269\u4f59\u4ee5\u521b\u5efa\u8fd9\u4e9b\u4efb\u52a1\uff0c\u5219 <code>vTaskStartScheduler()</code> \u5c06\u8fd4\u56de\u3002\u5305\u62ec\u7a7a\u5faa\u73af <code>[ for(;;); ]</code> \u5728\u5bf9 <code>vTaskStartScheduler()</code> \u7684\u8c03\u7528\u4e4b\u540e\uff0c\u53ef\u4ee5\u66f4\u5bb9\u6613\u5730\u8c03\u8bd5\u6b64\u9519\u8bef\u3002</p> <p>\u8981\u6dfb\u52a0\u66f4\u591a\u4efb\u52a1\uff0c\u5fc5\u987b\u589e\u52a0\u5806\u5927\u5c0f\u6216\u5220\u9664\u4e00\u4e9b\u73b0\u6709\u7684\u6f14\u793a\u4efb\u52a1\u3002\u5806\u5927\u5c0f\u7684\u589e\u52a0\u5c06\u59cb\u7ec8\u53d7\u5230\u53ef\u7528 RAM \u6570\u91cf\u7684\u9650\u5236\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1\u7b2c 3.2 \u8282\u201c\u793a\u4f8b\u5185\u5b58\u5206\u914d\u65b9\u6848\u201d\u3002</p>"},{"location":"ch13-%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/#1352-api","title":"13.5.2 \u75c7\u72b6\uff1a\u5728\u4e2d\u65ad\u4e2d\u4f7f\u7528 API \u51fd\u6570\u5bfc\u81f4\u5e94\u7528\u5d29\u6e83","text":"<p>\u4e0d\u8981\u5728\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u4f7f\u7528 API \u51fd\u6570\uff0c\u9664\u975e API \u51fd\u6570\u7684\u540d\u79f0\u4ee5 '...FromISR()' \u7ed3\u5c3e\u3002\u7279\u522b\u662f\uff0c\u4e0d\u8981\u5728\u4e2d\u65ad\u4e2d\u521b\u5efa\u4e34\u754c\u533a\uff0c\u9664\u975e\u4f7f\u7528\u4e2d\u65ad\u5b89\u5168\u5b8f\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1\u7b2c 7.2 \u8282\u201c\u4ece ISR \u4f7f\u7528 FreeRTOS API\u201d\u3002</p> <p>\u5728\u652f\u6301\u4e2d\u65ad\u5d4c\u5957\u7684 FreeRTOS \u7aef\u53e3\u4e2d\uff0c\u4e0d\u8981\u5728\u5206\u914d\u7ed9\u4e2d\u65ad\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e <code>configMAX_SYSCALL_INTERRUPT_PRIORITY</code> \u7684\u4e2d\u65ad\u4e2d\u4f7f\u7528\u4efb\u4f55 API \u51fd\u6570\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1\u7b2c 7.8 \u8282\u201c\u4e2d\u65ad\u5d4c\u5957\u201d\u3002</p>"},{"location":"ch13-%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/#1353","title":"13.5.3 \u75c7\u72b6\uff1a\u6709\u65f6\u5e94\u7528\u5728\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u5d29\u6e83","text":"<p>\u9996\u5148\u68c0\u67e5\u4e2d\u65ad\u662f\u5426\u5bfc\u81f4\u5806\u6808\u6ea2\u51fa\u3002\u67d0\u4e9b\u7aef\u53e3\u4ec5\u5728\u4efb\u52a1\u5185\u68c0\u67e5\u5806\u6808\u6ea2\u51fa\uff0c\u800c\u4e0d\u68c0\u67e5\u4e2d\u65ad\u3002</p> <p>\u4e2d\u65ad\u7684\u5b9a\u4e49\u548c\u4f7f\u7528\u65b9\u5f0f\u56e0\u7aef\u53e3\u548c\u7f16\u8bd1\u5668\u800c\u5f02\u3002\u56e0\u6b64\uff0c\u7b2c\u4e8c\u6b65\u662f\u68c0\u67e5\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u4f7f\u7528\u7684\u8bed\u6cd5\u3001\u5b8f\u548c\u8c03\u7528\u7ea6\u5b9a\u662f\u5426\u4e0e\u6240\u7528\u7aef\u53e3\u63d0\u4f9b\u7684\u6587\u6863\u9875\u9762\u4e2d\u63cf\u8ff0\u7684\u5b8c\u5168\u76f8\u540c\uff0c\u5e76\u4e0e\u7aef\u53e3\u63d0\u4f9b\u7684\u6f14\u793a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u6f14\u793a\u7684\u5b8c\u5168\u76f8\u540c\u3002</p> <p>\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u5728\u4e00\u4e2a\u4f7f\u7528\u6570\u503c\u4f4e\u7684\u4f18\u5148\u7ea7\u8868\u793a\u903b\u8f91\u4e0a\u9ad8\u4f18\u5148\u7ea7\u7684\u5904\u7406\u5668\u4e0a\uff0c\u5219\u786e\u4fdd\u5206\u914d\u7ed9\u6bcf\u4e2a\u4e2d\u65ad\u7684\u4f18\u5148\u7ea7\u8003\u8651\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u56e0\u4e3a\u8fd9\u53ef\u80fd\u770b\u8d77\u6765\u8fdd\u53cd\u76f4\u89c9\u3002\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u5728\u4e00\u4e2a\u5c06\u6bcf\u4e2a\u4e2d\u65ad\u7684\u4f18\u5148\u7ea7\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a\u6700\u9ad8\u503c\u7684\u5904\u7406\u5668\u4e0a\uff0c\u5219\u786e\u4fdd\u6bcf\u4e2a\u4e2d\u65ad\u7684\u4f18\u5148\u7ea7\u4e0d\u662f\u4fdd\u6301\u5728\u9ed8\u8ba4\u503c\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1\u7b2c 7.8 \u8282\u201c\u4e2d\u65ad\u5d4c\u5957\u201d\u548c\u7b2c 13.2 \u8282\u201c\u4e2d\u65ad\u4f18\u5148\u7ea7\u201d\u3002</p>"},{"location":"ch13-%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/#1354","title":"13.5.4 \u75c7\u72b6\uff1a\u8c03\u5ea6\u5668\u5c1d\u8bd5\u542f\u52a8\u7b2c\u4e00\u4e2a\u4efb\u52a1\u65f6\u5d29\u6e83","text":"<p>\u786e\u4fdd FreeRTOS \u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u5df2\u5b89\u88c5\u3002\u6709\u5173\u4fe1\u606f\uff0c\u8bf7\u53c2\u8003\u6240\u7528 FreeRTOS \u7aef\u53e3\u7684\u6587\u6863\u9875\u9762\uff0c\u4ee5\u53ca\u4e3a\u8be5\u7aef\u53e3\u63d0\u4f9b\u7684\u6f14\u793a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u793a\u4f8b\u3002</p> <p>\u67d0\u4e9b\u5904\u7406\u5668\u5fc5\u987b\u5904\u4e8e\u7279\u6743\u6a21\u5f0f\uff0c\u624d\u80fd\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u3002\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5728 C \u542f\u52a8\u4ee3\u7801\u4e2d\u5c06\u5904\u7406\u5668\u7f6e\u4e8e\u7279\u6743\u6a21\u5f0f\uff0c\u5728\u8c03\u7528 main() \u4e4b\u524d\u3002</p>"},{"location":"ch13-%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/#1355","title":"13.5.5 \u75c7\u72b6\uff1a\u4e2d\u65ad\u610f\u5916\u5730\u4fdd\u6301\u7981\u7528\uff0c\u6216\u4e34\u754c\u533a\u672a\u6b63\u786e\u5d4c\u5957","text":"<p>\u5982\u679c\u5728\u8c03\u5ea6\u7a0b\u5e8f\u542f\u52a8\u4e4b\u524d\u8c03\u7528\u4e86 FreeRTOS API \u51fd\u6570\uff0c\u5219\u4e2d\u65ad\u5c06\u6545\u610f\u4fdd\u6301\u7981\u7528\u72b6\u6001\uff0c\u5e76\u5728\u7b2c\u4e00\u4e2a\u4efb\u52a1\u5f00\u59cb\u6267\u884c\u4e4b\u524d\u4e0d\u4f1a\u91cd\u65b0\u542f\u7528\u3002\u8fd9\u662f\u4e3a\u4e86\u4fdd\u62a4\u7cfb\u7edf\u514d\u53d7\u4e2d\u65ad\u7684\u5f71\u54cd\uff0c\u8fd9\u4e9b\u4e2d\u65ad\u8bd5\u56fe\u5728\u7cfb\u7edf\u521d\u59cb\u5316\u671f\u95f4\u4f7f\u7528 FreeRTOS API \u51fd\u6570\uff0c\u5728\u6b64\u671f\u95f4\uff0c\u8c03\u5ea6\u7a0b\u5e8f\u5c1a\u672a\u542f\u52a8\uff0c\u4e14\u8c03\u5ea6\u7a0b\u5e8f\u53ef\u80fd\u5904\u4e8e\u4e0d\u4e00\u81f4\u72b6\u6001\u3002</p> <p>\u4e0d\u8981\u4f7f\u7528\u9664 <code>taskENTER_CRITICAL()</code> \u548c <code>taskEXIT_CRITICAL()</code> \u4e4b\u5916\u7684\u4efb\u4f55\u65b9\u6cd5\u66f4\u6539\u5fae\u63a7\u5236\u5668\u4e2d\u65ad\u4f7f\u80fd\u4f4d\u6216\u4f18\u5148\u7ea7\u6807\u5fd7\u3002\u8fd9\u4e9b\u5b8f\u4f1a\u8ddf\u8e2a\u5176\u8c03\u7528\u5d4c\u5957\u6df1\u5ea6\uff0c\u4ee5\u786e\u4fdd\u4e2d\u65ad\u4ec5\u5728\u8c03\u7528\u5d4c\u5957\u5b8c\u5168\u5c55\u5f00\u5230\u96f6\u65f6\u624d\u4f1a\u91cd\u65b0\u542f\u7528\u3002\u8bf7\u6ce8\u610f\uff0c\u67d0\u4e9b\u5e93\u51fd\u6570\u53ef\u80fd\u4f1a\u81ea\u884c\u542f\u7528\u548c\u7981\u7528\u4e2d\u65ad\u3002</p>"},{"location":"ch13-%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/#1356","title":"13.5.6 \u75c7\u72b6\uff1a\u5e94\u7528\u7a0b\u5e8f\u5728\u8c03\u5ea6\u7a0b\u5e8f\u542f\u52a8\u4e4b\u524d\u5d29\u6e83","text":"<p>\u5728\u8c03\u5ea6\u7a0b\u5e8f\u542f\u52a8\u4e4b\u524d\uff0c\u53ef\u80fd\u5bfc\u81f4\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e0d\u5f97\u6267\u884c\u3002\u4efb\u4f55\u5c1d\u8bd5\u53d1\u9001\u6216\u63a5\u6536 FreeRTOS \u5bf9\u8c61\uff08\u5982\u961f\u5217\u6216\u4fe1\u53f7\u91cf\uff09\u7684\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e5f\u662f\u5982\u6b64\u3002\u5728\u8c03\u7528 <code>vTaskStartScheduler()</code> \u4e4b\u540e\uff0c\u624d\u80fd\u53d1\u751f\u4e0a\u4e0b\u6587\u5207\u6362\u3002</p> <p>\u8bb8\u591a API \u51fd\u6570\u5728\u8c03\u5ea6\u7a0b\u5e8f\u542f\u52a8\u4e4b\u524d\u65e0\u6cd5\u8c03\u7528\u3002\u6700\u597d\u5c06 API \u7528\u4e8e\u521b\u5efa\u5bf9\u8c61\uff08\u5982\u4efb\u52a1\u3001\u961f\u5217\u548c\u4fe1\u53f7\u91cf\uff09\uff0c\u800c\u4e0d\u662f\u5728\u8c03\u7528 <code>vTaskStartScheduler()</code> \u4e4b\u540e\u4f7f\u7528\u8fd9\u4e9b\u5bf9\u8c61\u3002</p>"},{"location":"ch13-%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/#1357-api","title":"13.5.7 \u75c7\u72b6\uff1a\u5728\u8c03\u5ea6\u7a0b\u5e8f\u6302\u8d77\u6216\u4e34\u754c\u533a\u5185\u8c03\u7528 API \u51fd\u6570\u5bfc\u81f4\u5e94\u7528\u5d29\u6e83","text":"<p>\u901a\u8fc7\u8c03\u7528 <code>vTaskSuspendAll()</code> \u6302\u8d77\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u901a\u8fc7\u8c03\u7528 <code>xTaskResumeAll()</code> \u6062\u590d\uff08\u53d6\u6d88\u6302\u8d77\uff09\u8c03\u5ea6\u7a0b\u5e8f\u3002\u901a\u8fc7\u8c03\u7528 <code>taskENTER_CRITICAL()</code> \u8fdb\u5165\u4e34\u754c\u533a\uff0c\u901a\u8fc7\u8c03\u7528 <code>taskEXIT_CRITICAL()</code> \u9000\u51fa\u4e34\u754c\u533a\u3002</p> <p>\u4e0d\u8981\u5728\u8c03\u5ea6\u7a0b\u5e8f\u6302\u8d77\u65f6\u6216\u5728\u4e34\u754c\u533a\u5185\u8c03\u7528 API \u51fd\u6570\u3002</p> <p>## 13.6 \u5176\u4ed6\u8c03\u8bd5\u6b65\u9aa4</p> <p>\u5982\u679c\u60a8\u9047\u5230\u7684 \ubb38\uc81c\u672a\u5305\u542b\u5728\u4e0a\u8ff0\u5e38\u89c1\u539f\u56e0\u4e2d\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4ee5\u4e0b\u8c03\u8bd5\u6b65\u9aa4\u3002</p> <ul> <li>\u5b9a\u4e49 <code>configASSERT()</code>\uff0c\u542f\u7528 malloc \u5931\u8d25\u68c0\u67e5\u548c\u5806\u6808\u6ea2\u51fa\u68c0\u67e5\u3002</li> <li>\u68c0\u67e5 FreeRTOS API \u7684\u8fd4\u56de\u503c\u4ee5\u786e\u4fdd\u5176\u6210\u529f\u3002</li> <li>\u68c0\u67e5\u4e0e\u8c03\u5ea6\u76f8\u5173\u7684\u914d\u7f6e\uff0c\u5982 <code>configUSE_TIME_SLICING</code> \u548c <code>configUSE_PREEMPTION</code>\uff0c\u786e\u4fdd\u5176\u6839\u636e\u5e94\u7528\u7a0b\u5e8f\u9700\u6c42\u6b63\u786e\u8bbe\u7f6e\u3002</li> <li>\u6b64\u9875\u9762   \u63d0\u4f9b\u4e86\u6709\u5173\u5728 Cortex-M \u5fae\u63a7\u5236\u5668\u4e0a\u8c03\u8bd5\u786c\u6545\u969c\u7684\u8be6\u7ec6\u4fe1\u606f\u3002</li> </ul>"},{"location":"%E4%B9%A6%E5%90%8D/","title":"\u4e66\u540d","text":"# \u7cbe\u901a FreeRTOS\u2122[^1][^2] \u5b9e\u65f6\u5185\u6838  ## \u5b9e\u8df5\u6559\u7a0b\u6307\u5357 ##  ### Richard Barry \u53ca FreeRTOS \u56e2\u961f ###  **\u53d1\u5e03\u7248\u672c - 1.0**      [^1]: FreeRTOS\u2122, FreeRTOS.org\u2122 and the FreeRTOS logo are trademarks of Amazon Web Services. [^2]: OPEN**RTOS**<sup>\u00ae</sup> and SAFE**RTOS**<sup>\u00ae</sup> are trademarks of WITTENSTEIN High Integrity Systems Ltd. All other brands or product names are the property of their respective holders."},{"location":"%E7%BC%A9%E7%95%A5%E8%AF%AD%E8%A1%A8/","title":"\u7f29\u7565\u8bed\u8868","text":"\u7f29\u5199 \u542b\u4e49 ADC \u6a21\u6570\u8f6c\u6362\u5668 API \u5e94\u7528\u7a0b\u5e8f\u7f16\u7a0b\u63a5\u53e3 DMA \u76f4\u63a5\u5185\u5b58\u8bbf\u95ee FAQ \u5e38\u89c1\u95ee\u9898 FIFO \u5148\u8fdb\u5148\u51fa HMI \u4eba\u673a\u754c\u9762 IDE \u96c6\u6210\u5f00\u53d1\u73af\u5883 IRQ \u4e2d\u65ad\u8bf7\u6c42 ISR \u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f LCD \u6db2\u6676\u663e\u793a\u5c4f MCU \u5fae\u63a7\u5236\u5668 RMS \u901f\u7387\u5355\u8c03\u8c03\u5ea6 RTOS \u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edf SIL \u5b89\u5168\u5b8c\u6574\u6027\u7b49\u7ea7 SPI \u4e32\u884c\u5916\u56f4\u63a5\u53e3 TCB \u4efb\u52a1\u63a7\u5236\u5757 UART \u901a\u7528\u5f02\u6b65\u6536\u53d1\u5668 * * *"}]}